{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\DoctorDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\nfunction DoctorDashboard() {\n  _s();\n  const [activeTab, setActiveTab] = useState('overview');\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]); // This patient list should contain userId\n  const [examinations, setExaminations] = useState([]);\n  const [terms, setTerms] = useState([]);\n  const [activityLog, setActivityLog] = useState([]);\n  const [currentDoctorProfile, setCurrentDoctorProfile] = useState(null);\n  const [isEditingProfile, setIsEditingProfile] = useState(false);\n  const [editIme, setEditIme] = useState('');\n  const [editPrezime, setEditPrezime] = useState('');\n  const [editEmail, setEditEmail] = useState('');\n  const [editTelefon, setEditTelefon] = useState('');\n  const [editSpecijalizacije, setEditSpecijalizacije] = useState('');\n  const [editGrad, setEditGrad] = useState('');\n  const [editRadnoVrijeme, setEditRadnoVrijeme] = useState('');\n  const [editIskustvo, setEditIskustvo] = useState('');\n  const [editOcjena, setEditOcjena] = useState('');\n  const [profileImageFile, setProfileImageFile] = useState(null);\n  const [profileImagePreview, setProfileImagePreview] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState({\n    recipientId: '',\n    subject: '',\n    content: ''\n  }); // recipientId will now be Long userId\n  const [replyMessage, setReplyMessage] = useState({\n    messageId: '',\n    content: ''\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\n  const [examinationFilterStatus, setExaminationFilterStatus] = useState('All');\n  const [myPatientsCurrentPage, setMyPatientsCurrentPage] = useState(1);\n  const [myExaminationsCurrentPage, setMyExaminationsCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n  const [showPatientDetailModal, setShowPatientDetailModal] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  // Medical History States\n  const [medicalHistoryEntries, setMedicalHistoryEntries] = useState([]);\n  const [newMedicalHistoryEntry, setNewMedicalHistoryEntry] = useState({\n    diagnosis: '',\n    treatment: '',\n    notes: ''\n  });\n  const [newTermDate, setNewTermDate] = useState('');\n  const [newTermTime, setNewTermTime] = useState('');\n  const [selectedTermStatus, setSelectedTermStatus] = useState('DOSTUPAN'); // Default je sada \"DOSTUPAN\"\n\n  const {\n    token,\n    user,\n    loading: authLoading\n  } = useAuth();\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n  const fetchDoctors = async () => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      setDoctors(response.data.map(doc => ({\n        id: doc.doktorID,\n        // Doctor ID (Integer)\n        userId: Number(doc.userId),\n        // User ID from Auth service (Long)\n        name: `${doc.ime} ${doc.prezime}`,\n        ime: doc.ime,\n        prezime: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        grad: doc.grad,\n        email: doc.email,\n        telefon: doc.telefon,\n        radnoVrijeme: doc.radnoVrijeme,\n        iskustvo: doc.iskustvo,\n        ocjena: doc.ocjena,\n        profileImageBase64: doc.profileImageBase64\n      })));\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error fetching all doctors:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      showNotification(\"Error fetching doctors.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\n      setPatients(response.data.map(pat => ({\n        id: pat.pacijentID,\n        // Patient ID (Integer)\n        userId: Number(pat.userId),\n        // User ID from Auth service (Long)\n        name: `${pat.ime} ${pat.prezime}`,\n        ime: pat.ime,\n        prezime: pat.prezime,\n        email: pat.email,\n        phone: pat.telefon\n      })));\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Error fetching all patients:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      showNotification(\"Error fetching patients.\", \"danger\");\n    }\n  };\n  const fetchTerms = async () => {\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      console.warn(\"Cannot fetch terms: doktorId is missing or auth not ready.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${user.doktorId}`, authHeaders);\n      console.log(\"Raw terms response data:\", response.data);\n      setTerms(response.data.map(term => {\n        console.log(`Term ID: ${term.terminID}, Raw statusTermina: ${term.statusTermina}`);\n        return {\n          id: term.terminID,\n          doktorId: term.doktorID,\n          datum: term.datum,\n          vrijeme: term.vrijeme,\n          statusTermina: term.statusTermina // Ovo bi sada trebao biti string \"DOSTUPAN\", \"ZAKAZAN\", \"OTKAZAN\"\n        };\n      }));\n      showNotification(\"Doctor's terms successfully fetched!\", \"success\");\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Error fetching doctor's terms:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      showNotification(\"Error fetching doctor's terms.\", \"danger\");\n    }\n  };\n  const fetchExaminations = async () => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\n      setExaminations(response.data.map(exam => ({\n        id: exam.pregledID,\n        pacijentId: exam.pacijentID,\n        doktorId: exam.doktorID,\n        patientName: exam.pacijentIme || 'N/A',\n        doctorName: exam.doktorIme || 'N/A',\n        date: exam.datumPregleda,\n        time: exam.vrijemePregleda,\n        status: exam.status,\n        komentarPacijenta: exam.komentarPacijenta || '',\n        ocjenaDoktora: exam.ocjenaDoktora || null,\n        terminID: exam.terminID\n      })));\n    } catch (error) {\n      var _error$response4;\n      console.error(\"Error fetching all examinations:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      showNotification(\"Error fetching examinations.\", \"danger\");\n    }\n  };\n  const fetchActivityLog = async () => {\n    if (!token) return;\n    try {\n      console.warn(\"Activity Log endpoint is not defined, skipping fetching activity log.\");\n      setActivityLog([]);\n    } catch (error) {\n      var _error$response5;\n      console.error(\"Error fetching activity log:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      showNotification(\"Error fetching activity log.\", \"danger\");\n    }\n  };\n  const fetchPatientMedicalHistory = async patientId => {\n    if (!token || !patientId) return;\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${patientId}`, authHeaders);\n      setMedicalHistoryEntries(response.data.map(record => ({\n        id: record.zapisID,\n        patientId: record.pacijentID,\n        doctorId: record.doktorID,\n        doctorName: record.doktorIme,\n        date: record.datumZapisivanja,\n        diagnosis: record.dijagnoza,\n        treatment: record.lijecenje,\n        notes: record.napomene\n      })));\n    } catch (error) {\n      var _error$response6;\n      console.error(\"Error fetching patient medical history:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      setMedicalHistoryEntries([]); // Clear if error\n      showNotification(\"Error fetching patient's medical history.\", \"danger\");\n    }\n  };\n  const handleAddMedicalHistoryEntry = async () => {\n    if (!token || !selectedPatient || !user || !user.doktorId) {\n      showNotification(\"Missing data to add medical history entry.\", \"danger\");\n      return;\n    }\n    if (!newMedicalHistoryEntry.diagnosis || !newMedicalHistoryEntry.treatment) {\n      showNotification(\"Diagnosis and Treatment are required for medical history.\", \"warning\");\n      return;\n    }\n    try {\n      const payload = {\n        pacijentID: selectedPatient.id,\n        doktorID: user.doktorId,\n        datumZapisivanja: new Date().toISOString().split('T')[0],\n        dijagnoza: newMedicalHistoryEntry.diagnosis,\n        lijecenje: newMedicalHistoryEntry.treatment,\n        napomene: newMedicalHistoryEntry.notes\n      };\n      await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija`, payload, authHeaders);\n      showNotification(\"Medical history entry successfully added!\", \"success\");\n      setNewMedicalHistoryEntry({\n        diagnosis: '',\n        treatment: '',\n        notes: ''\n      }); // Clear form\n      fetchPatientMedicalHistory(selectedPatient.id); // Refresh medical history\n    } catch (error) {\n      var _error$response7, _error$response8, _error$response8$data;\n      console.error(\"Error adding medical history entry:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      showNotification(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Error adding medical history entry.', 'danger');\n    }\n  };\n  const openPatientDetailModal = async patient => {\n    setSelectedPatient(patient);\n    await fetchPatientMedicalHistory(patient.id); // Fetch medical history when modal opens\n    setShowPatientDetailModal(true);\n  };\n  const closePatientDetailModal = () => {\n    setShowPatientDetailModal(false);\n    setSelectedPatient(null);\n    setMedicalHistoryEntries([]); // Clear history when closing\n    setNewMedicalHistoryEntry({\n      diagnosis: '',\n      treatment: '',\n      notes: ''\n    }); // Clear new entry form\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setProfileImageFile(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setProfileImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setProfileImageFile(null);\n      setProfileImagePreview(null);\n    }\n  };\n  const fetchCurrentDoctorProfile = async () => {\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      console.warn(\"Cannot fetch current doctor profile: doktorId is missing or auth not ready.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, authHeaders);\n      const profileData = response.data;\n      setCurrentDoctorProfile(profileData);\n      setEditIme(profileData.ime || '');\n      setEditPrezime(profileData.prezime || '');\n      setEditEmail(profileData.email || '');\n      setEditTelefon(profileData.telefon || '');\n      setEditSpecijalizacije(Array.isArray(profileData.specijalizacije) ? profileData.specijalizacije.join(', ') : '');\n      setEditGrad(profileData.grad || '');\n      setEditRadnoVrijeme(profileData.radnoVrijeme || '');\n      setEditIskustvo(profileData.iskustvo || '');\n      setEditOcjena(profileData.ocjena || '');\n      setProfileImagePreview(profileData.profileImageBase64 || null);\n    } catch (error) {\n      var _error$response9;\n      console.error(\"Error fetching doctor profile:\", ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n      showNotification(\"Error fetching doctor profile.\", \"danger\");\n    }\n  };\n  const handleUpdateDoctorProfile = async e => {\n    e.preventDefault();\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      showNotification(\"You are not authorized or doctor ID is missing.\", \"danger\");\n      return;\n    }\n    const updatedProfile = {\n      doktorID: user.doktorId,\n      userId: currentDoctorProfile.userId,\n      ime: editIme,\n      prezime: editPrezime,\n      email: editEmail,\n      telefon: editTelefon,\n      specijalizacije: editSpecijalizacije.split(',').map(s => s.trim()).filter(s => s !== ''),\n      grad: editGrad,\n      radnoVrijeme: editRadnoVrijeme,\n      iskustvo: parseInt(editIskustvo, 10),\n      ocjena: parseFloat(editOcjena) || 0.0,\n      profileImageBase64: profileImagePreview\n    };\n    try {\n      const response = await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, updatedProfile, authHeaders);\n      setCurrentDoctorProfile(response.data);\n      setIsEditingProfile(false);\n      showNotification(\"Profile successfully updated!\");\n      fetchDoctors();\n    } catch (error) {\n      var _error$response0, _error$response1, _error$response1$data;\n      console.error(\"Error updating profile:\", ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error.message);\n      showNotification(((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || 'Error updating profile.', 'danger');\n    }\n  };\n  const fetchDocuments = async () => {\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      console.warn(\"Cannot fetch documents: doktorId is missing or auth not ready.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/doktor/${user.doktorId}`, authHeaders);\n      console.log(\"Raw documents response data:\", response.data);\n      const transformedDocuments = response.data.filter(doc => doc.dokumentacijaID !== null && doc.dokumentacijaID !== undefined).map(doc => {\n        const id = Number(doc.dokumentacijaID);\n        if (isNaN(id)) {\n          console.warn(`Document with non-numeric dokumentacijaID found: ${doc.dokumentacijaID}. This document might not be downloadable, but it will be displayed.`);\n        }\n        return {\n          id: id,\n          fileName: doc.nazivDokumenta,\n          documentType: doc.tipDokumenta,\n          uploadDate: doc.datumKreiranja,\n          pristup: doc.pristup,\n          pacijentIme: doc.pacijentIme\n        };\n      });\n      console.log(\"Transformed documents for state (after light filter):\", transformedDocuments);\n      setDocuments(transformedDocuments);\n      showNotification(\"Documents successfully fetched!\", \"success\");\n    } catch (error) {\n      var _error$response10;\n      console.error('Error fetching documents for doctor:', ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message);\n      showNotification('Failed to fetch documents.', \"danger\");\n      setDocuments([]);\n    }\n  };\n  const handleDocumentUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!user || user.doktorId === null || user.doktorId === undefined) {\n      showNotification(\"Doctor ID is not available for document upload.\", \"danger\");\n      return;\n    }\n    console.log(\"Attempting document upload with Doktor ID:\", user.doktorId);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('doktorID', user.doktorId);\n    formData.append('tipDokumenta', 'Doctor Upload');\n    formData.append('pristup', 'PRIVATNA');\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      showNotification('Document successfully uploaded!', 'success');\n      setTimeout(() => {\n        fetchDocuments();\n      }, 500);\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response12$dat;\n      console.error('Error uploading document:', ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message);\n      showNotification('Document upload failed. ' + (((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.message) || error.message), \"danger\");\n    }\n  };\n  const handleDownloadDocument = async (docId, fileName) => {\n    const numericDocId = Number(docId);\n    if (docId === null || docId === undefined || isNaN(numericDocId)) {\n      console.error('Pokušaj preuzimanja dokumenta sa nevažećim ID-om:', docId);\n      showNotification('Greška: ID dokumenta je nevažeći. Preuzimanje nije moguće.', 'danger');\n      return;\n    }\n    const downloadUrl = `${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${numericDocId}`;\n    console.log(\"Attempting to download document from URL:\", downloadUrl);\n    try {\n      const response = await axios.get(downloadUrl, {\n        ...authHeaders,\n        responseType: 'blob'\n      });\n      const blob = new Blob([response.data], {\n        type: response.headers['content-type']\n      });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', fileName);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      showNotification('Dokument uspješno preuzet!', 'success');\n    } catch (error) {\n      var _error$response13, _error$response14, _error$response14$dat;\n      console.error('Greška pri preuzimanju dokumenta:', ((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) || error.message);\n      showNotification('Nije uspjelo preuzimanje dokumenta. ' + (((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : (_error$response14$dat = _error$response14.data) === null || _error$response14$dat === void 0 ? void 0 : _error$response14$dat.message) || error.message), 'danger');\n    }\n  };\n  const fetchMessages = async () => {\n    if (!token || !user || user.userId === null || user.userId === undefined) {\n      console.warn(\"Cannot fetch messages: user.userId is missing or auth not ready.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=DOKTOR`, authHeaders);\n      const transformedMessages = response.data.map(msg => ({\n        id: msg.porukaID,\n        senderId: Number(msg.senderId),\n        senderType: msg.senderType,\n        senderIme: msg.senderIme,\n        receiverId: Number(msg.receiverId),\n        receiverType: msg.receiverType,\n        receiverIme: msg.receiverIme,\n        subject: msg.subject,\n        content: msg.content,\n        timestamp: msg.timestamp,\n        replies: msg.replies || []\n      }));\n      setMessages(transformedMessages);\n      showNotification(\"Messages successfully fetched!\", \"success\");\n    } catch (error) {\n      var _error$response15;\n      console.error('Error fetching messages for doctor:', ((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.data) || error.message);\n      showNotification('Failed to fetch messages.', \"danger\");\n    }\n  };\n  const handleNewMessageChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMessage(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSendMessage = async () => {\n    if (!user || user.userId === null || user.userId === undefined) {\n      showNotification('Your user ID is not available. Cannot send message.', 'danger');\n      return;\n    }\n    if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\n      showNotification('Please fill in all message fields.', 'warning');\n      return;\n    }\n    try {\n      const messageData = {\n        senderId: user.userId,\n        senderType: 'DOKTOR',\n        receiverId: Number(newMessage.recipientId),\n        receiverType: 'PACIJENT',\n        subject: newMessage.subject,\n        content: newMessage.content\n      };\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\n      showNotification('Message successfully sent!', 'success');\n      setNewMessage({\n        recipientId: '',\n        subject: '',\n        content: ''\n      });\n      fetchMessages();\n    } catch (error) {\n      var _error$response16, _error$response17, _error$response17$dat;\n      console.error('Error sending message:', ((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : _error$response16.data) || error.message);\n      showNotification('Failed to send message. ' + (((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : (_error$response17$dat = _error$response17.data) === null || _error$response17$dat === void 0 ? void 0 : _error$response17$dat.message) || error.message), \"danger\");\n    }\n  };\n  const handleReplyMessageChange = e => {\n    setReplyMessage(prev => ({\n      ...prev,\n      content: e.target.value\n    }));\n  };\n  const handleReply = async messageId => {\n    if (!user || user.userId === null || user.userId === undefined) {\n      showNotification('Your user ID is not available. Cannot reply.', 'danger');\n      return;\n    }\n    if (!replyMessage.content) {\n      showNotification('Reply content cannot be empty.', 'warning');\n      return;\n    }\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\n        senderId: user.userId,\n        senderIme: `${user.ime || ''} ${user.prezime || ''}`.trim(),\n        senderType: 'DOKTOR',\n        content: replyMessage.content,\n        timestamp: new Date().toISOString()\n      }, authHeaders);\n      showNotification('Reply successfully sent!', 'success');\n      setReplyMessage({\n        messageId: '',\n        content: ''\n      });\n      fetchMessages();\n      setSelectedMessage(prev => {\n        if (!prev) return null;\n        return {\n          ...prev,\n          replies: [...(prev.replies || []), {\n            senderId: user.userId,\n            senderIme: `${user.ime || ''} ${user.prezime || ''}`.trim(),\n            senderType: 'DOKTOR',\n            content: replyMessage.content,\n            timestamp: new Date().toISOString()\n          }]\n        };\n      });\n    } catch (error) {\n      var _error$response18, _error$response19, _error$response19$dat;\n      console.error('Error sending reply:', ((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : _error$response18.data) || error.message);\n      showNotification('Failed to send reply. ' + (((_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : (_error$response19$dat = _error$response19.data) === null || _error$response19$dat === void 0 ? void 0 : _error$response19$dat.message) || error.message), \"danger\");\n    }\n  };\n  const handleViewMessage = message => {\n    setSelectedMessage(message);\n  };\n  const closeMessageModal = () => {\n    setSelectedMessage(null);\n    setReplyMessage({\n      messageId: '',\n      content: ''\n    });\n  };\n  const handleCreateTerm = async e => {\n    e.preventDefault();\n    if (!user || user.doktorId === null || user.doktorId === undefined) {\n      showNotification(\"Doctor ID is not available. Cannot create term.\", \"danger\");\n      return;\n    }\n    if (!newTermDate || !newTermTime) {\n      showNotification(\"Please select both date and time for the new term.\", \"warning\");\n      return;\n    }\n    try {\n      const termData = {\n        doktorID: user.doktorId,\n        datum: newTermDate,\n        vrijeme: newTermTime + ':00',\n        statusTermina: selectedTermStatus // selectedTermStatus je već \"DOSTUPAN\" ili \"NEDOSTUPAN\"\n      };\n      console.log(\"Sending new term data (CREATE):\", termData);\n      await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, termData, authHeaders);\n      showNotification(\"Term successfully created!\", \"success\");\n      setNewTermDate('');\n      setNewTermTime('');\n      setSelectedTermStatus('DOSTUPAN'); // Resetujemo na \"DOSTUPAN\"\n      fetchTerms();\n    } catch (error) {\n      var _error$response20, _error$response21, _error$response21$dat;\n      console.error(\"Error creating term:\", ((_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : _error$response20.data) || error.message);\n      showNotification(`Failed to create term: ${((_error$response21 = error.response) === null || _error$response21 === void 0 ? void 0 : (_error$response21$dat = _error$response21.data) === null || _error$response21$dat === void 0 ? void 0 : _error$response21$dat.message) || error.message}`, \"danger\");\n    }\n  };\n  const handleDeleteTerm = async termId => {\n    if (!token) return;\n    try {\n      await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${termId}`, authHeaders);\n      showNotification(\"Term successfully deleted!\", \"success\");\n      fetchTerms();\n    } catch (error) {\n      var _error$response22, _error$response23, _error$response23$dat;\n      console.error(\"Error deleting term:\", ((_error$response22 = error.response) === null || _error$response22 === void 0 ? void 0 : _error$response22.data) || error.message);\n      showNotification(`Failed to delete term: ${((_error$response23 = error.response) === null || _error$response23 === void 0 ? void 0 : (_error$response23$dat = _error$response23.data) === null || _error$response23$dat === void 0 ? void 0 : _error$response23$dat.message) || error.message}`, \"danger\");\n    }\n  };\n  const handleUpdateTermStatus = async (termId, targetStatus) => {\n    if (!token) return;\n    console.log(`Attempting to update term ${termId} to status: ${targetStatus}`);\n    try {\n      const termToUpdate = terms.find(term => term.id === termId);\n      if (!termToUpdate) {\n        showNotification('Term not found for update.', 'danger');\n        return;\n      }\n      const payload = {\n        terminID: termToUpdate.id,\n        doktorID: termToUpdate.doktorId,\n        datum: termToUpdate.datum,\n        vrijeme: termToUpdate.vrijeme,\n        statusTermina: targetStatus // OVO JE ONO ŠTO BI TREBALO BITI POSLATO\n      };\n      console.log(\"Sending term update payload (UPDATE - from frontend):\", payload); // IZLAZ KOJI MI TREBA!\n\n      const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${termId}`, payload, authHeaders);\n      console.log(\"Backend response to update:\", response.data); // LOG: Šta backend vraća nakon PUT-a\n      showNotification(`Term status updated to ${targetStatus.toLowerCase()}!`, 'success');\n      fetchTerms();\n    } catch (error) {\n      var _error$response24, _error$response25, _error$response25$dat;\n      console.error(\"Error updating term status:\", ((_error$response24 = error.response) === null || _error$response24 === void 0 ? void 0 : _error$response24.data) || error.message);\n      showNotification(`Failed to update term status: ${((_error$response25 = error.response) === null || _error$response25 === void 0 ? void 0 : (_error$response25$dat = _error$response25.data) === null || _error$response25$dat === void 0 ? void 0 : _error$response25$dat.message) || error.message}`, \"danger\");\n    }\n  };\n  useEffect(() => {\n    console.log(\"DoctorDashboard useEffect: token=\", token, \"user=\", user, \"authLoading=\", authLoading);\n    if (!authLoading && token && user && user.doktorId) {\n      console.log(\"DoctorDashboard useEffect: Initiating data fetching for doktorId:\", user.doktorId);\n      fetchDoctors();\n      fetchPatients();\n      fetchTerms();\n      fetchExaminations();\n      fetchActivityLog();\n      fetchCurrentDoctorProfile();\n      fetchDocuments();\n      fetchMessages();\n    } else if (!authLoading) {\n      console.log(\"DoctorDashboard useEffect: Data fetching skipped because condition not met.\", {\n        token,\n        user,\n        doktorId: user === null || user === void 0 ? void 0 : user.doktorId,\n        authLoading\n      });\n    }\n  }, [token, user, authLoading]);\n  console.log(\"DoctorDashboard render check: token=\", token, \"user=\", user, \"user.doktorId=\", user === null || user === void 0 ? void 0 : user.doktorId, \"authLoading=\", authLoading);\n  if (authLoading) {\n    console.log(\"DoctorDashboard: Still loading authentication...\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3\",\n        children: \"Loading authentication...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 13\n    }, this);\n  }\n  if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n    console.log(\"DoctorDashboard: Not authorized as doctor or incomplete data. Conditions:\", {\n      token: !!token,\n      user: !!user,\n      doktorIdDefined: (user === null || user === void 0 ? void 0 : user.doktorId) !== null && (user === null || user === void 0 ? void 0 : user.doktorId) !== undefined\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3\",\n        children: \"Not authorized as a doctor or incomplete data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 13\n    }, this);\n  }\n  const currentDoctorId = user.doktorId;\n  const currentDoctorUserId = user.userId;\n  console.log(\"DoctorDashboard: Current doctor ID for filtering (after initial checks):\", currentDoctorId, \"Current User ID:\", currentDoctorUserId);\n  const doctorsExaminations = examinations.filter(examination => examination.doktorId === currentDoctorId);\n  const patientIdsWithExaminations = new Set(doctorsExaminations.map(exam => exam.pacijentId));\n  const myPatients = patients.filter(patient => patientIdsWithExaminations.has(patient.id));\n  const handleUpdateExaminationStatus = async (id, newStatus) => {\n    try {\n      const existingExamination = examinations.find(exam => exam.id === id);\n      if (!existingExamination) {\n        showNotification('Examination not found for status update.', 'danger');\n        return;\n      }\n      console.log(\"Existing Examination object before update:\", existingExamination);\n      const terminIdToSend = existingExamination.terminID;\n      console.log(\"Term ID to send:\", terminIdToSend);\n      if (terminIdToSend === null || terminIdToSend === undefined) {\n        showNotification('Error: Term ID is missing for this examination. Please ensure all examinations have a valid term.', 'danger');\n        return;\n      }\n      const ratingToSend = newStatus === 'obavljen' ? existingExamination.ocjenaDoktora || 5.0 : existingExamination.ocjenaDoktora;\n      const examinationPayload = {\n        pregledID: existingExamination.id,\n        pacijentID: existingExamination.pacijentId,\n        doktorID: existingExamination.doktorId,\n        datumPregleda: existingExamination.date.split('T')[0],\n        vrijemePregleda: existingExamination.time.split('.')[0],\n        status: newStatus,\n        komentarPacijenta: existingExamination.komentarPacijenta,\n        ocjenaDoktora: ratingToSend,\n        terminID: terminIdToSend\n      };\n      const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, examinationPayload, authHeaders);\n      const updatedExam = {\n        id: response.data.pregledID,\n        pacijentId: response.data.pacijentID,\n        doktorId: response.data.doktorID,\n        patientName: response.data.pacijentIme || 'N/A',\n        doctorName: response.data.doktorIme || 'N/A',\n        date: response.data.datumPregleda,\n        time: response.data.vrijemePregleda,\n        status: response.data.status,\n        komentarPacijenta: response.data.komentarPacijenta || '',\n        ocjenaDoktora: response.data.ocjenaDoktora || null,\n        terminID: response.data.terminID\n      };\n      setExaminations(examinations.map(exam => exam.id === id ? updatedExam : exam));\n      fetchActivityLog();\n      showNotification(`Examination status updated to ${newStatus}!`, 'info');\n    } catch (error) {\n      var _error$response26, _error$response27, _error$response27$dat;\n      console.error(\"Error updating examination status:\", ((_error$response26 = error.response) === null || _error$response26 === void 0 ? void 0 : _error$response26.data) || error.message);\n      showNotification(((_error$response27 = error.response) === null || _error$response27 === void 0 ? void 0 : (_error$response27$dat = _error$response27.data) === null || _error$response27$dat === void 0 ? void 0 : _error$response27$dat.message) || 'Error updating examination status.', \"danger\");\n    }\n  };\n  const filteredMyPatients = myPatients.filter(patient => patient.name && patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email && patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastMyPatient = myPatientsCurrentPage * itemsPerPage;\n  const indexOfFirstMyPatient = indexOfLastMyPatient - itemsPerPage;\n  const currentMyPatients = filteredMyPatients.slice(indexOfFirstMyPatient, indexOfLastMyPatient);\n  const totalMyPatientPages = Math.ceil(filteredMyPatients.length / itemsPerPage);\n  const filteredMyExaminations = doctorsExaminations.filter(examination => {\n    const matchesSearch = examination.patientName && examination.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || examination.status && examination.status.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || examination.date && new Date(examination.date).toLocaleDateString().includes(examinationSearchTerm);\n    const matchesFilterStatus = examinationFilterStatus === 'All' || examination.status === examinationFilterStatus;\n    return matchesSearch && matchesFilterStatus;\n  });\n  const indexOfLastMyExaminations = myExaminationsCurrentPage * itemsPerPage;\n  const indexOfFirstMyExaminations = indexOfLastMyExaminations - itemsPerPage;\n  const currentMyExaminations = filteredMyExaminations.slice(indexOfFirstMyExaminations, indexOfLastMyExaminations);\n  const totalMyExaminationsPages = Math.ceil(filteredMyExaminations.length / itemsPerPage);\n  const Pagination = ({\n    itemsPerPage,\n    totalItems,\n    currentPage,\n    paginate\n  }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center mt-4\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === number ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 29\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 13\n    }, this);\n  };\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Doctor Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-info mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Patients Under Care\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 795,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: myPatients.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 797,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-warning mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Pending Appointments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: doctorsExaminations.filter(exam => exam.status === 'zakazan').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 805,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 804,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Quick Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-info\",\n                onClick: () => setActiveTab('my-examinations'),\n                children: \"My Examinations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-success\",\n                onClick: () => setActiveTab('my-patients'),\n                children: \"My Patients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => setActiveTab('documents'),\n                children: \"Documents\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary\",\n                onClick: () => setActiveTab('messages'),\n                children: \"Messages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-danger\",\n                onClick: () => setActiveTab('manage-terms'),\n                children: \"Manage Terms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Recent Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: activityLog.length > 0 ? activityLog.filter(log => log.doktorId === currentDoctorId).slice(-5).reverse().map(log => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item d-flex justify-content-between align-items-center\",\n                children: [log.action, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"badge bg-light text-dark\",\n                  children: new Date(log.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 829,\n                  columnNumber: 49\n                }, this)]\n              }, log.id || Math.random(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 45\n              }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item text-center text-muted\",\n                children: \"No recent activity.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 833,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 21\n        }, this);\n      case 'my-examinations':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage My Examinations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25 me-2\",\n              placeholder: \"Search examinations (patient name, status, date)...\",\n              value: examinationSearchTerm,\n              onChange: e => setExaminationSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              className: \"w-auto\",\n              value: examinationFilterStatus,\n              onChange: e => setExaminationFilterStatus(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"All\",\n                children: \"Filter by Status (All)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 856,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"zakazan\",\n                children: \"Scheduled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"obavljen\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"otkazan\",\n                children: \"Cancelled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 866,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Patient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 867,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 868,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 869,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 870,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 871,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 865,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 864,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentMyExaminations.length > 0 ? currentMyExaminations.map(examination => {\n                  const patient = patients.find(p => p.id === examination.pacijentId);\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: examination.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 880,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: patient ? patient.name : 'N/A'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 881,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: new Date(examination.date).toLocaleDateString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 882,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: examination.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 883,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `badge ${examination.status === 'zakazan' ? 'bg-warning text-dark' : examination.status === 'obavljen' ? 'bg-success' : examination.status === 'otkazan' ? 'bg-danger' : 'bg-secondary'}`,\n                        children: examination.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 885,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 884,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [examination.status === 'zakazan' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-success btn-sm me-2\",\n                          onClick: () => handleUpdateExaminationStatus(examination.id, 'obavljen'),\n                          children: \"Mark as Completed\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 897,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-danger btn-sm\",\n                          onClick: () => handleUpdateExaminationStatus(examination.id, 'otkazan'),\n                          children: \"Cancel\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 903,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true), examination.status === 'obavljen' && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-muted\",\n                        children: \"Completed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 912,\n                        columnNumber: 61\n                      }, this), examination.status === 'otkazan' && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-muted\",\n                        children: \"Cancelled\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 915,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 894,\n                      columnNumber: 53\n                    }, this)]\n                  }, examination.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 879,\n                    columnNumber: 49\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: \"text-center\",\n                    children: \"No examinations found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 923,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 922,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredMyExaminations.length,\n            currentPage: myExaminationsCurrentPage,\n            paginate: setMyExaminationsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 929,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 21\n        }, this);\n      case 'my-patients':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"My Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search patients...\",\n              value: patientSearchTerm,\n              onChange: e => setPatientSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 954,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 955,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 956,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 957,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 958,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 953,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentMyPatients.length > 0 ? currentMyPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 965,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 966,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 967,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 968,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-primary btn-sm me-2\",\n                      onClick: () => openPatientDetailModal(patient),\n                      children: \"Details / Medical History\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 970,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 969,\n                    columnNumber: 49\n                  }, this)]\n                }, patient.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 964,\n                  columnNumber: 45\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"No patients found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 981,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 980,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredMyPatients.length,\n            currentPage: myPatientsCurrentPage,\n            paginate: setMyPatientsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 21\n        }, this);\n      case 'documents':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"My Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Upload New Document\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              onChange: handleDocumentUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 999,\n            columnNumber: 25\n          }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Document Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1008,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Upload Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1010,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Access\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1011,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1012,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1006,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: doc.fileName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1018,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: doc.documentType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1019,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(doc.uploadDate).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1020,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`,\n                    children: doc.pristup\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1021,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1021,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    size: \"sm\",\n                    onClick: () => handleDownloadDocument(doc.id, doc.fileName),\n                    children: \"Download\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1023,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1022,\n                  columnNumber: 45\n                }, this)]\n              }, doc.id || `doc-${Math.random()}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1017,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No documents found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1030,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 21\n        }, this);\n      case 'messages':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"My Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mb-3\",\n            onClick: () => setNewMessage({\n              recipientId: '',\n              subject: '',\n              content: ''\n            }),\n            children: \"Compose New Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1038,\n            columnNumber: 25\n          }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: messages.map(msg => {\n              var _patients$find;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item d-flex justify-content-between align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"From: \", msg.senderId === currentDoctorUserId ? 'Me' : ((_patients$find = patients.find(p => p.userId === msg.senderId)) === null || _patients$find === void 0 ? void 0 : _patients$find.name) || `Patient (${msg.senderId})`]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1045,\n                    columnNumber: 45\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1045,\n                    columnNumber: 201\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Subject:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1046,\n                    columnNumber: 45\n                  }, this), \" \", msg.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1046,\n                    columnNumber: 85\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: new Date(msg.timestamp).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1047,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1044,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  onClick: () => handleViewMessage(msg),\n                  children: \"View Message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1049,\n                  columnNumber: 41\n                }, this)]\n              }, msg.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1041,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No messages found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Compose New Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Recipient (Patient)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                name: \"recipientId\",\n                value: newMessage.recipientId,\n                onChange: handleNewMessageChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- Select a patient --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1070,\n                  columnNumber: 37\n                }, this), myPatients.map(patient => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: patient.userId,\n                  children: patient.name\n                }, patient.userId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1072,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1063,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Subject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"subject\",\n                value: newMessage.subject,\n                onChange: handleNewMessageChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1076,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1087,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                name: \"content\",\n                value: newMessage.content,\n                onChange: handleNewMessageChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1088,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleSendMessage,\n              children: \"Send Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1097,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 21\n        }, this);\n      case 'manage-terms':\n        const doctorsTerms = terms.filter(term => term.doktorId === currentDoctorId);\n        const sortedTerms = doctorsTerms.sort((a, b) => {\n          const dateA = new Date(`${a.datum}T${a.vrijeme}`);\n          const dateB = new Date(`${b.datum}T${b.vrijeme}`);\n          return dateA - dateB;\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage My Terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Create New Term\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleCreateTerm,\n            className: \"mb-5 p-3 border rounded shadow-sm bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"newTermDate\",\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1117,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  value: newTermDate,\n                  onChange: e => setNewTermDate(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1118,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"newTermTime\",\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"time\",\n                  value: newTermTime,\n                  onChange: e => setNewTermTime(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1127,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"newTermStatus\",\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Availability\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1135,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  value: selectedTermStatus,\n                  onChange: e => setSelectedTermStatus(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"DOSTUPAN\",\n                    children: \"Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1141,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"NEDOSTUPAN\",\n                    children: \"Unavailable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1142,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1136,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1134,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              children: \"Create Term\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"My Existing Terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1149,\n            columnNumber: 25\n          }, this), sortedTerms.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1155,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1156,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1157,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Availability\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1158,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1159,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1154,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1153,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: sortedTerms.map(term => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1165,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: new Date(term.datum).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1166,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.vrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1167,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge bg-${term.statusTermina === 'DOSTUPAN' ? 'bg-success' : term.statusTermina === 'ZAKAZAN' ? 'bg-warning text-dark' : 'bg-danger'}`,\n                      children: term.statusTermina\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1169,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1168,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [term.statusTermina === 'DOSTUPAN' && /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"warning\",\n                      size: \"sm\",\n                      onClick: () => handleUpdateTermStatus(term.id, 'ZAKAZAN'),\n                      className: \"me-2\",\n                      children: \"Mark as Scheduled\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1175,\n                      columnNumber: 57\n                    }, this), term.statusTermina === 'ZAKAZAN' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"danger\",\n                        size: \"sm\",\n                        onClick: () => handleUpdateTermStatus(term.id, 'OTKAZAN'),\n                        className: \"me-2\",\n                        children: \"Mark as Cancelled\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1186,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"success\",\n                        size: \"sm\",\n                        onClick: () => handleUpdateTermStatus(term.id, 'DOSTUPAN'),\n                        className: \"me-2\",\n                        children: \"Mark as Available\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1194,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true), term.statusTermina === 'OTKAZAN' && /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"success\",\n                      size: \"sm\",\n                      onClick: () => handleUpdateTermStatus(term.id, 'DOSTUPAN'),\n                      className: \"me-2\",\n                      children: \"Mark as Available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1205,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"danger\",\n                      size: \"sm\",\n                      onClick: () => handleDeleteTerm(term.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1215,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1173,\n                    columnNumber: 49\n                  }, this)]\n                }, term.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1164,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1162,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1152,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1151,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No terms found for your profile. Please create new ones.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1223,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 21\n        }, this);\n      case 'settings':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container my-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Doctor Profile Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1230,\n            columnNumber: 25\n          }, this), !currentDoctorProfile ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading doctor profile...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1232,\n            columnNumber: 29\n          }, this) : isEditingProfile ? /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleUpdateDoctorProfile,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1238,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editIme,\n                  onChange: e => setEditIme(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1239,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1237,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1242,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editPrezime,\n                  onChange: e => setEditPrezime(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1243,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1241,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1236,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1248,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  value: editEmail,\n                  onChange: e => setEditEmail(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1249,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1247,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Phone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1252,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editTelefon,\n                  onChange: e => setEditTelefon(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1253,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1251,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1246,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Specialties (comma separated)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1257,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: editSpecijalizacije,\n                onChange: e => setEditSpecijalizacije(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1258,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1256,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1262,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editGrad,\n                  onChange: e => setEditGrad(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1263,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1261,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Working Hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1266,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editRadnoVrijeme,\n                  onChange: e => setEditRadnoVrijeme(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1267,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1265,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1260,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Experience (years)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1271,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: editIskustvo,\n                onChange: e => setEditIskustvo(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1272,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1270,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Profile Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1275,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleImageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1276,\n                columnNumber: 41\n              }, this), profileImagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: profileImagePreview,\n                  alt: \"Profile image preview\",\n                  style: {\n                    maxWidth: '100px',\n                    maxHeight: '100px',\n                    borderRadius: '50%',\n                    objectFit: 'cover'\n                  },\n                  className: \"border border-secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1283,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1282,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1274,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-end\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                className: \"me-2\",\n                onClick: () => setIsEditingProfile(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1293,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1294,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1292,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1235,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: currentDoctorProfile.profileImageBase64 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: currentDoctorProfile.profileImageBase64,\n                alt: \"Doctor profile\",\n                style: {\n                  width: '100px',\n                  height: '100px',\n                  borderRadius: '50%',\n                  objectFit: 'cover'\n                },\n                className: \"mb-3 border border-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1301,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://placehold.co/100x100/CCCCCC/000000?text=No+image\",\n                alt: \"No profile image\",\n                style: {\n                  width: '100px',\n                  height: '100px',\n                  borderRadius: '50%',\n                  objectFit: 'cover'\n                },\n                className: \"mb-3 border border-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1308,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1299,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"First Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1316,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.ime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1316,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Last Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1317,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.prezime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1317,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1318,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1318,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Phone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1319,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.telefon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1319,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Specialties:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1320,\n                columnNumber: 40\n              }, this), \" \", Array.isArray(currentDoctorProfile.specijalizacije) ? currentDoctorProfile.specijalizacije.join(', ') : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1320,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"City:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1321,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.grad]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1321,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Working Hours:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1322,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.radnoVrijeme]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1322,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Experience:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1323,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.iskustvo, \" years\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1323,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Rating:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1324,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.ocjena]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1324,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => setIsEditingProfile(true),\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1325,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1298,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Select a tab from the sidebar.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-white p-4\",\n      style: {\n        width: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-4\",\n        children: \"Doctor Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1339,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('overview'),\n            children: \"Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1342,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1341,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-examinations' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('my-examinations'),\n            children: \"My Examinations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1350,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-patients' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('my-patients'),\n            children: \"My Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1358,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1357,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'manage-terms' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('manage-terms'),\n            children: \"Manage Terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1366,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('documents'),\n            children: \"Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1374,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1373,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('messages'),\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1382,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1381,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'settings' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('settings'),\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1390,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1389,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1338,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 p-4 bg-light\",\n      children: [showAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${alertType} alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3`,\n        role: \"alert\",\n        style: {\n          zIndex: 1050\n        },\n        children: [alertMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-close\",\n          onClick: () => setShowAlert(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1404,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1402,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: \"Doctor Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1409,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1408,\n        columnNumber: 17\n      }, this), renderContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1400,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showPatientDetailModal,\n      onHide: closePatientDetailModal,\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Patient Details: \", selectedPatient === null || selectedPatient === void 0 ? void 0 : selectedPatient.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1417,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1416,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedPatient && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1422,\n              columnNumber: 32\n            }, this), \" \", selectedPatient.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1422,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1423,\n              columnNumber: 32\n            }, this), \" \", selectedPatient.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1423,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1424,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Examination History for \", selectedPatient.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1425,\n            columnNumber: 29\n          }, this), doctorsExaminations.filter(exam => exam.pacijentId === selectedPatient.id).length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group mb-3\",\n            children: doctorsExaminations.filter(exam => exam.pacijentId === selectedPatient.id).sort((a, b) => new Date(b.date) - new Date(a.date)).map(exam => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1433,\n                columnNumber: 49\n              }, this), \" \", new Date(exam.date).toLocaleDateString(), \", \", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1434,\n                columnNumber: 49\n              }, this), \" \", exam.time, \", \", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1435,\n                columnNumber: 49\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `badge ${exam.status === 'zakazan' ? 'bg-warning text-dark' : exam.status === 'obavljen' ? 'bg-success' : exam.status === 'otkazan' ? 'bg-danger' : 'bg-secondary'}`,\n                children: exam.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1435,\n                columnNumber: 74\n              }, this)]\n            }, exam.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1432,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1427,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No examination history found for this patient.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1445,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1447,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Medical History Entries for \", selectedPatient.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1448,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Diagnosis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1450,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"diagnosis\",\n              value: newMedicalHistoryEntry.diagnosis,\n              onChange: e => setNewMedicalHistoryEntry(prev => ({\n                ...prev,\n                diagnosis: e.target.value\n              })),\n              placeholder: \"Enter diagnosis...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1451,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1449,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Treatment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1460,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"treatment\",\n              value: newMedicalHistoryEntry.treatment,\n              onChange: e => setNewMedicalHistoryEntry(prev => ({\n                ...prev,\n                treatment: e.target.value\n              })),\n              placeholder: \"Enter treatment details...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1461,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1459,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1471,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"notes\",\n              value: newMedicalHistoryEntry.notes,\n              onChange: e => setNewMedicalHistoryEntry(prev => ({\n                ...prev,\n                notes: e.target.value\n              })),\n              placeholder: \"Additional notes...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1472,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1470,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleAddMedicalHistoryEntry,\n            children: \"Add Medical History Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1481,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mt-4\",\n            children: \"Existing Medical History Records:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1483,\n            columnNumber: 29\n          }, this), medicalHistoryEntries.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: medicalHistoryEntries.map(record => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1488,\n                columnNumber: 45\n              }, this), \" \", new Date(record.date).toLocaleDateString(), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1488,\n                columnNumber: 113\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Diagnosis:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1489,\n                columnNumber: 45\n              }, this), \" \", record.diagnosis, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1489,\n                columnNumber: 92\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Treatment:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1490,\n                columnNumber: 45\n              }, this), \" \", record.treatment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1490,\n                columnNumber: 92\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Notes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1491,\n                columnNumber: 45\n              }, this), \" \", record.notes || 'N/A']\n            }, record.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1487,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1485,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No medical history records for this patient.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1496,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1421,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1419,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closePatientDetailModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1501,\n        columnNumber: 17\n      }, this)]\n    }, (selectedPatient === null || selectedPatient === void 0 ? void 0 : selectedPatient.id) || 'patient-modal', true, {\n      fileName: _jsxFileName,\n      lineNumber: 1415,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1337,\n    columnNumber: 9\n  }, this);\n}\n_s(DoctorDashboard, \"prwul+evR7CVsNwrLv/9hpqNuH0=\", false, function () {\n  return [useAuth];\n});\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["axios","useAuth","React","useState","useEffect","useMemo","Modal","Button","Form","Alert","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","OBAVIJESTI_DOKUMENTI_API_PREFIX","DoctorDashboard","_s","activeTab","setActiveTab","doctors","setDoctors","patients","setPatients","examinations","setExaminations","terms","setTerms","activityLog","setActivityLog","currentDoctorProfile","setCurrentDoctorProfile","isEditingProfile","setIsEditingProfile","editIme","setEditIme","editPrezime","setEditPrezime","editEmail","setEditEmail","editTelefon","setEditTelefon","editSpecijalizacije","setEditSpecijalizacije","editGrad","setEditGrad","editRadnoVrijeme","setEditRadnoVrijeme","editIskustvo","setEditIskustvo","editOcjena","setEditOcjena","profileImageFile","setProfileImageFile","profileImagePreview","setProfileImagePreview","documents","setDocuments","messages","setMessages","newMessage","setNewMessage","recipientId","subject","content","replyMessage","setReplyMessage","messageId","selectedMessage","setSelectedMessage","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","patientSearchTerm","setPatientSearchTerm","examinationSearchTerm","setExaminationSearchTerm","examinationFilterStatus","setExaminationFilterStatus","myPatientsCurrentPage","setMyPatientsCurrentPage","myExaminationsCurrentPage","setMyExaminationsCurrentPage","itemsPerPage","showPatientDetailModal","setShowPatientDetailModal","selectedPatient","setSelectedPatient","medicalHistoryEntries","setMedicalHistoryEntries","newMedicalHistoryEntry","setNewMedicalHistoryEntry","diagnosis","treatment","notes","newTermDate","setNewTermDate","newTermTime","setNewTermTime","selectedTermStatus","setSelectedTermStatus","token","user","loading","authLoading","authHeaders","headers","showNotification","message","type","setTimeout","fetchDoctors","response","get","data","map","doc","id","doktorID","userId","Number","name","ime","prezime","specialty","Array","isArray","specijalizacije","length","join","grad","email","telefon","radnoVrijeme","iskustvo","ocjena","profileImageBase64","error","_error$response","console","fetchPatients","pat","pacijentID","phone","_error$response2","fetchTerms","doktorId","undefined","warn","log","term","terminID","statusTermina","datum","vrijeme","_error$response3","fetchExaminations","exam","pregledID","pacijentId","patientName","pacijentIme","doctorName","doktorIme","date","datumPregleda","time","vrijemePregleda","status","komentarPacijenta","ocjenaDoktora","_error$response4","fetchActivityLog","_error$response5","fetchPatientMedicalHistory","patientId","record","zapisID","doctorId","datumZapisivanja","dijagnoza","lijecenje","napomene","_error$response6","handleAddMedicalHistoryEntry","payload","Date","toISOString","split","post","_error$response7","_error$response8","_error$response8$data","openPatientDetailModal","patient","closePatientDetailModal","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","fetchCurrentDoctorProfile","profileData","_error$response9","handleUpdateDoctorProfile","preventDefault","updatedProfile","s","trim","filter","parseInt","parseFloat","put","_error$response0","_error$response1","_error$response1$data","fetchDocuments","transformedDocuments","dokumentacijaID","isNaN","fileName","nazivDokumenta","documentType","tipDokumenta","uploadDate","datumKreiranja","pristup","_error$response10","handleDocumentUpload","formData","FormData","append","_error$response11","_error$response12","_error$response12$dat","handleDownloadDocument","docId","numericDocId","downloadUrl","responseType","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL","_error$response13","_error$response14","_error$response14$dat","fetchMessages","transformedMessages","msg","porukaID","senderId","senderType","senderIme","receiverId","receiverType","receiverIme","timestamp","replies","_error$response15","handleNewMessageChange","value","prev","handleSendMessage","messageData","_error$response16","_error$response17","_error$response17$dat","handleReplyMessageChange","handleReply","_error$response18","_error$response19","_error$response19$dat","handleViewMessage","closeMessageModal","handleCreateTerm","termData","_error$response20","_error$response21","_error$response21$dat","handleDeleteTerm","termId","delete","_error$response22","_error$response23","_error$response23$dat","handleUpdateTermStatus","targetStatus","termToUpdate","find","toLowerCase","_error$response24","_error$response25","_error$response25$dat","className","style","minHeight","children","role","_jsxFileName","lineNumber","columnNumber","doktorIdDefined","currentDoctorId","currentDoctorUserId","doctorsExaminations","examination","patientIdsWithExaminations","Set","myPatients","has","handleUpdateExaminationStatus","newStatus","existingExamination","terminIdToSend","ratingToSend","examinationPayload","updatedExam","_error$response26","_error$response27","_error$response27$dat","filteredMyPatients","includes","indexOfLastMyPatient","indexOfFirstMyPatient","currentMyPatients","slice","totalMyPatientPages","Math","ceil","filteredMyExaminations","matchesSearch","toLocaleDateString","matchesFilterStatus","indexOfLastMyExaminations","indexOfFirstMyExaminations","currentMyExaminations","totalMyExaminationsPages","Pagination","totalItems","currentPage","paginate","pageNumbers","i","push","number","onClick","renderContent","reverse","action","toLocaleString","random","placeholder","onChange","Select","p","colSpan","Group","controlId","Label","Control","variant","size","_patients$find","as","required","rows","doctorsTerms","sortedTerms","sort","a","b","dateA","dateB","onSubmit","accept","src","alt","maxWidth","maxHeight","borderRadius","objectFit","width","height","zIndex","show","onHide","Header","closeButton","Title","Body","Footer","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/DoctorDashboard.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\r\n\r\nfunction DoctorDashboard() {\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [patients, setPatients] = useState([]); // This patient list should contain userId\r\n    const [examinations, setExaminations] = useState([]);\r\n    const [terms, setTerms] = useState([]);\r\n    const [activityLog, setActivityLog] = useState([]);\r\n\r\n    const [currentDoctorProfile, setCurrentDoctorProfile] = useState(null);\r\n    const [isEditingProfile, setIsEditingProfile] = useState(false);\r\n\r\n    const [editIme, setEditIme] = useState('');\r\n    const [editPrezime, setEditPrezime] = useState('');\r\n    const [editEmail, setEditEmail] = useState('');\r\n    const [editTelefon, setEditTelefon] = useState('');\r\n    const [editSpecijalizacije, setEditSpecijalizacije] = useState('');\r\n    const [editGrad, setEditGrad] = useState('');\r\n    const [editRadnoVrijeme, setEditRadnoVrijeme] = useState('');\r\n    const [editIskustvo, setEditIskustvo] = useState('');\r\n    const [editOcjena, setEditOcjena] = useState('');\r\n    const [profileImageFile, setProfileImageFile] = useState(null);\r\n    const [profileImagePreview, setProfileImagePreview] = useState(null);\r\n\r\n    const [documents, setDocuments] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState({ recipientId: '', subject: '', content: '' }); // recipientId will now be Long userId\r\n    const [replyMessage, setReplyMessage] = useState({ messageId: '', content: '' });\r\n    const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('success');\r\n\r\n    const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n    const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\r\n    const [examinationFilterStatus, setExaminationFilterStatus] = useState('All');\r\n\r\n    const [myPatientsCurrentPage, setMyPatientsCurrentPage] = useState(1);\r\n    const [myExaminationsCurrentPage, setMyExaminationsCurrentPage] = useState(1);\r\n    const itemsPerPage = 5;\r\n\r\n    const [showPatientDetailModal, setShowPatientDetailModal] = useState(false);\r\n    const [selectedPatient, setSelectedPatient] = useState(null);\r\n    // Medical History States\r\n    const [medicalHistoryEntries, setMedicalHistoryEntries] = useState([]);\r\n    const [newMedicalHistoryEntry, setNewMedicalHistoryEntry] = useState({\r\n        diagnosis: '',\r\n        treatment: '',\r\n        notes: ''\r\n    });\r\n\r\n    const [newTermDate, setNewTermDate] = useState('');\r\n    const [newTermTime, setNewTermTime] = useState('');\r\n    const [selectedTermStatus, setSelectedTermStatus] = useState('DOSTUPAN'); // Default je sada \"DOSTUPAN\"\r\n\r\n    const { token, user, loading: authLoading } = useAuth();\r\n\r\n    const authHeaders = useMemo(() => ({\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }), [token]);\r\n\r\n    const showNotification = (message, type = 'success') => {\r\n        setAlertMessage(message);\r\n        setAlertType(type);\r\n        setShowAlert(true);\r\n        setTimeout(() => {\r\n            setShowAlert(false);\r\n            setAlertMessage('');\r\n        }, 3000);\r\n    };\r\n\r\n    const fetchDoctors = async () => {\r\n        if (!token) return;\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n            setDoctors(response.data.map(doc => ({\r\n                id: doc.doktorID, // Doctor ID (Integer)\r\n                userId: Number(doc.userId), // User ID from Auth service (Long)\r\n                name: `${doc.ime} ${doc.prezime}`,\r\n                ime: doc.ime,\r\n                prezime: doc.prezime,\r\n                specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                           ? doc.specijalizacije.join(', ')\r\n                           : 'N/A',\r\n                grad: doc.grad,\r\n                email: doc.email,\r\n                telefon: doc.telefon,\r\n                radnoVrijeme: doc.radnoVrijeme,\r\n                iskustvo: doc.iskustvo,\r\n                ocjena: doc.ocjena,\r\n                profileImageBase64: doc.profileImageBase64,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Error fetching all doctors:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching doctors.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchPatients = async () => {\r\n        if (!token) return;\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\r\n            setPatients(response.data.map(pat => ({\r\n                id: pat.pacijentID, // Patient ID (Integer)\r\n                userId: Number(pat.userId), // User ID from Auth service (Long)\r\n                name: `${pat.ime} ${pat.prezime}`,\r\n                ime: pat.ime,\r\n                prezime: pat.prezime,\r\n                email: pat.email,\r\n                phone: pat.telefon,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Error fetching all patients:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching patients.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchTerms = async () => {\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            console.warn(\"Cannot fetch terms: doktorId is missing or auth not ready.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${user.doktorId}`, authHeaders);\r\n            console.log(\"Raw terms response data:\", response.data);\r\n            setTerms(response.data.map(term => {\r\n                console.log(`Term ID: ${term.terminID}, Raw statusTermina: ${term.statusTermina}`);\r\n                return {\r\n                    id: term.terminID,\r\n                    doktorId: term.doktorID,\r\n                    datum: term.datum,\r\n                    vrijeme: term.vrijeme,\r\n                    statusTermina: term.statusTermina, // Ovo bi sada trebao biti string \"DOSTUPAN\", \"ZAKAZAN\", \"OTKAZAN\"\r\n                };\r\n            }));\r\n            showNotification(\"Doctor's terms successfully fetched!\", \"success\");\r\n        } catch (error) {\r\n            console.error(\"Error fetching doctor's terms:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching doctor's terms.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchExaminations = async () => {\r\n        if (!token) return;\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\r\n            setExaminations(response.data.map(exam => ({\r\n                id: exam.pregledID,\r\n                pacijentId: exam.pacijentID,\r\n                doktorId: exam.doktorID,\r\n                patientName: exam.pacijentIme || 'N/A',\r\n                doctorName: exam.doktorIme || 'N/A',\r\n                date: exam.datumPregleda,\r\n                time: exam.vrijemePregleda,\r\n                status: exam.status,\r\n                komentarPacijenta: exam.komentarPacijenta || '',\r\n                ocjenaDoktora: exam.ocjenaDoktora || null,\r\n                terminID: exam.terminID,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Error fetching all examinations:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching examinations.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchActivityLog = async () => {\r\n        if (!token) return;\r\n        try {\r\n            console.warn(\"Activity Log endpoint is not defined, skipping fetching activity log.\");\r\n            setActivityLog([]);\r\n        } catch (error) {\r\n            console.error(\"Error fetching activity log:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching activity log.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchPatientMedicalHistory = async (patientId) => {\r\n        if (!token || !patientId) return;\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${patientId}`, authHeaders);\r\n            setMedicalHistoryEntries(response.data.map(record => ({\r\n                id: record.zapisID,\r\n                patientId: record.pacijentID,\r\n                doctorId: record.doktorID,\r\n                doctorName: record.doktorIme,\r\n                date: record.datumZapisivanja,\r\n                diagnosis: record.dijagnoza,\r\n                treatment: record.lijecenje,\r\n                notes: record.napomene\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Error fetching patient medical history:\", error.response?.data || error.message);\r\n            setMedicalHistoryEntries([]); // Clear if error\r\n            showNotification(\"Error fetching patient's medical history.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleAddMedicalHistoryEntry = async () => {\r\n        if (!token || !selectedPatient || !user || !user.doktorId) {\r\n            showNotification(\"Missing data to add medical history entry.\", \"danger\");\r\n            return;\r\n        }\r\n        if (!newMedicalHistoryEntry.diagnosis || !newMedicalHistoryEntry.treatment) {\r\n            showNotification(\"Diagnosis and Treatment are required for medical history.\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const payload = {\r\n                pacijentID: selectedPatient.id,\r\n                doktorID: user.doktorId,\r\n                datumZapisivanja: new Date().toISOString().split('T')[0],\r\n                dijagnoza: newMedicalHistoryEntry.diagnosis,\r\n                lijecenje: newMedicalHistoryEntry.treatment,\r\n                napomene: newMedicalHistoryEntry.notes\r\n            };\r\n            await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija`, payload, authHeaders);\r\n            showNotification(\"Medical history entry successfully added!\", \"success\");\r\n            setNewMedicalHistoryEntry({ diagnosis: '', treatment: '', notes: '' }); // Clear form\r\n            fetchPatientMedicalHistory(selectedPatient.id); // Refresh medical history\r\n        } catch (error) {\r\n            console.error(\"Error adding medical history entry:\", error.response?.data || error.message);\r\n            showNotification(error.response?.data?.message || 'Error adding medical history entry.', 'danger');\r\n        }\r\n    };\r\n\r\n    const openPatientDetailModal = async (patient) => {\r\n        setSelectedPatient(patient);\r\n        await fetchPatientMedicalHistory(patient.id); // Fetch medical history when modal opens\r\n        setShowPatientDetailModal(true);\r\n    };\r\n\r\n    const closePatientDetailModal = () => {\r\n        setShowPatientDetailModal(false);\r\n        setSelectedPatient(null);\r\n        setMedicalHistoryEntries([]); // Clear history when closing\r\n        setNewMedicalHistoryEntry({ diagnosis: '', treatment: '', notes: '' }); // Clear new entry form\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            setProfileImageFile(file);\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setProfileImagePreview(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        } else {\r\n            setProfileImageFile(null);\r\n            setProfileImagePreview(null);\r\n        }\r\n    };\r\n\r\n    const fetchCurrentDoctorProfile = async () => {\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            console.warn(\"Cannot fetch current doctor profile: doktorId is missing or auth not ready.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, authHeaders);\r\n            const profileData = response.data;\r\n            setCurrentDoctorProfile(profileData);\r\n            setEditIme(profileData.ime || '');\r\n            setEditPrezime(profileData.prezime || '');\r\n            setEditEmail(profileData.email || '');\r\n            setEditTelefon(profileData.telefon || '');\r\n            setEditSpecijalizacije(Array.isArray(profileData.specijalizacije) ? profileData.specijalizacije.join(', ') : '');\r\n            setEditGrad(profileData.grad || '');\r\n            setEditRadnoVrijeme(profileData.radnoVrijeme || '');\r\n            setEditIskustvo(profileData.iskustvo || '');\r\n            setEditOcjena(profileData.ocjena || '');\r\n            setProfileImagePreview(profileData.profileImageBase64 || null);\r\n        } catch (error) {\r\n            console.error(\"Error fetching doctor profile:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching doctor profile.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleUpdateDoctorProfile = async (e) => {\r\n        e.preventDefault();\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            showNotification(\"You are not authorized or doctor ID is missing.\", \"danger\");\r\n            return;\r\n        }\r\n\r\n        const updatedProfile = {\r\n            doktorID: user.doktorId,\r\n            userId: currentDoctorProfile.userId,\r\n            ime: editIme,\r\n            prezime: editPrezime,\r\n            email: editEmail,\r\n            telefon: editTelefon,\r\n            specijalizacije: editSpecijalizacije.split(',').map(s => s.trim()).filter(s => s !== ''),\r\n            grad: editGrad,\r\n            radnoVrijeme: editRadnoVrijeme,\r\n            iskustvo: parseInt(editIskustvo, 10),\r\n            ocjena: parseFloat(editOcjena) || 0.0,\r\n            profileImageBase64: profileImagePreview,\r\n        };\r\n\r\n        try {\r\n            const response = await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, updatedProfile, authHeaders);\r\n            setCurrentDoctorProfile(response.data);\r\n            setIsEditingProfile(false);\r\n            showNotification(\"Profile successfully updated!\");\r\n            fetchDoctors();\r\n        } catch (error) {\r\n            console.error(\"Error updating profile:\", error.response?.data || error.message);\r\n            showNotification(error.response?.data?.message || 'Error updating profile.', 'danger');\r\n        }\r\n    };\r\n\r\n    const fetchDocuments = async () => {\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            console.warn(\"Cannot fetch documents: doktorId is missing or auth not ready.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/doktor/${user.doktorId}`, authHeaders);\r\n            console.log(\"Raw documents response data:\", response.data);\r\n\r\n            const transformedDocuments = response.data\r\n                .filter(doc => doc.dokumentacijaID !== null && doc.dokumentacijaID !== undefined)\r\n                .map(doc => {\r\n                    const id = Number(doc.dokumentacijaID);\r\n                    if (isNaN(id)) {\r\n                        console.warn(`Document with non-numeric dokumentacijaID found: ${doc.dokumentacijaID}. This document might not be downloadable, but it will be displayed.`);\r\n                    }\r\n                    return {\r\n                        id: id,\r\n                        fileName: doc.nazivDokumenta,\r\n                        documentType: doc.tipDokumenta,\r\n                        uploadDate: doc.datumKreiranja,\r\n                        pristup: doc.pristup,\r\n                        pacijentIme: doc.pacijentIme\r\n                    };\r\n                });\r\n\r\n            console.log(\"Transformed documents for state (after light filter):\", transformedDocuments);\r\n            setDocuments(transformedDocuments);\r\n            showNotification(\"Documents successfully fetched!\", \"success\");\r\n        } catch (error) {\r\n            console.error('Error fetching documents for doctor:', error.response?.data || error.message);\r\n            showNotification('Failed to fetch documents.', \"danger\");\r\n            setDocuments([]);\r\n        }\r\n    };\r\n\r\n    const handleDocumentUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n\r\n        if (!user || user.doktorId === null || user.doktorId === undefined) {\r\n            showNotification(\"Doctor ID is not available for document upload.\", \"danger\");\r\n            return;\r\n        }\r\n\r\n        console.log(\"Attempting document upload with Doktor ID:\", user.doktorId);\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('doktorID', user.doktorId);\r\n        formData.append('tipDokumenta', 'Doctor Upload');\r\n        formData.append('pristup', 'PRIVATNA');\r\n\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            showNotification('Document successfully uploaded!', 'success');\r\n            setTimeout(() => {\r\n                fetchDocuments();\r\n            }, 500);\r\n        } catch (error) {\r\n            console.error('Error uploading document:', error.response?.data || error.message);\r\n            showNotification('Document upload failed. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleDownloadDocument = async (docId, fileName) => {\r\n        const numericDocId = Number(docId);\r\n\r\n        if (docId === null || docId === undefined || isNaN(numericDocId)) {\r\n            console.error('Pokušaj preuzimanja dokumenta sa nevažećim ID-om:', docId);\r\n            showNotification('Greška: ID dokumenta je nevažeći. Preuzimanje nije moguće.', 'danger');\r\n            return;\r\n        }\r\n\r\n        const downloadUrl = `${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${numericDocId}`;\r\n        console.log(\"Attempting to download document from URL:\", downloadUrl);\r\n\r\n        try {\r\n            const response = await axios.get(downloadUrl, {\r\n                ...authHeaders,\r\n                responseType: 'blob',\r\n            });\r\n\r\n            const blob = new Blob([response.data], { type: response.headers['content-type'] });\r\n            const url = window.URL.createObjectURL(blob);\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', fileName);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            link.remove();\r\n            window.URL.revokeObjectURL(url);\r\n\r\n            showNotification('Dokument uspješno preuzet!', 'success');\r\n        } catch (error) {\r\n            console.error('Greška pri preuzimanju dokumenta:', error.response?.data || error.message);\r\n            showNotification('Nije uspjelo preuzimanje dokumenta. ' + (error.response?.data?.message || error.message), 'danger');\r\n        }\r\n    };\r\n\r\n\r\n    const fetchMessages = async () => {\r\n        if (!token || !user || user.userId === null || user.userId === undefined) {\r\n            console.warn(\"Cannot fetch messages: user.userId is missing or auth not ready.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=DOKTOR`, authHeaders);\r\n            const transformedMessages = response.data.map(msg => ({\r\n                id: msg.porukaID,\r\n                senderId: Number(msg.senderId),\r\n                senderType: msg.senderType,\r\n                senderIme: msg.senderIme,\r\n                receiverId: Number(msg.receiverId),\r\n                receiverType: msg.receiverType,\r\n                receiverIme: msg.receiverIme,\r\n                subject: msg.subject,\r\n                content: msg.content,\r\n                timestamp: msg.timestamp,\r\n                replies: msg.replies || []\r\n            }));\r\n            setMessages(transformedMessages);\r\n            showNotification(\"Messages successfully fetched!\", \"success\");\r\n        } catch (error) {\r\n            console.error('Error fetching messages for doctor:', error.response?.data || error.message);\r\n            showNotification('Failed to fetch messages.', \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleNewMessageChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewMessage(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!user || user.userId === null || user.userId === undefined) {\r\n            showNotification('Your user ID is not available. Cannot send message.', 'danger');\r\n            return;\r\n        }\r\n        if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\r\n            showNotification('Please fill in all message fields.', 'warning');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const messageData = {\r\n                senderId: user.userId,\r\n                senderType: 'DOKTOR',\r\n                receiverId: Number(newMessage.recipientId),\r\n                receiverType: 'PACIJENT',\r\n                subject: newMessage.subject,\r\n                content: newMessage.content\r\n            };\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\r\n            showNotification('Message successfully sent!', 'success');\r\n            setNewMessage({ recipientId: '', subject: '', content: '' });\r\n            fetchMessages();\r\n        } catch (error) {\r\n            console.error('Error sending message:', error.response?.data || error.message);\r\n            showNotification('Failed to send message. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleReplyMessageChange = (e) => {\r\n        setReplyMessage(prev => ({ ...prev, content: e.target.value }));\r\n    };\r\n\r\n    const handleReply = async (messageId) => {\r\n        if (!user || user.userId === null || user.userId === undefined) {\r\n            showNotification('Your user ID is not available. Cannot reply.', 'danger');\r\n            return;\r\n        }\r\n        if (!replyMessage.content) {\r\n            showNotification('Reply content cannot be empty.', 'warning');\r\n            return;\r\n        }\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\r\n                senderId: user.userId,\r\n                senderIme: `${user.ime || ''} ${user.prezime || ''}`.trim(),\r\n                senderType: 'DOKTOR',\r\n                content: replyMessage.content,\r\n                timestamp: new Date().toISOString()\r\n            }, authHeaders);\r\n            showNotification('Reply successfully sent!', 'success');\r\n            setReplyMessage({ messageId: '', content: '' });\r\n            fetchMessages();\r\n            setSelectedMessage(prev => {\r\n                if (!prev) return null;\r\n                return {\r\n                    ...prev,\r\n                    replies: [...(prev.replies || []), {\r\n                        senderId: user.userId,\r\n                        senderIme: `${user.ime || ''} ${user.prezime || ''}`.trim(),\r\n                        senderType: 'DOKTOR',\r\n                        content: replyMessage.content,\r\n                        timestamp: new Date().toISOString()\r\n                    }]\r\n                };\r\n            });\r\n        } catch (error) {\r\n            console.error('Error sending reply:', error.response?.data || error.message);\r\n            showNotification('Failed to send reply. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleViewMessage = (message) => {\r\n        setSelectedMessage(message);\r\n    };\r\n\r\n    const closeMessageModal = () => {\r\n        setSelectedMessage(null);\r\n        setReplyMessage({ messageId: '', content: '' });\r\n    };\r\n\r\n    const handleCreateTerm = async (e) => {\r\n        e.preventDefault();\r\n        if (!user || user.doktorId === null || user.doktorId === undefined) {\r\n            showNotification(\"Doctor ID is not available. Cannot create term.\", \"danger\");\r\n            return;\r\n        }\r\n        if (!newTermDate || !newTermTime) {\r\n            showNotification(\"Please select both date and time for the new term.\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const termData = {\r\n                doktorID: user.doktorId,\r\n                datum: newTermDate,\r\n                vrijeme: newTermTime + ':00',\r\n                statusTermina: selectedTermStatus // selectedTermStatus je već \"DOSTUPAN\" ili \"NEDOSTUPAN\"\r\n            };\r\n            console.log(\"Sending new term data (CREATE):\", termData);\r\n\r\n            await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, termData, authHeaders);\r\n            showNotification(\"Term successfully created!\", \"success\");\r\n            setNewTermDate('');\r\n            setNewTermTime('');\r\n            setSelectedTermStatus('DOSTUPAN'); // Resetujemo na \"DOSTUPAN\"\r\n            fetchTerms();\r\n        } catch (error) {\r\n            console.error(\"Error creating term:\", error.response?.data || error.message);\r\n            showNotification(`Failed to create term: ${error.response?.data?.message || error.message}`, \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleDeleteTerm = async (termId) => {\r\n        if (!token) return;\r\n        try {\r\n            await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${termId}`, authHeaders);\r\n            showNotification(\"Term successfully deleted!\", \"success\");\r\n            fetchTerms();\r\n        } catch (error) {\r\n            console.error(\"Error deleting term:\", error.response?.data || error.message);\r\n            showNotification(`Failed to delete term: ${error.response?.data?.message || error.message}`, \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleUpdateTermStatus = async (termId, targetStatus) => {\r\n        if (!token) return;\r\n\r\n        console.log(`Attempting to update term ${termId} to status: ${targetStatus}`);\r\n\r\n        try {\r\n            const termToUpdate = terms.find(term => term.id === termId);\r\n            if (!termToUpdate) {\r\n                showNotification('Term not found for update.', 'danger');\r\n                return;\r\n            }\r\n\r\n            const payload = {\r\n                terminID: termToUpdate.id,\r\n                doktorID: termToUpdate.doktorId,\r\n                datum: termToUpdate.datum,\r\n                vrijeme: termToUpdate.vrijeme,\r\n                statusTermina: targetStatus // OVO JE ONO ŠTO BI TREBALO BITI POSLATO\r\n            };\r\n            console.log(\"Sending term update payload (UPDATE - from frontend):\", payload); // IZLAZ KOJI MI TREBA!\r\n\r\n            const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${termId}`, payload, authHeaders);\r\n            console.log(\"Backend response to update:\", response.data); // LOG: Šta backend vraća nakon PUT-a\r\n            showNotification(`Term status updated to ${targetStatus.toLowerCase()}!`, 'success');\r\n            fetchTerms();\r\n        } catch (error) {\r\n            console.error(\"Error updating term status:\", error.response?.data || error.message);\r\n            showNotification(`Failed to update term status: ${error.response?.data?.message || error.message}`, \"danger\");\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"DoctorDashboard useEffect: token=\", token, \"user=\", user, \"authLoading=\", authLoading);\r\n        if (!authLoading && token && user && user.doktorId) {\r\n            console.log(\"DoctorDashboard useEffect: Initiating data fetching for doktorId:\", user.doktorId);\r\n            fetchDoctors();\r\n            fetchPatients();\r\n            fetchTerms();\r\n            fetchExaminations();\r\n            fetchActivityLog();\r\n            fetchCurrentDoctorProfile();\r\n            fetchDocuments();\r\n            fetchMessages();\r\n        } else if (!authLoading) {\r\n            console.log(\"DoctorDashboard useEffect: Data fetching skipped because condition not met.\", { token, user, doktorId: user?.doktorId, authLoading });\r\n        }\r\n    }, [token, user, authLoading]);\r\n\r\n    console.log(\"DoctorDashboard render check: token=\", token, \"user=\", user, \"user.doktorId=\", user?.doktorId, \"authLoading=\", authLoading);\r\n    if (authLoading) {\r\n        console.log(\"DoctorDashboard: Still loading authentication...\");\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <p className=\"ms-3\">Loading authentication...</p>\r\n            </div>\r\n        );\r\n    }\r\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n        console.log(\"DoctorDashboard: Not authorized as doctor or incomplete data. Conditions:\", { token: !!token, user: !!user, doktorIdDefined: user?.doktorId !== null && user?.doktorId !== undefined });\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <p className=\"ms-3\">Not authorized as a doctor or incomplete data.</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const currentDoctorId = user.doktorId;\r\n    const currentDoctorUserId = user.userId;\r\n    console.log(\"DoctorDashboard: Current doctor ID for filtering (after initial checks):\", currentDoctorId, \"Current User ID:\", currentDoctorUserId);\r\n\r\n\r\n    const doctorsExaminations = examinations.filter(\r\n        (examination) => examination.doktorId === currentDoctorId\r\n    );\r\n\r\n    const patientIdsWithExaminations = new Set(\r\n        doctorsExaminations.map((exam) => exam.pacijentId)\r\n    );\r\n    const myPatients = patients.filter((patient) =>\r\n        patientIdsWithExaminations.has(patient.id)\r\n    );\r\n\r\n    const handleUpdateExaminationStatus = async (id, newStatus) => {\r\n        try {\r\n            const existingExamination = examinations.find(exam => exam.id === id);\r\n            if (!existingExamination) {\r\n                showNotification('Examination not found for status update.', 'danger');\r\n                return;\r\n            }\r\n\r\n            console.log(\"Existing Examination object before update:\", existingExamination);\r\n            const terminIdToSend = existingExamination.terminID;\r\n            console.log(\"Term ID to send:\", terminIdToSend);\r\n\r\n            if (terminIdToSend === null || terminIdToSend === undefined) {\r\n                showNotification('Error: Term ID is missing for this examination. Please ensure all examinations have a valid term.', 'danger');\r\n                return;\r\n            }\r\n\r\n            const ratingToSend = newStatus === 'obavljen' ? (existingExamination.ocjenaDoktora || 5.0) : existingExamination.ocjenaDoktora;\r\n\r\n\r\n            const examinationPayload = {\r\n                pregledID: existingExamination.id,\r\n                pacijentID: existingExamination.pacijentId,\r\n                doktorID: existingExamination.doktorId,\r\n                datumPregleda: existingExamination.date.split('T')[0],\r\n                vrijemePregleda: existingExamination.time.split('.')[0],\r\n                status: newStatus,\r\n                komentarPacijenta: existingExamination.komentarPacijenta,\r\n                ocjenaDoktora: ratingToSend,\r\n                terminID: terminIdToSend,\r\n            };\r\n\r\n            const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, examinationPayload, authHeaders);\r\n            const updatedExam = {\r\n                id: response.data.pregledID,\r\n                pacijentId: response.data.pacijentID,\r\n                doktorId: response.data.doktorID,\r\n                patientName: response.data.pacijentIme || 'N/A',\r\n                doctorName: response.data.doktorIme || 'N/A',\r\n                date: response.data.datumPregleda,\r\n                time: response.data.vrijemePregleda,\r\n                status: response.data.status,\r\n                komentarPacijenta: response.data.komentarPacijenta || '',\r\n                ocjenaDoktora: response.data.ocjenaDoktora || null,\r\n                terminID: response.data.terminID,\r\n            };\r\n            setExaminations(examinations.map(exam => (exam.id === id ? updatedExam : exam)));\r\n            fetchActivityLog();\r\n            showNotification(`Examination status updated to ${newStatus}!`, 'info');\r\n        } catch (error) {\r\n            console.error(\"Error updating examination status:\", error.response?.data || error.message);\r\n            showNotification(error.response?.data?.message || 'Error updating examination status.', \"danger\");\r\n        }\r\n    };\r\n\r\n    const filteredMyPatients = myPatients.filter(patient =>\r\n        (patient.name && patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase())) ||\r\n        (patient.email && patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase())) ||\r\n        (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n    );\r\n\r\n    const indexOfLastMyPatient = myPatientsCurrentPage * itemsPerPage;\r\n    const indexOfFirstMyPatient = indexOfLastMyPatient - itemsPerPage;\r\n    const currentMyPatients = filteredMyPatients.slice(indexOfFirstMyPatient, indexOfLastMyPatient);\r\n    const totalMyPatientPages = Math.ceil(filteredMyPatients.length / itemsPerPage);\r\n\r\n    const filteredMyExaminations = doctorsExaminations.filter(examination => {\r\n        const matchesSearch = (examination.patientName && examination.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n            (examination.status && examination.status.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n            (examination.date && new Date(examination.date).toLocaleDateString().includes(examinationSearchTerm));\r\n\r\n        const matchesFilterStatus = examinationFilterStatus === 'All' || examination.status === examinationFilterStatus;\r\n\r\n        return matchesSearch && matchesFilterStatus;\r\n    });\r\n\r\n    const indexOfLastMyExaminations = myExaminationsCurrentPage * itemsPerPage;\r\n    const indexOfFirstMyExaminations = indexOfLastMyExaminations - itemsPerPage;\r\n    const currentMyExaminations = filteredMyExaminations.slice(indexOfFirstMyExaminations, indexOfLastMyExaminations);\r\n    const totalMyExaminationsPages = Math.ceil(filteredMyExaminations.length / itemsPerPage);\r\n\r\n\r\n    const Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        return (\r\n            <nav>\r\n                <ul className=\"pagination justify-content-center mt-4\">\r\n                    {pageNumbers.map(number => (\r\n                        <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n                            <button onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n        );\r\n    };\r\n\r\n\r\n    const renderContent = () => {\r\n        switch (activeTab) {\r\n            case 'overview':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Doctor Overview</h4>\r\n                        <div className=\"row g-4\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card text-white bg-info mb-3\">\r\n                                    <div className=\"card-header\">Total Patients Under Care</div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title display-4\">{myPatients.length}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card text-white bg-warning mb-3\">\r\n                                    <div className=\"card-header\">Pending Appointments</div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title display-4\">{doctorsExaminations.filter(exam => exam.status === 'zakazan').length}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <h5>Quick Actions</h5>\r\n                            <div className=\"d-flex gap-2\">\r\n                                <button className=\"btn btn-outline-info\" onClick={() => setActiveTab('my-examinations')}>My Examinations</button>\r\n                                <button className=\"btn btn-outline-success\" onClick={() => setActiveTab('my-patients')}>My Patients</button>\r\n                                <button className=\"btn btn-outline-primary\" onClick={() => setActiveTab('documents')}>Documents</button>\r\n                                <button className=\"btn btn-outline-secondary\" onClick={() => setActiveTab('messages')}>Messages</button>\r\n                                <button className=\"btn btn-outline-danger\" onClick={() => setActiveTab('manage-terms')}>Manage Terms</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <h5>Recent Activity</h5>\r\n                            <ul className=\"list-group\">\r\n                                {activityLog.length > 0 ? (\r\n                                    activityLog\r\n                                        .filter(log => log.doktorId === currentDoctorId)\r\n                                        .slice(-5).reverse().map(log => (\r\n                                            <li key={log.id || Math.random()} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                {log.action}\r\n                                                <span className=\"badge bg-light text-dark\">{new Date(log.timestamp).toLocaleString()}</span>\r\n                                            </li>\r\n                                        ))\r\n                                ) : (\r\n                                    <li className=\"list-group-item text-center text-muted\">No recent activity.</li>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'my-examinations':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Manage My Examinations</h4>\r\n                        <div className=\"d-flex justify-content-between mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control w-25 me-2\"\r\n                                placeholder=\"Search examinations (patient name, status, date)...\"\r\n                                value={examinationSearchTerm}\r\n                                onChange={(e) => setExaminationSearchTerm(e.target.value)}\r\n                            />\r\n                            <Form.Select\r\n                                className=\"w-auto\"\r\n                                value={examinationFilterStatus}\r\n                                onChange={(e) => setExaminationFilterStatus(e.target.value)}\r\n                            >\r\n                                <option value=\"All\">Filter by Status (All)</option>\r\n                                <option value=\"zakazan\">Scheduled</option>\r\n                                <option value=\"obavljen\">Completed</option>\r\n                                <option value=\"otkazan\">Cancelled</option>\r\n                            </Form.Select>\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Patient</th>\r\n                                        <th>Date</th>\r\n                                        <th>Time</th>\r\n                                        <th>Status</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentMyExaminations.length > 0 ? (\r\n                                        currentMyExaminations.map(examination => {\r\n                                            const patient = patients.find(p => p.id === examination.pacijentId);\r\n                                            return (\r\n                                                <tr key={examination.id}>\r\n                                                    <td>{examination.id}</td>\r\n                                                    <td>{patient ? patient.name : 'N/A'}</td>\r\n                                                    <td>{new Date(examination.date).toLocaleDateString()}</td>\r\n                                                    <td>{examination.time}</td>\r\n                                                    <td>\r\n                                                        <span className={`badge ${\r\n                                                            examination.status === 'zakazan' ? 'bg-warning text-dark' :\r\n                                                            examination.status === 'obavljen' ? 'bg-success' :\r\n                                                            examination.status === 'otkazan' ? 'bg-danger' :\r\n                                                            'bg-secondary'\r\n                                                        }`}>\r\n                                                            {examination.status}\r\n                                                        </span>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {examination.status === 'zakazan' && (\r\n                                                            <>\r\n                                                                <button\r\n                                                                    className=\"btn btn-success btn-sm me-2\"\r\n                                                                    onClick={() => handleUpdateExaminationStatus(examination.id, 'obavljen')}\r\n                                                                >\r\n                                                                    Mark as Completed\r\n                                                                </button>\r\n                                                                <button\r\n                                                                    className=\"btn btn-danger btn-sm\"\r\n                                                                    onClick={() => handleUpdateExaminationStatus(examination.id, 'otkazan')}\r\n                                                                >\r\n                                                                    Cancel\r\n                                                                </button>\r\n                                                            </>\r\n                                                        )}\r\n                                                        {examination.status === 'obavljen' && (\r\n                                                            <span className=\"text-muted\">Completed</span>\r\n                                                        )}\r\n                                                        {examination.status === 'otkazan' && (\r\n                                                            <span className=\"text-muted\">Cancelled</span>\r\n                                                        )}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td colSpan=\"6\" className=\"text-center\">No examinations found.</td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={filteredMyExaminations.length}\r\n                            currentPage={myExaminationsCurrentPage}\r\n                            paginate={setMyExaminationsCurrentPage}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 'my-patients':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">My Patients</h4>\r\n                        <div className=\"d-flex justify-content-between mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control w-25\"\r\n                                placeholder=\"Search patients...\"\r\n                                value={patientSearchTerm}\r\n                                onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Name</th>\r\n                                        <th>Email</th>\r\n                                        <th>Phone</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentMyPatients.length > 0 ? (\r\n                                        currentMyPatients.map(patient => (\r\n                                            <tr key={patient.id}>\r\n                                                <td>{patient.id}</td>\r\n                                                <td>{patient.name}</td>\r\n                                                <td>{patient.email}</td>\r\n                                                <td>{patient.phone}</td>\r\n                                                <td>\r\n                                                    <button\r\n                                                        className=\"btn btn-primary btn-sm me-2\"\r\n                                                        onClick={() => openPatientDetailModal(patient)}\r\n                                                    >\r\n                                                        Details / Medical History\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td colSpan=\"5\" className=\"text-center\">No patients found.</td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={filteredMyPatients.length}\r\n                            currentPage={myPatientsCurrentPage}\r\n                            paginate={setMyPatientsCurrentPage}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 'documents':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">My Documents</h4>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Upload New Document</Form.Label>\r\n                            <Form.Control type=\"file\" onChange={handleDocumentUpload} />\r\n                        </Form.Group>\r\n\r\n                        {documents.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Document Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Upload Date</th>\r\n                                        <th>Access</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {documents.map(doc => (\r\n                                        <tr key={doc.id || `doc-${Math.random()}`}>\r\n                                            <td>{doc.fileName}</td>\r\n                                            <td>{doc.documentType}</td>\r\n                                            <td>{new Date(doc.uploadDate).toLocaleDateString()}</td>\r\n                                            <td><span className={`badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`}>{doc.pristup}</span></td>\r\n                                            <td>\r\n                                                <Button variant=\"success\" size=\"sm\" onClick={() => handleDownloadDocument(doc.id, doc.fileName)}>Download</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No documents found.</p>\r\n                        )}\r\n                    </div>\r\n                );\r\n            case 'messages':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">My Messages</h4>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => setNewMessage({ recipientId: '', subject: '', content: '' })}>Compose New Message</Button>\r\n\r\n                        {messages.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {messages.map(msg => (\r\n                                    <li key={msg.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            <strong>From: {msg.senderId === currentDoctorUserId ? 'Me' : (patients.find(p => p.userId === msg.senderId)?.name || `Patient (${msg.senderId})`)}</strong> <br />\r\n                                            <strong>Subject:</strong> {msg.subject} <br />\r\n                                            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                        <Button variant=\"info\" size=\"sm\" onClick={() => handleViewMessage(msg)}>View Message</Button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>No messages found.</p>\r\n                        )}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <h4>Compose New Message</h4>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Recipient (Patient)</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"recipientId\"\r\n                                    value={newMessage.recipientId}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Select a patient --</option>\r\n                                    {myPatients.map(patient => (\r\n                                        <option key={patient.userId} value={patient.userId}>{patient.name}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Subject</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    value={newMessage.subject}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Content</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"content\"\r\n                                    value={newMessage.content}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSendMessage}>Send Message</Button>\r\n                        </Form>\r\n                    </div>\r\n                );\r\n            case 'manage-terms':\r\n                const doctorsTerms = terms.filter(term => term.doktorId === currentDoctorId);\r\n                const sortedTerms = doctorsTerms.sort((a, b) => {\r\n                    const dateA = new Date(`${a.datum}T${a.vrijeme}`);\r\n                    const dateB = new Date(`${b.datum}T${b.vrijeme}`);\r\n                    return dateA - dateB;\r\n                });\r\n\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Manage My Terms</h4>\r\n\r\n                        <h5>Create New Term</h5>\r\n                        <Form onSubmit={handleCreateTerm} className=\"mb-5 p-3 border rounded shadow-sm bg-white\">\r\n                            <div className=\"row mb-3\">\r\n                                <Form.Group controlId=\"newTermDate\" className=\"col-md-4\">\r\n                                    <Form.Label>Date</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"date\"\r\n                                        value={newTermDate}\r\n                                        onChange={(e) => setNewTermDate(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"newTermTime\" className=\"col-md-4\">\r\n                                    <Form.Label>Time</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"time\"\r\n                                        value={newTermTime}\r\n                                        onChange={(e) => setNewTermTime(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"newTermStatus\" className=\"col-md-4\">\r\n                                    <Form.Label>Availability</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        value={selectedTermStatus}\r\n                                        onChange={(e) => setSelectedTermStatus(e.target.value)}\r\n                                    >\r\n                                        <option value=\"DOSTUPAN\">Available</option>\r\n                                        <option value=\"NEDOSTUPAN\">Unavailable</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </div>\r\n                            <Button variant=\"success\" type=\"submit\">Create Term</Button>\r\n                        </Form>\r\n\r\n                        <h5>My Existing Terms</h5>\r\n                        {sortedTerms.length > 0 ? (\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-striped table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th>Date</th>\r\n                                            <th>Time</th>\r\n                                            <th>Availability</th>\r\n                                            <th>Actions</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {sortedTerms.map(term => (\r\n                                            <tr key={term.id}>\r\n                                                <td>{term.id}</td>\r\n                                                <td>{new Date(term.datum).toLocaleDateString()}</td>\r\n                                                <td>{term.vrijeme}</td>\r\n                                                <td>\r\n                                                    <span className={`badge bg-${term.statusTermina === 'DOSTUPAN' ? 'bg-success' : term.statusTermina === 'ZAKAZAN' ? 'bg-warning text-dark' : 'bg-danger'}`}>\r\n                                                        {term.statusTermina}\r\n                                                    </span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {term.statusTermina === 'DOSTUPAN' && (\r\n                                                        <Button\r\n                                                            variant=\"warning\"\r\n                                                            size=\"sm\"\r\n                                                            onClick={() => handleUpdateTermStatus(term.id, 'ZAKAZAN')}\r\n                                                            className=\"me-2\"\r\n                                                        >\r\n                                                            Mark as Scheduled\r\n                                                        </Button>\r\n                                                    )}\r\n                                                    {term.statusTermina === 'ZAKAZAN' && (\r\n                                                        <>\r\n                                                            <Button\r\n                                                                variant=\"danger\"\r\n                                                                size=\"sm\"\r\n                                                                onClick={() => handleUpdateTermStatus(term.id, 'OTKAZAN')}\r\n                                                                className=\"me-2\"\r\n                                                            >\r\n                                                                Mark as Cancelled\r\n                                                            </Button>\r\n                                                            <Button\r\n                                                                variant=\"success\"\r\n                                                                size=\"sm\"\r\n                                                                onClick={() => handleUpdateTermStatus(term.id, 'DOSTUPAN')}\r\n                                                                className=\"me-2\"\r\n                                                            >\r\n                                                                Mark as Available\r\n                                                            </Button>\r\n                                                        </>\r\n                                                    )}\r\n                                                    {term.statusTermina === 'OTKAZAN' && (\r\n                                                        <Button\r\n                                                            variant=\"success\"\r\n                                                            size=\"sm\"\r\n                                                            onClick={() => handleUpdateTermStatus(term.id, 'DOSTUPAN')}\r\n                                                            className=\"me-2\"\r\n                                                        >\r\n                                                            Mark as Available\r\n                                                        </Button>\r\n                                                    )}\r\n\r\n                                                    <Button variant=\"danger\" size=\"sm\" onClick={() => handleDeleteTerm(term.id)}>Delete</Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        ) : (\r\n                            <p>No terms found for your profile. Please create new ones.</p>\r\n                        )}\r\n                    </div>\r\n                );\r\n            case 'settings':\r\n                return (\r\n                    <div className=\"container my-4\">\r\n                        <h4 className=\"mb-4\">Doctor Profile Settings</h4>\r\n                        {!currentDoctorProfile ? (\r\n                            <p>Loading doctor profile...</p>\r\n                        ) : (\r\n                            isEditingProfile ? (\r\n                                <Form onSubmit={handleUpdateDoctorProfile}>\r\n                                    <div className=\"row mb-3\">\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>First Name</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editIme} onChange={(e) => setEditIme(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Last Name</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editPrezime} onChange={(e) => setEditPrezime(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control type=\"email\" value={editEmail} onChange={(e) => setEditEmail(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Phone</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editTelefon} onChange={(e) => setEditTelefon(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Specialties (comma separated)</Form.Label>\r\n                                        <Form.Control type=\"text\" value={editSpecijalizacije} onChange={(e) => setEditSpecijalizacije(e.target.value)} />\r\n                                    </Form.Group>\r\n                                    <div className=\"row mb-3\">\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>City</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editGrad} onChange={(e) => setEditGrad(e.target.value)} />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Working Hours</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editRadnoVrijeme} onChange={(e) => setEditRadnoVrijeme(e.target.value)} />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Experience (years)</Form.Label>\r\n                                        <Form.Control type=\"number\" value={editIskustvo} onChange={(e) => setEditIskustvo(e.target.value)} />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Profile Image</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"file\"\r\n                                            accept=\"image/*\"\r\n                                            onChange={handleImageChange}\r\n                                        />\r\n                                        {profileImagePreview && (\r\n                                            <div className=\"mt-2\">\r\n                                                <img\r\n                                                    src={profileImagePreview}\r\n                                                    alt=\"Profile image preview\"\r\n                                                    style={{ maxWidth: '100px', maxHeight: '100px', borderRadius: '50%', objectFit: 'cover' }}\r\n                                                    className=\"border border-secondary\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </Form.Group>\r\n                                    <div className=\"d-flex justify-content-end\">\r\n                                        <Button variant=\"secondary\" className=\"me-2\" onClick={() => setIsEditingProfile(false)}>Cancel</Button>\r\n                                        <Button variant=\"primary\" type=\"submit\">Save Changes</Button>\r\n                                    </div>\r\n                                </Form>\r\n                            ) : (\r\n                                <div>\r\n                                    <p>\r\n                                        {currentDoctorProfile.profileImageBase64 ? (\r\n                                            <img\r\n                                                src={currentDoctorProfile.profileImageBase64}\r\n                                                alt=\"Doctor profile\"\r\n                                                style={{ width: '100px', height: '100px', borderRadius: '50%', objectFit: 'cover' }}\r\n                                                className=\"mb-3 border border-secondary\"\r\n                                            />\r\n                                        ) : (\r\n                                            <img\r\n                                                src=\"https://placehold.co/100x100/CCCCCC/000000?text=No+image\"\r\n                                                alt=\"No profile image\"\r\n                                                style={{ width: '100px', height: '100px', borderRadius: '50%', objectFit: 'cover' }}\r\n                                                className=\"mb-3 border border-secondary\"\r\n                                            />\r\n                                        )}\r\n                                    </p>\r\n                                    <p><strong>First Name:</strong> {currentDoctorProfile.ime}</p>\r\n                                    <p><strong>Last Name:</strong> {currentDoctorProfile.prezime}</p>\r\n                                    <p><strong>Email:</strong> {currentDoctorProfile.email}</p>\r\n                                    <p><strong>Phone:</strong> {currentDoctorProfile.telefon}</p>\r\n                                    <p><strong>Specialties:</strong> {Array.isArray(currentDoctorProfile.specijalizacije) ? currentDoctorProfile.specijalizacije.join(', ') : 'N/A'}</p>\r\n                                    <p><strong>City:</strong> {currentDoctorProfile.grad}</p>\r\n                                    <p><strong>Working Hours:</strong> {currentDoctorProfile.radnoVrijeme}</p>\r\n                                    <p><strong>Experience:</strong> {currentDoctorProfile.iskustvo} years</p>\r\n                                    <p><strong>Rating:</strong> {currentDoctorProfile.ocjena}</p>\r\n                                    <Button variant=\"primary\" onClick={() => setIsEditingProfile(true)}>Edit Profile</Button>\r\n                                </div>\r\n                            )\r\n                        )}\r\n                    </div>\r\n                );\r\n            default:\r\n                return <div>Select a tab from the sidebar.</div>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ minHeight: '100vh' }}>\r\n            <div className=\"bg-dark text-white p-4\" style={{ width: '250px' }}>\r\n                <h3 className=\"mb-4\">Doctor Panel</h3>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('overview')}\r\n                        >\r\n                            Overview\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-examinations' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('my-examinations')}\r\n                        >\r\n                            My Examinations\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-patients' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('my-patients')}\r\n                        >\r\n                            My Patients\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'manage-terms' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('manage-terms')}\r\n                        >\r\n                            Manage Terms\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('documents')}\r\n                        >\r\n                            Documents\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('messages')}\r\n                        >\r\n                            Messages\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'settings' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('settings')}\r\n                        >\r\n                            Settings\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"flex-grow-1 p-4 bg-light\">\r\n                {showAlert && (\r\n                    <div className={`alert alert-${alertType} alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3`} role=\"alert\" style={{ zIndex: 1050 }}>\r\n                        {alertMessage}\r\n                        <button type=\"button\" className=\"btn-close\" onClick={() => setShowAlert(false)}></button>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <h2 className=\"mb-0\">Doctor Dashboard</h2>\r\n                </div>\r\n\r\n                {renderContent()}\r\n            </div>\r\n\r\n            <Modal show={showPatientDetailModal} onHide={closePatientDetailModal} size=\"lg\" key={selectedPatient?.id || 'patient-modal'}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Patient Details: {selectedPatient?.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedPatient && (\r\n                        <div>\r\n                            <p><strong>Email:</strong> {selectedPatient.email}</p>\r\n                            <p><strong>Phone:</strong> {selectedPatient.phone}</p>\r\n                            <hr />\r\n                            <h5>Examination History for {selectedPatient.name}</h5>\r\n                            {doctorsExaminations.filter(exam => exam.pacijentId === selectedPatient.id).length > 0 ? (\r\n                                <ul className=\"list-group mb-3\">\r\n                                    {doctorsExaminations\r\n                                        .filter(exam => exam.pacijentId === selectedPatient.id)\r\n                                        .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n                                        .map(exam => (\r\n                                            <li key={exam.id} className=\"list-group-item\">\r\n                                                <strong>Date:</strong> {new Date(exam.date).toLocaleDateString()}, {' '}\r\n                                                <strong>Time:</strong> {exam.time}, {' '}\r\n                                                <strong>Status:</strong> <span className={`badge ${\r\n                                                    exam.status === 'zakazan' ? 'bg-warning text-dark' :\r\n                                                    exam.status === 'obavljen' ? 'bg-success' :\r\n                                                    exam.status === 'otkazan' ? 'bg-danger' :\r\n                                                    'bg-secondary'\r\n                                                }`}>{exam.status}</span>\r\n                                            </li>\r\n                                        ))}\r\n                                </ul>\r\n                            ) : (\r\n                                <p>No examination history found for this patient.</p>\r\n                            )}\r\n                            <hr />\r\n                            <h5>Medical History Entries for {selectedPatient.name}</h5>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Diagnosis</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"diagnosis\"\r\n                                    value={newMedicalHistoryEntry.diagnosis}\r\n                                    onChange={(e) => setNewMedicalHistoryEntry(prev => ({ ...prev, diagnosis: e.target.value }))}\r\n                                    placeholder=\"Enter diagnosis...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Treatment</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"treatment\"\r\n                                    value={newMedicalHistoryEntry.treatment}\r\n                                    onChange={(e) => setNewMedicalHistoryEntry(prev => ({ ...prev, treatment: e.target.value }))}\r\n                                    placeholder=\"Enter treatment details...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Notes</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"notes\"\r\n                                    value={newMedicalHistoryEntry.notes}\r\n                                    onChange={(e) => setNewMedicalHistoryEntry(prev => ({ ...prev, notes: e.target.value }))}\r\n                                    placeholder=\"Additional notes...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleAddMedicalHistoryEntry}>Add Medical History Entry</Button>\r\n\r\n                            <h6 className=\"mt-4\">Existing Medical History Records:</h6>\r\n                            {medicalHistoryEntries.length > 0 ? (\r\n                                <ul className=\"list-group\">\r\n                                    {medicalHistoryEntries.map(record => (\r\n                                        <li key={record.id} className=\"list-group-item\">\r\n                                            <strong>Date:</strong> {new Date(record.date).toLocaleDateString()} <br />\r\n                                            <strong>Diagnosis:</strong> {record.diagnosis} <br />\r\n                                            <strong>Treatment:</strong> {record.treatment} <br />\r\n                                            <strong>Notes:</strong> {record.notes || 'N/A'}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            ) : (\r\n                                <p>No medical history records for this patient.</p>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closePatientDetailModal}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtE,MAAMC,gBAAgB,GAAG,uBAAuB;AAEhD,MAAMC,4BAA4B,GAAG,GAAGD,gBAAgB,wBAAwB;AAChF,MAAME,2BAA2B,GAAG,GAAGF,gBAAgB,uBAAuB;AAC9E,MAAMG,+BAA+B,GAAG,GAAGH,gBAAgB,+BAA+B;AAE1F,SAASI,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,UAAU,CAAC;EAEtD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM,CAAC8B,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAACgC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAM,CAACkC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoC,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsC,SAAS,EAAEC,YAAY,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0C,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAAC4C,QAAQ,EAAEC,WAAW,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC8C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgD,YAAY,EAAEC,eAAe,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkD,UAAU,EAAEC,aAAa,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrD,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACsD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGvD,QAAQ,CAAC,IAAI,CAAC;EAEpE,MAAM,CAACwD,SAAS,EAAEC,YAAY,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC0D,QAAQ,EAAEC,WAAW,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC4D,UAAU,EAAEC,aAAa,CAAC,GAAG7D,QAAQ,CAAC;IAAE8D,WAAW,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC,CAAC,CAAC;EAC7F,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlE,QAAQ,CAAC;IAAEmE,SAAS,EAAE,EAAE;IAAEH,OAAO,EAAE;EAAG,CAAC,CAAC;EAChF,MAAM,CAACI,eAAe,EAAEC,kBAAkB,CAAC,GAAGrE,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAM,CAACsE,SAAS,EAAEC,YAAY,CAAC,GAAGvE,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACwE,YAAY,EAAEC,eAAe,CAAC,GAAGzE,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC0E,SAAS,EAAEC,YAAY,CAAC,GAAG3E,QAAQ,CAAC,SAAS,CAAC;EAErD,MAAM,CAAC4E,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7E,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAAC8E,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG/E,QAAQ,CAAC,EAAE,CAAC;EACtE,MAAM,CAACgF,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGjF,QAAQ,CAAC,KAAK,CAAC;EAE7E,MAAM,CAACkF,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGnF,QAAQ,CAAC,CAAC,CAAC;EACrE,MAAM,CAACoF,yBAAyB,EAAEC,4BAA4B,CAAC,GAAGrF,QAAQ,CAAC,CAAC,CAAC;EAC7E,MAAMsF,YAAY,GAAG,CAAC;EAEtB,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGxF,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACyF,eAAe,EAAEC,kBAAkB,CAAC,GAAG1F,QAAQ,CAAC,IAAI,CAAC;EAC5D;EACA,MAAM,CAAC2F,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG5F,QAAQ,CAAC,EAAE,CAAC;EACtE,MAAM,CAAC6F,sBAAsB,EAAEC,yBAAyB,CAAC,GAAG9F,QAAQ,CAAC;IACjE+F,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGnG,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoG,WAAW,EAAEC,cAAc,CAAC,GAAGrG,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsG,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGvG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;;EAE1E,MAAM;IAAEwG,KAAK;IAAEC,IAAI;IAAEC,OAAO,EAAEC;EAAY,CAAC,GAAG7G,OAAO,CAAC,CAAC;EAEvD,MAAM8G,WAAW,GAAG1G,OAAO,CAAC,OAAO;IAC/B2G,OAAO,EAAE;MACL,eAAe,EAAE,UAAUL,KAAK;IACpC;EACJ,CAAC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEZ,MAAMM,gBAAgB,GAAGA,CAACC,OAAO,EAAEC,IAAI,GAAG,SAAS,KAAK;IACpDvC,eAAe,CAACsC,OAAO,CAAC;IACxBpC,YAAY,CAACqC,IAAI,CAAC;IAClBzC,YAAY,CAAC,IAAI,CAAC;IAClB0C,UAAU,CAAC,MAAM;MACb1C,YAAY,CAAC,KAAK,CAAC;MACnBE,eAAe,CAAC,EAAE,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,MAAMyC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACV,KAAK,EAAE;IACZ,IAAI;MACA,MAAMW,QAAQ,GAAG,MAAMtH,KAAK,CAACuH,GAAG,CAAC,GAAGvG,4BAA4B,cAAc,EAAE+F,WAAW,CAAC;MAC5FvF,UAAU,CAAC8F,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;QACjCC,EAAE,EAAED,GAAG,CAACE,QAAQ;QAAE;QAClBC,MAAM,EAAEC,MAAM,CAACJ,GAAG,CAACG,MAAM,CAAC;QAAE;QAC5BE,IAAI,EAAE,GAAGL,GAAG,CAACM,GAAG,IAAIN,GAAG,CAACO,OAAO,EAAE;QACjCD,GAAG,EAAEN,GAAG,CAACM,GAAG;QACZC,OAAO,EAAEP,GAAG,CAACO,OAAO;QACpBC,SAAS,EAAEC,KAAK,CAACC,OAAO,CAACV,GAAG,CAACW,eAAe,CAAC,IAAIX,GAAG,CAACW,eAAe,CAACC,MAAM,GAAG,CAAC,GAClEZ,GAAG,CAACW,eAAe,CAACE,IAAI,CAAC,IAAI,CAAC,GAC9B,KAAK;QAClBC,IAAI,EAAEd,GAAG,CAACc,IAAI;QACdC,KAAK,EAAEf,GAAG,CAACe,KAAK;QAChBC,OAAO,EAAEhB,GAAG,CAACgB,OAAO;QACpBC,YAAY,EAAEjB,GAAG,CAACiB,YAAY;QAC9BC,QAAQ,EAAElB,GAAG,CAACkB,QAAQ;QACtBC,MAAM,EAAEnB,GAAG,CAACmB,MAAM;QAClBC,kBAAkB,EAAEpB,GAAG,CAACoB;MAC5B,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACZC,OAAO,CAACF,KAAK,CAAC,6BAA6B,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACzB,QAAQ,cAAA0B,eAAA,uBAAdA,eAAA,CAAgBxB,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MACnFD,gBAAgB,CAAC,yBAAyB,EAAE,QAAQ,CAAC;IACzD;EACJ,CAAC;EAED,MAAMiC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACvC,KAAK,EAAE;IACZ,IAAI;MACA,MAAMW,QAAQ,GAAG,MAAMtH,KAAK,CAACuH,GAAG,CAAC,GAAGvG,4BAA4B,gBAAgB,EAAE+F,WAAW,CAAC;MAC9FrF,WAAW,CAAC4F,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAC0B,GAAG,KAAK;QAClCxB,EAAE,EAAEwB,GAAG,CAACC,UAAU;QAAE;QACpBvB,MAAM,EAAEC,MAAM,CAACqB,GAAG,CAACtB,MAAM,CAAC;QAAE;QAC5BE,IAAI,EAAE,GAAGoB,GAAG,CAACnB,GAAG,IAAImB,GAAG,CAAClB,OAAO,EAAE;QACjCD,GAAG,EAAEmB,GAAG,CAACnB,GAAG;QACZC,OAAO,EAAEkB,GAAG,CAAClB,OAAO;QACpBQ,KAAK,EAAEU,GAAG,CAACV,KAAK;QAChBY,KAAK,EAAEF,GAAG,CAACT;MACf,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA,IAAAO,gBAAA;MACZL,OAAO,CAACF,KAAK,CAAC,8BAA8B,EAAE,EAAAO,gBAAA,GAAAP,KAAK,CAACzB,QAAQ,cAAAgC,gBAAA,uBAAdA,gBAAA,CAAgB9B,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MACpFD,gBAAgB,CAAC,0BAA0B,EAAE,QAAQ,CAAC;IAC1D;EACJ,CAAC;EAED,MAAMsC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAAC5C,KAAK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC4C,QAAQ,KAAK,IAAI,IAAI5C,IAAI,CAAC4C,QAAQ,KAAKC,SAAS,EAAE;MAC1ER,OAAO,CAACS,IAAI,CAAC,4DAA4D,CAAC;MAC1E;IACJ;IACA,IAAI;MACA,MAAMpC,QAAQ,GAAG,MAAMtH,KAAK,CAACuH,GAAG,CAAC,GAAGtG,2BAA2B,uBAAuB2F,IAAI,CAAC4C,QAAQ,EAAE,EAAEzC,WAAW,CAAC;MACnHkC,OAAO,CAACU,GAAG,CAAC,0BAA0B,EAAErC,QAAQ,CAACE,IAAI,CAAC;MACtD1F,QAAQ,CAACwF,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACmC,IAAI,IAAI;QAC/BX,OAAO,CAACU,GAAG,CAAC,YAAYC,IAAI,CAACC,QAAQ,wBAAwBD,IAAI,CAACE,aAAa,EAAE,CAAC;QAClF,OAAO;UACHnC,EAAE,EAAEiC,IAAI,CAACC,QAAQ;UACjBL,QAAQ,EAAEI,IAAI,CAAChC,QAAQ;UACvBmC,KAAK,EAAEH,IAAI,CAACG,KAAK;UACjBC,OAAO,EAAEJ,IAAI,CAACI,OAAO;UACrBF,aAAa,EAAEF,IAAI,CAACE,aAAa,CAAE;QACvC,CAAC;MACL,CAAC,CAAC,CAAC;MACH7C,gBAAgB,CAAC,sCAAsC,EAAE,SAAS,CAAC;IACvE,CAAC,CAAC,OAAO8B,KAAK,EAAE;MAAA,IAAAkB,gBAAA;MACZhB,OAAO,CAACF,KAAK,CAAC,gCAAgC,EAAE,EAAAkB,gBAAA,GAAAlB,KAAK,CAACzB,QAAQ,cAAA2C,gBAAA,uBAAdA,gBAAA,CAAgBzC,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MACtFD,gBAAgB,CAAC,gCAAgC,EAAE,QAAQ,CAAC;IAChE;EACJ,CAAC;EAED,MAAMiD,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACvD,KAAK,EAAE;IACZ,IAAI;MACA,MAAMW,QAAQ,GAAG,MAAMtH,KAAK,CAACuH,GAAG,CAAC,GAAGtG,2BAA2B,eAAe,EAAE8F,WAAW,CAAC;MAC5FnF,eAAe,CAAC0F,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAC0C,IAAI,KAAK;QACvCxC,EAAE,EAAEwC,IAAI,CAACC,SAAS;QAClBC,UAAU,EAAEF,IAAI,CAACf,UAAU;QAC3BI,QAAQ,EAAEW,IAAI,CAACvC,QAAQ;QACvB0C,WAAW,EAAEH,IAAI,CAACI,WAAW,IAAI,KAAK;QACtCC,UAAU,EAAEL,IAAI,CAACM,SAAS,IAAI,KAAK;QACnCC,IAAI,EAAEP,IAAI,CAACQ,aAAa;QACxBC,IAAI,EAAET,IAAI,CAACU,eAAe;QAC1BC,MAAM,EAAEX,IAAI,CAACW,MAAM;QACnBC,iBAAiB,EAAEZ,IAAI,CAACY,iBAAiB,IAAI,EAAE;QAC/CC,aAAa,EAAEb,IAAI,CAACa,aAAa,IAAI,IAAI;QACzCnB,QAAQ,EAAEM,IAAI,CAACN;MACnB,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,OAAOd,KAAK,EAAE;MAAA,IAAAkC,gBAAA;MACZhC,OAAO,CAACF,KAAK,CAAC,kCAAkC,EAAE,EAAAkC,gBAAA,GAAAlC,KAAK,CAACzB,QAAQ,cAAA2D,gBAAA,uBAAdA,gBAAA,CAAgBzD,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MACxFD,gBAAgB,CAAC,8BAA8B,EAAE,QAAQ,CAAC;IAC9D;EACJ,CAAC;EAED,MAAMiE,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACvE,KAAK,EAAE;IACZ,IAAI;MACAsC,OAAO,CAACS,IAAI,CAAC,uEAAuE,CAAC;MACrF1H,cAAc,CAAC,EAAE,CAAC;IACtB,CAAC,CAAC,OAAO+G,KAAK,EAAE;MAAA,IAAAoC,gBAAA;MACZlC,OAAO,CAACF,KAAK,CAAC,8BAA8B,EAAE,EAAAoC,gBAAA,GAAApC,KAAK,CAACzB,QAAQ,cAAA6D,gBAAA,uBAAdA,gBAAA,CAAgB3D,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MACpFD,gBAAgB,CAAC,8BAA8B,EAAE,QAAQ,CAAC;IAC9D;EACJ,CAAC;EAED,MAAMmE,0BAA0B,GAAG,MAAOC,SAAS,IAAK;IACpD,IAAI,CAAC1E,KAAK,IAAI,CAAC0E,SAAS,EAAE;IAC1B,IAAI;MACA,MAAM/D,QAAQ,GAAG,MAAMtH,KAAK,CAACuH,GAAG,CAAC,GAAGvG,4BAA4B,sCAAsCqK,SAAS,EAAE,EAAEtE,WAAW,CAAC;MAC/HhB,wBAAwB,CAACuB,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAC6D,MAAM,KAAK;QAClD3D,EAAE,EAAE2D,MAAM,CAACC,OAAO;QAClBF,SAAS,EAAEC,MAAM,CAAClC,UAAU;QAC5BoC,QAAQ,EAAEF,MAAM,CAAC1D,QAAQ;QACzB4C,UAAU,EAAEc,MAAM,CAACb,SAAS;QAC5BC,IAAI,EAAEY,MAAM,CAACG,gBAAgB;QAC7BvF,SAAS,EAAEoF,MAAM,CAACI,SAAS;QAC3BvF,SAAS,EAAEmF,MAAM,CAACK,SAAS;QAC3BvF,KAAK,EAAEkF,MAAM,CAACM;MAClB,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,OAAO7C,KAAK,EAAE;MAAA,IAAA8C,gBAAA;MACZ5C,OAAO,CAACF,KAAK,CAAC,yCAAyC,EAAE,EAAA8C,gBAAA,GAAA9C,KAAK,CAACzB,QAAQ,cAAAuE,gBAAA,uBAAdA,gBAAA,CAAgBrE,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MAC/FnB,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC;MAC9BkB,gBAAgB,CAAC,2CAA2C,EAAE,QAAQ,CAAC;IAC3E;EACJ,CAAC;EAED,MAAM6E,4BAA4B,GAAG,MAAAA,CAAA,KAAY;IAC7C,IAAI,CAACnF,KAAK,IAAI,CAACf,eAAe,IAAI,CAACgB,IAAI,IAAI,CAACA,IAAI,CAAC4C,QAAQ,EAAE;MACvDvC,gBAAgB,CAAC,4CAA4C,EAAE,QAAQ,CAAC;MACxE;IACJ;IACA,IAAI,CAACjB,sBAAsB,CAACE,SAAS,IAAI,CAACF,sBAAsB,CAACG,SAAS,EAAE;MACxEc,gBAAgB,CAAC,2DAA2D,EAAE,SAAS,CAAC;MACxF;IACJ;IAEA,IAAI;MACA,MAAM8E,OAAO,GAAG;QACZ3C,UAAU,EAAExD,eAAe,CAAC+B,EAAE;QAC9BC,QAAQ,EAAEhB,IAAI,CAAC4C,QAAQ;QACvBiC,gBAAgB,EAAE,IAAIO,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACxDR,SAAS,EAAE1F,sBAAsB,CAACE,SAAS;QAC3CyF,SAAS,EAAE3F,sBAAsB,CAACG,SAAS;QAC3CyF,QAAQ,EAAE5F,sBAAsB,CAACI;MACrC,CAAC;MACD,MAAMpG,KAAK,CAACmM,IAAI,CAAC,GAAGnL,4BAA4B,2BAA2B,EAAE+K,OAAO,EAAEhF,WAAW,CAAC;MAClGE,gBAAgB,CAAC,2CAA2C,EAAE,SAAS,CAAC;MACxEhB,yBAAyB,CAAC;QAAEC,SAAS,EAAE,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAC,CAAC,CAAC,CAAC;MACxEgF,0BAA0B,CAACxF,eAAe,CAAC+B,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,OAAOoB,KAAK,EAAE;MAAA,IAAAqD,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACZrD,OAAO,CAACF,KAAK,CAAC,qCAAqC,EAAE,EAAAqD,gBAAA,GAAArD,KAAK,CAACzB,QAAQ,cAAA8E,gBAAA,uBAAdA,gBAAA,CAAgB5E,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MAC3FD,gBAAgB,CAAC,EAAAoF,gBAAA,GAAAtD,KAAK,CAACzB,QAAQ,cAAA+E,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB7E,IAAI,cAAA8E,qBAAA,uBAApBA,qBAAA,CAAsBpF,OAAO,KAAI,qCAAqC,EAAE,QAAQ,CAAC;IACtG;EACJ,CAAC;EAED,MAAMqF,sBAAsB,GAAG,MAAOC,OAAO,IAAK;IAC9C3G,kBAAkB,CAAC2G,OAAO,CAAC;IAC3B,MAAMpB,0BAA0B,CAACoB,OAAO,CAAC7E,EAAE,CAAC,CAAC,CAAC;IAC9ChC,yBAAyB,CAAC,IAAI,CAAC;EACnC,CAAC;EAED,MAAM8G,uBAAuB,GAAGA,CAAA,KAAM;IAClC9G,yBAAyB,CAAC,KAAK,CAAC;IAChCE,kBAAkB,CAAC,IAAI,CAAC;IACxBE,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9BE,yBAAyB,CAAC;MAAEC,SAAS,EAAE,EAAE;MAAEC,SAAS,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC,CAAC,CAAC;EAC5E,CAAC;EAED,MAAMsG,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,EAAE;MACNpJ,mBAAmB,CAACoJ,IAAI,CAAC;MACzB,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACrBvJ,sBAAsB,CAACqJ,MAAM,CAACG,MAAM,CAAC;MACzC,CAAC;MACDH,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;IAC9B,CAAC,MAAM;MACHpJ,mBAAmB,CAAC,IAAI,CAAC;MACzBE,sBAAsB,CAAC,IAAI,CAAC;IAChC;EACJ,CAAC;EAED,MAAM0J,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI,CAACzG,KAAK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC4C,QAAQ,KAAK,IAAI,IAAI5C,IAAI,CAAC4C,QAAQ,KAAKC,SAAS,EAAE;MAC1ER,OAAO,CAACS,IAAI,CAAC,6EAA6E,CAAC;MAC3F;IACJ;IACA,IAAI;MACA,MAAMpC,QAAQ,GAAG,MAAMtH,KAAK,CAACuH,GAAG,CAAC,GAAGvG,4BAA4B,gBAAgB4F,IAAI,CAAC4C,QAAQ,EAAE,EAAEzC,WAAW,CAAC;MAC7G,MAAMsG,WAAW,GAAG/F,QAAQ,CAACE,IAAI;MACjCtF,uBAAuB,CAACmL,WAAW,CAAC;MACpC/K,UAAU,CAAC+K,WAAW,CAACrF,GAAG,IAAI,EAAE,CAAC;MACjCxF,cAAc,CAAC6K,WAAW,CAACpF,OAAO,IAAI,EAAE,CAAC;MACzCvF,YAAY,CAAC2K,WAAW,CAAC5E,KAAK,IAAI,EAAE,CAAC;MACrC7F,cAAc,CAACyK,WAAW,CAAC3E,OAAO,IAAI,EAAE,CAAC;MACzC5F,sBAAsB,CAACqF,KAAK,CAACC,OAAO,CAACiF,WAAW,CAAChF,eAAe,CAAC,GAAGgF,WAAW,CAAChF,eAAe,CAACE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;MAChHvF,WAAW,CAACqK,WAAW,CAAC7E,IAAI,IAAI,EAAE,CAAC;MACnCtF,mBAAmB,CAACmK,WAAW,CAAC1E,YAAY,IAAI,EAAE,CAAC;MACnDvF,eAAe,CAACiK,WAAW,CAACzE,QAAQ,IAAI,EAAE,CAAC;MAC3CtF,aAAa,CAAC+J,WAAW,CAACxE,MAAM,IAAI,EAAE,CAAC;MACvCnF,sBAAsB,CAAC2J,WAAW,CAACvE,kBAAkB,IAAI,IAAI,CAAC;IAClE,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAuE,gBAAA;MACZrE,OAAO,CAACF,KAAK,CAAC,gCAAgC,EAAE,EAAAuE,gBAAA,GAAAvE,KAAK,CAACzB,QAAQ,cAAAgG,gBAAA,uBAAdA,gBAAA,CAAgB9F,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MACtFD,gBAAgB,CAAC,gCAAgC,EAAE,QAAQ,CAAC;IAChE;EACJ,CAAC;EAED,MAAMsG,yBAAyB,GAAG,MAAOZ,CAAC,IAAK;IAC3CA,CAAC,CAACa,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC7G,KAAK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC4C,QAAQ,KAAK,IAAI,IAAI5C,IAAI,CAAC4C,QAAQ,KAAKC,SAAS,EAAE;MAC1ExC,gBAAgB,CAAC,iDAAiD,EAAE,QAAQ,CAAC;MAC7E;IACJ;IAEA,MAAMwG,cAAc,GAAG;MACnB7F,QAAQ,EAAEhB,IAAI,CAAC4C,QAAQ;MACvB3B,MAAM,EAAE5F,oBAAoB,CAAC4F,MAAM;MACnCG,GAAG,EAAE3F,OAAO;MACZ4F,OAAO,EAAE1F,WAAW;MACpBkG,KAAK,EAAEhG,SAAS;MAChBiG,OAAO,EAAE/F,WAAW;MACpB0F,eAAe,EAAExF,mBAAmB,CAACqJ,KAAK,CAAC,GAAG,CAAC,CAACzE,GAAG,CAACiG,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAACF,CAAC,IAAIA,CAAC,KAAK,EAAE,CAAC;MACxFlF,IAAI,EAAEzF,QAAQ;MACd4F,YAAY,EAAE1F,gBAAgB;MAC9B2F,QAAQ,EAAEiF,QAAQ,CAAC1K,YAAY,EAAE,EAAE,CAAC;MACpC0F,MAAM,EAAEiF,UAAU,CAACzK,UAAU,CAAC,IAAI,GAAG;MACrCyF,kBAAkB,EAAErF;IACxB,CAAC;IAED,IAAI;MACA,MAAM6D,QAAQ,GAAG,MAAMtH,KAAK,CAAC+N,GAAG,CAAC,GAAG/M,4BAA4B,gBAAgB4F,IAAI,CAAC4C,QAAQ,EAAE,EAAEiE,cAAc,EAAE1G,WAAW,CAAC;MAC7H7E,uBAAuB,CAACoF,QAAQ,CAACE,IAAI,CAAC;MACtCpF,mBAAmB,CAAC,KAAK,CAAC;MAC1B6E,gBAAgB,CAAC,+BAA+B,CAAC;MACjDI,YAAY,CAAC,CAAC;IAClB,CAAC,CAAC,OAAO0B,KAAK,EAAE;MAAA,IAAAiF,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACZjF,OAAO,CAACF,KAAK,CAAC,yBAAyB,EAAE,EAAAiF,gBAAA,GAAAjF,KAAK,CAACzB,QAAQ,cAAA0G,gBAAA,uBAAdA,gBAAA,CAAgBxG,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MAC/ED,gBAAgB,CAAC,EAAAgH,gBAAA,GAAAlF,KAAK,CAACzB,QAAQ,cAAA2G,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBzG,IAAI,cAAA0G,qBAAA,uBAApBA,qBAAA,CAAsBhH,OAAO,KAAI,yBAAyB,EAAE,QAAQ,CAAC;IAC1F;EACJ,CAAC;EAED,MAAMiH,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACxH,KAAK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC4C,QAAQ,KAAK,IAAI,IAAI5C,IAAI,CAAC4C,QAAQ,KAAKC,SAAS,EAAE;MAC1ER,OAAO,CAACS,IAAI,CAAC,gEAAgE,CAAC;MAC9E;IACJ;IACA,IAAI;MACA,MAAMpC,QAAQ,GAAG,MAAMtH,KAAK,CAACuH,GAAG,CAAC,GAAGrG,+BAA+B,6BAA6B0F,IAAI,CAAC4C,QAAQ,EAAE,EAAEzC,WAAW,CAAC;MAC7HkC,OAAO,CAACU,GAAG,CAAC,8BAA8B,EAAErC,QAAQ,CAACE,IAAI,CAAC;MAE1D,MAAM4G,oBAAoB,GAAG9G,QAAQ,CAACE,IAAI,CACrCoG,MAAM,CAAClG,GAAG,IAAIA,GAAG,CAAC2G,eAAe,KAAK,IAAI,IAAI3G,GAAG,CAAC2G,eAAe,KAAK5E,SAAS,CAAC,CAChFhC,GAAG,CAACC,GAAG,IAAI;QACR,MAAMC,EAAE,GAAGG,MAAM,CAACJ,GAAG,CAAC2G,eAAe,CAAC;QACtC,IAAIC,KAAK,CAAC3G,EAAE,CAAC,EAAE;UACXsB,OAAO,CAACS,IAAI,CAAC,oDAAoDhC,GAAG,CAAC2G,eAAe,sEAAsE,CAAC;QAC/J;QACA,OAAO;UACH1G,EAAE,EAAEA,EAAE;UACN4G,QAAQ,EAAE7G,GAAG,CAAC8G,cAAc;UAC5BC,YAAY,EAAE/G,GAAG,CAACgH,YAAY;UAC9BC,UAAU,EAAEjH,GAAG,CAACkH,cAAc;UAC9BC,OAAO,EAAEnH,GAAG,CAACmH,OAAO;UACpBtE,WAAW,EAAE7C,GAAG,CAAC6C;QACrB,CAAC;MACL,CAAC,CAAC;MAENtB,OAAO,CAACU,GAAG,CAAC,uDAAuD,EAAEyE,oBAAoB,CAAC;MAC1FxK,YAAY,CAACwK,oBAAoB,CAAC;MAClCnH,gBAAgB,CAAC,iCAAiC,EAAE,SAAS,CAAC;IAClE,CAAC,CAAC,OAAO8B,KAAK,EAAE;MAAA,IAAA+F,iBAAA;MACZ7F,OAAO,CAACF,KAAK,CAAC,sCAAsC,EAAE,EAAA+F,iBAAA,GAAA/F,KAAK,CAACzB,QAAQ,cAAAwH,iBAAA,uBAAdA,iBAAA,CAAgBtH,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MAC5FD,gBAAgB,CAAC,4BAA4B,EAAE,QAAQ,CAAC;MACxDrD,YAAY,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC;EAED,MAAMmL,oBAAoB,GAAG,MAAOpC,CAAC,IAAK;IACtC,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACF,IAAI,EAAE;IAEX,IAAI,CAAChG,IAAI,IAAIA,IAAI,CAAC4C,QAAQ,KAAK,IAAI,IAAI5C,IAAI,CAAC4C,QAAQ,KAAKC,SAAS,EAAE;MAChExC,gBAAgB,CAAC,iDAAiD,EAAE,QAAQ,CAAC;MAC7E;IACJ;IAEAgC,OAAO,CAACU,GAAG,CAAC,4CAA4C,EAAE/C,IAAI,CAAC4C,QAAQ,CAAC;IAExE,MAAMwF,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEtC,IAAI,CAAC;IAC7BoC,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEtI,IAAI,CAAC4C,QAAQ,CAAC;IAC1CwF,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE,eAAe,CAAC;IAChDF,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC;IAEtC,IAAI;MACA,MAAMlP,KAAK,CAACmM,IAAI,CAAC,GAAGjL,+BAA+B,2BAA2B,EAAE8N,QAAQ,EAAE;QACtFhI,OAAO,EAAE;UACL,eAAe,EAAE,UAAUL,KAAK,EAAE;UAClC,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACFM,gBAAgB,CAAC,iCAAiC,EAAE,SAAS,CAAC;MAC9DG,UAAU,CAAC,MAAM;QACb+G,cAAc,CAAC,CAAC;MACpB,CAAC,EAAE,GAAG,CAAC;IACX,CAAC,CAAC,OAAOpF,KAAK,EAAE;MAAA,IAAAoG,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACZpG,OAAO,CAACF,KAAK,CAAC,2BAA2B,EAAE,EAAAoG,iBAAA,GAAApG,KAAK,CAACzB,QAAQ,cAAA6H,iBAAA,uBAAdA,iBAAA,CAAgB3H,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MACjFD,gBAAgB,CAAC,0BAA0B,IAAI,EAAAmI,iBAAA,GAAArG,KAAK,CAACzB,QAAQ,cAAA8H,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgB5H,IAAI,cAAA6H,qBAAA,uBAApBA,qBAAA,CAAsBnI,OAAO,KAAI6B,KAAK,CAAC7B,OAAO,CAAC,EAAE,QAAQ,CAAC;IAC7G;EACJ,CAAC;EAED,MAAMoI,sBAAsB,GAAG,MAAAA,CAAOC,KAAK,EAAEhB,QAAQ,KAAK;IACtD,MAAMiB,YAAY,GAAG1H,MAAM,CAACyH,KAAK,CAAC;IAElC,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK9F,SAAS,IAAI6E,KAAK,CAACkB,YAAY,CAAC,EAAE;MAC9DvG,OAAO,CAACF,KAAK,CAAC,mDAAmD,EAAEwG,KAAK,CAAC;MACzEtI,gBAAgB,CAAC,4DAA4D,EAAE,QAAQ,CAAC;MACxF;IACJ;IAEA,MAAMwI,WAAW,GAAG,GAAGvO,+BAA+B,+BAA+BsO,YAAY,EAAE;IACnGvG,OAAO,CAACU,GAAG,CAAC,2CAA2C,EAAE8F,WAAW,CAAC;IAErE,IAAI;MACA,MAAMnI,QAAQ,GAAG,MAAMtH,KAAK,CAACuH,GAAG,CAACkI,WAAW,EAAE;QAC1C,GAAG1I,WAAW;QACd2I,YAAY,EAAE;MAClB,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACtI,QAAQ,CAACE,IAAI,CAAC,EAAE;QAAEL,IAAI,EAAEG,QAAQ,CAACN,OAAO,CAAC,cAAc;MAAE,CAAC,CAAC;MAClF,MAAM6I,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;MAC5C,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;MACfI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE9B,QAAQ,CAAC;MACvC2B,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;MACZP,IAAI,CAACQ,MAAM,CAAC,CAAC;MACbX,MAAM,CAACC,GAAG,CAACW,eAAe,CAACb,GAAG,CAAC;MAE/B5I,gBAAgB,CAAC,4BAA4B,EAAE,SAAS,CAAC;IAC7D,CAAC,CAAC,OAAO8B,KAAK,EAAE;MAAA,IAAA4H,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACZ5H,OAAO,CAACF,KAAK,CAAC,mCAAmC,EAAE,EAAA4H,iBAAA,GAAA5H,KAAK,CAACzB,QAAQ,cAAAqJ,iBAAA,uBAAdA,iBAAA,CAAgBnJ,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MACzFD,gBAAgB,CAAC,sCAAsC,IAAI,EAAA2J,iBAAA,GAAA7H,KAAK,CAACzB,QAAQ,cAAAsJ,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBpJ,IAAI,cAAAqJ,qBAAA,uBAApBA,qBAAA,CAAsB3J,OAAO,KAAI6B,KAAK,CAAC7B,OAAO,CAAC,EAAE,QAAQ,CAAC;IACzH;EACJ,CAAC;EAGD,MAAM4J,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACnK,KAAK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACiB,MAAM,KAAK,IAAI,IAAIjB,IAAI,CAACiB,MAAM,KAAK4B,SAAS,EAAE;MACtER,OAAO,CAACS,IAAI,CAAC,kEAAkE,CAAC;MAChF;IACJ;IACA,IAAI;MACA,MAAMpC,QAAQ,GAAG,MAAMtH,KAAK,CAACuH,GAAG,CAAC,GAAGrG,+BAA+B,4BAA4B0F,IAAI,CAACiB,MAAM,kBAAkB,EAAEd,WAAW,CAAC;MAC1I,MAAMgK,mBAAmB,GAAGzJ,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACuJ,GAAG,KAAK;QAClDrJ,EAAE,EAAEqJ,GAAG,CAACC,QAAQ;QAChBC,QAAQ,EAAEpJ,MAAM,CAACkJ,GAAG,CAACE,QAAQ,CAAC;QAC9BC,UAAU,EAAEH,GAAG,CAACG,UAAU;QAC1BC,SAAS,EAAEJ,GAAG,CAACI,SAAS;QACxBC,UAAU,EAAEvJ,MAAM,CAACkJ,GAAG,CAACK,UAAU,CAAC;QAClCC,YAAY,EAAEN,GAAG,CAACM,YAAY;QAC9BC,WAAW,EAAEP,GAAG,CAACO,WAAW;QAC5BrN,OAAO,EAAE8M,GAAG,CAAC9M,OAAO;QACpBC,OAAO,EAAE6M,GAAG,CAAC7M,OAAO;QACpBqN,SAAS,EAAER,GAAG,CAACQ,SAAS;QACxBC,OAAO,EAAET,GAAG,CAACS,OAAO,IAAI;MAC5B,CAAC,CAAC,CAAC;MACH3N,WAAW,CAACiN,mBAAmB,CAAC;MAChC9J,gBAAgB,CAAC,gCAAgC,EAAE,SAAS,CAAC;IACjE,CAAC,CAAC,OAAO8B,KAAK,EAAE;MAAA,IAAA2I,iBAAA;MACZzI,OAAO,CAACF,KAAK,CAAC,qCAAqC,EAAE,EAAA2I,iBAAA,GAAA3I,KAAK,CAACzB,QAAQ,cAAAoK,iBAAA,uBAAdA,iBAAA,CAAgBlK,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MAC3FD,gBAAgB,CAAC,2BAA2B,EAAE,QAAQ,CAAC;IAC3D;EACJ,CAAC;EAED,MAAM0K,sBAAsB,GAAIhF,CAAC,IAAK;IAClC,MAAM;MAAE5E,IAAI;MAAE6J;IAAM,CAAC,GAAGjF,CAAC,CAACE,MAAM;IAChC7I,aAAa,CAAC6N,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAAC9J,IAAI,GAAG6J;IAAM,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAAClL,IAAI,IAAIA,IAAI,CAACiB,MAAM,KAAK,IAAI,IAAIjB,IAAI,CAACiB,MAAM,KAAK4B,SAAS,EAAE;MAC5DxC,gBAAgB,CAAC,qDAAqD,EAAE,QAAQ,CAAC;MACjF;IACJ;IACA,IAAI,CAAClD,UAAU,CAACE,WAAW,IAAI,CAACF,UAAU,CAACG,OAAO,IAAI,CAACH,UAAU,CAACI,OAAO,EAAE;MACvE8C,gBAAgB,CAAC,oCAAoC,EAAE,SAAS,CAAC;MACjE;IACJ;IAEA,IAAI;MACA,MAAM8K,WAAW,GAAG;QAChBb,QAAQ,EAAEtK,IAAI,CAACiB,MAAM;QACrBsJ,UAAU,EAAE,QAAQ;QACpBE,UAAU,EAAEvJ,MAAM,CAAC/D,UAAU,CAACE,WAAW,CAAC;QAC1CqN,YAAY,EAAE,UAAU;QACxBpN,OAAO,EAAEH,UAAU,CAACG,OAAO;QAC3BC,OAAO,EAAEJ,UAAU,CAACI;MACxB,CAAC;MACD,MAAMnE,KAAK,CAACmM,IAAI,CAAC,GAAGjL,+BAA+B,qBAAqB,EAAE6Q,WAAW,EAAEhL,WAAW,CAAC;MACnGE,gBAAgB,CAAC,4BAA4B,EAAE,SAAS,CAAC;MACzDjD,aAAa,CAAC;QAAEC,WAAW,EAAE,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;MAC5D2M,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC,OAAO/H,KAAK,EAAE;MAAA,IAAAiJ,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACZjJ,OAAO,CAACF,KAAK,CAAC,wBAAwB,EAAE,EAAAiJ,iBAAA,GAAAjJ,KAAK,CAACzB,QAAQ,cAAA0K,iBAAA,uBAAdA,iBAAA,CAAgBxK,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MAC9ED,gBAAgB,CAAC,0BAA0B,IAAI,EAAAgL,iBAAA,GAAAlJ,KAAK,CAACzB,QAAQ,cAAA2K,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBzK,IAAI,cAAA0K,qBAAA,uBAApBA,qBAAA,CAAsBhL,OAAO,KAAI6B,KAAK,CAAC7B,OAAO,CAAC,EAAE,QAAQ,CAAC;IAC7G;EACJ,CAAC;EAED,MAAMiL,wBAAwB,GAAIxF,CAAC,IAAK;IACpCtI,eAAe,CAACwN,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE1N,OAAO,EAAEwI,CAAC,CAACE,MAAM,CAAC+E;IAAM,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,MAAMQ,WAAW,GAAG,MAAO9N,SAAS,IAAK;IACrC,IAAI,CAACsC,IAAI,IAAIA,IAAI,CAACiB,MAAM,KAAK,IAAI,IAAIjB,IAAI,CAACiB,MAAM,KAAK4B,SAAS,EAAE;MAC5DxC,gBAAgB,CAAC,8CAA8C,EAAE,QAAQ,CAAC;MAC1E;IACJ;IACA,IAAI,CAAC7C,YAAY,CAACD,OAAO,EAAE;MACvB8C,gBAAgB,CAAC,gCAAgC,EAAE,SAAS,CAAC;MAC7D;IACJ;IACA,IAAI;MACA,MAAMjH,KAAK,CAACmM,IAAI,CAAC,GAAGjL,+BAA+B,eAAeoD,SAAS,WAAW,EAAE;QACpF4M,QAAQ,EAAEtK,IAAI,CAACiB,MAAM;QACrBuJ,SAAS,EAAE,GAAGxK,IAAI,CAACoB,GAAG,IAAI,EAAE,IAAIpB,IAAI,CAACqB,OAAO,IAAI,EAAE,EAAE,CAAC0F,IAAI,CAAC,CAAC;QAC3DwD,UAAU,EAAE,QAAQ;QACpBhN,OAAO,EAAEC,YAAY,CAACD,OAAO;QAC7BqN,SAAS,EAAE,IAAIxF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACtC,CAAC,EAAElF,WAAW,CAAC;MACfE,gBAAgB,CAAC,0BAA0B,EAAE,SAAS,CAAC;MACvD5C,eAAe,CAAC;QAAEC,SAAS,EAAE,EAAE;QAAEH,OAAO,EAAE;MAAG,CAAC,CAAC;MAC/C2M,aAAa,CAAC,CAAC;MACftM,kBAAkB,CAACqN,IAAI,IAAI;QACvB,IAAI,CAACA,IAAI,EAAE,OAAO,IAAI;QACtB,OAAO;UACH,GAAGA,IAAI;UACPJ,OAAO,EAAE,CAAC,IAAII,IAAI,CAACJ,OAAO,IAAI,EAAE,CAAC,EAAE;YAC/BP,QAAQ,EAAEtK,IAAI,CAACiB,MAAM;YACrBuJ,SAAS,EAAE,GAAGxK,IAAI,CAACoB,GAAG,IAAI,EAAE,IAAIpB,IAAI,CAACqB,OAAO,IAAI,EAAE,EAAE,CAAC0F,IAAI,CAAC,CAAC;YAC3DwD,UAAU,EAAE,QAAQ;YACpBhN,OAAO,EAAEC,YAAY,CAACD,OAAO;YAC7BqN,SAAS,EAAE,IAAIxF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;UACtC,CAAC;QACL,CAAC;MACL,CAAC,CAAC;IACN,CAAC,CAAC,OAAOlD,KAAK,EAAE;MAAA,IAAAsJ,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACZtJ,OAAO,CAACF,KAAK,CAAC,sBAAsB,EAAE,EAAAsJ,iBAAA,GAAAtJ,KAAK,CAACzB,QAAQ,cAAA+K,iBAAA,uBAAdA,iBAAA,CAAgB7K,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MAC5ED,gBAAgB,CAAC,wBAAwB,IAAI,EAAAqL,iBAAA,GAAAvJ,KAAK,CAACzB,QAAQ,cAAAgL,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgB9K,IAAI,cAAA+K,qBAAA,uBAApBA,qBAAA,CAAsBrL,OAAO,KAAI6B,KAAK,CAAC7B,OAAO,CAAC,EAAE,QAAQ,CAAC;IAC3G;EACJ,CAAC;EAED,MAAMsL,iBAAiB,GAAItL,OAAO,IAAK;IACnC1C,kBAAkB,CAAC0C,OAAO,CAAC;EAC/B,CAAC;EAED,MAAMuL,iBAAiB,GAAGA,CAAA,KAAM;IAC5BjO,kBAAkB,CAAC,IAAI,CAAC;IACxBH,eAAe,CAAC;MAAEC,SAAS,EAAE,EAAE;MAAEH,OAAO,EAAE;IAAG,CAAC,CAAC;EACnD,CAAC;EAED,MAAMuO,gBAAgB,GAAG,MAAO/F,CAAC,IAAK;IAClCA,CAAC,CAACa,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC5G,IAAI,IAAIA,IAAI,CAAC4C,QAAQ,KAAK,IAAI,IAAI5C,IAAI,CAAC4C,QAAQ,KAAKC,SAAS,EAAE;MAChExC,gBAAgB,CAAC,iDAAiD,EAAE,QAAQ,CAAC;MAC7E;IACJ;IACA,IAAI,CAACZ,WAAW,IAAI,CAACE,WAAW,EAAE;MAC9BU,gBAAgB,CAAC,oDAAoD,EAAE,SAAS,CAAC;MACjF;IACJ;IAEA,IAAI;MACA,MAAM0L,QAAQ,GAAG;QACb/K,QAAQ,EAAEhB,IAAI,CAAC4C,QAAQ;QACvBO,KAAK,EAAE1D,WAAW;QAClB2D,OAAO,EAAEzD,WAAW,GAAG,KAAK;QAC5BuD,aAAa,EAAErD,kBAAkB,CAAC;MACtC,CAAC;MACDwC,OAAO,CAACU,GAAG,CAAC,iCAAiC,EAAEgJ,QAAQ,CAAC;MAExD,MAAM3S,KAAK,CAACmM,IAAI,CAAC,GAAGlL,2BAA2B,cAAc,EAAE0R,QAAQ,EAAE5L,WAAW,CAAC;MACrFE,gBAAgB,CAAC,4BAA4B,EAAE,SAAS,CAAC;MACzDX,cAAc,CAAC,EAAE,CAAC;MAClBE,cAAc,CAAC,EAAE,CAAC;MAClBE,qBAAqB,CAAC,UAAU,CAAC,CAAC,CAAC;MACnC6C,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOR,KAAK,EAAE;MAAA,IAAA6J,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACZ7J,OAAO,CAACF,KAAK,CAAC,sBAAsB,EAAE,EAAA6J,iBAAA,GAAA7J,KAAK,CAACzB,QAAQ,cAAAsL,iBAAA,uBAAdA,iBAAA,CAAgBpL,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MAC5ED,gBAAgB,CAAC,0BAA0B,EAAA4L,iBAAA,GAAA9J,KAAK,CAACzB,QAAQ,cAAAuL,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBrL,IAAI,cAAAsL,qBAAA,uBAApBA,qBAAA,CAAsB5L,OAAO,KAAI6B,KAAK,CAAC7B,OAAO,EAAE,EAAE,QAAQ,CAAC;IAC1G;EACJ,CAAC;EAED,MAAM6L,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACvC,IAAI,CAACrM,KAAK,EAAE;IACZ,IAAI;MACA,MAAM3G,KAAK,CAACiT,MAAM,CAAC,GAAGhS,2BAA2B,gBAAgB+R,MAAM,EAAE,EAAEjM,WAAW,CAAC;MACvFE,gBAAgB,CAAC,4BAA4B,EAAE,SAAS,CAAC;MACzDsC,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOR,KAAK,EAAE;MAAA,IAAAmK,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACZnK,OAAO,CAACF,KAAK,CAAC,sBAAsB,EAAE,EAAAmK,iBAAA,GAAAnK,KAAK,CAACzB,QAAQ,cAAA4L,iBAAA,uBAAdA,iBAAA,CAAgB1L,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MAC5ED,gBAAgB,CAAC,0BAA0B,EAAAkM,iBAAA,GAAApK,KAAK,CAACzB,QAAQ,cAAA6L,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgB3L,IAAI,cAAA4L,qBAAA,uBAApBA,qBAAA,CAAsBlM,OAAO,KAAI6B,KAAK,CAAC7B,OAAO,EAAE,EAAE,QAAQ,CAAC;IAC1G;EACJ,CAAC;EAED,MAAMmM,sBAAsB,GAAG,MAAAA,CAAOL,MAAM,EAAEM,YAAY,KAAK;IAC3D,IAAI,CAAC3M,KAAK,EAAE;IAEZsC,OAAO,CAACU,GAAG,CAAC,6BAA6BqJ,MAAM,eAAeM,YAAY,EAAE,CAAC;IAE7E,IAAI;MACA,MAAMC,YAAY,GAAG1R,KAAK,CAAC2R,IAAI,CAAC5J,IAAI,IAAIA,IAAI,CAACjC,EAAE,KAAKqL,MAAM,CAAC;MAC3D,IAAI,CAACO,YAAY,EAAE;QACftM,gBAAgB,CAAC,4BAA4B,EAAE,QAAQ,CAAC;QACxD;MACJ;MAEA,MAAM8E,OAAO,GAAG;QACZlC,QAAQ,EAAE0J,YAAY,CAAC5L,EAAE;QACzBC,QAAQ,EAAE2L,YAAY,CAAC/J,QAAQ;QAC/BO,KAAK,EAAEwJ,YAAY,CAACxJ,KAAK;QACzBC,OAAO,EAAEuJ,YAAY,CAACvJ,OAAO;QAC7BF,aAAa,EAAEwJ,YAAY,CAAC;MAChC,CAAC;MACDrK,OAAO,CAACU,GAAG,CAAC,uDAAuD,EAAEoC,OAAO,CAAC,CAAC,CAAC;;MAE/E,MAAMzE,QAAQ,GAAG,MAAMtH,KAAK,CAAC+N,GAAG,CAAC,GAAG9M,2BAA2B,gBAAgB+R,MAAM,EAAE,EAAEjH,OAAO,EAAEhF,WAAW,CAAC;MAC9GkC,OAAO,CAACU,GAAG,CAAC,6BAA6B,EAAErC,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC3DP,gBAAgB,CAAC,0BAA0BqM,YAAY,CAACG,WAAW,CAAC,CAAC,GAAG,EAAE,SAAS,CAAC;MACpFlK,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOR,KAAK,EAAE;MAAA,IAAA2K,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACZ3K,OAAO,CAACF,KAAK,CAAC,6BAA6B,EAAE,EAAA2K,iBAAA,GAAA3K,KAAK,CAACzB,QAAQ,cAAAoM,iBAAA,uBAAdA,iBAAA,CAAgBlM,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MACnFD,gBAAgB,CAAC,iCAAiC,EAAA0M,iBAAA,GAAA5K,KAAK,CAACzB,QAAQ,cAAAqM,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBnM,IAAI,cAAAoM,qBAAA,uBAApBA,qBAAA,CAAsB1M,OAAO,KAAI6B,KAAK,CAAC7B,OAAO,EAAE,EAAE,QAAQ,CAAC;IACjH;EACJ,CAAC;EAGD9G,SAAS,CAAC,MAAM;IACZ6I,OAAO,CAACU,GAAG,CAAC,mCAAmC,EAAEhD,KAAK,EAAE,OAAO,EAAEC,IAAI,EAAE,cAAc,EAAEE,WAAW,CAAC;IACnG,IAAI,CAACA,WAAW,IAAIH,KAAK,IAAIC,IAAI,IAAIA,IAAI,CAAC4C,QAAQ,EAAE;MAChDP,OAAO,CAACU,GAAG,CAAC,mEAAmE,EAAE/C,IAAI,CAAC4C,QAAQ,CAAC;MAC/FnC,YAAY,CAAC,CAAC;MACd6B,aAAa,CAAC,CAAC;MACfK,UAAU,CAAC,CAAC;MACZW,iBAAiB,CAAC,CAAC;MACnBgB,gBAAgB,CAAC,CAAC;MAClBkC,yBAAyB,CAAC,CAAC;MAC3Be,cAAc,CAAC,CAAC;MAChB2C,aAAa,CAAC,CAAC;IACnB,CAAC,MAAM,IAAI,CAAChK,WAAW,EAAE;MACrBmC,OAAO,CAACU,GAAG,CAAC,6EAA6E,EAAE;QAAEhD,KAAK;QAAEC,IAAI;QAAE4C,QAAQ,EAAE5C,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE4C,QAAQ;QAAE1C;MAAY,CAAC,CAAC;IACtJ;EACJ,CAAC,EAAE,CAACH,KAAK,EAAEC,IAAI,EAAEE,WAAW,CAAC,CAAC;EAE9BmC,OAAO,CAACU,GAAG,CAAC,sCAAsC,EAAEhD,KAAK,EAAE,OAAO,EAAEC,IAAI,EAAE,gBAAgB,EAAEA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE4C,QAAQ,EAAE,cAAc,EAAE1C,WAAW,CAAC;EACxI,IAAIA,WAAW,EAAE;IACbmC,OAAO,CAACU,GAAG,CAAC,kDAAkD,CAAC;IAC/D,oBACI/I,OAAA;MAAKiT,SAAS,EAAC,kDAAkD;MAACC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAQ,CAAE;MAAAC,QAAA,gBAC5FpT,OAAA;QAAKiT,SAAS,EAAC,6BAA6B;QAACI,IAAI,EAAC,QAAQ;QAAAD,QAAA,eACtDpT,OAAA;UAAMiT,SAAS,EAAC,iBAAiB;UAAAG,QAAA,EAAC;QAAU;UAAAzF,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACNxT,OAAA;QAAGiT,SAAS,EAAC,MAAM;QAAAG,QAAA,EAAC;MAAyB;QAAAzF,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAA7F,QAAA,EAAA2F,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAEd;EACA,IAAI,CAACzN,KAAK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC4C,QAAQ,KAAK,IAAI,IAAI5C,IAAI,CAAC4C,QAAQ,KAAKC,SAAS,EAAE;IAC1ER,OAAO,CAACU,GAAG,CAAC,2EAA2E,EAAE;MAAEhD,KAAK,EAAE,CAAC,CAACA,KAAK;MAAEC,IAAI,EAAE,CAAC,CAACA,IAAI;MAAEyN,eAAe,EAAE,CAAAzN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE4C,QAAQ,MAAK,IAAI,IAAI,CAAA5C,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE4C,QAAQ,MAAKC;IAAU,CAAC,CAAC;IACpM,oBACI7I,OAAA;MAAKiT,SAAS,EAAC,kDAAkD;MAACC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAQ,CAAE;MAAAC,QAAA,gBAC5FpT,OAAA;QAAKiT,SAAS,EAAC,6BAA6B;QAACI,IAAI,EAAC,QAAQ;QAAAD,QAAA,eACtDpT,OAAA;UAAMiT,SAAS,EAAC,iBAAiB;UAAAG,QAAA,EAAC;QAAU;UAAAzF,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACNxT,OAAA;QAAGiT,SAAS,EAAC,MAAM;QAAAG,QAAA,EAAC;MAA8C;QAAAzF,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAA7F,QAAA,EAAA2F,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC;EAEd;EAEA,MAAME,eAAe,GAAG1N,IAAI,CAAC4C,QAAQ;EACrC,MAAM+K,mBAAmB,GAAG3N,IAAI,CAACiB,MAAM;EACvCoB,OAAO,CAACU,GAAG,CAAC,0EAA0E,EAAE2K,eAAe,EAAE,kBAAkB,EAAEC,mBAAmB,CAAC;EAGjJ,MAAMC,mBAAmB,GAAG7S,YAAY,CAACiM,MAAM,CAC1C6G,WAAW,IAAKA,WAAW,CAACjL,QAAQ,KAAK8K,eAC9C,CAAC;EAED,MAAMI,0BAA0B,GAAG,IAAIC,GAAG,CACtCH,mBAAmB,CAAC/M,GAAG,CAAE0C,IAAI,IAAKA,IAAI,CAACE,UAAU,CACrD,CAAC;EACD,MAAMuK,UAAU,GAAGnT,QAAQ,CAACmM,MAAM,CAAEpB,OAAO,IACvCkI,0BAA0B,CAACG,GAAG,CAACrI,OAAO,CAAC7E,EAAE,CAC7C,CAAC;EAED,MAAMmN,6BAA6B,GAAG,MAAAA,CAAOnN,EAAE,EAAEoN,SAAS,KAAK;IAC3D,IAAI;MACA,MAAMC,mBAAmB,GAAGrT,YAAY,CAAC6R,IAAI,CAACrJ,IAAI,IAAIA,IAAI,CAACxC,EAAE,KAAKA,EAAE,CAAC;MACrE,IAAI,CAACqN,mBAAmB,EAAE;QACtB/N,gBAAgB,CAAC,0CAA0C,EAAE,QAAQ,CAAC;QACtE;MACJ;MAEAgC,OAAO,CAACU,GAAG,CAAC,4CAA4C,EAAEqL,mBAAmB,CAAC;MAC9E,MAAMC,cAAc,GAAGD,mBAAmB,CAACnL,QAAQ;MACnDZ,OAAO,CAACU,GAAG,CAAC,kBAAkB,EAAEsL,cAAc,CAAC;MAE/C,IAAIA,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAKxL,SAAS,EAAE;QACzDxC,gBAAgB,CAAC,mGAAmG,EAAE,QAAQ,CAAC;QAC/H;MACJ;MAEA,MAAMiO,YAAY,GAAGH,SAAS,KAAK,UAAU,GAAIC,mBAAmB,CAAChK,aAAa,IAAI,GAAG,GAAIgK,mBAAmB,CAAChK,aAAa;MAG9H,MAAMmK,kBAAkB,GAAG;QACvB/K,SAAS,EAAE4K,mBAAmB,CAACrN,EAAE;QACjCyB,UAAU,EAAE4L,mBAAmB,CAAC3K,UAAU;QAC1CzC,QAAQ,EAAEoN,mBAAmB,CAACxL,QAAQ;QACtCmB,aAAa,EAAEqK,mBAAmB,CAACtK,IAAI,CAACwB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrDrB,eAAe,EAAEmK,mBAAmB,CAACpK,IAAI,CAACsB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvDpB,MAAM,EAAEiK,SAAS;QACjBhK,iBAAiB,EAAEiK,mBAAmB,CAACjK,iBAAiB;QACxDC,aAAa,EAAEkK,YAAY;QAC3BrL,QAAQ,EAAEoL;MACd,CAAC;MAED,MAAM3N,QAAQ,GAAG,MAAMtH,KAAK,CAAC+N,GAAG,CAAC,GAAG9M,2BAA2B,iBAAiB0G,EAAE,EAAE,EAAEwN,kBAAkB,EAAEpO,WAAW,CAAC;MACtH,MAAMqO,WAAW,GAAG;QAChBzN,EAAE,EAAEL,QAAQ,CAACE,IAAI,CAAC4C,SAAS;QAC3BC,UAAU,EAAE/C,QAAQ,CAACE,IAAI,CAAC4B,UAAU;QACpCI,QAAQ,EAAElC,QAAQ,CAACE,IAAI,CAACI,QAAQ;QAChC0C,WAAW,EAAEhD,QAAQ,CAACE,IAAI,CAAC+C,WAAW,IAAI,KAAK;QAC/CC,UAAU,EAAElD,QAAQ,CAACE,IAAI,CAACiD,SAAS,IAAI,KAAK;QAC5CC,IAAI,EAAEpD,QAAQ,CAACE,IAAI,CAACmD,aAAa;QACjCC,IAAI,EAAEtD,QAAQ,CAACE,IAAI,CAACqD,eAAe;QACnCC,MAAM,EAAExD,QAAQ,CAACE,IAAI,CAACsD,MAAM;QAC5BC,iBAAiB,EAAEzD,QAAQ,CAACE,IAAI,CAACuD,iBAAiB,IAAI,EAAE;QACxDC,aAAa,EAAE1D,QAAQ,CAACE,IAAI,CAACwD,aAAa,IAAI,IAAI;QAClDnB,QAAQ,EAAEvC,QAAQ,CAACE,IAAI,CAACqC;MAC5B,CAAC;MACDjI,eAAe,CAACD,YAAY,CAAC8F,GAAG,CAAC0C,IAAI,IAAKA,IAAI,CAACxC,EAAE,KAAKA,EAAE,GAAGyN,WAAW,GAAGjL,IAAK,CAAC,CAAC;MAChFe,gBAAgB,CAAC,CAAC;MAClBjE,gBAAgB,CAAC,iCAAiC8N,SAAS,GAAG,EAAE,MAAM,CAAC;IAC3E,CAAC,CAAC,OAAOhM,KAAK,EAAE;MAAA,IAAAsM,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACZtM,OAAO,CAACF,KAAK,CAAC,oCAAoC,EAAE,EAAAsM,iBAAA,GAAAtM,KAAK,CAACzB,QAAQ,cAAA+N,iBAAA,uBAAdA,iBAAA,CAAgB7N,IAAI,KAAIuB,KAAK,CAAC7B,OAAO,CAAC;MAC1FD,gBAAgB,CAAC,EAAAqO,iBAAA,GAAAvM,KAAK,CAACzB,QAAQ,cAAAgO,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgB9N,IAAI,cAAA+N,qBAAA,uBAApBA,qBAAA,CAAsBrO,OAAO,KAAI,oCAAoC,EAAE,QAAQ,CAAC;IACrG;EACJ,CAAC;EAED,MAAMsO,kBAAkB,GAAGZ,UAAU,CAAChH,MAAM,CAACpB,OAAO,IAC/CA,OAAO,CAACzE,IAAI,IAAIyE,OAAO,CAACzE,IAAI,CAAC0L,WAAW,CAAC,CAAC,CAACgC,QAAQ,CAAC1Q,iBAAiB,CAAC0O,WAAW,CAAC,CAAC,CAAC,IACpFjH,OAAO,CAAC/D,KAAK,IAAI+D,OAAO,CAAC/D,KAAK,CAACgL,WAAW,CAAC,CAAC,CAACgC,QAAQ,CAAC1Q,iBAAiB,CAAC0O,WAAW,CAAC,CAAC,CAAE,IACvFjH,OAAO,CAACnD,KAAK,IAAImD,OAAO,CAACnD,KAAK,CAACoK,WAAW,CAAC,CAAC,CAACgC,QAAQ,CAAC1Q,iBAAiB,CAAC0O,WAAW,CAAC,CAAC,CAC1F,CAAC;EAED,MAAMiC,oBAAoB,GAAGrQ,qBAAqB,GAAGI,YAAY;EACjE,MAAMkQ,qBAAqB,GAAGD,oBAAoB,GAAGjQ,YAAY;EACjE,MAAMmQ,iBAAiB,GAAGJ,kBAAkB,CAACK,KAAK,CAACF,qBAAqB,EAAED,oBAAoB,CAAC;EAC/F,MAAMI,mBAAmB,GAAGC,IAAI,CAACC,IAAI,CAACR,kBAAkB,CAAClN,MAAM,GAAG7C,YAAY,CAAC;EAE/E,MAAMwQ,sBAAsB,GAAGzB,mBAAmB,CAAC5G,MAAM,CAAC6G,WAAW,IAAI;IACrE,MAAMyB,aAAa,GAAIzB,WAAW,CAACnK,WAAW,IAAImK,WAAW,CAACnK,WAAW,CAACmJ,WAAW,CAAC,CAAC,CAACgC,QAAQ,CAACxQ,qBAAqB,CAACwO,WAAW,CAAC,CAAC,CAAC,IAChIgB,WAAW,CAAC3J,MAAM,IAAI2J,WAAW,CAAC3J,MAAM,CAAC2I,WAAW,CAAC,CAAC,CAACgC,QAAQ,CAACxQ,qBAAqB,CAACwO,WAAW,CAAC,CAAC,CAAE,IACrGgB,WAAW,CAAC/J,IAAI,IAAI,IAAIsB,IAAI,CAACyI,WAAW,CAAC/J,IAAI,CAAC,CAACyL,kBAAkB,CAAC,CAAC,CAACV,QAAQ,CAACxQ,qBAAqB,CAAE;IAEzG,MAAMmR,mBAAmB,GAAGjR,uBAAuB,KAAK,KAAK,IAAIsP,WAAW,CAAC3J,MAAM,KAAK3F,uBAAuB;IAE/G,OAAO+Q,aAAa,IAAIE,mBAAmB;EAC/C,CAAC,CAAC;EAEF,MAAMC,yBAAyB,GAAG9Q,yBAAyB,GAAGE,YAAY;EAC1E,MAAM6Q,0BAA0B,GAAGD,yBAAyB,GAAG5Q,YAAY;EAC3E,MAAM8Q,qBAAqB,GAAGN,sBAAsB,CAACJ,KAAK,CAACS,0BAA0B,EAAED,yBAAyB,CAAC;EACjH,MAAMG,wBAAwB,GAAGT,IAAI,CAACC,IAAI,CAACC,sBAAsB,CAAC3N,MAAM,GAAG7C,YAAY,CAAC;EAGxF,MAAMgR,UAAU,GAAGA,CAAC;IAAEhR,YAAY;IAAEiR,UAAU;IAAEC,WAAW;IAAEC;EAAS,CAAC,KAAK;IACxE,MAAMC,WAAW,GAAG,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIf,IAAI,CAACC,IAAI,CAACU,UAAU,GAAGjR,YAAY,CAAC,EAAEqR,CAAC,EAAE,EAAE;MAC5DD,WAAW,CAACE,IAAI,CAACD,CAAC,CAAC;IACvB;IAEA,oBACIlW,OAAA;MAAAoT,QAAA,eACIpT,OAAA;QAAIiT,SAAS,EAAC,wCAAwC;QAAAG,QAAA,EACjD6C,WAAW,CAACpP,GAAG,CAACuP,MAAM,iBACnBpW,OAAA;UAAiBiT,SAAS,EAAE,aAAa8C,WAAW,KAAKK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;UAAAhD,QAAA,eAC9EpT,OAAA;YAAQqW,OAAO,EAAEA,CAAA,KAAML,QAAQ,CAACI,MAAM,CAAE;YAACnD,SAAS,EAAC,WAAW;YAAAG,QAAA,EACzDgD;UAAM;YAAAzI,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAHJ4C,MAAM;UAAAzI,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIX,CACP;MAAC;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAA7F,QAAA,EAAA2F,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEd,CAAC;EAGD,MAAM8C,aAAa,GAAGA,CAAA,KAAM;IACxB,QAAQ7V,SAAS;MACb,KAAK,UAAU;QACX,oBACIT,OAAA;UAAAoT,QAAA,gBACIpT,OAAA;YAAIiT,SAAS,EAAC,MAAM;YAAAG,QAAA,EAAC;UAAe;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzCxT,OAAA;YAAKiT,SAAS,EAAC,SAAS;YAAAG,QAAA,gBACpBpT,OAAA;cAAKiT,SAAS,EAAC,UAAU;cAAAG,QAAA,eACrBpT,OAAA;gBAAKiT,SAAS,EAAC,8BAA8B;gBAAAG,QAAA,gBACzCpT,OAAA;kBAAKiT,SAAS,EAAC,aAAa;kBAAAG,QAAA,EAAC;gBAAyB;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC5DxT,OAAA;kBAAKiT,SAAS,EAAC,WAAW;kBAAAG,QAAA,eACtBpT,OAAA;oBAAIiT,SAAS,EAAC,sBAAsB;oBAAAG,QAAA,EAAEY,UAAU,CAACtM;kBAAM;oBAAAiG,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK;gBAAC;kBAAA7F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5D,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YAAC;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACNxT,OAAA;cAAKiT,SAAS,EAAC,UAAU;cAAAG,QAAA,eACrBpT,OAAA;gBAAKiT,SAAS,EAAC,iCAAiC;gBAAAG,QAAA,gBAC5CpT,OAAA;kBAAKiT,SAAS,EAAC,aAAa;kBAAAG,QAAA,EAAC;gBAAoB;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACvDxT,OAAA;kBAAKiT,SAAS,EAAC,WAAW;kBAAAG,QAAA,eACtBpT,OAAA;oBAAIiT,SAAS,EAAC,sBAAsB;oBAAAG,QAAA,EAAEQ,mBAAmB,CAAC5G,MAAM,CAACzD,IAAI,IAAIA,IAAI,CAACW,MAAM,KAAK,SAAS,CAAC,CAACxC;kBAAM;oBAAAiG,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK;gBAAC;kBAAA7F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/G,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YAAC;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNxT,OAAA;YAAKiT,SAAS,EAAC,MAAM;YAAAG,QAAA,gBACjBpT,OAAA;cAAAoT,QAAA,EAAI;YAAa;cAAAzF,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtBxT,OAAA;cAAKiT,SAAS,EAAC,cAAc;cAAAG,QAAA,gBACzBpT,OAAA;gBAAQiT,SAAS,EAAC,sBAAsB;gBAACoD,OAAO,EAAEA,CAAA,KAAM3V,YAAY,CAAC,iBAAiB,CAAE;gBAAA0S,QAAA,EAAC;cAAe;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACjHxT,OAAA;gBAAQiT,SAAS,EAAC,yBAAyB;gBAACoD,OAAO,EAAEA,CAAA,KAAM3V,YAAY,CAAC,aAAa,CAAE;gBAAA0S,QAAA,EAAC;cAAW;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5GxT,OAAA;gBAAQiT,SAAS,EAAC,yBAAyB;gBAACoD,OAAO,EAAEA,CAAA,KAAM3V,YAAY,CAAC,WAAW,CAAE;gBAAA0S,QAAA,EAAC;cAAS;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACxGxT,OAAA;gBAAQiT,SAAS,EAAC,2BAA2B;gBAACoD,OAAO,EAAEA,CAAA,KAAM3V,YAAY,CAAC,UAAU,CAAE;gBAAA0S,QAAA,EAAC;cAAQ;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACxGxT,OAAA;gBAAQiT,SAAS,EAAC,wBAAwB;gBAACoD,OAAO,EAAEA,CAAA,KAAM3V,YAAY,CAAC,cAAc,CAAE;gBAAA0S,QAAA,EAAC;cAAY;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5G,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNxT,OAAA;YAAKiT,SAAS,EAAC,MAAM;YAAAG,QAAA,gBACjBpT,OAAA;cAAAoT,QAAA,EAAI;YAAe;cAAAzF,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxBxT,OAAA;cAAIiT,SAAS,EAAC,YAAY;cAAAG,QAAA,EACrBjS,WAAW,CAACuG,MAAM,GAAG,CAAC,GACnBvG,WAAW,CACN6L,MAAM,CAACjE,GAAG,IAAIA,GAAG,CAACH,QAAQ,KAAK8K,eAAe,CAAC,CAC/CuB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACsB,OAAO,CAAC,CAAC,CAAC1P,GAAG,CAACkC,GAAG,iBACxB/I,OAAA;gBAAkCiT,SAAS,EAAC,mEAAmE;gBAAAG,QAAA,GAC1GrK,GAAG,CAACyN,MAAM,eACXxW,OAAA;kBAAMiT,SAAS,EAAC,0BAA0B;kBAAAG,QAAA,EAAE,IAAIhI,IAAI,CAACrC,GAAG,CAAC6H,SAAS,CAAC,CAAC6F,cAAc,CAAC;gBAAC;kBAAA9I,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAFvFzK,GAAG,CAAChC,EAAE,IAAIoO,IAAI,CAACuB,MAAM,CAAC,CAAC;gBAAA/I,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAG5B,CACP,CAAC,gBAENxT,OAAA;gBAAIiT,SAAS,EAAC,wCAAwC;gBAAAG,QAAA,EAAC;cAAmB;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YACjF;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAEd,KAAK,iBAAiB;QAClB,oBACIxT,OAAA;UAAAoT,QAAA,gBACIpT,OAAA;YAAIiT,SAAS,EAAC,MAAM;YAAAG,QAAA,EAAC;UAAsB;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChDxT,OAAA;YAAKiT,SAAS,EAAC,qCAAqC;YAAAG,QAAA,gBAChDpT,OAAA;cACIuG,IAAI,EAAC,MAAM;cACX0M,SAAS,EAAC,wBAAwB;cAClC0D,WAAW,EAAC,qDAAqD;cACjE3F,KAAK,EAAE3M,qBAAsB;cAC7BuS,QAAQ,EAAG7K,CAAC,IAAKzH,wBAAwB,CAACyH,CAAC,CAACE,MAAM,CAAC+E,KAAK;YAAE;cAAArD,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7D,CAAC,eACFxT,OAAA,CAACJ,IAAI,CAACiX,MAAM;cACR5D,SAAS,EAAC,QAAQ;cAClBjC,KAAK,EAAEzM,uBAAwB;cAC/BqS,QAAQ,EAAG7K,CAAC,IAAKvH,0BAA0B,CAACuH,CAAC,CAACE,MAAM,CAAC+E,KAAK,CAAE;cAAAoC,QAAA,gBAE5DpT,OAAA;gBAAQgR,KAAK,EAAC,KAAK;gBAAAoC,QAAA,EAAC;cAAsB;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACnDxT,OAAA;gBAAQgR,KAAK,EAAC,SAAS;gBAAAoC,QAAA,EAAC;cAAS;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1CxT,OAAA;gBAAQgR,KAAK,EAAC,UAAU;gBAAAoC,QAAA,EAAC;cAAS;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC3CxT,OAAA;gBAAQgR,KAAK,EAAC,SAAS;gBAAAoC,QAAA,EAAC;cAAS;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb,CAAC,eACNxT,OAAA;YAAKiT,SAAS,EAAC,kBAAkB;YAAAG,QAAA,eAC7BpT,OAAA;cAAOiT,SAAS,EAAC,iCAAiC;cAAAG,QAAA,gBAC9CpT,OAAA;gBAAAoT,QAAA,eACIpT,OAAA;kBAAAoT,QAAA,gBACIpT,OAAA;oBAAAoT,QAAA,EAAI;kBAAE;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACXxT,OAAA;oBAAAoT,QAAA,EAAI;kBAAO;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAChBxT,OAAA;oBAAAoT,QAAA,EAAI;kBAAI;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbxT,OAAA;oBAAAoT,QAAA,EAAI;kBAAI;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbxT,OAAA;oBAAAoT,QAAA,EAAI;kBAAM;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACfxT,OAAA;oBAAAoT,QAAA,EAAI;kBAAO;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAA7F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChB;cAAC;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACRxT,OAAA;gBAAAoT,QAAA,EACKuC,qBAAqB,CAACjO,MAAM,GAAG,CAAC,GAC7BiO,qBAAqB,CAAC9O,GAAG,CAACgN,WAAW,IAAI;kBACrC,MAAMjI,OAAO,GAAG/K,QAAQ,CAAC+R,IAAI,CAACkE,CAAC,IAAIA,CAAC,CAAC/P,EAAE,KAAK8M,WAAW,CAACpK,UAAU,CAAC;kBACnE,oBACIzJ,OAAA;oBAAAoT,QAAA,gBACIpT,OAAA;sBAAAoT,QAAA,EAAKS,WAAW,CAAC9M;oBAAE;sBAAA4G,QAAA,EAAA2F,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACzBxT,OAAA;sBAAAoT,QAAA,EAAKxH,OAAO,GAAGA,OAAO,CAACzE,IAAI,GAAG;oBAAK;sBAAAwG,QAAA,EAAA2F,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACzCxT,OAAA;sBAAAoT,QAAA,EAAK,IAAIhI,IAAI,CAACyI,WAAW,CAAC/J,IAAI,CAAC,CAACyL,kBAAkB,CAAC;oBAAC;sBAAA5H,QAAA,EAAA2F,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAC1DxT,OAAA;sBAAAoT,QAAA,EAAKS,WAAW,CAAC7J;oBAAI;sBAAA2D,QAAA,EAAA2F,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAC3BxT,OAAA;sBAAAoT,QAAA,eACIpT,OAAA;wBAAMiT,SAAS,EAAE,SACbY,WAAW,CAAC3J,MAAM,KAAK,SAAS,GAAG,sBAAsB,GACzD2J,WAAW,CAAC3J,MAAM,KAAK,UAAU,GAAG,YAAY,GAChD2J,WAAW,CAAC3J,MAAM,KAAK,SAAS,GAAG,WAAW,GAC9C,cAAc,EACf;wBAAAkJ,QAAA,EACES,WAAW,CAAC3J;sBAAM;wBAAAyD,QAAA,EAAA2F,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACjB;oBAAC;sBAAA7F,QAAA,EAAA2F,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACP,CAAC,eACLxT,OAAA;sBAAAoT,QAAA,GACKS,WAAW,CAAC3J,MAAM,KAAK,SAAS,iBAC7BlK,OAAA,CAAAE,SAAA;wBAAAkT,QAAA,gBACIpT,OAAA;0BACIiT,SAAS,EAAC,6BAA6B;0BACvCoD,OAAO,EAAEA,CAAA,KAAMnC,6BAA6B,CAACL,WAAW,CAAC9M,EAAE,EAAE,UAAU,CAAE;0BAAAqM,QAAA,EAC5E;wBAED;0BAAAzF,QAAA,EAAA2F,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAQ,CAAC,eACTxT,OAAA;0BACIiT,SAAS,EAAC,uBAAuB;0BACjCoD,OAAO,EAAEA,CAAA,KAAMnC,6BAA6B,CAACL,WAAW,CAAC9M,EAAE,EAAE,SAAS,CAAE;0BAAAqM,QAAA,EAC3E;wBAED;0BAAAzF,QAAA,EAAA2F,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAQ,CAAC;sBAAA,eACX,CACL,EACAK,WAAW,CAAC3J,MAAM,KAAK,UAAU,iBAC9BlK,OAAA;wBAAMiT,SAAS,EAAC,YAAY;wBAAAG,QAAA,EAAC;sBAAS;wBAAAzF,QAAA,EAAA2F,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAC/C,EACAK,WAAW,CAAC3J,MAAM,KAAK,SAAS,iBAC7BlK,OAAA;wBAAMiT,SAAS,EAAC,YAAY;wBAAAG,QAAA,EAAC;sBAAS;wBAAAzF,QAAA,EAAA2F,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAC/C;oBAAA;sBAAA7F,QAAA,EAAA2F,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACD,CAAC;kBAAA,GAtCAK,WAAW,CAAC9M,EAAE;oBAAA4G,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAuCnB,CAAC;gBAEb,CAAC,CAAC,gBAEFxT,OAAA;kBAAAoT,QAAA,eACIpT,OAAA;oBAAI+W,OAAO,EAAC,GAAG;oBAAC9D,SAAS,EAAC,aAAa;oBAAAG,QAAA,EAAC;kBAAsB;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAA7F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnE;cACP;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACNxT,OAAA,CAAC6V,UAAU;YACPhR,YAAY,EAAEA,YAAa;YAC3BiR,UAAU,EAAET,sBAAsB,CAAC3N,MAAO;YAC1CqO,WAAW,EAAEpR,yBAA0B;YACvCqR,QAAQ,EAAEpR;UAA6B;YAAA+I,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAEd,KAAK,aAAa;QACd,oBACIxT,OAAA;UAAAoT,QAAA,gBACIpT,OAAA;YAAIiT,SAAS,EAAC,MAAM;YAAAG,QAAA,EAAC;UAAW;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrCxT,OAAA;YAAKiT,SAAS,EAAC,qCAAqC;YAAAG,QAAA,eAChDpT,OAAA;cACIuG,IAAI,EAAC,MAAM;cACX0M,SAAS,EAAC,mBAAmB;cAC7B0D,WAAW,EAAC,oBAAoB;cAChC3F,KAAK,EAAE7M,iBAAkB;cACzByS,QAAQ,EAAG7K,CAAC,IAAK3H,oBAAoB,CAAC2H,CAAC,CAACE,MAAM,CAAC+E,KAAK;YAAE;cAAArD,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzD;UAAC;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACNxT,OAAA;YAAKiT,SAAS,EAAC,kBAAkB;YAAAG,QAAA,eAC7BpT,OAAA;cAAOiT,SAAS,EAAC,iCAAiC;cAAAG,QAAA,gBAC9CpT,OAAA;gBAAAoT,QAAA,eACIpT,OAAA;kBAAAoT,QAAA,gBACIpT,OAAA;oBAAAoT,QAAA,EAAI;kBAAE;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACXxT,OAAA;oBAAAoT,QAAA,EAAI;kBAAI;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbxT,OAAA;oBAAAoT,QAAA,EAAI;kBAAK;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACdxT,OAAA;oBAAAoT,QAAA,EAAI;kBAAK;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACdxT,OAAA;oBAAAoT,QAAA,EAAI;kBAAO;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAA7F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChB;cAAC;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACRxT,OAAA;gBAAAoT,QAAA,EACK4B,iBAAiB,CAACtN,MAAM,GAAG,CAAC,GACzBsN,iBAAiB,CAACnO,GAAG,CAAC+E,OAAO,iBACzB5L,OAAA;kBAAAoT,QAAA,gBACIpT,OAAA;oBAAAoT,QAAA,EAAKxH,OAAO,CAAC7E;kBAAE;oBAAA4G,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACrBxT,OAAA;oBAAAoT,QAAA,EAAKxH,OAAO,CAACzE;kBAAI;oBAAAwG,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACvBxT,OAAA;oBAAAoT,QAAA,EAAKxH,OAAO,CAAC/D;kBAAK;oBAAA8F,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACxBxT,OAAA;oBAAAoT,QAAA,EAAKxH,OAAO,CAACnD;kBAAK;oBAAAkF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACxBxT,OAAA;oBAAAoT,QAAA,eACIpT,OAAA;sBACIiT,SAAS,EAAC,6BAA6B;sBACvCoD,OAAO,EAAEA,CAAA,KAAM1K,sBAAsB,CAACC,OAAO,CAAE;sBAAAwH,QAAA,EAClD;oBAED;sBAAAzF,QAAA,EAAA2F,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAA7F,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT,CAAC;gBAAA,GAZA5H,OAAO,CAAC7E,EAAE;kBAAA4G,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAaf,CACP,CAAC,gBAEFxT,OAAA;kBAAAoT,QAAA,eACIpT,OAAA;oBAAI+W,OAAO,EAAC,GAAG;oBAAC9D,SAAS,EAAC,aAAa;oBAAAG,QAAA,EAAC;kBAAkB;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAA7F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/D;cACP;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACNxT,OAAA,CAAC6V,UAAU;YACPhR,YAAY,EAAEA,YAAa;YAC3BiR,UAAU,EAAElB,kBAAkB,CAAClN,MAAO;YACtCqO,WAAW,EAAEtR,qBAAsB;YACnCuR,QAAQ,EAAEtR;UAAyB;YAAAiJ,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAEd,KAAK,WAAW;QACZ,oBACIxT,OAAA;UAAAoT,QAAA,gBACIpT,OAAA;YAAIiT,SAAS,EAAC,MAAM;YAAAG,QAAA,EAAC;UAAY;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtCxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;YAACC,SAAS,EAAC,UAAU;YAAChE,SAAS,EAAC,MAAM;YAAAG,QAAA,gBAC7CpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;cAAA9D,QAAA,EAAC;YAAmB;cAAAzF,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC5CxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;cAAC5Q,IAAI,EAAC,MAAM;cAACqQ,QAAQ,EAAEzI;YAAqB;cAAAR,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD,CAAC,EAEZzQ,SAAS,CAAC2E,MAAM,GAAG,CAAC,gBACjB1H,OAAA;YAAOiT,SAAS,EAAC,qBAAqB;YAAAG,QAAA,gBAClCpT,OAAA;cAAAoT,QAAA,eACIpT,OAAA;gBAAAoT,QAAA,gBACIpT,OAAA;kBAAAoT,QAAA,EAAI;gBAAa;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACtBxT,OAAA;kBAAAoT,QAAA,EAAI;gBAAI;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACbxT,OAAA;kBAAAoT,QAAA,EAAI;gBAAW;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACpBxT,OAAA;kBAAAoT,QAAA,EAAI;gBAAM;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACfxT,OAAA;kBAAAoT,QAAA,EAAI;gBAAO;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB;YAAC;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACRxT,OAAA;cAAAoT,QAAA,EACKrQ,SAAS,CAAC8D,GAAG,CAACC,GAAG,iBACd9G,OAAA;gBAAAoT,QAAA,gBACIpT,OAAA;kBAAAoT,QAAA,EAAKtM,GAAG,CAAC6G;gBAAQ;kBAAAA,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACvBxT,OAAA;kBAAAoT,QAAA,EAAKtM,GAAG,CAAC+G;gBAAY;kBAAAF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC3BxT,OAAA;kBAAAoT,QAAA,EAAK,IAAIhI,IAAI,CAACtE,GAAG,CAACiH,UAAU,CAAC,CAACwH,kBAAkB,CAAC;gBAAC;kBAAA5H,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACxDxT,OAAA;kBAAAoT,QAAA,eAAIpT,OAAA;oBAAMiT,SAAS,EAAE,YAAYnM,GAAG,CAACmH,OAAO,KAAK,OAAO,GAAG,SAAS,GAAG,WAAW,EAAG;oBAAAmF,QAAA,EAAEtM,GAAG,CAACmH;kBAAO;oBAAAN,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO;gBAAC;kBAAA7F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC/GxT,OAAA;kBAAAoT,QAAA,eACIpT,OAAA,CAACL,MAAM;oBAACyX,OAAO,EAAC,SAAS;oBAACC,IAAI,EAAC,IAAI;oBAAChB,OAAO,EAAEA,CAAA,KAAM3H,sBAAsB,CAAC5H,GAAG,CAACC,EAAE,EAAED,GAAG,CAAC6G,QAAQ,CAAE;oBAAAyF,QAAA,EAAC;kBAAQ;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAA7F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClH,CAAC;cAAA,GAPA1M,GAAG,CAACC,EAAE,IAAI,OAAOoO,IAAI,CAACuB,MAAM,CAAC,CAAC,EAAE;gBAAA/I,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAQrC,CACP;YAAC;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,gBAERxT,OAAA;YAAAoT,QAAA,EAAG;UAAmB;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAC5B;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAEd,KAAK,UAAU;QACX,oBACIxT,OAAA;UAAAoT,QAAA,gBACIpT,OAAA;YAAIiT,SAAS,EAAC,MAAM;YAAAG,QAAA,EAAC;UAAW;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrCxT,OAAA,CAACL,MAAM;YAACyX,OAAO,EAAC,SAAS;YAACnE,SAAS,EAAC,MAAM;YAACoD,OAAO,EAAEA,CAAA,KAAMjT,aAAa,CAAC;cAAEC,WAAW,EAAE,EAAE;cAAEC,OAAO,EAAE,EAAE;cAAEC,OAAO,EAAE;YAAG,CAAC,CAAE;YAAA6P,QAAA,EAAC;UAAmB;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAEnJvQ,QAAQ,CAACyE,MAAM,GAAG,CAAC,gBAChB1H,OAAA;YAAIiT,SAAS,EAAC,YAAY;YAAAG,QAAA,EACrBnQ,QAAQ,CAAC4D,GAAG,CAACuJ,GAAG;cAAA,IAAAkH,cAAA;cAAA,oBACbtX,OAAA;gBAAiBiT,SAAS,EAAC,mEAAmE;gBAAAG,QAAA,gBAC1FpT,OAAA;kBAAAoT,QAAA,gBACIpT,OAAA;oBAAAoT,QAAA,GAAQ,QAAM,EAAChD,GAAG,CAACE,QAAQ,KAAKqD,mBAAmB,GAAG,IAAI,GAAI,EAAA2D,cAAA,GAAAzW,QAAQ,CAAC+R,IAAI,CAACkE,CAAC,IAAIA,CAAC,CAAC7P,MAAM,KAAKmJ,GAAG,CAACE,QAAQ,CAAC,cAAAgH,cAAA,uBAA7CA,cAAA,CAA+CnQ,IAAI,KAAI,YAAYiJ,GAAG,CAACE,QAAQ,GAAI;kBAAA;oBAAA3C,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS,CAAC,KAAC,eAAAxT,OAAA;oBAAA2N,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAClKxT,OAAA;oBAAAoT,QAAA,EAAQ;kBAAQ;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,KAAC,EAACpD,GAAG,CAAC9M,OAAO,EAAC,GAAC,eAAAtD,OAAA;oBAAA2N,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC9CxT,OAAA;oBAAAoT,QAAA,EAAQ,IAAIhI,IAAI,CAACgF,GAAG,CAACQ,SAAS,CAAC,CAAC6F,cAAc,CAAC;kBAAC;oBAAA9I,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAA7F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxD,CAAC,eACNxT,OAAA,CAACL,MAAM;kBAACyX,OAAO,EAAC,MAAM;kBAACC,IAAI,EAAC,IAAI;kBAAChB,OAAO,EAAEA,CAAA,KAAMzE,iBAAiB,CAACxB,GAAG,CAAE;kBAAAgD,QAAA,EAAC;gBAAY;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GANxFpD,GAAG,CAACrJ,EAAE;gBAAA4G,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAOX,CAAC;YAAA,CACR;UAAC;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,gBAELxT,OAAA;YAAAoT,QAAA,EAAG;UAAkB;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAC3B,eAEDxT,OAAA;YAAIiT,SAAS,EAAC;UAAM;YAAAtF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAEvBxT,OAAA;YAAAoT,QAAA,EAAI;UAAmB;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BxT,OAAA,CAACJ,IAAI;YAAAwT,QAAA,gBACDpT,OAAA,CAACJ,IAAI,CAACoX,KAAK;cAAC/D,SAAS,EAAC,MAAM;cAAAG,QAAA,gBACxBpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;gBAAA9D,QAAA,EAAC;cAAmB;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC5CxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;gBACTI,EAAE,EAAC,QAAQ;gBACXpQ,IAAI,EAAC,aAAa;gBAClB6J,KAAK,EAAE7N,UAAU,CAACE,WAAY;gBAC9BuT,QAAQ,EAAE7F,sBAAuB;gBACjCyG,QAAQ;gBAAApE,QAAA,gBAERpT,OAAA;kBAAQgR,KAAK,EAAC,EAAE;kBAAAoC,QAAA,EAAC;gBAAsB;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EAC/CQ,UAAU,CAACnN,GAAG,CAAC+E,OAAO,iBACnB5L,OAAA;kBAA6BgR,KAAK,EAAEpF,OAAO,CAAC3E,MAAO;kBAAAmM,QAAA,EAAExH,OAAO,CAACzE;gBAAI,GAApDyE,OAAO,CAAC3E,MAAM;kBAAA0G,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAA+C,CAC7E,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,eACbxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;cAAC/D,SAAS,EAAC,MAAM;cAAAG,QAAA,gBACxBpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;gBAAA9D,QAAA,EAAC;cAAO;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAChCxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;gBACT5Q,IAAI,EAAC,MAAM;gBACXY,IAAI,EAAC,SAAS;gBACd6J,KAAK,EAAE7N,UAAU,CAACG,OAAQ;gBAC1BsT,QAAQ,EAAE7F,sBAAuB;gBACjCyG,QAAQ;cAAA;gBAAA7J,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC,eACbxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;cAAC/D,SAAS,EAAC,MAAM;cAAAG,QAAA,gBACxBpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;gBAAA9D,QAAA,EAAC;cAAO;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAChCxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;gBACTI,EAAE,EAAC,UAAU;gBACbE,IAAI,EAAE,CAAE;gBACRtQ,IAAI,EAAC,SAAS;gBACd6J,KAAK,EAAE7N,UAAU,CAACI,OAAQ;gBAC1BqT,QAAQ,EAAE7F,sBAAuB;gBACjCyG,QAAQ;cAAA;gBAAA7J,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC,eACbxT,OAAA,CAACL,MAAM;cAACyX,OAAO,EAAC,SAAS;cAACf,OAAO,EAAEnF,iBAAkB;cAAAkC,QAAA,EAAC;YAAY;cAAAzF,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzE,CAAC;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAEd,KAAK,cAAc;QACf,MAAMkE,YAAY,GAAGzW,KAAK,CAAC+L,MAAM,CAAChE,IAAI,IAAIA,IAAI,CAACJ,QAAQ,KAAK8K,eAAe,CAAC;QAC5E,MAAMiE,WAAW,GAAGD,YAAY,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UAC5C,MAAMC,KAAK,GAAG,IAAI3M,IAAI,CAAC,GAAGyM,CAAC,CAAC1O,KAAK,IAAI0O,CAAC,CAACzO,OAAO,EAAE,CAAC;UACjD,MAAM4O,KAAK,GAAG,IAAI5M,IAAI,CAAC,GAAG0M,CAAC,CAAC3O,KAAK,IAAI2O,CAAC,CAAC1O,OAAO,EAAE,CAAC;UACjD,OAAO2O,KAAK,GAAGC,KAAK;QACxB,CAAC,CAAC;QAEF,oBACIhY,OAAA;UAAAoT,QAAA,gBACIpT,OAAA;YAAIiT,SAAS,EAAC,MAAM;YAAAG,QAAA,EAAC;UAAe;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEzCxT,OAAA;YAAAoT,QAAA,EAAI;UAAe;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBxT,OAAA,CAACJ,IAAI;YAACqY,QAAQ,EAAEnG,gBAAiB;YAACmB,SAAS,EAAC,4CAA4C;YAAAG,QAAA,gBACpFpT,OAAA;cAAKiT,SAAS,EAAC,UAAU;cAAAG,QAAA,gBACrBpT,OAAA,CAACJ,IAAI,CAACoX,KAAK;gBAACC,SAAS,EAAC,aAAa;gBAAChE,SAAS,EAAC,UAAU;gBAAAG,QAAA,gBACpDpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;kBAAA9D,QAAA,EAAC;gBAAI;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC7BxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;kBACT5Q,IAAI,EAAC,MAAM;kBACXyK,KAAK,EAAEvL,WAAY;kBACnBmR,QAAQ,EAAG7K,CAAC,IAAKrG,cAAc,CAACqG,CAAC,CAACE,MAAM,CAAC+E,KAAK,CAAE;kBAChDwG,QAAQ;gBAAA;kBAAA7J,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACX,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACM,CAAC,eACbxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;gBAACC,SAAS,EAAC,aAAa;gBAAChE,SAAS,EAAC,UAAU;gBAAAG,QAAA,gBACpDpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;kBAAA9D,QAAA,EAAC;gBAAI;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC7BxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;kBACT5Q,IAAI,EAAC,MAAM;kBACXyK,KAAK,EAAErL,WAAY;kBACnBiR,QAAQ,EAAG7K,CAAC,IAAKnG,cAAc,CAACmG,CAAC,CAACE,MAAM,CAAC+E,KAAK,CAAE;kBAChDwG,QAAQ;gBAAA;kBAAA7J,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACX,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACM,CAAC,eACbxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;gBAACC,SAAS,EAAC,eAAe;gBAAChE,SAAS,EAAC,UAAU;gBAAAG,QAAA,gBACtDpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;kBAAA9D,QAAA,EAAC;gBAAY;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACrCxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;kBACTI,EAAE,EAAC,QAAQ;kBACXvG,KAAK,EAAEnL,kBAAmB;kBAC1B+Q,QAAQ,EAAG7K,CAAC,IAAKjG,qBAAqB,CAACiG,CAAC,CAACE,MAAM,CAAC+E,KAAK,CAAE;kBAAAoC,QAAA,gBAEvDpT,OAAA;oBAAQgR,KAAK,EAAC,UAAU;oBAAAoC,QAAA,EAAC;kBAAS;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAC3CxT,OAAA;oBAAQgR,KAAK,EAAC,YAAY;oBAAAoC,QAAA,EAAC;kBAAW;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAA7F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrC,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC,eACNxT,OAAA,CAACL,MAAM;cAACyX,OAAO,EAAC,SAAS;cAAC7Q,IAAI,EAAC,QAAQ;cAAA6M,QAAA,EAAC;YAAW;cAAAzF,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC,eAEPxT,OAAA;YAAAoT,QAAA,EAAI;UAAiB;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACzBmE,WAAW,CAACjQ,MAAM,GAAG,CAAC,gBACnB1H,OAAA;YAAKiT,SAAS,EAAC,kBAAkB;YAAAG,QAAA,eAC7BpT,OAAA;cAAOiT,SAAS,EAAC,iCAAiC;cAAAG,QAAA,gBAC9CpT,OAAA;gBAAAoT,QAAA,eACIpT,OAAA;kBAAAoT,QAAA,gBACIpT,OAAA;oBAAAoT,QAAA,EAAI;kBAAE;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACXxT,OAAA;oBAAAoT,QAAA,EAAI;kBAAI;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbxT,OAAA;oBAAAoT,QAAA,EAAI;kBAAI;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbxT,OAAA;oBAAAoT,QAAA,EAAI;kBAAY;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACrBxT,OAAA;oBAAAoT,QAAA,EAAI;kBAAO;oBAAAzF,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAA7F,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChB;cAAC;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACRxT,OAAA;gBAAAoT,QAAA,EACKuE,WAAW,CAAC9Q,GAAG,CAACmC,IAAI,iBACjBhJ,OAAA;kBAAAoT,QAAA,gBACIpT,OAAA;oBAAAoT,QAAA,EAAKpK,IAAI,CAACjC;kBAAE;oBAAA4G,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAClBxT,OAAA;oBAAAoT,QAAA,EAAK,IAAIhI,IAAI,CAACpC,IAAI,CAACG,KAAK,CAAC,CAACoM,kBAAkB,CAAC;kBAAC;oBAAA5H,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACpDxT,OAAA;oBAAAoT,QAAA,EAAKpK,IAAI,CAACI;kBAAO;oBAAAuE,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACvBxT,OAAA;oBAAAoT,QAAA,eACIpT,OAAA;sBAAMiT,SAAS,EAAE,YAAYjK,IAAI,CAACE,aAAa,KAAK,UAAU,GAAG,YAAY,GAAGF,IAAI,CAACE,aAAa,KAAK,SAAS,GAAG,sBAAsB,GAAG,WAAW,EAAG;sBAAAkK,QAAA,EACrJpK,IAAI,CAACE;oBAAa;sBAAAyE,QAAA,EAAA2F,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACjB;kBAAC;oBAAA7F,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACP,CAAC,eACLxT,OAAA;oBAAAoT,QAAA,GACKpK,IAAI,CAACE,aAAa,KAAK,UAAU,iBAC9BlJ,OAAA,CAACL,MAAM;sBACHyX,OAAO,EAAC,SAAS;sBACjBC,IAAI,EAAC,IAAI;sBACThB,OAAO,EAAEA,CAAA,KAAM5D,sBAAsB,CAACzJ,IAAI,CAACjC,EAAE,EAAE,SAAS,CAAE;sBAC1DkM,SAAS,EAAC,MAAM;sBAAAG,QAAA,EACnB;oBAED;sBAAAzF,QAAA,EAAA2F,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CACX,EACAxK,IAAI,CAACE,aAAa,KAAK,SAAS,iBAC7BlJ,OAAA,CAAAE,SAAA;sBAAAkT,QAAA,gBACIpT,OAAA,CAACL,MAAM;wBACHyX,OAAO,EAAC,QAAQ;wBAChBC,IAAI,EAAC,IAAI;wBACThB,OAAO,EAAEA,CAAA,KAAM5D,sBAAsB,CAACzJ,IAAI,CAACjC,EAAE,EAAE,SAAS,CAAE;wBAC1DkM,SAAS,EAAC,MAAM;wBAAAG,QAAA,EACnB;sBAED;wBAAAzF,QAAA,EAAA2F,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC,eACTxT,OAAA,CAACL,MAAM;wBACHyX,OAAO,EAAC,SAAS;wBACjBC,IAAI,EAAC,IAAI;wBACThB,OAAO,EAAEA,CAAA,KAAM5D,sBAAsB,CAACzJ,IAAI,CAACjC,EAAE,EAAE,UAAU,CAAE;wBAC3DkM,SAAS,EAAC,MAAM;wBAAAG,QAAA,EACnB;sBAED;wBAAAzF,QAAA,EAAA2F,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC;oBAAA,eACX,CACL,EACAxK,IAAI,CAACE,aAAa,KAAK,SAAS,iBAC7BlJ,OAAA,CAACL,MAAM;sBACHyX,OAAO,EAAC,SAAS;sBACjBC,IAAI,EAAC,IAAI;sBACThB,OAAO,EAAEA,CAAA,KAAM5D,sBAAsB,CAACzJ,IAAI,CAACjC,EAAE,EAAE,UAAU,CAAE;sBAC3DkM,SAAS,EAAC,MAAM;sBAAAG,QAAA,EACnB;oBAED;sBAAAzF,QAAA,EAAA2F,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CACX,eAEDxT,OAAA,CAACL,MAAM;sBAACyX,OAAO,EAAC,QAAQ;sBAACC,IAAI,EAAC,IAAI;sBAAChB,OAAO,EAAEA,CAAA,KAAMlE,gBAAgB,CAACnJ,IAAI,CAACjC,EAAE,CAAE;sBAAAqM,QAAA,EAAC;oBAAM;sBAAAzF,QAAA,EAAA2F,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAA7F,QAAA,EAAA2F,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5F,CAAC;gBAAA,GApDAxK,IAAI,CAACjC,EAAE;kBAAA4G,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAqDZ,CACP;cAAC;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,gBAENxT,OAAA;YAAAoT,QAAA,EAAG;UAAwD;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACjE;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAEd,KAAK,UAAU;QACX,oBACIxT,OAAA;UAAKiT,SAAS,EAAC,gBAAgB;UAAAG,QAAA,gBAC3BpT,OAAA;YAAIiT,SAAS,EAAC,MAAM;YAAAG,QAAA,EAAC;UAAuB;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAChD,CAACnS,oBAAoB,gBAClBrB,OAAA;YAAAoT,QAAA,EAAG;UAAyB;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,GAEhCjS,gBAAgB,gBACZvB,OAAA,CAACJ,IAAI;YAACqY,QAAQ,EAAEtL,yBAA0B;YAAAyG,QAAA,gBACtCpT,OAAA;cAAKiT,SAAS,EAAC,UAAU;cAAAG,QAAA,gBACrBpT,OAAA,CAACJ,IAAI,CAACoX,KAAK;gBAAC/D,SAAS,EAAC,eAAe;gBAAAG,QAAA,gBACjCpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;kBAAA9D,QAAA,EAAC;gBAAU;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACnCxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;kBAAC5Q,IAAI,EAAC,MAAM;kBAACyK,KAAK,EAAEvP,OAAQ;kBAACmV,QAAQ,EAAG7K,CAAC,IAAKrK,UAAU,CAACqK,CAAC,CAACE,MAAM,CAAC+E,KAAK,CAAE;kBAACwG,QAAQ;gBAAA;kBAAA7J,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1F,CAAC,eACbxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;gBAAC/D,SAAS,EAAC,eAAe;gBAAAG,QAAA,gBACjCpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;kBAAA9D,QAAA,EAAC;gBAAS;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAClCxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;kBAAC5Q,IAAI,EAAC,MAAM;kBAACyK,KAAK,EAAErP,WAAY;kBAACiV,QAAQ,EAAG7K,CAAC,IAAKnK,cAAc,CAACmK,CAAC,CAACE,MAAM,CAAC+E,KAAK,CAAE;kBAACwG,QAAQ;gBAAA;kBAAA7J,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClG,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC,eACNxT,OAAA;cAAKiT,SAAS,EAAC,UAAU;cAAAG,QAAA,gBACrBpT,OAAA,CAACJ,IAAI,CAACoX,KAAK;gBAAC/D,SAAS,EAAC,eAAe;gBAAAG,QAAA,gBACjCpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;kBAAA9D,QAAA,EAAC;gBAAK;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC9BxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;kBAAC5Q,IAAI,EAAC,OAAO;kBAACyK,KAAK,EAAEnP,SAAU;kBAAC+U,QAAQ,EAAG7K,CAAC,IAAKjK,YAAY,CAACiK,CAAC,CAACE,MAAM,CAAC+E,KAAK,CAAE;kBAACwG,QAAQ;gBAAA;kBAAA7J,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/F,CAAC,eACbxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;gBAAC/D,SAAS,EAAC,eAAe;gBAAAG,QAAA,gBACjCpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;kBAAA9D,QAAA,EAAC;gBAAK;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC9BxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;kBAAC5Q,IAAI,EAAC,MAAM;kBAACyK,KAAK,EAAEjP,WAAY;kBAAC6U,QAAQ,EAAG7K,CAAC,IAAK/J,cAAc,CAAC+J,CAAC,CAACE,MAAM,CAAC+E,KAAK,CAAE;kBAACwG,QAAQ;gBAAA;kBAAA7J,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClG,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC,eACNxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;cAAC/D,SAAS,EAAC,MAAM;cAAAG,QAAA,gBACxBpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;gBAAA9D,QAAA,EAAC;cAA6B;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtDxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;gBAAC5Q,IAAI,EAAC,MAAM;gBAACyK,KAAK,EAAE/O,mBAAoB;gBAAC2U,QAAQ,EAAG7K,CAAC,IAAK7J,sBAAsB,CAAC6J,CAAC,CAACE,MAAM,CAAC+E,KAAK;cAAE;gBAAArD,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzG,CAAC,eACbxT,OAAA;cAAKiT,SAAS,EAAC,UAAU;cAAAG,QAAA,gBACrBpT,OAAA,CAACJ,IAAI,CAACoX,KAAK;gBAAC/D,SAAS,EAAC,eAAe;gBAAAG,QAAA,gBACjCpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;kBAAA9D,QAAA,EAAC;gBAAI;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC7BxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;kBAAC5Q,IAAI,EAAC,MAAM;kBAACyK,KAAK,EAAE7O,QAAS;kBAACyU,QAAQ,EAAG7K,CAAC,IAAK3J,WAAW,CAAC2J,CAAC,CAACE,MAAM,CAAC+E,KAAK;gBAAE;kBAAArD,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnF,CAAC,eACbxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;gBAAC/D,SAAS,EAAC,eAAe;gBAAAG,QAAA,gBACjCpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;kBAAA9D,QAAA,EAAC;gBAAa;kBAAAzF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACtCxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;kBAAC5Q,IAAI,EAAC,MAAM;kBAACyK,KAAK,EAAE3O,gBAAiB;kBAACuU,QAAQ,EAAG7K,CAAC,IAAKzJ,mBAAmB,CAACyJ,CAAC,CAACE,MAAM,CAAC+E,KAAK;gBAAE;kBAAArD,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnG,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC,eACNxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;cAAC/D,SAAS,EAAC,MAAM;cAAAG,QAAA,gBACxBpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;gBAAA9D,QAAA,EAAC;cAAkB;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC3CxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;gBAAC5Q,IAAI,EAAC,QAAQ;gBAACyK,KAAK,EAAEzO,YAAa;gBAACqU,QAAQ,EAAG7K,CAAC,IAAKvJ,eAAe,CAACuJ,CAAC,CAACE,MAAM,CAAC+E,KAAK;cAAE;gBAAArD,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7F,CAAC,eACbxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;cAAC/D,SAAS,EAAC,MAAM;cAAAG,QAAA,gBACxBpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;gBAAA9D,QAAA,EAAC;cAAa;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtCxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;gBACT5Q,IAAI,EAAC,MAAM;gBACX2R,MAAM,EAAC,SAAS;gBAChBtB,QAAQ,EAAE9K;cAAkB;gBAAA6B,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CAAC,EACD3Q,mBAAmB,iBAChB7C,OAAA;gBAAKiT,SAAS,EAAC,MAAM;gBAAAG,QAAA,eACjBpT,OAAA;kBACImY,GAAG,EAAEtV,mBAAoB;kBACzBuV,GAAG,EAAC,uBAAuB;kBAC3BlF,KAAK,EAAE;oBAAEmF,QAAQ,EAAE,OAAO;oBAAEC,SAAS,EAAE,OAAO;oBAAEC,YAAY,EAAE,KAAK;oBAAEC,SAAS,EAAE;kBAAQ,CAAE;kBAC1FvF,SAAS,EAAC;gBAAyB;kBAAAtF,QAAA,EAAA2F,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtC;cAAC;gBAAA7F,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CACR;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC,eACbxT,OAAA;cAAKiT,SAAS,EAAC,4BAA4B;cAAAG,QAAA,gBACvCpT,OAAA,CAACL,MAAM;gBAACyX,OAAO,EAAC,WAAW;gBAACnE,SAAS,EAAC,MAAM;gBAACoD,OAAO,EAAEA,CAAA,KAAM7U,mBAAmB,CAAC,KAAK,CAAE;gBAAA4R,QAAA,EAAC;cAAM;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACvGxT,OAAA,CAACL,MAAM;gBAACyX,OAAO,EAAC,SAAS;gBAAC7Q,IAAI,EAAC,QAAQ;gBAAA6M,QAAA,EAAC;cAAY;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,gBAEPxT,OAAA;YAAAoT,QAAA,gBACIpT,OAAA;cAAAoT,QAAA,EACK/R,oBAAoB,CAAC6G,kBAAkB,gBACpClI,OAAA;gBACImY,GAAG,EAAE9W,oBAAoB,CAAC6G,kBAAmB;gBAC7CkQ,GAAG,EAAC,gBAAgB;gBACpBlF,KAAK,EAAE;kBAAEuF,KAAK,EAAE,OAAO;kBAAEC,MAAM,EAAE,OAAO;kBAAEH,YAAY,EAAE,KAAK;kBAAEC,SAAS,EAAE;gBAAQ,CAAE;gBACpFvF,SAAS,EAAC;cAA8B;gBAAAtF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3C,CAAC,gBAEFxT,OAAA;gBACImY,GAAG,EAAC,0DAA0D;gBAC9DC,GAAG,EAAC,kBAAkB;gBACtBlF,KAAK,EAAE;kBAAEuF,KAAK,EAAE,OAAO;kBAAEC,MAAM,EAAE,OAAO;kBAAEH,YAAY,EAAE,KAAK;kBAAEC,SAAS,EAAE;gBAAQ,CAAE;gBACpFvF,SAAS,EAAC;cAA8B;gBAAAtF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3C;YACJ;cAAA7F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACJxT,OAAA;cAAAoT,QAAA,gBAAGpT,OAAA;gBAAAoT,QAAA,EAAQ;cAAW;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnS,oBAAoB,CAAC+F,GAAG;YAAA;cAAAuG,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9DxT,OAAA;cAAAoT,QAAA,gBAAGpT,OAAA;gBAAAoT,QAAA,EAAQ;cAAU;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnS,oBAAoB,CAACgG,OAAO;YAAA;cAAAsG,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjExT,OAAA;cAAAoT,QAAA,gBAAGpT,OAAA;gBAAAoT,QAAA,EAAQ;cAAM;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnS,oBAAoB,CAACwG,KAAK;YAAA;cAAA8F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3DxT,OAAA;cAAAoT,QAAA,gBAAGpT,OAAA;gBAAAoT,QAAA,EAAQ;cAAM;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnS,oBAAoB,CAACyG,OAAO;YAAA;cAAA6F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7DxT,OAAA;cAAAoT,QAAA,gBAAGpT,OAAA;gBAAAoT,QAAA,EAAQ;cAAY;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACjM,KAAK,CAACC,OAAO,CAACnG,oBAAoB,CAACoG,eAAe,CAAC,GAAGpG,oBAAoB,CAACoG,eAAe,CAACE,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK;YAAA;cAAAgG,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpJxT,OAAA;cAAAoT,QAAA,gBAAGpT,OAAA;gBAAAoT,QAAA,EAAQ;cAAK;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnS,oBAAoB,CAACuG,IAAI;YAAA;cAAA+F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzDxT,OAAA;cAAAoT,QAAA,gBAAGpT,OAAA;gBAAAoT,QAAA,EAAQ;cAAc;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnS,oBAAoB,CAAC0G,YAAY;YAAA;cAAA4F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1ExT,OAAA;cAAAoT,QAAA,gBAAGpT,OAAA;gBAAAoT,QAAA,EAAQ;cAAW;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnS,oBAAoB,CAAC2G,QAAQ,EAAC,QAAM;YAAA;cAAA2F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACzExT,OAAA;cAAAoT,QAAA,gBAAGpT,OAAA;gBAAAoT,QAAA,EAAQ;cAAO;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnS,oBAAoB,CAAC4G,MAAM;YAAA;cAAA0F,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7DxT,OAAA,CAACL,MAAM;cAACyX,OAAO,EAAC,SAAS;cAACf,OAAO,EAAEA,CAAA,KAAM7U,mBAAmB,CAAC,IAAI,CAAE;cAAA4R,QAAA,EAAC;YAAY;cAAAzF,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxF,CAEZ;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAEd;QACI,oBAAOxT,OAAA;UAAAoT,QAAA,EAAK;QAA8B;UAAAzF,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;IACxD;EACJ,CAAC;EAED,oBACIxT,OAAA;IAAKiT,SAAS,EAAC,QAAQ;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAClDpT,OAAA;MAAKiT,SAAS,EAAC,wBAAwB;MAACC,KAAK,EAAE;QAAEuF,KAAK,EAAE;MAAQ,CAAE;MAAArF,QAAA,gBAC9DpT,OAAA;QAAIiT,SAAS,EAAC,MAAM;QAAAG,QAAA,EAAC;MAAY;QAAAzF,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCxT,OAAA;QAAIiT,SAAS,EAAC,iBAAiB;QAAAG,QAAA,gBAC3BpT,OAAA;UAAIiT,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBpT,OAAA;YACIiT,SAAS,EAAE,iEAAiExS,SAAS,KAAK,UAAU,GAAG,6BAA6B,GAAG,EAAE,EAAG;YAC5I4V,OAAO,EAAEA,CAAA,KAAM3V,YAAY,CAAC,UAAU,CAAE;YAAA0S,QAAA,EAC3C;UAED;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACLxT,OAAA;UAAIiT,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBpT,OAAA;YACIiT,SAAS,EAAE,iEAAiExS,SAAS,KAAK,iBAAiB,GAAG,6BAA6B,GAAG,EAAE,EAAG;YACnJ4V,OAAO,EAAEA,CAAA,KAAM3V,YAAY,CAAC,iBAAiB,CAAE;YAAA0S,QAAA,EAClD;UAED;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACLxT,OAAA;UAAIiT,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBpT,OAAA;YACIiT,SAAS,EAAE,iEAAiExS,SAAS,KAAK,aAAa,GAAG,6BAA6B,GAAG,EAAE,EAAG;YAC/I4V,OAAO,EAAEA,CAAA,KAAM3V,YAAY,CAAC,aAAa,CAAE;YAAA0S,QAAA,EAC9C;UAED;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACLxT,OAAA;UAAIiT,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBpT,OAAA;YACIiT,SAAS,EAAE,iEAAiExS,SAAS,KAAK,cAAc,GAAG,6BAA6B,GAAG,EAAE,EAAG;YAChJ4V,OAAO,EAAEA,CAAA,KAAM3V,YAAY,CAAC,cAAc,CAAE;YAAA0S,QAAA,EAC/C;UAED;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACLxT,OAAA;UAAIiT,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBpT,OAAA;YACIiT,SAAS,EAAE,iEAAiExS,SAAS,KAAK,WAAW,GAAG,6BAA6B,GAAG,EAAE,EAAG;YAC7I4V,OAAO,EAAEA,CAAA,KAAM3V,YAAY,CAAC,WAAW,CAAE;YAAA0S,QAAA,EAC5C;UAED;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACLxT,OAAA;UAAIiT,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBpT,OAAA;YACIiT,SAAS,EAAE,iEAAiExS,SAAS,KAAK,UAAU,GAAG,6BAA6B,GAAG,EAAE,EAAG;YAC5I4V,OAAO,EAAEA,CAAA,KAAM3V,YAAY,CAAC,UAAU,CAAE;YAAA0S,QAAA,EAC3C;UAED;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACLxT,OAAA;UAAIiT,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBpT,OAAA;YACIiT,SAAS,EAAE,iEAAiExS,SAAS,KAAK,UAAU,GAAG,6BAA6B,GAAG,EAAE,EAAG;YAC5I4V,OAAO,EAAEA,CAAA,KAAM3V,YAAY,CAAC,UAAU,CAAE;YAAA0S,QAAA,EAC3C;UAED;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAA7F,QAAA,EAAA2F,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENxT,OAAA;MAAKiT,SAAS,EAAC,0BAA0B;MAAAG,QAAA,GACpCvP,SAAS,iBACN7D,OAAA;QAAKiT,SAAS,EAAE,eAAehP,SAAS,oFAAqF;QAACoP,IAAI,EAAC,OAAO;QAACH,KAAK,EAAE;UAAEyF,MAAM,EAAE;QAAK,CAAE;QAAAvF,QAAA,GAC9JrP,YAAY,eACb/D,OAAA;UAAQuG,IAAI,EAAC,QAAQ;UAAC0M,SAAS,EAAC,WAAW;UAACoD,OAAO,EAAEA,CAAA,KAAMvS,YAAY,CAAC,KAAK;QAAE;UAAA6J,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxF,CACR,eAEDxT,OAAA;QAAKiT,SAAS,EAAC,wDAAwD;QAAAG,QAAA,eACnEpT,OAAA;UAAIiT,SAAS,EAAC,MAAM;UAAAG,QAAA,EAAC;QAAgB;UAAAzF,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,EAEL8C,aAAa,CAAC,CAAC;IAAA;MAAA3I,QAAA,EAAA2F,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eAENxT,OAAA,CAACN,KAAK;MAACkZ,IAAI,EAAE9T,sBAAuB;MAAC+T,MAAM,EAAEhN,uBAAwB;MAACwL,IAAI,EAAC,IAAI;MAAAjE,QAAA,gBAC3EpT,OAAA,CAACN,KAAK,CAACoZ,MAAM;QAACC,WAAW;QAAA3F,QAAA,eACrBpT,OAAA,CAACN,KAAK,CAACsZ,KAAK;UAAA5F,QAAA,GAAC,mBAAiB,EAACpO,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEmC,IAAI;QAAA;UAAAwG,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc;MAAC;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACfxT,OAAA,CAACN,KAAK,CAACuZ,IAAI;QAAA7F,QAAA,EACNpO,eAAe,iBACZhF,OAAA;UAAAoT,QAAA,gBACIpT,OAAA;YAAAoT,QAAA,gBAAGpT,OAAA;cAAAoT,QAAA,EAAQ;YAAM;cAAAzF,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACxO,eAAe,CAAC6C,KAAK;UAAA;YAAA8F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtDxT,OAAA;YAAAoT,QAAA,gBAAGpT,OAAA;cAAAoT,QAAA,EAAQ;YAAM;cAAAzF,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACxO,eAAe,CAACyD,KAAK;UAAA;YAAAkF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtDxT,OAAA;YAAA2N,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNxT,OAAA;YAAAoT,QAAA,GAAI,0BAAwB,EAACpO,eAAe,CAACmC,IAAI;UAAA;YAAAwG,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACtDI,mBAAmB,CAAC5G,MAAM,CAACzD,IAAI,IAAIA,IAAI,CAACE,UAAU,KAAKzE,eAAe,CAAC+B,EAAE,CAAC,CAACW,MAAM,GAAG,CAAC,gBAClF1H,OAAA;YAAIiT,SAAS,EAAC,iBAAiB;YAAAG,QAAA,EAC1BQ,mBAAmB,CACf5G,MAAM,CAACzD,IAAI,IAAIA,IAAI,CAACE,UAAU,KAAKzE,eAAe,CAAC+B,EAAE,CAAC,CACtD6Q,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAI1M,IAAI,CAAC0M,CAAC,CAAChO,IAAI,CAAC,GAAG,IAAIsB,IAAI,CAACyM,CAAC,CAAC/N,IAAI,CAAC,CAAC,CACnDjD,GAAG,CAAC0C,IAAI,iBACLvJ,OAAA;cAAkBiT,SAAS,EAAC,iBAAiB;cAAAG,QAAA,gBACzCpT,OAAA;gBAAAoT,QAAA,EAAQ;cAAK;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC,IAAIpI,IAAI,CAAC7B,IAAI,CAACO,IAAI,CAAC,CAACyL,kBAAkB,CAAC,CAAC,EAAC,IAAE,EAAC,GAAG,eACvEvV,OAAA;gBAAAoT,QAAA,EAAQ;cAAK;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACjK,IAAI,CAACS,IAAI,EAAC,IAAE,EAAC,GAAG,eACxChK,OAAA;gBAAAoT,QAAA,EAAQ;cAAO;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,eAAAxT,OAAA;gBAAMiT,SAAS,EAAE,SACtC1J,IAAI,CAACW,MAAM,KAAK,SAAS,GAAG,sBAAsB,GAClDX,IAAI,CAACW,MAAM,KAAK,UAAU,GAAG,YAAY,GACzCX,IAAI,CAACW,MAAM,KAAK,SAAS,GAAG,WAAW,GACvC,cAAc,EACf;gBAAAkJ,QAAA,EAAE7J,IAAI,CAACW;cAAM;gBAAAyD,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GARnBjK,IAAI,CAACxC,EAAE;cAAA4G,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASZ,CACP;UAAC;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,gBAELxT,OAAA;YAAAoT,QAAA,EAAG;UAA8C;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACvD,eACDxT,OAAA;YAAA2N,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNxT,OAAA;YAAAoT,QAAA,GAAI,8BAA4B,EAACpO,eAAe,CAACmC,IAAI;UAAA;YAAAwG,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3DxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;YAAC/D,SAAS,EAAC,MAAM;YAAAG,QAAA,gBACxBpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;cAAA9D,QAAA,EAAC;YAAS;cAAAzF,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAClCxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;cACT5Q,IAAI,EAAC,MAAM;cACXY,IAAI,EAAC,WAAW;cAChB6J,KAAK,EAAE5L,sBAAsB,CAACE,SAAU;cACxCsR,QAAQ,EAAG7K,CAAC,IAAK1G,yBAAyB,CAAC4L,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAE3L,SAAS,EAAEyG,CAAC,CAACE,MAAM,CAAC+E;cAAM,CAAC,CAAC,CAAE;cAC7F2F,WAAW,EAAC;YAAoB;cAAAhJ,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACbxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;YAAC/D,SAAS,EAAC,MAAM;YAAAG,QAAA,gBACxBpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;cAAA9D,QAAA,EAAC;YAAS;cAAAzF,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAClCxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;cACTI,EAAE,EAAC,UAAU;cACbE,IAAI,EAAE,CAAE;cACRtQ,IAAI,EAAC,WAAW;cAChB6J,KAAK,EAAE5L,sBAAsB,CAACG,SAAU;cACxCqR,QAAQ,EAAG7K,CAAC,IAAK1G,yBAAyB,CAAC4L,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAE1L,SAAS,EAAEwG,CAAC,CAACE,MAAM,CAAC+E;cAAM,CAAC,CAAC,CAAE;cAC7F2F,WAAW,EAAC;YAA4B;cAAAhJ,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACbxT,OAAA,CAACJ,IAAI,CAACoX,KAAK;YAAC/D,SAAS,EAAC,MAAM;YAAAG,QAAA,gBACxBpT,OAAA,CAACJ,IAAI,CAACsX,KAAK;cAAA9D,QAAA,EAAC;YAAK;cAAAzF,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC9BxT,OAAA,CAACJ,IAAI,CAACuX,OAAO;cACTI,EAAE,EAAC,UAAU;cACbE,IAAI,EAAE,CAAE;cACRtQ,IAAI,EAAC,OAAO;cACZ6J,KAAK,EAAE5L,sBAAsB,CAACI,KAAM;cACpCoR,QAAQ,EAAG7K,CAAC,IAAK1G,yBAAyB,CAAC4L,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAEzL,KAAK,EAAEuG,CAAC,CAACE,MAAM,CAAC+E;cAAM,CAAC,CAAC,CAAE;cACzF2F,WAAW,EAAC;YAAqB;cAAAhJ,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC;UAAA;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACbxT,OAAA,CAACL,MAAM;YAACyX,OAAO,EAAC,SAAS;YAACf,OAAO,EAAEnL,4BAA6B;YAAAkI,QAAA,EAAC;UAAyB;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAEnGxT,OAAA;YAAIiT,SAAS,EAAC,MAAM;YAAAG,QAAA,EAAC;UAAiC;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC1DtO,qBAAqB,CAACwC,MAAM,GAAG,CAAC,gBAC7B1H,OAAA;YAAIiT,SAAS,EAAC,YAAY;YAAAG,QAAA,EACrBlO,qBAAqB,CAAC2B,GAAG,CAAC6D,MAAM,iBAC7B1K,OAAA;cAAoBiT,SAAS,EAAC,iBAAiB;cAAAG,QAAA,gBAC3CpT,OAAA;gBAAAoT,QAAA,EAAQ;cAAK;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC,IAAIpI,IAAI,CAACV,MAAM,CAACZ,IAAI,CAAC,CAACyL,kBAAkB,CAAC,CAAC,EAAC,GAAC,eAAAvV,OAAA;gBAAA2N,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC1ExT,OAAA;gBAAAoT,QAAA,EAAQ;cAAU;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC9I,MAAM,CAACpF,SAAS,EAAC,GAAC,eAAAtF,OAAA;gBAAA2N,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrDxT,OAAA;gBAAAoT,QAAA,EAAQ;cAAU;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC9I,MAAM,CAACnF,SAAS,EAAC,GAAC,eAAAvF,OAAA;gBAAA2N,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrDxT,OAAA;gBAAAoT,QAAA,EAAQ;cAAM;gBAAAzF,QAAA,EAAA2F,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC9I,MAAM,CAAClF,KAAK,IAAI,KAAK;YAAA,GAJzCkF,MAAM,CAAC3D,EAAE;cAAA4G,QAAA,EAAA2F,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKd,CACP;UAAC;YAAA7F,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,gBAELxT,OAAA;YAAAoT,QAAA,EAAG;UAA4C;YAAAzF,QAAA,EAAA2F,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACrD;QAAA;UAAA7F,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MACR;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eACbxT,OAAA,CAACN,KAAK,CAACwZ,MAAM;QAAA9F,QAAA,eACTpT,OAAA,CAACL,MAAM;UAACyX,OAAO,EAAC,WAAW;UAACf,OAAO,EAAExK,uBAAwB;UAAAuH,QAAA,EAAC;QAE9D;UAAAzF,QAAA,EAAA2F,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAA7F,QAAA,EAAA2F,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GA1FkE,CAAAxO,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAE+B,EAAE,KAAI,eAAe;MAAA4G,QAAA,EAAA2F,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA2FpH,CAAC;EAAA;IAAA7F,QAAA,EAAA2F,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAAChT,EAAA,CAx9CQD,eAAe;EAAA,QAwD0BlB,OAAO;AAAA;AAAA8Z,EAAA,GAxDhD5Y,eAAe;AA09CxB,eAAeA,eAAe;AAAC,IAAA4Y,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}