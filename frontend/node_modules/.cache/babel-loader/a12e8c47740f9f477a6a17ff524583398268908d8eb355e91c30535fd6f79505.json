{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\nfunction AdminDashboard() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    token\n  } = useAuth();\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const [loadingInitial, setLoadingInitial] = useState(true);\n  const [isAuthChecked, setIsAuthChecked] = useState(false);\n  const [activeTab, setActiveTab] = useState(() => {\n    const savedTab = localStorage.getItem('adminActiveTab');\n    return savedTab || 'overview';\n  });\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [examinations, setExaminations] = useState([]);\n  const [terms, setTerms] = useState([]);\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\n  const [editingDoctor, setEditingDoctor] = useState(null);\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n  const [showTermModal, setShowTermModal] = useState(false);\n  const [editingTerm, setEditingTerm] = useState(null);\n  const [showExaminationModal, setShowExaminationModal] = useState(false);\n  const [editingExamination, setEditingExamination] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n  const [termSearchTerm, setTermSearchTerm] = useState('');\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\n  const [termsCurrentPage, setTermsCurrentPage] = useState(1);\n  const [examinationsCurrentPage, setExaminationsCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: doc.userId,\n        name: `${doc.ime} ${doc.prezime}`,\n        ime: doc.ime,\n        prezime: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        specijalizacije: doc.specijalizacije,\n        city: doc.grad || 'N/A',\n        grad: doc.grad,\n        email: doc.email || 'N/A',\n        telefon: doc.telefon || 'N/A',\n        radnoVrijeme: doc.radnoVrijeme || '',\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : '',\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 0.0\n      }));\n      setDoctors(transformedDoctors);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Greška prilikom dohvaćanja doktora:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\n      const transformedPatients = response.data.map(pat => ({\n        id: pat.pacijentID,\n        userId: pat.userId,\n        name: `${pat.ime} ${pat.prezime}`,\n        ime: pat.ime,\n        prezime: pat.prezime,\n        email: pat.email || 'N/A',\n        phone: pat.telefon || 'N/A',\n        telefon: pat.telefon\n      }));\n      setPatients(transformedPatients);\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\n    }\n  };\n  const fetchTerms = async () => {\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, authHeaders);\n      const transformedTerms = response.data.map(term => ({\n        id: term.terminID,\n        doktorID: term.doktorID,\n        datum: term.datum,\n        vrijeme: term.vrijeme,\n        dostupnost: term.dostupnost\n      }));\n      setTerms(transformedTerms);\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Greška prilikom dohvaćanja termina:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\n    }\n  };\n  const fetchExaminations = async () => {\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\n      const transformedExaminations = response.data.map(app => ({\n        id: app.pregledID,\n        pacijentID: app.pacijentID,\n        doktorID: app.doktorID,\n        patientName: app.pacijentIme || 'N/A',\n        doctorName: app.doktorIme || 'N/A',\n        datumPregleda: app.datumPregleda,\n        vrijemePregleda: app.vrijemePregleda,\n        status: app.status,\n        komentarPacijenta: app.komentarPacijenta || '',\n        ocjenaDoktora: app.ocjenaDoktora || null,\n        terminID: app.terminID !== null && app.terminID !== undefined ? app.terminID : 'N/A'\n      }));\n      setExaminations(transformedExaminations);\n    } catch (error) {\n      var _error$response4;\n      console.error(\"Greška prilikom dohvaćanja pregleda:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja pregleda sa servera.\", \"danger\");\n    }\n  };\n  useEffect(() => {\n    if (token !== undefined && !isAuthChecked) {\n      setIsAuthChecked(true);\n    }\n    const initializeDashboard = async () => {\n      if (isAuthChecked) {\n        if (token) {\n          try {\n            await Promise.all([fetchDoctors(), fetchPatients(), fetchTerms(), fetchExaminations()]);\n          } catch (error) {\n            console.error(\"Greška prilikom inicijalnog dohvaćanja podataka:\", error);\n            showNotification(\"Greška prilikom učitavanja početnih podataka.\", \"danger\");\n          } finally {\n            setLoadingInitial(false);\n          }\n        } else {\n          setLoadingInitial(false);\n          console.warn(\"Provjera autentifikacije završena, ali token nije dostupan. Korisnik nije ulogovan/autorizovan.\");\n        }\n      }\n    };\n    initializeDashboard();\n  }, [token, isAuthChecked]);\n  useEffect(() => {\n    localStorage.setItem('adminActiveTab', activeTab);\n  }, [activeTab]);\n  const handleAddDoctor = async newDoctorData => {\n    try {\n      var _authResponse$data$us;\n      const registerPayload = {\n        email: newDoctorData.email,\n        password: newDoctorData.password,\n        fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\n        telefon: newDoctorData.telefon,\n        roles: [\"ROLE_DOKTOR\"],\n        grad: newDoctorData.grad,\n        specijalizacije: newDoctorData.specijalizacije\n      };\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      console.log(\"Auth Service Register Response Data:\", authResponse.data);\n      const userId = authResponse.data.id || ((_authResponse$data$us = authResponse.data.user) === null || _authResponse$data$us === void 0 ? void 0 : _authResponse$data$us.id) || null;\n      if (!userId) {\n        throw new Error(\"Korisnički ID nije dobiven iz Auth servisa.\");\n      }\n      const doctorDetailsPayload = {\n        userId: userId,\n        ime: newDoctorData.ime,\n        prezime: newDoctorData.prezime,\n        email: newDoctorData.email,\n        telefon: newDoctorData.telefon,\n        grad: newDoctorData.grad,\n        specijalizacije: newDoctorData.specijalizacije,\n        radnoVrijeme: newDoctorData.radnoVrijeme || '',\n        iskustvo: newDoctorData.iskustvo !== null && newDoctorData.iskustvo !== undefined ? newDoctorData.iskustvo : 0,\n        ocjena: 0.0\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/user-details/${userId}`, doctorDetailsPayload, authHeaders);\n      setTimeout(() => {\n        fetchDoctors();\n      }, 500);\n      setShowDoctorModal(false);\n      showNotification('Novi doktor uspješno registrovan i detalji sačuvani!');\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response6$data;\n      console.error(\"Greška prilikom dodavanja doktora:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      showNotification(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Greška prilikom dodavanja doktora.', \"danger\");\n    }\n  };\n  const handleUpdateDoctor = async updatedDoctor => {\n    try {\n      if (!updatedDoctor.id) {\n        showNotification('ID doktora nedostaje za ažuriranje.', 'danger');\n        console.error('ID doktora nedostaje za ažuriranje:', updatedDoctor);\n        return;\n      }\n      const doctorUpdatePayload = {\n        ime: updatedDoctor.ime,\n        prezime: updatedDoctor.prezime,\n        email: updatedDoctor.email,\n        telefon: updatedDoctor.telefon,\n        grad: updatedDoctor.grad,\n        specijalizacije: updatedDoctor.specijalizacije,\n        radnoVrijeme: updatedDoctor.radnoVrijeme || '',\n        iskustvo: updatedDoctor.iskustvo !== null && updatedDoctor.iskustvo !== undefined ? updatedDoctor.iskustvo : 0,\n        ocjena: updatedDoctor.ocjena || 0.0\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\n      const userUpdatePayload = {\n        email: updatedDoctor.email,\n        fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\n        telefon: updatedDoctor.telefon\n      };\n      if (updatedDoctor.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchDoctors();\n      setShowDoctorModal(false);\n      setEditingDoctor(null);\n      showNotification('Doktor uspješno ažuriran!', 'success');\n    } catch (error) {\n      var _error$response7, _error$response8, _error$response8$data;\n      console.error(\"Greška prilikom ažuriranja doktora:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      showNotification(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Greška prilikom ažuriranja doktora.', \"danger\");\n    }\n  };\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(() => () => {});\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\n  const [confirmTitle, setConfirmTitle] = useState(\"Potvrda\");\n  const showCustomConfirm = (message, action, title = \"Potvrda\") => {\n    setConfirmMessage(message);\n    setConfirmAction(() => action);\n    setConfirmTitle(title);\n    setShowConfirmModal(true);\n  };\n  const handleConfirmAction = () => {\n    confirmAction();\n    setShowConfirmModal(false);\n  };\n  const handleDeleteDoctor = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.', async () => {\n      try {\n        const doctorToDelete = doctors.find(doc => doc.id === id);\n        if (!doctorToDelete || !doctorToDelete.userId) {\n          showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\n          return;\n        }\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\n        await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\n        fetchDoctors();\n        showNotification('Doktor uspješno obrisan!', 'danger');\n      } catch (error) {\n        var _error$response9, _error$response0, _error$response0$data;\n        console.error(\"Greška prilikom brisanja doktora:\", ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n        showNotification(((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || 'Greška prilikom brisanja doktora.', \"danger\");\n      }\n    }, \"Potvrdi brisanje doktora\");\n  };\n  const openDoctorModal = (doctor = null) => {\n    setEditingDoctor(doctor);\n    setShowDoctorModal(true);\n  };\n  const filteredDoctors = doctors.filter(doctor => doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()));\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\n  const handleAddPatient = async newPatient => {\n    try {\n      var _authResponse$data$us2;\n      console.log(\"handleAddPatient: Počinjem proces dodavanja pacijenta.\");\n      const registerPayload = {\n        email: newPatient.email,\n        password: newPatient.password,\n        fullName: `${newPatient.ime} ${newPatient.prezime}`,\n        telefon: newPatient.telefon,\n        roles: [\"ROLE_PACIJENT\"],\n        grad: null,\n        specijalizacije: null\n      };\n      console.log(\"handleAddPatient: Slanje registerPayload-a Auth servisu:\", registerPayload);\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      console.log(\"Auth Service Register Response Data (for patient):\", authResponse.data);\n      const userId = authResponse.data.id || ((_authResponse$data$us2 = authResponse.data.user) === null || _authResponse$data$us2 === void 0 ? void 0 : _authResponse$data$us2.id) || null;\n      if (!userId) {\n        throw new Error(\"Korisnički ID nije dobiven iz Auth servisa za pacijenta.\");\n      }\n      console.log(\"handleAddPatient: Preskačem slanje pacijent detalja na korisnici-doktori servis. Očekujem da UserRegisteredEvent to obradi.\");\n      setTimeout(() => {\n        fetchPatients();\n      }, 500);\n      setShowPatientModal(false);\n      showNotification('Novi pacijent uspješno registrovan!', 'success');\n      console.log(\"handleAddPatient: Proces dodavanja pacijenta uspješno završen (registracija i event obrada).\");\n    } catch (error) {\n      var _error$response1, _error$response10, _error$response10$dat;\n      console.error(\"Greška prilikom dodavanja pacijenta:\", ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data) || error.message);\n      showNotification(((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.message) || 'Greška prilikom dodavanja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\n    }\n  };\n  const handleUpdatePatient = async updatedPatient => {\n    try {\n      const patientUpdatePayload = {\n        ime: updatedPatient.ime,\n        prezime: updatedPatient.prezime,\n        email: updatedPatient.email,\n        telefon: updatedPatient.telefon\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\n      const userUpdatePayload = {\n        email: updatedPatient.email,\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\n        telefon: updatedPatient.telefon\n      };\n      if (updatedPatient.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchPatients();\n      setShowPatientModal(false);\n      setEditingPatient(null);\n      showNotification('Pacijent uspješno ažuriran!', 'success');\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response12$dat;\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message);\n      showNotification(((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.message) || 'Greška prilikom ažuriranja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\n    }\n  };\n  const handleDeletePatient = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.', async () => {\n      try {\n        const patientToDelete = patients.find(pat => pat.id === id);\n        if (!patientToDelete || !patientToDelete.userId) {\n          showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\n          return;\n        }\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`, authHeaders);\n        await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\n        fetchPatients();\n        showNotification('Pacijent uspješno obrisan!', 'success');\n      } catch (error) {\n        var _error$response13, _error$response14, _error$response14$dat;\n        console.error(\"Greška prilikom brisanja pacijenta:\", ((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) || error.message);\n        showNotification(((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : (_error$response14$dat = _error$response14.data) === null || _error$response14$dat === void 0 ? void 0 : _error$response14$dat.message) || 'Greška prilikom brisanja pacijenta.', \"danger\");\n      }\n    }, \"Potvrdi brisanje pacijenta\");\n  };\n  const openPatientModal = (patient = null) => {\n    setEditingPatient(patient);\n    setShowPatientModal(true);\n  };\n  const filteredPatients = patients.filter(patient => patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\n  const handleAddTerm = async newTermData => {\n    try {\n      console.log('handleAddTerm - Podaci koji se šalju:', newTermData);\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, newTermData, authHeaders);\n      showNotification('Novi termin uspješno dodan!', 'success');\n      fetchTerms();\n      setShowTermModal(false);\n    } catch (error) {\n      var _error$response15, _error$response16, _error$response16$dat;\n      console.error(\"Greška prilikom dodavanja termina:\", ((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.data) || error.message);\n      showNotification(((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : (_error$response16$dat = _error$response16.data) === null || _error$response16$dat === void 0 ? void 0 : _error$response16$dat.message) || 'Greška prilikom dodavanja termina.', \"danger\");\n    }\n  };\n  const handleUpdateTerm = async updatedTerm => {\n    try {\n      const termPayload = {\n        doktorID: updatedTerm.doktorID,\n        datum: updatedTerm.datum,\n        vrijeme: updatedTerm.vrijeme,\n        dostupnost: updatedTerm.dostupnost\n      };\n      console.log('handleUpdateTerm - Podaci koji se šalju:', termPayload);\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${updatedTerm.id}`, termPayload, authHeaders);\n      showNotification('Termin uspješno ažuriran!', 'success');\n      fetchTerms();\n      setShowTermModal(false);\n      setEditingTerm(null);\n    } catch (error) {\n      var _error$response17, _error$response18, _error$response18$dat;\n      console.error(\"Greška prilikom ažuriranja termina:\", ((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : _error$response17.data) || error.message);\n      showNotification(((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : (_error$response18$dat = _error$response18.data) === null || _error$response18$dat === void 0 ? void 0 : _error$response18$dat.message) || 'Greška prilikom ažuriranja termina.', \"danger\");\n    }\n  };\n  const handleDeleteTerm = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovaj termin?', async () => {\n      try {\n        await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${id}`, authHeaders);\n        showNotification('Termin uspješno obrisan!', 'success');\n        fetchTerms();\n      } catch (error) {\n        var _error$response19, _error$response20, _error$response20$dat;\n        console.error(\"Greška prilikom brisanja termina:\", ((_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : _error$response19.data) || error.message);\n        showNotification(((_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : (_error$response20$dat = _error$response20.data) === null || _error$response20$dat === void 0 ? void 0 : _error$response20$dat.message) || 'Greška prilikom brisanja termina.', \"danger\");\n      }\n    }, \"Potvrdi brisanje termina\");\n  };\n  const openTermModal = (term = null) => {\n    if (term) {\n      setEditingTerm({\n        ...term,\n        doktorID: term.doktorID,\n        dostupnost: term.dostupnost\n      });\n    } else {\n      setEditingTerm(null);\n    }\n    setShowTermModal(true);\n  };\n  const filteredTerms = terms.filter(term => term.doktorID != null && term.doktorID.toString().toLowerCase().includes(termSearchTerm.toLowerCase()) || term.datum && term.datum.toLowerCase().includes(termSearchTerm.toLowerCase()) || term.vrijeme && term.vrijeme.toLowerCase().includes(termSearchTerm.toLowerCase()) || term.dostupnost !== undefined && (term.dostupnost ? 'dostupan' : 'zauzet').includes(termSearchTerm.toLowerCase()));\n  const indexOfLastTerm = termsCurrentPage * itemsPerPage;\n  const indexOfFirstTerm = indexOfLastTerm - itemsPerPage;\n  const currentTerms = filteredTerms.slice(indexOfFirstTerm, indexOfLastTerm);\n  const totalTermPages = Math.ceil(filteredTerms.length / itemsPerPage);\n  const handleAddExamination = async newExaminationData => {\n    console.log('Attempting to add new examination with data:', newExaminationData);\n    try {\n      const payload = {\n        pacijentID: newExaminationData.pacijentID,\n        doktorID: newExaminationData.doktorID,\n        terminID: newExaminationData.terminID,\n        datumPregleda: newExaminationData.datumPregleda,\n        vrijemePregleda: newExaminationData.vrijemePregleda,\n        status: newExaminationData.status,\n        komentarPacijenta: newExaminationData.komentarPacijenta,\n        ocjenaDoktora: newExaminationData.ocjenaDoktora\n      };\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, payload, authHeaders);\n      console.log('Backend response:', response.data);\n      fetchExaminations();\n      setShowExaminationModal(false);\n      showNotification('Novi pregled uspješno dodan!', 'success');\n    } catch (error) {\n      var _error$response21, _error$response22, _error$response22$dat;\n      console.error(\"Greška prilikom dodavanja pregleda:\", ((_error$response21 = error.response) === null || _error$response21 === void 0 ? void 0 : _error$response21.data) || error.message);\n      const errorMessage = ((_error$response22 = error.response) === null || _error$response22 === void 0 ? void 0 : (_error$response22$dat = _error$response22.data) === null || _error$response22$dat === void 0 ? void 0 : _error$response22$dat.message) || error.message || 'Nepoznata greška prilikom dodavanja pregleda.';\n      showNotification(errorMessage, \"danger\");\n    }\n  };\n  const handleUpdateExamination = async updatedExamination => {\n    try {\n      if (!updatedExamination.id) {\n        showNotification('ID pregleda nedostaje za ažuriranje.', 'danger');\n        console.error('ID pregleda nedostaje za ažuriranje:', updatedExamination);\n        return;\n      }\n      const payload = {\n        pacijentID: updatedExamination.pacijentID,\n        doktorID: updatedExamination.doktorID,\n        terminID: updatedExamination.terminID,\n        datumPregleda: updatedExamination.datumPregleda,\n        vrijemePregleda: updatedExamination.vrijemePregleda,\n        status: updatedExamination.status,\n        komentarPacijenta: updatedExamination.komentarPacijenta,\n        ocjenaDoktora: updatedExamination.ocjenaDoktora\n      };\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${updatedExamination.id}`, payload, authHeaders);\n      fetchExaminations();\n      setShowExaminationModal(false);\n      showNotification('Pregled uspješno ažuriran!', 'success');\n    } catch (error) {\n      var _error$response23, _error$response24, _error$response24$dat;\n      console.error(\"Greška prilikom ažuriranja pregleda:\", ((_error$response23 = error.response) === null || _error$response23 === void 0 ? void 0 : _error$response23.data) || error.message);\n      const errorMessage = ((_error$response24 = error.response) === null || _error$response24 === void 0 ? void 0 : (_error$response24$dat = _error$response24.data) === null || _error$response24$dat === void 0 ? void 0 : _error$response24$dat.message) || error.message || 'Nepoznata greška prilikom ažuriranja pregleda.';\n      showNotification(errorMessage, \"danger\");\n    }\n  };\n  const handleDeleteExamination = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovaj pregled?', async () => {\n      try {\n        await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, authHeaders);\n        showNotification('Pregled uspješno obrisan!', 'success');\n        fetchExaminations();\n      } catch (error) {\n        var _error$response25, _error$response26, _error$response26$dat;\n        console.error(\"Greška prilikom brisanja pregleda:\", ((_error$response25 = error.response) === null || _error$response25 === void 0 ? void 0 : _error$response25.data) || error.message);\n        showNotification(((_error$response26 = error.response) === null || _error$response26 === void 0 ? void 0 : (_error$response26$dat = _error$response26.data) === null || _error$response26$dat === void 0 ? void 0 : _error$response26$dat.message) || 'Greška prilikom brisanja pregleda.', \"danger\");\n      }\n    }, \"Potvrdi brisanje pregleda\");\n  };\n\n  // Dodatni logovi u openExaminationModal\n  const openExaminationModal = (examination = null) => {\n    console.log(\"[AdminDashboard] openExaminationModal called. Initial examination data:\", examination);\n    if (examination) {\n      setEditingExamination({\n        ...examination,\n        pacijentID: examination.pacijentID,\n        doktorID: examination.doktorID,\n        terminID: examination.terminID,\n        datumPregleda: examination.datumPregleda,\n        vrijemePregleda: examination.vrijemePregleda\n      });\n    } else {\n      setEditingExamination(null);\n    }\n    setShowExaminationModal(true);\n    console.log(\"[AdminDashboard] After setting editingExamination and showExaminationModal. Next render will show DataModal.\");\n  };\n  const filteredExaminations = examinations.filter(exam => exam.patientName && exam.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.doctorName && exam.doctorName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.status && exam.status.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.datumPregleda && exam.datumPregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.vrijemePregleda && exam.vrijemePregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()));\n  const indexOfLastExamination = examinationsCurrentPage * itemsPerPage;\n  const indexOfFirstExamination = indexOfLastExamination - itemsPerPage;\n  const currentExaminations = filteredExaminations.slice(indexOfFirstExamination, indexOfLastExamination);\n  const totalExaminationPages = Math.ceil(filteredExaminations.length / itemsPerPage);\n\n  // Polja za modal doktora\n  const addDoctorFields = [{\n    name: 'ime',\n    label: 'Ime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Prezime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Lozinka',\n    type: 'password',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Telefon',\n    type: 'text',\n    required: true\n  }, {\n    name: 'grad',\n    label: 'Grad',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specijalizacija',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Radno Vrijeme',\n    type: 'text'\n  }, {\n    name: 'iskustvo',\n    label: 'Godine Iskustva',\n    type: 'number'\n  }];\n  const editDoctorFields = [{\n    name: 'id',\n    label: 'ID Doktora',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'ime',\n    label: 'Ime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Prezime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Telefon',\n    type: 'text',\n    required: true\n  }, {\n    name: 'grad',\n    label: 'Grad',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specijalizacija',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Radno Vrijeme',\n    type: 'text'\n  }, {\n    name: 'iskustvo',\n    label: 'Godine Iskustva',\n    type: 'number'\n  }, {\n    name: 'ocjena',\n    label: 'Ocjena',\n    type: 'number',\n    readOnly: true\n  }];\n\n  // Polja za modal pacijenata\n  const addPatientFields = [{\n    name: 'ime',\n    label: 'Ime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Prezime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Lozinka',\n    type: 'password',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Telefon',\n    type: 'text',\n    required: true\n  }];\n  const editPatientFields = [{\n    name: 'id',\n    label: 'ID Pacijenta',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'ime',\n    label: 'Ime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Prezime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Telefon',\n    type: 'text',\n    required: true\n  }];\n\n  // Polja za modal termina\n  const addTermFields = [{\n    name: 'doktorID',\n    label: 'ID Doktora',\n    type: 'number',\n    required: true\n  }, {\n    name: 'datum',\n    label: 'Datum',\n    type: 'date',\n    required: true\n  }, {\n    name: 'vrijeme',\n    label: 'Vrijeme (HH:mm)',\n    type: 'time',\n    required: true\n  }, {\n    name: 'dostupnost',\n    label: 'Dostupnost',\n    type: 'checkbox'\n  }];\n  const editTermFields = [{\n    name: 'id',\n    label: 'ID Termina',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'doktorID',\n    label: 'ID Doktora',\n    type: 'number',\n    required: true\n  }, {\n    name: 'datum',\n    label: 'Datum',\n    type: 'date',\n    required: true\n  }, {\n    name: 'vrijeme',\n    label: 'Vrijeme (HH:mm)',\n    type: 'time',\n    required: true\n  }, {\n    name: 'dostupnost',\n    label: 'Dostupnost',\n    type: 'checkbox'\n  }];\n\n  // Polja za modal pregleda\n  const addExaminationFields = [{\n    name: 'pacijentID',\n    label: 'ID Pacijenta',\n    type: 'number',\n    required: true\n  }, {\n    name: 'terminID',\n    label: 'ID Termina',\n    type: 'number',\n    required: true\n  }, {\n    name: 'doktorID',\n    label: 'ID Doktora',\n    type: 'number',\n    required: true,\n    readOnly: false\n  }, {\n    name: 'datumPregleda',\n    label: 'Datum Pregleda',\n    type: 'date',\n    required: true,\n    readOnly: false\n  }, {\n    name: 'vrijemePregleda',\n    label: 'Vrijeme Pregleda',\n    type: 'time',\n    required: true,\n    readOnly: false\n  }, {\n    name: 'status',\n    label: 'Status',\n    type: 'select',\n    options: ['zakazan', 'obavljen', 'otkazan'],\n    required: true\n  }, {\n    name: 'komentarPacijenta',\n    label: 'Komentar Pacijenta',\n    type: 'textarea'\n  }, {\n    name: 'ocjenaDoktora',\n    label: 'Ocjena Doktora',\n    type: 'number'\n  }];\n  const editExaminationFields = [{\n    name: 'id',\n    label: 'ID Pregleda',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'pacijentID',\n    label: 'ID Pacijenta',\n    type: 'number',\n    required: true\n  }, {\n    name: 'terminID',\n    label: 'ID Termina',\n    type: 'number',\n    required: true\n  }, {\n    name: 'doktorID',\n    label: 'ID Doktora',\n    type: 'number',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'datumPregleda',\n    label: 'Datum Pregleda',\n    type: 'date',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'vrijemePregleda',\n    label: 'Vrijeme Pregleda',\n    type: 'time',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'status',\n    label: 'Status',\n    type: 'select',\n    options: ['zakazan', 'obavljen', 'otkazan'],\n    required: true\n  }, {\n    name: 'komentarPacijenta',\n    label: 'Komentar Pacijenta',\n    type: 'textarea'\n  }, {\n    name: 'ocjenaDoktora',\n    label: 'Ocjena Doktora',\n    type: 'number'\n  }];\n\n  // Komponenta za modal za unos/uređivanje podataka (Doktor/Pacijent/Termin/Pregled)\n  const DataModal = ({\n    show,\n    onClose,\n    data,\n    onSave,\n    fields,\n    title,\n    idPrefix,\n    authHeaders,\n    showNotification\n  }) => {\n    _s();\n    const prevTerminIDRef = useRef(null);\n    const [shouldFetchTermDetails, setShouldFetchTermDetails] = useState(false);\n\n    // Initial state for formData\n    // Koristimo funkciju za inicijalizaciju kako bismo osigurali da se formData inicijalizuje SAMO jednom po mountu\n    // i da koristi najnovije 'data' i 'fields' propse\n    const [formData, setFormData] = useState(() => {\n      const initialData = data ? {\n        ...data\n      } : {};\n      fields.forEach(field => {\n        if (data && data[field.name] !== undefined && data[field.name] !== null) {\n          let value = data[field.name];\n          if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\n            value = value.split('T')[0];\n          } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\n            value = value.substring(0, 8);\n          } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\n            value = value[0] || '';\n          }\n          initialData[field.name] = value;\n        } else {\n          if (field.name === 'specijalizacije') {\n            initialData[field.name] = '';\n          } else if (field.type === 'number') {\n            initialData[field.name] = null;\n          } else if (field.type === 'checkbox') {\n            initialData[field.name] = false;\n          } else {\n            initialData[field.name] = '';\n          }\n        }\n      });\n      console.log(`[DataModal ${idPrefix}] Initializing formData for new mount/reset:`, initialData);\n      return initialData;\n    });\n\n    // useEffect for handling changes to 'data' prop (when editing an existing item)\n    // This will re-run when 'data' prop (e.g., editingExamination) changes, resetting the form to match the new item.\n    // It should *not* cause re-initialization if 'data' is always a new object with the same content (due to memoization).\n    useEffect(() => {\n      // Only run this effect if 'data' object itself changes, or 'fields' array changes (e.g., switching from add to edit fields)\n      // If data is null (adding new), reset to default empty values for the given fields\n      if (data === null) {\n        const emptyData = {};\n        fields.forEach(field => {\n          if (field.name === 'specijalizacije') {\n            emptyData[field.name] = '';\n          } else if (field.type === 'number') {\n            emptyData[field.name] = null;\n          } else if (field.type === 'checkbox') {\n            emptyData[field.name] = false;\n          } else {\n            emptyData[field.name] = '';\n          }\n        });\n        setFormData(emptyData);\n        console.log(`[DataModal ${idPrefix}] useEffect 1: Resetting form for new entry (data is null):`, emptyData);\n      } else {\n        // If data exists (editing), set form to data values\n        const currentDataTransformed = {};\n        fields.forEach(field => {\n          if (data[field.name] !== undefined && data[field.name] !== null) {\n            let value = data[field.name];\n            if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\n              value = value.split('T')[0];\n            } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\n              value = value.substring(0, 8);\n            } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\n              value = value[0] || '';\n            } else if (field.type === 'checkbox') {\n              value = Boolean(value);\n            }\n            currentDataTransformed[field.name] = value;\n          } else {\n            if (field.name === 'specijalizacije') {\n              currentDataTransformed[field.name] = '';\n            } else if (field.type === 'number') {\n              currentDataTransformed[field.name] = null;\n            } else if (field.type === 'checkbox') {\n              currentDataTransformed[field.name] = false;\n            } else {\n              currentDataTransformed[field.name] = '';\n            }\n          }\n        });\n        setFormData(currentDataTransformed);\n        console.log(`[DataModal ${idPrefix}] useEffect 1: Setting form for editing (data exists):`, currentDataTransformed);\n      }\n      prevTerminIDRef.current = null; // Reset reference to force re-fetch if Term ID is the same but new data\n      setShouldFetchTermDetails(false); // Reset the fetch trigger when form data changes\n    }, [data, fields, idPrefix]); // Dependencies: data object, fields array, idPrefix\n\n    // Handle blur event for TerminID to trigger fetch\n    const handleTerminIDBlur = () => {\n      if (idPrefix === 'examination') {\n        const currentTerminID = formData.terminID;\n        const isNumericAndValidTerminID = typeof currentTerminID === 'number' && currentTerminID > 0;\n        console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: currentTerminID: ${currentTerminID}, prevTerminIDRef.current: ${prevTerminIDRef.current}`);\n        if (isNumericAndValidTerminID && currentTerminID !== prevTerminIDRef.current) {\n          console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: Valid NEW Termin ID detected. Setting shouldFetchTermDetails to true.`);\n          setShouldFetchTermDetails(true);\n        } else if (!isNumericAndValidTermenID && prevTerminIDRef.current !== null) {\n          // TerminID became invalid after being valid previously, reset associated fields\n          console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: Termin ID became invalid (${currentTerminID}) after being valid. Resetting associated fields.`);\n          setFormData(prev => ({\n            ...prev,\n            doktorID: null,\n            datumPregleda: '',\n            vrijemePregleda: ''\n          }));\n          prevTerminIDRef.current = null; // Reset reference as well\n          setShouldFetchTermDetails(false); // Stop any pending fetch\n        } else if (currentTerminID === null || currentTerminID === 0 || currentTerminID === '') {\n          // TerminID is explicitly null, 0, or empty string. Reset fields if they were populated.\n          console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: Termin ID is null/0/empty. Resetting associated fields if they were populated by a previous term.`);\n          // Only reset if doktorID, datumPregleda or vrijemePregleda currently have values (to prevent unwanted resets on initial render)\n          if (formData.doktorID !== null || formData.datumPregleda !== '' || formData.vrijemePregleda !== '') {\n            setFormData(prev => ({\n              ...prev,\n              doktorID: null,\n              datumPregleda: '',\n              vrijemePregleda: ''\n            }));\n          }\n          prevTerminIDRef.current = null;\n          setShouldFetchTermDetails(false);\n        }\n      }\n    };\n\n    // useEffect for performing the actual term details fetch (now controlled by shouldFetchTermDetails)\n    useEffect(() => {\n      if (shouldFetchTermDetails && idPrefix === 'examination') {\n        const terminIDToFetch = formData.terminID; // Use the latest value from formData\n        if (!(typeof terminIDToFetch === 'number' && terminIDToFetch > 0)) {\n          console.warn(`[DataModal ${idPrefix}] useEffect Fetcher: Invalid terminID for fetching:`, terminIDToFetch);\n          setShouldFetchTermDetails(false);\n          return;\n        }\n        const fetchTermDetails = async () => {\n          console.log(`[DataModal ${idPrefix}] useEffect Fetcher: Attempting to fetch details for ID: ${terminIDToFetch}`);\n          try {\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${terminIDToFetch}`, authHeaders);\n            const fetchedTerm = response.data;\n            console.log(`[DataModal ${idPrefix}] useEffect Fetcher SUCCESS: Term details fetched:`, fetchedTerm);\n            setFormData(prev => {\n              const newState = {\n                ...prev,\n                doktorID: fetchedTerm.doktorID,\n                datumPregleda: fetchedTerm.datum,\n                vrijemePregleda: fetchedTerm.vrijeme.substring(0, 8)\n              };\n              console.log(`[DataModal ${idPrefix}] useEffect Fetcher SUCCESS: Setting formData to:`, newState);\n              return newState;\n            });\n            prevTerminIDRef.current = terminIDToFetch; // Update ref ONLY on successful fetch\n            showNotification('Detalji termina uspješno popunjeni!', 'info');\n          } catch (error) {\n            var _error$response27;\n            console.error(`[DataModal ${idPrefix}] useEffect Fetcher ERROR: Greška prilikom dohvaćanja detalja termina:`, ((_error$response27 = error.response) === null || _error$response27 === void 0 ? void 0 : _error$response27.data) || error.message);\n            showNotification('Greška prilikom dohvaćanja detalja termina. Provjerite Term ID.', \"danger\");\n            setFormData(prev => {\n              const newState = {\n                ...prev,\n                doktorID: null,\n                datumPregleda: '',\n                vrijemePregleda: ''\n              };\n              console.log(`[DataModal ${idPrefix}] useEffect Fetcher ERROR: Resetting formData due to fetch error:`, newState);\n              return newState;\n            });\n            prevTerminIDRef.current = null; // Reset ref on error\n          } finally {\n            setShouldFetchTermDetails(false); // Always reset fetch trigger\n          }\n        };\n        fetchTermDetails();\n      }\n    }, [shouldFetchTermDetails, idPrefix, authHeaders, showNotification, TERMINI_PREGLEDI_API_PREFIX]);\n    const handleChange = e => {\n      const {\n        name,\n        value,\n        type,\n        checked\n      } = e.target;\n      console.log(`[DataModal ${idPrefix}] handleChange: Field: ${name}, Value: \"${value}\", Type: ${type}`);\n      console.log(`[DataModal ${idPrefix}] handleChange: Current formData BEFORE update for ${name}:`, formData);\n      setFormData(prev => {\n        let newValue = value;\n        if (name === 'specijalizacije') {\n          newValue = value;\n        } else if (type === 'number') {\n          newValue = value === '' ? null : Number(value);\n          if (isNaN(newValue)) {\n            newValue = null;\n          }\n        } else if (type === 'checkbox') {\n          newValue = checked;\n        }\n        const newState = {\n          ...prev,\n          [name]: newValue\n        };\n        console.log(`[DataModal ${idPrefix}] handleChange: New formData state for ${name}:`, newState);\n        return newState;\n      });\n    };\n    const handleSubmit = e => {\n      e.preventDefault();\n      const finalFormData = {\n        ...formData\n      };\n      if (idPrefix === 'doctor' && typeof finalFormData.specijalizacije === 'string') {\n        finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\n      }\n\n      // Frontend Validation before submission\n      let validationErrors = [];\n      fields.forEach(field => {\n        if (field.required) {\n          if (field.type === 'text' || field.type === 'textarea' || field.type === 'date' || field.type === 'time' || field.type === 'select') {\n            if (!finalFormData[field.name] || finalFormData[field.name].toString().trim() === '') {\n              validationErrors.push(`${field.label} je obavezno polje.`);\n            }\n          } else if (field.type === 'number') {\n            if (finalFormData[field.name] === null || finalFormData[field.name] === undefined || typeof finalFormData[field.name] !== 'number' || finalFormData[field.name] <= 0) {\n              validationErrors.push(`${field.label} je obavezno polje i mora biti validan ID (broj veći od 0).`);\n            }\n          }\n        }\n      });\n      if (validationErrors.length > 0) {\n        showNotification(`Molimo popunite sva obavezna polja:\\n- ${validationErrors.join('\\n- ')}`, 'danger');\n        return;\n      }\n      fields.forEach(field => {\n        if (field.type === 'number' && field.required) {\n          if (finalFormData[field.name] === null || finalFormData[field.name] === undefined) {\n            finalFormData[field.name] = 0;\n          }\n        }\n      });\n      if (idPrefix === 'term' && finalFormData.vrijeme) {\n        if (finalFormData.vrijeme.length === 5) {\n          finalFormData.vrijeme += ':00';\n        }\n      } else if (idPrefix === 'examination' && finalFormData.vrijemePregleda) {\n        if (finalFormData.vrijemePregleda.length === 5) {\n          finalFormData.vrijemePregleda += ':00';\n        }\n      }\n      console.log(`[DataModal ${idPrefix}] handleSubmit: Final payload for submission:`, finalFormData);\n      onSave(finalFormData);\n    };\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: onClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: fields.map(field => /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: `${idPrefix}-${field.name}`,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 17\n            }, this), field.type === 'select' ? /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: field.name,\n              value: formData[field.name] === null ? '' : formData[field.name],\n              onChange: handleChange,\n              required: field.required,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: [\"Select \", field.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 21\n              }, this), field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 992,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 19\n            }, this) : field.type === 'textarea' ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 19\n            }, this) : field.type === 'checkbox' ? /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              name: field.name,\n              checked: formData[field.name] || false,\n              onChange: handleChange,\n              label: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: field.type || 'text',\n              name: field.name,\n              value: formData[field.name] === null || formData[field.name] === undefined || formData[field.name] === 'N/A' ? '' : formData[field.name],\n              onChange: handleChange,\n              required: field.required,\n              readOnly: !!data && (field.name === 'doktorID' || field.name === 'datumPregleda' || field.name === 'vrijemePregleda')\n              // Dodano onBlur za terminID\n              ,\n              onBlur: field.name === 'terminID' && idPrefix === 'examination' ? handleTerminIDBlur : undefined\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 19\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 7\n    }, this);\n  };\n  _s(DataModal, \"B8Tunh0z4K2f/C9KyriV1kOFav0=\");\n  const Pagination = ({\n    itemsPerPage,\n    totalItems,\n    currentPage,\n    paginate\n  }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center mt-4\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === number ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 15\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1052,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 7\n    }, this);\n  };\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Dashboard Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1070,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-primary mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Doctors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1074,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: doctors.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1076,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1075,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1073,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1072,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-success mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Patients\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1082,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: patients.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1084,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1083,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1081,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-info mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Available Terms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1090,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: terms.filter(t => t.dostupnost === true).length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1092,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1091,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1089,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1088,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-warning mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Pending Examinations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1098,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: examinations.filter(exam => exam.status === 'zakazan').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1100,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1099,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1071,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Quick Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2 flex-wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => openDoctorModal(),\n                children: \"Add New Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-success\",\n                onClick: () => openPatientModal(),\n                children: \"Add New Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-info\",\n                onClick: () => openTermModal(),\n                children: \"Add New Term\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-warning\",\n                onClick: () => openExaminationModal(),\n                children: \"Add New Examination\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1069,\n          columnNumber: 11\n        }, this);\n      case 'doctors':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Doctors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openDoctorModal(),\n              children: \"Add New Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search doctors...\",\n              value: doctorSearchTerm,\n              onChange: e => setDoctorSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1134,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1135,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Specialty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1136,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"City\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1137,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1138,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1139,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Work Hours\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1140,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Experience\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1141,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1142,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1143,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1133,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentDoctors.length > 0 ? currentDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1150,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1151,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.specialty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1152,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.city\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1153,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1154,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.telefon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1155,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.radnoVrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1156,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.iskustvo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1157,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.ocjena\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1158,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openDoctorModal(doctor),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1160,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteDoctor(doctor.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1161,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1159,\n                    columnNumber: 25\n                  }, this)]\n                }, doctor.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1149,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"10\",\n                    className: \"text-center\",\n                    children: \"No doctors found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1167,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1166,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredDoctors.length,\n            currentPage: doctorsCurrentPage,\n            paginate: setDoctorsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 11\n        }, this);\n      case 'patients':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openPatientModal(),\n              children: \"Add New Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search patients...\",\n              value: patientSearchTerm,\n              onChange: e => setPatientSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1199,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1200,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1201,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1202,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1203,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1198,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentPatients.length > 0 ? currentPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1210,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1211,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1212,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.telefon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1213,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openPatientModal(patient),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1215,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeletePatient(patient.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1216,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1214,\n                    columnNumber: 25\n                  }, this)]\n                }, patient.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1209,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"No patients found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1222,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1221,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredPatients.length,\n            currentPage: patientsCurrentPage,\n            paginate: setPatientsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 11\n        }, this);\n      case 'terms':\n        // Novi tab za termine\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openTermModal(),\n              children: \"Add New Term\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search terms...\",\n              value: termSearchTerm,\n              onChange: e => setTermSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1254,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1255,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1256,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1257,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1258,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1259,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1253,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentTerms.length > 0 ? currentTerms.map(term => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1266,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.doktorID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1267,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.datum\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1268,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.vrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1269,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.dostupnost ? 'Dostupan' : 'Zauzet'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1270,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openTermModal(term),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1272,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteTerm(term.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1273,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1271,\n                    columnNumber: 25\n                  }, this)]\n                }, term.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1265,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: \"text-center\",\n                    children: \"No terms found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1279,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1278,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1262,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredTerms.length,\n            currentPage: termsCurrentPage,\n            paginate: setTermsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1238,\n          columnNumber: 11\n        }, this);\n      case 'examinations':\n        // Novi tab za preglede (prethodno appointments)\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Examinations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openExaminationModal(),\n              children: \"Add New Examination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search examinations...\",\n              value: examinationSearchTerm,\n              onChange: e => setExaminationSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1311,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Patient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1312,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1313,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Term ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1314,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1315,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1316,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1317,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Patient Comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1318,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1319,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1320,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1310,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentExaminations.length > 0 ? currentExaminations.map(examination => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1327,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.patientName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1328,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.doctorName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1329,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.terminID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1330,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.datumPregleda\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1331,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.vrijemePregleda\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1332,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select\",\n                      value: examination.status,\n                      onChange: e => handleUpdateExamination({\n                        ...examination,\n                        status: e.target.value,\n                        datumPregleda: examination.datumPregleda,\n                        vrijemePregleda: examination.vrijemePregleda\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"zakazan\",\n                        children: \"Zakazan\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1346,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"obavljen\",\n                        children: \"Obavljen\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1347,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"otkazan\",\n                        children: \"Otkazan\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1348,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1334,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1333,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.komentarPacijenta\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1351,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.ocjenaDoktora\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1352,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openExaminationModal(examination),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1354,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteExamination(examination.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1355,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1353,\n                    columnNumber: 25\n                  }, this)]\n                }, examination.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1326,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"10\",\n                    className: \"text-center\",\n                    children: \"No examinations found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1361,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1360,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1323,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1308,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredExaminations.length,\n            currentPage: examinationsCurrentPage,\n            paginate: setExaminationsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1295,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a tab to view content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1376,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  if (loadingInitial) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje administratorskog panela...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1385,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1384,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1383,\n      columnNumber: 7\n    }, this);\n  }\n  if (!loadingInitial && !token && isAuthChecked) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-danger\",\n          children: \"Pristup odbijen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead\",\n          children: \"Niste autorizovani za pristup ovoj stranici. Molimo prijavite se kao administrator.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1394,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1393,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alertType,\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n      style: {\n        zIndex: 1050\n      },\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1405,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showConfirmModal,\n      onHide: () => setShowConfirmModal(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: confirmTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1412,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: confirmMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowConfirmModal(false),\n          children: \"Poni\\u0161ti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleConfirmAction,\n          children: \"Potvrdi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1421,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1417,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1410,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\",\n        style: {\n          minHeight: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky pt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'overview' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('overview'),\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1432,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1431,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'doctors' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('doctors'),\n                children: \"Doctors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1437,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'patients' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('patients'),\n                children: \"Patients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1442,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'terms' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('terms'),\n                children: \"Terms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1447,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1446,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'examinations' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('examinations'),\n                children: \"Examinations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1452,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1451,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1430,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1429,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1460,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1427,\n      columnNumber: 7\n    }, this), showDoctorModal && /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showDoctorModal,\n      onClose: () => {\n        setShowDoctorModal(false);\n        setEditingDoctor(null);\n      } // Dodana funkcija za resetovanje state-a\n      ,\n      data: editingDoctor,\n      onSave: editingDoctor ? handleUpdateDoctor : handleAddDoctor,\n      title: editingDoctor ? 'Uredi Doktora' : 'Dodaj Novog Doktora',\n      idPrefix: \"doctor\",\n      fields: editingDoctor ? editDoctorFields : addDoctorFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification\n    }, editingDoctor ? `edit-doctor-${editingDoctor.id}` : 'add-doctor', false, {\n      fileName: _jsxFileName,\n      lineNumber: 1466,\n      columnNumber: 9\n    }, this), showPatientModal && /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showPatientModal,\n      onClose: () => {\n        setShowPatientModal(false);\n        setEditingPatient(null);\n      } // Dodana funkcija za resetovanje state-a\n      ,\n      data: editingPatient,\n      onSave: editingPatient ? handleUpdatePatient : handleAddPatient,\n      title: editingPatient ? 'Uredi Pacijenta' : 'Dodaj Novog Pacijenta',\n      idPrefix: \"patient\",\n      fields: editingPatient ? editPatientFields : addPatientFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification\n    }, editingPatient ? `edit-patient-${editingPatient.id}` : 'add-patient', false, {\n      fileName: _jsxFileName,\n      lineNumber: 1481,\n      columnNumber: 9\n    }, this), showTermModal && /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showTermModal,\n      onClose: () => {\n        setShowTermModal(false);\n        setEditingTerm(null);\n      } // Dodana funkcija za resetovanje state-a\n      ,\n      data: editingTerm,\n      onSave: editingTerm ? handleUpdateTerm : handleAddTerm,\n      title: editingTerm ? 'Uredi Termin' : 'Dodaj Novi Termin',\n      idPrefix: \"term\",\n      fields: editingTerm ? editTermFields : addTermFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification\n    }, editingTerm ? `edit-term-${editingTerm.id}` : 'add-term', false, {\n      fileName: _jsxFileName,\n      lineNumber: 1496,\n      columnNumber: 9\n    }, this), showExaminationModal && /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showExaminationModal,\n      onClose: () => {\n        setShowExaminationModal(false);\n        setEditingExamination(null);\n      } // Dodana funkcija za resetovanje state-a\n      ,\n      data: editingExamination,\n      onSave: editingExamination ? handleUpdateExamination : handleAddExamination,\n      title: editingExamination ? 'Uredi Pregled' : 'Dodaj Novi Pregled',\n      idPrefix: \"examination\",\n      fields: editingExamination ? editExaminationFields : addExaminationFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification\n    }, editingExamination ? `edit-examination-${editingExamination.id}` : 'add-examination', false, {\n      fileName: _jsxFileName,\n      lineNumber: 1511,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1403,\n    columnNumber: 5\n  }, this);\n}\n_s2(AdminDashboard, \"afq1K7bojrsB5rih4YDmr06H6ZE=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","axios","useAuth","Modal","Button","Form","Alert","jsxDEV","_jsxDEV","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","AUTH_API_PREFIX","AdminDashboard","_s2","_s","$RefreshSig$","token","authHeaders","headers","loadingInitial","setLoadingInitial","isAuthChecked","setIsAuthChecked","activeTab","setActiveTab","savedTab","localStorage","getItem","doctors","setDoctors","patients","setPatients","examinations","setExaminations","terms","setTerms","showDoctorModal","setShowDoctorModal","editingDoctor","setEditingDoctor","showPatientModal","setShowPatientModal","editingPatient","setEditingPatient","showTermModal","setShowTermModal","editingTerm","setEditingTerm","showExaminationModal","setShowExaminationModal","editingExamination","setEditingExamination","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","doctorSearchTerm","setDoctorSearchTerm","patientSearchTerm","setPatientSearchTerm","termSearchTerm","setTermSearchTerm","examinationSearchTerm","setExaminationSearchTerm","doctorsCurrentPage","setDoctorsCurrentPage","patientsCurrentPage","setPatientsCurrentPage","termsCurrentPage","setTermsCurrentPage","examinationsCurrentPage","setExaminationsCurrentPage","itemsPerPage","showNotification","message","type","setTimeout","fetchDoctors","response","get","transformedDoctors","data","map","doc","id","doktorID","userId","name","ime","prezime","specialty","Array","isArray","specijalizacije","length","join","city","grad","email","telefon","radnoVrijeme","iskustvo","undefined","ocjena","error","_error$response","console","fetchPatients","transformedPatients","pat","pacijentID","phone","_error$response2","fetchTerms","transformedTerms","term","terminID","datum","vrijeme","dostupnost","_error$response3","fetchExaminations","transformedExaminations","app","pregledID","patientName","pacijentIme","doctorName","doktorIme","datumPregleda","vrijemePregleda","status","komentarPacijenta","ocjenaDoktora","_error$response4","initializeDashboard","Promise","all","warn","setItem","handleAddDoctor","newDoctorData","_authResponse$data$us","registerPayload","password","fullName","roles","authResponse","post","log","user","Error","doctorDetailsPayload","put","_error$response5","_error$response6","_error$response6$data","handleUpdateDoctor","updatedDoctor","doctorUpdatePayload","userUpdatePayload","_error$response7","_error$response8","_error$response8$data","showConfirmModal","setShowConfirmModal","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","confirmTitle","setConfirmTitle","showCustomConfirm","action","title","handleConfirmAction","handleDeleteDoctor","doctorToDelete","find","delete","_error$response9","_error$response0","_error$response0$data","openDoctorModal","doctor","filteredDoctors","filter","toLowerCase","includes","indexOfLastDoctor","indexOfFirstDoctor","currentDoctors","slice","totalDoctorPages","Math","ceil","handleAddPatient","newPatient","_authResponse$data$us2","_error$response1","_error$response10","_error$response10$dat","handleUpdatePatient","updatedPatient","patientUpdatePayload","_error$response11","_error$response12","_error$response12$dat","handleDeletePatient","patientToDelete","_error$response13","_error$response14","_error$response14$dat","openPatientModal","patient","filteredPatients","indexOfLastPatient","indexOfFirstPatient","currentPatients","totalPatientPages","handleAddTerm","newTermData","_error$response15","_error$response16","_error$response16$dat","handleUpdateTerm","updatedTerm","termPayload","_error$response17","_error$response18","_error$response18$dat","handleDeleteTerm","_error$response19","_error$response20","_error$response20$dat","openTermModal","filteredTerms","toString","indexOfLastTerm","indexOfFirstTerm","currentTerms","totalTermPages","handleAddExamination","newExaminationData","payload","_error$response21","_error$response22","_error$response22$dat","errorMessage","handleUpdateExamination","updatedExamination","_error$response23","_error$response24","_error$response24$dat","handleDeleteExamination","_error$response25","_error$response26","_error$response26$dat","openExaminationModal","examination","filteredExaminations","exam","indexOfLastExamination","indexOfFirstExamination","currentExaminations","totalExaminationPages","addDoctorFields","label","required","options","editDoctorFields","readOnly","addPatientFields","editPatientFields","addTermFields","editTermFields","addExaminationFields","editExaminationFields","DataModal","show","onClose","onSave","fields","idPrefix","prevTerminIDRef","shouldFetchTermDetails","setShouldFetchTermDetails","formData","setFormData","initialData","forEach","field","value","split","substring","emptyData","currentDataTransformed","Boolean","current","handleTerminIDBlur","currentTerminID","isNumericAndValidTerminID","isNumericAndValidTermenID","prev","terminIDToFetch","fetchTermDetails","fetchedTerm","newState","_error$response27","handleChange","e","checked","target","newValue","Number","isNaN","handleSubmit","preventDefault","finalFormData","validationErrors","trim","push","onHide","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Body","Group","className","controlId","Label","Select","onChange","option","Control","as","rows","Check","onBlur","Footer","variant","onClick","Pagination","totalItems","currentPage","paginate","pageNumbers","i","number","renderContent","t","placeholder","colSpan","style","minHeight","role","dismissible","zIndex","href","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\r\n\r\nfunction AdminDashboard() {\r\n  const { token } = useAuth();\r\n\r\n  const authHeaders = useMemo(() => ({\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  }), [token]);\r\n\r\n  const [loadingInitial, setLoadingInitial] = useState(true);\r\n  const [isAuthChecked, setIsAuthChecked] = useState(false);\r\n\r\n  const [activeTab, setActiveTab] = useState(() => {\r\n    const savedTab = localStorage.getItem('adminActiveTab');\r\n    return savedTab || 'overview';\r\n  });\r\n\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [examinations, setExaminations] = useState([]);\r\n  const [terms, setTerms] = useState([]);\r\n\r\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\r\n  const [editingDoctor, setEditingDoctor] = useState(null);\r\n  const [showPatientModal, setShowPatientModal] = useState(false);\r\n  const [editingPatient, setEditingPatient] = useState(null);\r\n  const [showTermModal, setShowTermModal] = useState(false);\r\n  const [editingTerm, setEditingTerm] = useState(null);\r\n  const [showExaminationModal, setShowExaminationModal] = useState(false);\r\n  const [editingExamination, setEditingExamination] = useState(null);\r\n\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [alertType, setAlertType] = useState('success');\r\n\r\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\r\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n  const [termSearchTerm, setTermSearchTerm] = useState('');\r\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\r\n\r\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\r\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\r\n  const [termsCurrentPage, setTermsCurrentPage] = useState(1);\r\n  const [examinationsCurrentPage, setExaminationsCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const showNotification = (message, type = 'success') => {\r\n    setAlertMessage(message);\r\n    setAlertType(type);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n      setAlertMessage('');\r\n    }, 3000);\r\n  };\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n      const transformedDoctors = response.data.map(doc => ({\r\n        id: doc.doktorID,\r\n        userId: doc.userId,\r\n        name: `${doc.ime} ${doc.prezime}`,\r\n        ime: doc.ime,\r\n        prezime: doc.prezime,\r\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                   ? doc.specijalizacije.join(', ')\r\n                   : 'N/A',\r\n        specijalizacije: doc.specijalizacije,\r\n        city: doc.grad || 'N/A',\r\n        grad: doc.grad,\r\n        email: doc.email || 'N/A',\r\n        telefon: doc.telefon || 'N/A',\r\n        radnoVrijeme: doc.radnoVrijeme || '',\r\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : '',\r\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 0.0,\r\n      }));\r\n      setDoctors(transformedDoctors);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja doktora:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\r\n      const transformedPatients = response.data.map(pat => ({\r\n        id: pat.pacijentID,\r\n        userId: pat.userId,\r\n        name: `${pat.ime} ${pat.prezime}`,\r\n        ime: pat.ime,\r\n        prezime: pat.prezime,\r\n        email: pat.email || 'N/A',\r\n        phone: pat.telefon || 'N/A',\r\n        telefon: pat.telefon,\r\n      }));\r\n      setPatients(transformedPatients);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchTerms = async () => {\r\n    try {\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, authHeaders);\r\n      const transformedTerms = response.data.map(term => ({\r\n        id: term.terminID,\r\n        doktorID: term.doktorID,\r\n        datum: term.datum,\r\n        vrijeme: term.vrijeme,\r\n        dostupnost: term.dostupnost,\r\n      }));\r\n      setTerms(transformedTerms);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja termina:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchExaminations = async () => {\r\n    try {\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\r\n      const transformedExaminations = response.data.map(app => ({\r\n        id: app.pregledID,\r\n        pacijentID: app.pacijentID,\r\n        doktorID: app.doktorID,\r\n        patientName: app.pacijentIme || 'N/A',\r\n        doctorName: app.doktorIme || 'N/A',\r\n        datumPregleda: app.datumPregleda,\r\n        vrijemePregleda: app.vrijemePregleda,\r\n        status: app.status,\r\n        komentarPacijenta: app.komentarPacijenta || '',\r\n        ocjenaDoktora: app.ocjenaDoktora || null,\r\n        terminID: app.terminID !== null && app.terminID !== undefined ? app.terminID : 'N/A',\r\n      }));\r\n      setExaminations(transformedExaminations);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja pregleda:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja pregleda sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token !== undefined && !isAuthChecked) {\r\n      setIsAuthChecked(true);\r\n    }\r\n\r\n    const initializeDashboard = async () => {\r\n      if (isAuthChecked) {\r\n        if (token) {\r\n          try {\r\n            await Promise.all([\r\n              fetchDoctors(),\r\n              fetchPatients(),\r\n              fetchTerms(),\r\n              fetchExaminations()\r\n            ]);\r\n          } catch (error) {\r\n            console.error(\"Greška prilikom inicijalnog dohvaćanja podataka:\", error);\r\n            showNotification(\"Greška prilikom učitavanja početnih podataka.\", \"danger\");\r\n          } finally {\r\n            setLoadingInitial(false);\r\n          }\r\n        } else {\r\n          setLoadingInitial(false);\r\n          console.warn(\"Provjera autentifikacije završena, ali token nije dostupan. Korisnik nije ulogovan/autorizovan.\");\r\n        }\r\n      }\r\n    };\r\n\r\n    initializeDashboard();\r\n  }, [token, isAuthChecked]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('adminActiveTab', activeTab);\r\n  }, [activeTab]);\r\n\r\n  const handleAddDoctor = async (newDoctorData) => {\r\n        try {\r\n          const registerPayload = {\r\n            email: newDoctorData.email,\r\n            password: newDoctorData.password,\r\n            fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\r\n            telefon: newDoctorData.telefon,\r\n            roles: [\"ROLE_DOKTOR\"],\r\n            grad: newDoctorData.grad,\r\n            specijalizacije: newDoctorData.specijalizacije,\r\n          };\r\n\r\n          const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n          console.log(\"Auth Service Register Response Data:\", authResponse.data);\r\n\r\n          const userId = authResponse.data.id || authResponse.data.user?.id || null;\r\n\r\n          if (!userId) {\r\n              throw new Error(\"Korisnički ID nije dobiven iz Auth servisa.\");\r\n          }\r\n\r\n          const doctorDetailsPayload = {\r\n            userId: userId,\r\n            ime: newDoctorData.ime,\r\n            prezime: newDoctorData.prezime,\r\n            email: newDoctorData.email,\r\n            telefon: newDoctorData.telefon,\r\n            grad: newDoctorData.grad,\r\n            specijalizacije: newDoctorData.specijalizacije,\r\n            radnoVrijeme: newDoctorData.radnoVrijeme || '',\r\n            iskustvo: newDoctorData.iskustvo !== null && newDoctorData.iskustvo !== undefined ? newDoctorData.iskustvo : 0,\r\n            ocjena: 0.0,\r\n          };\r\n\r\n          await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/user-details/${userId}`, doctorDetailsPayload, authHeaders);\r\n\r\n          setTimeout(() => {\r\n              fetchDoctors();\r\n          }, 500);\r\n\r\n          setShowDoctorModal(false);\r\n          showNotification('Novi doktor uspješno registrovan i detalji sačuvani!');\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom dodavanja doktora:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom dodavanja doktora.', \"danger\");\r\n        }\r\n      };\r\n\r\n       const handleUpdateDoctor = async (updatedDoctor) => {\r\n           try {\r\n             if (!updatedDoctor.id) {\r\n                 showNotification('ID doktora nedostaje za ažuriranje.', 'danger');\r\n                 console.error('ID doktora nedostaje za ažuriranje:', updatedDoctor);\r\n                 return;\r\n             }\r\n\r\n             const doctorUpdatePayload = {\r\n               ime: updatedDoctor.ime,\r\n               prezime: updatedDoctor.prezime,\r\n               email: updatedDoctor.email,\r\n               telefon: updatedDoctor.telefon,\r\n               grad: updatedDoctor.grad,\r\n               specijalizacije: updatedDoctor.specijalizacije,\r\n               radnoVrijeme: updatedDoctor.radnoVrijeme || '',\r\n               iskustvo: updatedDoctor.iskustvo !== null && updatedDoctor.iskustvo !== undefined ? updatedDoctor.iskustvo : 0,\r\n               ocjena: updatedDoctor.ocjena || 0.0,\r\n             };\r\n             await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\r\n\r\n             const userUpdatePayload = {\r\n               email: updatedDoctor.email,\r\n               fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\r\n               telefon: updatedDoctor.telefon,\r\n             };\r\n             if (updatedDoctor.userId) {\r\n                 await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\r\n             } else {\r\n                 console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n             }\r\n\r\n             fetchDoctors();\r\n             setShowDoctorModal(false);\r\n             setEditingDoctor(null);\r\n             showNotification('Doktor uspješno ažuriran!', 'success');\r\n           } catch (error) {\r\n             console.error(\"Greška prilikom ažuriranja doktora:\", error.response?.data || error.message);\r\n             showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja doktora.', \"danger\");\r\n           }\r\n         };\r\n\r\n         const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n         const [confirmAction, setConfirmAction] = useState(() => () => {});\r\n         const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n         const [confirmTitle, setConfirmTitle] = useState(\"Potvrda\");\r\n\r\n         const showCustomConfirm = (message, action, title = \"Potvrda\") => {\r\n           setConfirmMessage(message);\r\n           setConfirmAction(() => action);\r\n           setConfirmTitle(title);\r\n           setShowConfirmModal(true);\r\n         };\r\n\r\n         const handleConfirmAction = () => {\r\n           confirmAction();\r\n           setShowConfirmModal(false);\r\n         };\r\n\r\n         const handleDeleteDoctor = async (id) => {\r\n           showCustomConfirm(\r\n             'Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.',\r\n             async () => {\r\n               try {\r\n                 const doctorToDelete = doctors.find(doc => doc.id === id);\r\n                 if (!doctorToDelete || !doctorToDelete.userId) {\r\n                   showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\r\n                   return;\r\n                 }\r\n\r\n                 await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\r\n                 await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\r\n\r\n                 fetchDoctors();\r\n                 showNotification('Doktor uspješno obrisan!', 'danger');\r\n               } catch (error) {\r\n                 console.error(\"Greška prilikom brisanja doktora:\", error.response?.data || error.message);\r\n                 showNotification(error.response?.data?.message || 'Greška prilikom brisanja doktora.', \"danger\");\r\n               }\r\n             },\r\n             \"Potvrdi brisanje doktora\"\r\n           );\r\n         };\r\n\r\n         const openDoctorModal = (doctor = null) => {\r\n           setEditingDoctor(doctor);\r\n           setShowDoctorModal(true);\r\n         };\r\n\r\n         const filteredDoctors = doctors.filter(doctor =>\r\n           doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           (doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n           (doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n           (doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()))\r\n         );\r\n         const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\r\n         const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\r\n         const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\r\n         const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\r\n\r\n       const handleAddPatient = async (newPatient) => {\r\n         try {\r\n           console.log(\"handleAddPatient: Počinjem proces dodavanja pacijenta.\");\r\n           const registerPayload = {\r\n             email: newPatient.email,\r\n             password: newPatient.password,\r\n             fullName: `${newPatient.ime} ${newPatient.prezime}`,\r\n             telefon: newPatient.telefon,\r\n             roles: [\"ROLE_PACIJENT\"],\r\n             grad: null,\r\n             specijalizacije: null,\r\n           };\r\n           console.log(\"handleAddPatient: Slanje registerPayload-a Auth servisu:\", registerPayload);\r\n           const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n\r\n           console.log(\"Auth Service Register Response Data (for patient):\", authResponse.data);\r\n\r\n           const userId = authResponse.data.id || authResponse.data.user?.id || null;\r\n\r\n           if (!userId) {\r\n               throw new Error(\"Korisnički ID nije dobiven iz Auth servisa za pacijenta.\");\r\n           }\r\n\r\n           console.log(\"handleAddPatient: Preskačem slanje pacijent detalja na korisnici-doktori servis. Očekujem da UserRegisteredEvent to obradi.\");\r\n\r\n           setTimeout(() => {\r\n               fetchPatients();\r\n           }, 500);\r\n\r\n           setShowPatientModal(false);\r\n           showNotification('Novi pacijent uspješno registrovan!', 'success');\r\n           console.log(\"handleAddPatient: Proces dodavanja pacijenta uspješno završen (registracija i event obrada).\");\r\n\r\n         } catch (error) {\r\n           console.error(\"Greška prilikom dodavanja pacijenta:\", error.response?.data || error.message);\r\n           showNotification(error.response?.data?.message || 'Greška prilikom dodavanja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\r\n         }\r\n       };\r\n\r\n\r\n  const handleUpdatePatient = async (updatedPatient) => {\r\n    try {\r\n      const patientUpdatePayload = {\r\n        ime: updatedPatient.ime,\r\n        prezime: updatedPatient.prezime,\r\n        email: updatedPatient.email,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\r\n\r\n      const userUpdatePayload = {\r\n        email: updatedPatient.email,\r\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      if (updatedPatient.userId) {\r\n          await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\r\n      } else {\r\n          console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n      }\r\n\r\n      fetchPatients();\r\n      setShowPatientModal(false);\r\n      setEditingPatient(null);\r\n      showNotification('Pacijent uspješno ažuriran!', 'success');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleDeletePatient = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.',\r\n      async () => {\r\n        try {\r\n          const patientToDelete = patients.find(pat => pat.id === id);\r\n          if (!patientToDelete || !patientToDelete.userId) {\r\n            showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\r\n            return;\r\n          }\r\n\r\n          await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`, authHeaders);\r\n          await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\r\n\r\n          fetchPatients();\r\n          showNotification('Pacijent uspješno obrisan!', 'success');\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja pacijenta:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja pacijenta.', \"danger\");\r\n        }\r\n      },\r\n      \"Potvrdi brisanje pacijenta\"\r\n    );\r\n  };\r\n\r\n  const openPatientModal = (patient = null) => {\r\n    setEditingPatient(patient);\r\n    setShowPatientModal(true);\r\n  };\r\n\r\n  const filteredPatients = patients.filter(patient =>\r\n    patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\r\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\r\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\r\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\r\n\r\n\r\n  const handleAddTerm = async (newTermData) => {\r\n    try {\r\n      console.log('handleAddTerm - Podaci koji se šalju:', newTermData);\r\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, newTermData, authHeaders);\r\n      showNotification('Novi termin uspješno dodan!', 'success');\r\n      fetchTerms();\r\n      setShowTermModal(false);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja termina:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja termina.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateTerm = async (updatedTerm) => {\r\n    try {\r\n      const termPayload = {\r\n        doktorID: updatedTerm.doktorID,\r\n        datum: updatedTerm.datum,\r\n        vrijeme: updatedTerm.vrijeme,\r\n        dostupnost: updatedTerm.dostupnost,\r\n      };\r\n      console.log('handleUpdateTerm - Podaci koji se šalju:', termPayload);\r\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${updatedTerm.id}`, termPayload, authHeaders);\r\n      showNotification('Termin uspješno ažuriran!', 'success');\r\n      fetchTerms();\r\n      setShowTermModal(false);\r\n      setEditingTerm(null);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja termina:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja termina.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteTerm = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovaj termin?',\r\n      async () => {\r\n        try {\r\n          await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${id}`, authHeaders);\r\n          showNotification('Termin uspješno obrisan!', 'success');\r\n          fetchTerms();\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja termina:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja termina.', \"danger\");\r\n        }\r\n      },\r\n      \"Potvrdi brisanje termina\"\r\n    );\r\n  };\r\n\r\n  const openTermModal = (term = null) => {\r\n    if (term) {\r\n        setEditingTerm({ ...term, doktorID: term.doktorID, dostupnost: term.dostupnost });\r\n    } else {\r\n        setEditingTerm(null);\r\n    }\r\n    setShowTermModal(true);\r\n  };\r\n\r\n  const filteredTerms = terms.filter(term =>\r\n    (term.doktorID != null && term.doktorID.toString().toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.datum && term.datum.toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.vrijeme && term.vrijeme.toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.dostupnost !== undefined && (term.dostupnost ? 'dostupan' : 'zauzet').includes(termSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastTerm = termsCurrentPage * itemsPerPage;\r\n  const indexOfFirstTerm = indexOfLastTerm - itemsPerPage;\r\n  const currentTerms = filteredTerms.slice(indexOfFirstTerm, indexOfLastTerm);\r\n  const totalTermPages = Math.ceil(filteredTerms.length / itemsPerPage);\r\n\r\n\r\n  const handleAddExamination = async (newExaminationData) => {\r\n    console.log('Attempting to add new examination with data:', newExaminationData);\r\n    try {\r\n        const payload = {\r\n            pacijentID: newExaminationData.pacijentID,\r\n            doktorID: newExaminationData.doktorID,\r\n            terminID: newExaminationData.terminID,\r\n            datumPregleda: newExaminationData.datumPregleda,\r\n            vrijemePregleda: newExaminationData.vrijemePregleda,\r\n            status: newExaminationData.status,\r\n            komentarPacijenta: newExaminationData.komentarPacijenta,\r\n            ocjenaDoktora: newExaminationData.ocjenaDoktora\r\n        };\r\n        const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, payload, authHeaders);\r\n        console.log('Backend response:', response.data);\r\n        fetchExaminations();\r\n        setShowExaminationModal(false);\r\n        showNotification('Novi pregled uspješno dodan!', 'success');\r\n    } catch (error) {\r\n        console.error(\"Greška prilikom dodavanja pregleda:\", error.response?.data || error.message);\r\n        const errorMessage = error.response?.data?.message || error.message || 'Nepoznata greška prilikom dodavanja pregleda.';\r\n        showNotification(errorMessage, \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateExamination = async (updatedExamination) => {\r\n    try {\r\n      if (!updatedExamination.id) {\r\n        showNotification('ID pregleda nedostaje za ažuriranje.', 'danger');\r\n        console.error('ID pregleda nedostaje za ažuriranje:', updatedExamination);\r\n        return;\r\n      }\r\n      const payload = {\r\n        pacijentID: updatedExamination.pacijentID,\r\n        doktorID: updatedExamination.doktorID,\r\n        terminID: updatedExamination.terminID,\r\n        datumPregleda: updatedExamination.datumPregleda,\r\n        vrijemePregleda: updatedExamination.vrijemePregleda,\r\n        status: updatedExamination.status,\r\n        komentarPacijenta: updatedExamination.komentarPacijenta,\r\n        ocjenaDoktora: updatedExamination.ocjenaDoktora\r\n      };\r\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${updatedExamination.id}`, payload, authHeaders);\r\n      fetchExaminations();\r\n      setShowExaminationModal(false);\r\n      showNotification('Pregled uspješno ažuriran!', 'success');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja pregleda:\", error.response?.data || error.message);\r\n      const errorMessage = error.response?.data?.message || error.message || 'Nepoznata greška prilikom ažuriranja pregleda.';\r\n      showNotification(errorMessage, \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteExamination = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovaj pregled?',\r\n      async () => {\r\n        try {\r\n          await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, authHeaders);\r\n          showNotification('Pregled uspješno obrisan!', 'success');\r\n          fetchExaminations();\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja pregleda:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja pregleda.', \"danger\");\r\n        }\r\n      },\r\n      \"Potvrdi brisanje pregleda\"\r\n    );\r\n  };\r\n\r\n  // Dodatni logovi u openExaminationModal\r\n  const openExaminationModal = (examination = null) => {\r\n    console.log(\"[AdminDashboard] openExaminationModal called. Initial examination data:\", examination);\r\n    if (examination) {\r\n        setEditingExamination({\r\n            ...examination,\r\n            pacijentID: examination.pacijentID,\r\n            doktorID: examination.doktorID,\r\n            terminID: examination.terminID,\r\n            datumPregleda: examination.datumPregleda,\r\n            vrijemePregleda: examination.vrijemePregleda\r\n        });\r\n    } else {\r\n        setEditingExamination(null);\r\n    }\r\n    setShowExaminationModal(true);\r\n    console.log(\"[AdminDashboard] After setting editingExamination and showExaminationModal. Next render will show DataModal.\");\r\n  };\r\n\r\n  const filteredExaminations = examinations.filter(exam =>\r\n    (exam.patientName && exam.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.doctorName && exam.doctorName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.status && exam.status.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.datumPregleda && exam.datumPregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.vrijemePregleda && exam.vrijemePregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastExamination = examinationsCurrentPage * itemsPerPage;\r\n  const indexOfFirstExamination = indexOfLastExamination - itemsPerPage;\r\n  const currentExaminations = filteredExaminations.slice(indexOfFirstExamination, indexOfLastExamination);\r\n  const totalExaminationPages = Math.ceil(filteredExaminations.length / itemsPerPage);\r\n\r\n\r\n  // Polja za modal doktora\r\n  const addDoctorFields = [\r\n      { name: 'ime', label: 'Ime', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Prezime', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Lozinka', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Telefon', type: 'text', required: true },\r\n      { name: 'grad', label: 'Grad', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specijalizacija', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Radno Vrijeme', type: 'text' },\r\n      { name: 'iskustvo', label: 'Godine Iskustva', type: 'number' },\r\n  ];\r\n\r\n  const editDoctorFields = [\r\n      { name: 'id', label: 'ID Doktora', type: 'text', readOnly: true },\r\n      { name: 'ime', label: 'Ime', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Prezime', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Telefon', type: 'text', required: true },\r\n      { name: 'grad', label: 'Grad', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specijalizacija', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Radno Vrijeme', type: 'text' },\r\n      { name: 'iskustvo', label: 'Godine Iskustva', type: 'number' },\r\n      { name: 'ocjena', label: 'Ocjena', type: 'number', readOnly: true },\r\n  ];\r\n\r\n  // Polja za modal pacijenata\r\n  const addPatientFields = [\r\n      { name: 'ime', label: 'Ime', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Prezime', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Lozinka', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Telefon', type: 'text', required: true },\r\n  ];\r\n\r\n  const editPatientFields = [\r\n      { name: 'id', label: 'ID Pacijenta', type: 'text', readOnly: true },\r\n      { name: 'ime', label: 'Ime', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Prezime', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Telefon', type: 'text', required: true },\r\n  ];\r\n\r\n  // Polja za modal termina\r\n  const addTermFields = [\r\n      { name: 'doktorID', label: 'ID Doktora', type: 'number', required: true },\r\n      { name: 'datum', label: 'Datum', type: 'date', required: true },\r\n      { name: 'vrijeme', label: 'Vrijeme (HH:mm)', type: 'time', required: true },\r\n      { name: 'dostupnost', label: 'Dostupnost', type: 'checkbox' },\r\n  ];\r\n\r\n  const editTermFields = [\r\n      { name: 'id', label: 'ID Termina', type: 'text', readOnly: true },\r\n      { name: 'doktorID', label: 'ID Doktora', type: 'number', required: true },\r\n      { name: 'datum', label: 'Datum', type: 'date', required: true },\r\n      { name: 'vrijeme', label: 'Vrijeme (HH:mm)', type: 'time', required: true },\r\n      { name: 'dostupnost', label: 'Dostupnost', type: 'checkbox' },\r\n  ];\r\n\r\n  // Polja za modal pregleda\r\n  const addExaminationFields = [\r\n      { name: 'pacijentID', label: 'ID Pacijenta', type: 'number', required: true },\r\n      { name: 'terminID', label: 'ID Termina', type: 'number', required: true },\r\n      { name: 'doktorID', label: 'ID Doktora', type: 'number', required: true, readOnly: false },\r\n      { name: 'datumPregleda', label: 'Datum Pregleda', type: 'date', required: true, readOnly: false },\r\n      { name: 'vrijemePregleda', label: 'Vrijeme Pregleda', type: 'time', required: true, readOnly: false },\r\n      { name: 'status', label: 'Status', type: 'select', options: ['zakazan', 'obavljen', 'otkazan'], required: true },\r\n      { name: 'komentarPacijenta', label: 'Komentar Pacijenta', type: 'textarea' },\r\n      { name: 'ocjenaDoktora', label: 'Ocjena Doktora', type: 'number' },\r\n  ];\r\n\r\n  const editExaminationFields = [\r\n      { name: 'id', label: 'ID Pregleda', type: 'text', readOnly: true },\r\n      { name: 'pacijentID', label: 'ID Pacijenta', type: 'number', required: true },\r\n      { name: 'terminID', label: 'ID Termina', type: 'number', required: true },\r\n      { name: 'doktorID', label: 'ID Doktora', type: 'number', required: true, readOnly: true },\r\n      { name: 'datumPregleda', label: 'Datum Pregleda', type: 'date', required: true, readOnly: true },\r\n      { name: 'vrijemePregleda', label: 'Vrijeme Pregleda', type: 'time', required: true, readOnly: true },\r\n      { name: 'status', label: 'Status', type: 'select', options: ['zakazan', 'obavljen', 'otkazan'], required: true },\r\n      { name: 'komentarPacijenta', label: 'Komentar Pacijenta', type: 'textarea' },\r\n      { name: 'ocjenaDoktora', label: 'Ocjena Doktora', type: 'number' },\r\n  ];\r\n\r\n\r\n  // Komponenta za modal za unos/uređivanje podataka (Doktor/Pacijent/Termin/Pregled)\r\n  const DataModal = ({ show, onClose, data, onSave, fields, title, idPrefix, authHeaders, showNotification }) => {\r\n    const prevTerminIDRef = useRef(null);\r\n    const [shouldFetchTermDetails, setShouldFetchTermDetails] = useState(false);\r\n\r\n    // Initial state for formData\r\n    // Koristimo funkciju za inicijalizaciju kako bismo osigurali da se formData inicijalizuje SAMO jednom po mountu\r\n    // i da koristi najnovije 'data' i 'fields' propse\r\n    const [formData, setFormData] = useState(() => {\r\n        const initialData = data ? { ...data } : {};\r\n        fields.forEach(field => {\r\n            if (data && data[field.name] !== undefined && data[field.name] !== null) {\r\n                let value = data[field.name];\r\n                if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\r\n                    value = value.split('T')[0];\r\n                } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\r\n                    value = value.substring(0, 8);\r\n                } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\r\n                    value = value[0] || '';\r\n                }\r\n                initialData[field.name] = value;\r\n            } else {\r\n                if (field.name === 'specijalizacije') {\r\n                    initialData[field.name] = '';\r\n                } else if (field.type === 'number') {\r\n                    initialData[field.name] = null;\r\n                } else if (field.type === 'checkbox') {\r\n                    initialData[field.name] = false;\r\n                } else {\r\n                    initialData[field.name] = '';\r\n                }\r\n            }\r\n        });\r\n        console.log(`[DataModal ${idPrefix}] Initializing formData for new mount/reset:`, initialData);\r\n        return initialData;\r\n    });\r\n\r\n    // useEffect for handling changes to 'data' prop (when editing an existing item)\r\n    // This will re-run when 'data' prop (e.g., editingExamination) changes, resetting the form to match the new item.\r\n    // It should *not* cause re-initialization if 'data' is always a new object with the same content (due to memoization).\r\n    useEffect(() => {\r\n        // Only run this effect if 'data' object itself changes, or 'fields' array changes (e.g., switching from add to edit fields)\r\n        // If data is null (adding new), reset to default empty values for the given fields\r\n        if (data === null) {\r\n            const emptyData = {};\r\n            fields.forEach(field => {\r\n                if (field.name === 'specijalizacije') {\r\n                    emptyData[field.name] = '';\r\n                } else if (field.type === 'number') {\r\n                    emptyData[field.name] = null;\r\n                } else if (field.type === 'checkbox') {\r\n                    emptyData[field.name] = false;\r\n                } else {\r\n                    emptyData[field.name] = '';\r\n                }\r\n            });\r\n            setFormData(emptyData);\r\n            console.log(`[DataModal ${idPrefix}] useEffect 1: Resetting form for new entry (data is null):`, emptyData);\r\n        } else {\r\n            // If data exists (editing), set form to data values\r\n            const currentDataTransformed = {};\r\n            fields.forEach(field => {\r\n                if (data[field.name] !== undefined && data[field.name] !== null) {\r\n                    let value = data[field.name];\r\n                    if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\r\n                        value = value.split('T')[0];\r\n                    } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\r\n                        value = value.substring(0, 8);\r\n                    } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\r\n                        value = value[0] || '';\r\n                    } else if (field.type === 'checkbox') {\r\n                        value = Boolean(value);\r\n                    }\r\n                    currentDataTransformed[field.name] = value;\r\n                } else {\r\n                    if (field.name === 'specijalizacije') {\r\n                        currentDataTransformed[field.name] = '';\r\n                    } else if (field.type === 'number') {\r\n                        currentDataTransformed[field.name] = null;\r\n                    } else if (field.type === 'checkbox') {\r\n                        currentDataTransformed[field.name] = false;\r\n                    } else {\r\n                        currentDataTransformed[field.name] = '';\r\n                    }\r\n                }\r\n            });\r\n            setFormData(currentDataTransformed);\r\n            console.log(`[DataModal ${idPrefix}] useEffect 1: Setting form for editing (data exists):`, currentDataTransformed);\r\n        }\r\n        prevTerminIDRef.current = null; // Reset reference to force re-fetch if Term ID is the same but new data\r\n        setShouldFetchTermDetails(false); // Reset the fetch trigger when form data changes\r\n    }, [data, fields, idPrefix]); // Dependencies: data object, fields array, idPrefix\r\n\r\n    // Handle blur event for TerminID to trigger fetch\r\n    const handleTerminIDBlur = () => {\r\n        if (idPrefix === 'examination') {\r\n            const currentTerminID = formData.terminID;\r\n            const isNumericAndValidTerminID = typeof currentTerminID === 'number' && currentTerminID > 0;\r\n\r\n            console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: currentTerminID: ${currentTerminID}, prevTerminIDRef.current: ${prevTerminIDRef.current}`);\r\n\r\n            if (isNumericAndValidTerminID && currentTerminID !== prevTerminIDRef.current) {\r\n                console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: Valid NEW Termin ID detected. Setting shouldFetchTermDetails to true.`);\r\n                setShouldFetchTermDetails(true);\r\n            } else if (!isNumericAndValidTermenID && prevTerminIDRef.current !== null) {\r\n                 // TerminID became invalid after being valid previously, reset associated fields\r\n                console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: Termin ID became invalid (${currentTerminID}) after being valid. Resetting associated fields.`);\r\n                setFormData(prev => ({\r\n                    ...prev,\r\n                    doktorID: null,\r\n                    datumPregleda: '',\r\n                    vrijemePregleda: '',\r\n                }));\r\n                prevTerminIDRef.current = null; // Reset reference as well\r\n                setShouldFetchTermDetails(false); // Stop any pending fetch\r\n            } else if (currentTerminID === null || currentTerminID === 0 || currentTerminID === '') {\r\n                // TerminID is explicitly null, 0, or empty string. Reset fields if they were populated.\r\n                console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: Termin ID is null/0/empty. Resetting associated fields if they were populated by a previous term.`);\r\n                // Only reset if doktorID, datumPregleda or vrijemePregleda currently have values (to prevent unwanted resets on initial render)\r\n                if (formData.doktorID !== null || formData.datumPregleda !== '' || formData.vrijemePregleda !== '') {\r\n                    setFormData(prev => ({\r\n                        ...prev,\r\n                        doktorID: null,\r\n                        datumPregleda: '',\r\n                        vrijemePregleda: '',\r\n                    }));\r\n                }\r\n                prevTerminIDRef.current = null;\r\n                setShouldFetchTermDetails(false);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    // useEffect for performing the actual term details fetch (now controlled by shouldFetchTermDetails)\r\n    useEffect(() => {\r\n        if (shouldFetchTermDetails && idPrefix === 'examination') {\r\n            const terminIDToFetch = formData.terminID; // Use the latest value from formData\r\n            if (!(typeof terminIDToFetch === 'number' && terminIDToFetch > 0)) {\r\n                console.warn(`[DataModal ${idPrefix}] useEffect Fetcher: Invalid terminID for fetching:`, terminIDToFetch);\r\n                setShouldFetchTermDetails(false);\r\n                return;\r\n            }\r\n\r\n            const fetchTermDetails = async () => {\r\n                console.log(`[DataModal ${idPrefix}] useEffect Fetcher: Attempting to fetch details for ID: ${terminIDToFetch}`);\r\n                try {\r\n                    const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${terminIDToFetch}`, authHeaders);\r\n                    const fetchedTerm = response.data;\r\n                    console.log(`[DataModal ${idPrefix}] useEffect Fetcher SUCCESS: Term details fetched:`, fetchedTerm);\r\n\r\n                    setFormData(prev => {\r\n                        const newState = {\r\n                            ...prev,\r\n                            doktorID: fetchedTerm.doktorID,\r\n                            datumPregleda: fetchedTerm.datum,\r\n                            vrijemePregleda: fetchedTerm.vrijeme.substring(0, 8),\r\n                        };\r\n                        console.log(`[DataModal ${idPrefix}] useEffect Fetcher SUCCESS: Setting formData to:`, newState);\r\n                        return newState;\r\n                    });\r\n                    prevTerminIDRef.current = terminIDToFetch; // Update ref ONLY on successful fetch\r\n                    showNotification('Detalji termina uspješno popunjeni!', 'info');\r\n                } catch (error) {\r\n                    console.error(`[DataModal ${idPrefix}] useEffect Fetcher ERROR: Greška prilikom dohvaćanja detalja termina:`, error.response?.data || error.message);\r\n                    showNotification('Greška prilikom dohvaćanja detalja termina. Provjerite Term ID.', \"danger\");\r\n                    setFormData(prev => {\r\n                        const newState = {\r\n                            ...prev,\r\n                            doktorID: null,\r\n                            datumPregleda: '',\r\n                            vrijemePregleda: '',\r\n                        };\r\n                        console.log(`[DataModal ${idPrefix}] useEffect Fetcher ERROR: Resetting formData due to fetch error:`, newState);\r\n                        return newState;\r\n                    });\r\n                    prevTerminIDRef.current = null; // Reset ref on error\r\n                } finally {\r\n                    setShouldFetchTermDetails(false); // Always reset fetch trigger\r\n                }\r\n            };\r\n            fetchTermDetails();\r\n        }\r\n    }, [shouldFetchTermDetails, idPrefix, authHeaders, showNotification, TERMINI_PREGLEDI_API_PREFIX]);\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value, type, checked } = e.target;\r\n      console.log(`[DataModal ${idPrefix}] handleChange: Field: ${name}, Value: \"${value}\", Type: ${type}`);\r\n      console.log(`[DataModal ${idPrefix}] handleChange: Current formData BEFORE update for ${name}:`, formData);\r\n\r\n      setFormData(prev => {\r\n        let newValue = value;\r\n\r\n        if (name === 'specijalizacije') {\r\n            newValue = value;\r\n        } else if (type === 'number') {\r\n            newValue = value === '' ? null : Number(value);\r\n            if (isNaN(newValue)) {\r\n                newValue = null;\r\n            }\r\n        } else if (type === 'checkbox') {\r\n            newValue = checked;\r\n        }\r\n        const newState = { ...prev, [name]: newValue };\r\n        console.log(`[DataModal ${idPrefix}] handleChange: New formData state for ${name}:`, newState);\r\n        return newState;\r\n      });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const finalFormData = { ...formData };\r\n\r\n      if (idPrefix === 'doctor' && typeof finalFormData.specijalizacije === 'string') {\r\n          finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\r\n      }\r\n\r\n      // Frontend Validation before submission\r\n      let validationErrors = [];\r\n      fields.forEach(field => {\r\n        if (field.required) {\r\n          if (field.type === 'text' || field.type === 'textarea' || field.type === 'date' || field.type === 'time' || field.type === 'select') {\r\n            if (!finalFormData[field.name] || finalFormData[field.name].toString().trim() === '') {\r\n              validationErrors.push(`${field.label} je obavezno polje.`);\r\n            }\r\n          } else if (field.type === 'number') {\r\n            if (finalFormData[field.name] === null || finalFormData[field.name] === undefined || typeof finalFormData[field.name] !== 'number' || finalFormData[field.name] <= 0) {\r\n              validationErrors.push(`${field.label} je obavezno polje i mora biti validan ID (broj veći od 0).`);\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      if (validationErrors.length > 0) {\r\n        showNotification(`Molimo popunite sva obavezna polja:\\n- ${validationErrors.join('\\n- ')}`, 'danger');\r\n        return;\r\n      }\r\n\r\n      fields.forEach(field => {\r\n          if (field.type === 'number' && field.required) {\r\n              if (finalFormData[field.name] === null || finalFormData[field.name] === undefined) {\r\n                  finalFormData[field.name] = 0;\r\n              }\r\n          }\r\n      });\r\n\r\n      if (idPrefix === 'term' && finalFormData.vrijeme) {\r\n          if (finalFormData.vrijeme.length === 5) {\r\n              finalFormData.vrijeme += ':00';\r\n          }\r\n      } else if (idPrefix === 'examination' && finalFormData.vrijemePregleda) {\r\n          if (finalFormData.vrijemePregleda.length === 5) {\r\n              finalFormData.vrijemePregleda += ':00';\r\n          }\r\n      }\r\n\r\n      console.log(`[DataModal ${idPrefix}] handleSubmit: Final payload for submission:`, finalFormData);\r\n\r\n      onSave(finalFormData);\r\n    };\r\n\r\n    return (\r\n      <Modal show={show} onHide={onClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body>\r\n            {fields.map(field => (\r\n              <Form.Group className=\"mb-3\" controlId={`${idPrefix}-${field.name}`} key={field.name}>\r\n                <Form.Label>{field.label}</Form.Label>\r\n                {field.type === 'select' ? (\r\n                  <Form.Select\r\n                    name={field.name}\r\n                    value={formData[field.name] === null ? '' : formData[field.name]}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  >\r\n                    <option value=\"\">Select {field.label}</option>\r\n                    {field.options.map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                ) : field.type === 'textarea' ? (\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    name={field.name}\r\n                    value={formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  />\r\n                ) : field.type === 'checkbox' ? (\r\n                    <Form.Check\r\n                        type=\"checkbox\"\r\n                        name={field.name}\r\n                        checked={formData[field.name] || false}\r\n                        onChange={handleChange}\r\n                        label={field.label}\r\n                    />\r\n                ) : (\r\n                  <Form.Control\r\n                    type={field.type || 'text'}\r\n                    name={field.name}\r\n                    value={\r\n                        (formData[field.name] === null || formData[field.name] === undefined || formData[field.name] === 'N/A')\r\n                        ? ''\r\n                        : formData[field.name]\r\n                    }\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                    readOnly={!!data && (field.name === 'doktorID' || field.name === 'datumPregleda' || field.name === 'vrijemePregleda')}\r\n                    // Dodano onBlur za terminID\r\n                    onBlur={field.name === 'terminID' && idPrefix === 'examination' ? handleTerminIDBlur : undefined}\r\n                  />\r\n                )}\r\n              </Form.Group>\r\n            ))}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination justify-content-center mt-4\">\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n              <button onClick={() => paginate(number)} className=\"page-link\">\r\n                {number}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (activeTab) {\r\n      case 'overview':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Dashboard Overview</h4>\r\n            <div className=\"row g-4\">\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-primary mb-3\">\r\n                  <div className=\"card-header\">Total Doctors</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{doctors.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-success mb-3\">\r\n                  <div className=\"card-header\">Total Patients</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{patients.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-info mb-3\">\r\n                  <div className=\"card-header\">Available Terms</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{terms.filter(t => t.dostupnost === true).length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-warning mb-3\">\r\n                  <div className=\"card-header\">Pending Examinations</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{examinations.filter(exam => exam.status === 'zakazan').length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h5>Quick Actions</h5>\r\n              <div className=\"d-flex gap-2 flex-wrap\">\r\n                <button className=\"btn btn-outline-primary\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n                <button className=\"btn btn-outline-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n                <button className=\"btn btn-outline-info\" onClick={() => openTermModal()}>Add New Term</button>\r\n                <button className=\"btn btn-outline-warning\" onClick={() => openExaminationModal()}>Add New Examination</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'doctors':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Doctors</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search doctors...\"\r\n                value={doctorSearchTerm}\r\n                onChange={(e) => setDoctorSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Specialty</th>\r\n                    <th>City</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Work Hours</th>\r\n                    <th>Experience</th>\r\n                    <th>Rating</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentDoctors.length > 0 ? (\r\n                    currentDoctors.map(doctor => (\r\n                      <tr key={doctor.id}>\r\n                        <td>{doctor.id}</td>\r\n                        <td>{doctor.name}</td>\r\n                        <td>{doctor.specialty}</td>\r\n                        <td>{doctor.city}</td>\r\n                        <td>{doctor.email}</td>\r\n                        <td>{doctor.telefon}</td>\r\n                        <td>{doctor.radnoVrijeme}</td>\r\n                        <td>{doctor.iskustvo}</td>\r\n                        <td>{doctor.ocjena}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openDoctorModal(doctor)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteDoctor(doctor.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"10\" className=\"text-center\">No doctors found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredDoctors.length}\r\n              currentPage={doctorsCurrentPage}\r\n              paginate={setDoctorsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'patients':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Patients</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search patients...\"\r\n                value={patientSearchTerm}\r\n                onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentPatients.length > 0 ? (\r\n                    currentPatients.map(patient => (\r\n                      <tr key={patient.id}>\r\n                        <td>{patient.id}</td>\r\n                        <td>{patient.name}</td>\r\n                        <td>{patient.email}</td>\r\n                        <td>{patient.telefon}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openPatientModal(patient)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeletePatient(patient.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"text-center\">No patients found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredPatients.length}\r\n              currentPage={patientsCurrentPage}\r\n              paginate={setPatientsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'terms': // Novi tab za termine\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Terms</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openTermModal()}>Add New Term</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search terms...\"\r\n                value={termSearchTerm}\r\n                onChange={(e) => setTermSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Doctor ID</th>\r\n                    <th>Date</th>\r\n                    <th>Time</th>\r\n                    <th>Available</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentTerms.length > 0 ? (\r\n                    currentTerms.map(term => (\r\n                      <tr key={term.id}>\r\n                        <td>{term.id}</td>\r\n                        <td>{term.doktorID}</td>\r\n                        <td>{term.datum}</td>\r\n                        <td>{term.vrijeme}</td>\r\n                        <td>{term.dostupnost ? 'Dostupan' : 'Zauzet'}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openTermModal(term)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteTerm(term.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"6\" className=\"text-center\">No terms found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredTerms.length}\r\n              currentPage={termsCurrentPage}\r\n              paginate={setTermsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'examinations': // Novi tab za preglede (prethodno appointments)\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Examinations</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openExaminationModal()}>Add New Examination</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search examinations...\"\r\n                value={examinationSearchTerm}\r\n                onChange={(e) => setExaminationSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Patient</th>\r\n                    <th>Doctor</th>\r\n                    <th>Term ID</th>\r\n                    <th>Date</th>\r\n                    <th>Time</th>\r\n                    <th>Status</th>\r\n                    <th>Patient Comment</th>\r\n                    <th>Doctor Rating</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentExaminations.length > 0 ? (\r\n                    currentExaminations.map(examination => (\r\n                      <tr key={examination.id}>\r\n                        <td>{examination.id}</td>\r\n                        <td>{examination.patientName}</td>\r\n                        <td>{examination.doctorName}</td>\r\n                        <td>{examination.terminID}</td>\r\n                        <td>{examination.datumPregleda}</td>\r\n                        <td>{examination.vrijemePregleda}</td>\r\n                        <td>\r\n                          <select\r\n                            className=\"form-select\"\r\n                            value={examination.status}\r\n                            onChange={(e) => handleUpdateExamination(\r\n                                {\r\n                                  ...examination,\r\n                                  status: e.target.value,\r\n                                  datumPregleda: examination.datumPregleda,\r\n                                  vrijemePregleda: examination.vrijemePregleda\r\n                                }\r\n                            )}\r\n                          >\r\n                            <option value=\"zakazan\">Zakazan</option>\r\n                            <option value=\"obavljen\">Obavljen</option>\r\n                            <option value=\"otkazan\">Otkazan</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>{examination.komentarPacijenta}</td>\r\n                        <td>{examination.ocjenaDoktora}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openExaminationModal(examination)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteExamination(examination.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"10\" className=\"text-center\">No examinations found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredExaminations.length}\r\n              currentPage={examinationsCurrentPage}\r\n              paginate={setExaminationsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return <p>Select a tab to view content.</p>;\r\n    }\r\n  };\r\n\r\n\r\n  if (loadingInitial) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Učitavanje administratorskog panela...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadingInitial && !token && isAuthChecked) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-danger\">Pristup odbijen</h2>\r\n          <p className=\"lead\">Niste autorizovani za pristup ovoj stranici. Molimo prijavite se kao administrator.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {showAlert && (\r\n        <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      <Modal show={showConfirmModal} onHide={() => setShowConfirmModal(false)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{confirmTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {confirmMessage}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowConfirmModal(false)}>\r\n            Poništi\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleConfirmAction}>\r\n            Potvrdi\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <div className=\"row\">\r\n        <nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" style={{ minHeight: '100vh' }}>\r\n          <div className=\"position-sticky pt-3\">\r\n            <ul className=\"nav flex-column\">\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'overview' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('overview')}>\r\n                  Overview\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'doctors' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('doctors')}>\r\n                  Doctors\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'patients' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('patients')}>\r\n                  Patients\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'terms' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('terms')}>\r\n                  Terms\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'examinations' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('examinations')}>\r\n                  Examinations\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\">\r\n          {renderContent()}\r\n        </main>\r\n      </div>\r\n\r\n      {showDoctorModal && (\r\n        <DataModal\r\n          show={showDoctorModal}\r\n          onClose={() => {setShowDoctorModal(false); setEditingDoctor(null);}} // Dodana funkcija za resetovanje state-a\r\n          data={editingDoctor}\r\n          onSave={editingDoctor ? handleUpdateDoctor : handleAddDoctor}\r\n          title={editingDoctor ? 'Uredi Doktora' : 'Dodaj Novog Doktora'}\r\n          idPrefix=\"doctor\"\r\n          fields={editingDoctor ? editDoctorFields : addDoctorFields}\r\n          authHeaders={authHeaders}\r\n          showNotification={showNotification}\r\n          key={editingDoctor ? `edit-doctor-${editingDoctor.id}` : 'add-doctor'}\r\n        />\r\n      )}\r\n\r\n      {showPatientModal && (\r\n        <DataModal\r\n          show={showPatientModal}\r\n          onClose={() => {setShowPatientModal(false); setEditingPatient(null);}} // Dodana funkcija za resetovanje state-a\r\n          data={editingPatient}\r\n          onSave={editingPatient ? handleUpdatePatient : handleAddPatient}\r\n          title={editingPatient ? 'Uredi Pacijenta' : 'Dodaj Novog Pacijenta'}\r\n          idPrefix=\"patient\"\r\n          fields={editingPatient ? editPatientFields : addPatientFields}\r\n          authHeaders={authHeaders}\r\n          showNotification={showNotification}\r\n          key={editingPatient ? `edit-patient-${editingPatient.id}` : 'add-patient'}\r\n        />\r\n      )}\r\n\r\n      {showTermModal && (\r\n        <DataModal\r\n          show={showTermModal}\r\n          onClose={() => {setShowTermModal(false); setEditingTerm(null);}} // Dodana funkcija za resetovanje state-a\r\n          data={editingTerm}\r\n          onSave={editingTerm ? handleUpdateTerm : handleAddTerm}\r\n          title={editingTerm ? 'Uredi Termin' : 'Dodaj Novi Termin'}\r\n          idPrefix=\"term\"\r\n          fields={editingTerm ? editTermFields : addTermFields}\r\n          authHeaders={authHeaders}\r\n          showNotification={showNotification}\r\n          key={editingTerm ? `edit-term-${editingTerm.id}` : 'add-term'}\r\n        />\r\n      )}\r\n\r\n      {showExaminationModal && (\r\n        <DataModal\r\n          show={showExaminationModal}\r\n          onClose={() => {setShowExaminationModal(false); setEditingExamination(null);}} // Dodana funkcija za resetovanje state-a\r\n          data={editingExamination}\r\n          onSave={editingExamination ? handleUpdateExamination : handleAddExamination}\r\n          title={editingExamination ? 'Uredi Pregled' : 'Dodaj Novi Pregled'}\r\n          idPrefix=\"examination\"\r\n          fields={editingExamination ? editExaminationFields : addExaminationFields}\r\n          authHeaders={authHeaders}\r\n          showNotification={showNotification}\r\n          key={editingExamination ? `edit-examination-${editingExamination.id}` : 'add-examination'}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACnE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAO,sCAAsC;AAC7C,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,gBAAgB,GAAG,uBAAuB;AAEhD,MAAMC,4BAA4B,GAAG,GAAGD,gBAAgB,wBAAwB;AAChF,MAAME,2BAA2B,GAAG,GAAGF,gBAAgB,uBAAuB;AAC9E,MAAMG,eAAe,GAAG,GAAGH,gBAAgB,OAAO;AAElD,SAASI,cAAcA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACxB,MAAM;IAAEC;EAAM,CAAC,GAAGf,OAAO,CAAC,CAAC;EAE3B,MAAMgB,WAAW,GAAGnB,OAAO,CAAC,OAAO;IACjCoB,OAAO,EAAE;MACP,eAAe,EAAE,UAAUF,KAAK;IAClC;EACF,CAAC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEZ,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,MAAM;IAC/C,MAAM6B,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACvD,OAAOF,QAAQ,IAAI,UAAU;EAC/B,CAAC,CAAC;EAEF,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkC,QAAQ,EAAEC,WAAW,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoC,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsC,KAAK,EAAEC,QAAQ,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACwC,eAAe,EAAEC,kBAAkB,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC0C,aAAa,EAAEC,gBAAgB,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC4C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC8C,cAAc,EAAEC,iBAAiB,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACgD,aAAa,EAAEC,gBAAgB,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACkD,WAAW,EAAEC,cAAc,CAAC,GAAGnD,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACoD,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGrD,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACsD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGvD,QAAQ,CAAC,IAAI,CAAC;EAGlE,MAAM,CAACwD,SAAS,EAAEC,YAAY,CAAC,GAAGzD,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0D,YAAY,EAAEC,eAAe,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC4D,SAAS,EAAEC,YAAY,CAAC,GAAG7D,QAAQ,CAAC,SAAS,CAAC;EAErD,MAAM,CAAC8D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgE,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACkE,cAAc,EAAEC,iBAAiB,CAAC,GAAGnE,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoE,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EAEtE,MAAM,CAACsE,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGvE,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACwE,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGzE,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAAC0E,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3E,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAAC4E,uBAAuB,EAAEC,0BAA0B,CAAC,GAAG7E,QAAQ,CAAC,CAAC,CAAC;EACzE,MAAM8E,YAAY,GAAG,CAAC;EAEtB,MAAMC,gBAAgB,GAAGA,CAACC,OAAO,EAAEC,IAAI,GAAG,SAAS,KAAK;IACtDtB,eAAe,CAACqB,OAAO,CAAC;IACxBnB,YAAY,CAACoB,IAAI,CAAC;IAClBxB,YAAY,CAAC,IAAI,CAAC;IAClByB,UAAU,CAAC,MAAM;MACfzB,YAAY,CAAC,KAAK,CAAC;MACnBE,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMwB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhF,KAAK,CAACiF,GAAG,CAAC,GAAGxE,4BAA4B,cAAc,EAAEQ,WAAW,CAAC;MAC5F,MAAMiE,kBAAkB,GAAGF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;QACnDC,EAAE,EAAED,GAAG,CAACE,QAAQ;QAChBC,MAAM,EAAEH,GAAG,CAACG,MAAM;QAClBC,IAAI,EAAE,GAAGJ,GAAG,CAACK,GAAG,IAAIL,GAAG,CAACM,OAAO,EAAE;QACjCD,GAAG,EAAEL,GAAG,CAACK,GAAG;QACZC,OAAO,EAAEN,GAAG,CAACM,OAAO;QACpBC,SAAS,EAAEC,KAAK,CAACC,OAAO,CAACT,GAAG,CAACU,eAAe,CAAC,IAAIV,GAAG,CAACU,eAAe,CAACC,MAAM,GAAG,CAAC,GAClEX,GAAG,CAACU,eAAe,CAACE,IAAI,CAAC,IAAI,CAAC,GAC9B,KAAK;QAClBF,eAAe,EAAEV,GAAG,CAACU,eAAe;QACpCG,IAAI,EAAEb,GAAG,CAACc,IAAI,IAAI,KAAK;QACvBA,IAAI,EAAEd,GAAG,CAACc,IAAI;QACdC,KAAK,EAAEf,GAAG,CAACe,KAAK,IAAI,KAAK;QACzBC,OAAO,EAAEhB,GAAG,CAACgB,OAAO,IAAI,KAAK;QAC7BC,YAAY,EAAEjB,GAAG,CAACiB,YAAY,IAAI,EAAE;QACpCC,QAAQ,EAAElB,GAAG,CAACkB,QAAQ,KAAK,IAAI,IAAIlB,GAAG,CAACkB,QAAQ,KAAKC,SAAS,GAAGnB,GAAG,CAACkB,QAAQ,GAAG,EAAE;QACjFE,MAAM,EAAEpB,GAAG,CAACoB,MAAM,KAAK,IAAI,IAAIpB,GAAG,CAACoB,MAAM,KAAKD,SAAS,GAAGnB,GAAG,CAACoB,MAAM,GAAG;MACzE,CAAC,CAAC,CAAC;MACH5E,UAAU,CAACqD,kBAAkB,CAAC;IAChC,CAAC,CAAC,OAAOwB,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdC,OAAO,CAACF,KAAK,CAAC,qCAAqC,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAAC1B,QAAQ,cAAA2B,eAAA,uBAAdA,eAAA,CAAgBxB,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;MAC3FD,gBAAgB,CAAC,gDAAgD,EAAE,QAAQ,CAAC;IAC9E;EACF,CAAC;EAED,MAAMkC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAM7B,QAAQ,GAAG,MAAMhF,KAAK,CAACiF,GAAG,CAAC,GAAGxE,4BAA4B,gBAAgB,EAAEQ,WAAW,CAAC;MAC9F,MAAM6F,mBAAmB,GAAG9B,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAC2B,GAAG,KAAK;QACpDzB,EAAE,EAAEyB,GAAG,CAACC,UAAU;QAClBxB,MAAM,EAAEuB,GAAG,CAACvB,MAAM;QAClBC,IAAI,EAAE,GAAGsB,GAAG,CAACrB,GAAG,IAAIqB,GAAG,CAACpB,OAAO,EAAE;QACjCD,GAAG,EAAEqB,GAAG,CAACrB,GAAG;QACZC,OAAO,EAAEoB,GAAG,CAACpB,OAAO;QACpBS,KAAK,EAAEW,GAAG,CAACX,KAAK,IAAI,KAAK;QACzBa,KAAK,EAAEF,GAAG,CAACV,OAAO,IAAI,KAAK;QAC3BA,OAAO,EAAEU,GAAG,CAACV;MACf,CAAC,CAAC,CAAC;MACHtE,WAAW,CAAC+E,mBAAmB,CAAC;IAClC,CAAC,CAAC,OAAOJ,KAAK,EAAE;MAAA,IAAAQ,gBAAA;MACdN,OAAO,CAACF,KAAK,CAAC,wCAAwC,EAAE,EAAAQ,gBAAA,GAAAR,KAAK,CAAC1B,QAAQ,cAAAkC,gBAAA,uBAAdA,gBAAA,CAAgB/B,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;MAC9FD,gBAAgB,CAAC,mDAAmD,EAAE,QAAQ,CAAC;IACjF;EACF,CAAC;EAED,MAAMwC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMnC,QAAQ,GAAG,MAAMhF,KAAK,CAACiF,GAAG,CAAC,GAAGvE,2BAA2B,cAAc,EAAEO,WAAW,CAAC;MAC3F,MAAMmG,gBAAgB,GAAGpC,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACiC,IAAI,KAAK;QAClD/B,EAAE,EAAE+B,IAAI,CAACC,QAAQ;QACjB/B,QAAQ,EAAE8B,IAAI,CAAC9B,QAAQ;QACvBgC,KAAK,EAAEF,IAAI,CAACE,KAAK;QACjBC,OAAO,EAAEH,IAAI,CAACG,OAAO;QACrBC,UAAU,EAAEJ,IAAI,CAACI;MACnB,CAAC,CAAC,CAAC;MACHtF,QAAQ,CAACiF,gBAAgB,CAAC;IAC5B,CAAC,CAAC,OAAOV,KAAK,EAAE;MAAA,IAAAgB,gBAAA;MACdd,OAAO,CAACF,KAAK,CAAC,qCAAqC,EAAE,EAAAgB,gBAAA,GAAAhB,KAAK,CAAC1B,QAAQ,cAAA0C,gBAAA,uBAAdA,gBAAA,CAAgBvC,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;MAC3FD,gBAAgB,CAAC,gDAAgD,EAAE,QAAQ,CAAC;IAC9E;EACF,CAAC;EAED,MAAMgD,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAM3C,QAAQ,GAAG,MAAMhF,KAAK,CAACiF,GAAG,CAAC,GAAGvE,2BAA2B,eAAe,EAAEO,WAAW,CAAC;MAC5F,MAAM2G,uBAAuB,GAAG5C,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACyC,GAAG,KAAK;QACxDvC,EAAE,EAAEuC,GAAG,CAACC,SAAS;QACjBd,UAAU,EAAEa,GAAG,CAACb,UAAU;QAC1BzB,QAAQ,EAAEsC,GAAG,CAACtC,QAAQ;QACtBwC,WAAW,EAAEF,GAAG,CAACG,WAAW,IAAI,KAAK;QACrCC,UAAU,EAAEJ,GAAG,CAACK,SAAS,IAAI,KAAK;QAClCC,aAAa,EAAEN,GAAG,CAACM,aAAa;QAChCC,eAAe,EAAEP,GAAG,CAACO,eAAe;QACpCC,MAAM,EAAER,GAAG,CAACQ,MAAM;QAClBC,iBAAiB,EAAET,GAAG,CAACS,iBAAiB,IAAI,EAAE;QAC9CC,aAAa,EAAEV,GAAG,CAACU,aAAa,IAAI,IAAI;QACxCjB,QAAQ,EAAEO,GAAG,CAACP,QAAQ,KAAK,IAAI,IAAIO,GAAG,CAACP,QAAQ,KAAKd,SAAS,GAAGqB,GAAG,CAACP,QAAQ,GAAG;MACjF,CAAC,CAAC,CAAC;MACHrF,eAAe,CAAC2F,uBAAuB,CAAC;IAC1C,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAA8B,gBAAA;MACd5B,OAAO,CAACF,KAAK,CAAC,sCAAsC,EAAE,EAAA8B,gBAAA,GAAA9B,KAAK,CAAC1B,QAAQ,cAAAwD,gBAAA,uBAAdA,gBAAA,CAAgBrD,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;MAC5FD,gBAAgB,CAAC,iDAAiD,EAAE,QAAQ,CAAC;IAC/E;EACF,CAAC;EAED9E,SAAS,CAAC,MAAM;IACd,IAAImB,KAAK,KAAKwF,SAAS,IAAI,CAACnF,aAAa,EAAE;MACzCC,gBAAgB,CAAC,IAAI,CAAC;IACxB;IAEA,MAAMmH,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAIpH,aAAa,EAAE;QACjB,IAAIL,KAAK,EAAE;UACT,IAAI;YACF,MAAM0H,OAAO,CAACC,GAAG,CAAC,CAChB5D,YAAY,CAAC,CAAC,EACd8B,aAAa,CAAC,CAAC,EACfM,UAAU,CAAC,CAAC,EACZQ,iBAAiB,CAAC,CAAC,CACpB,CAAC;UACJ,CAAC,CAAC,OAAOjB,KAAK,EAAE;YACdE,OAAO,CAACF,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;YACxE/B,gBAAgB,CAAC,+CAA+C,EAAE,QAAQ,CAAC;UAC7E,CAAC,SAAS;YACRvD,iBAAiB,CAAC,KAAK,CAAC;UAC1B;QACF,CAAC,MAAM;UACLA,iBAAiB,CAAC,KAAK,CAAC;UACxBwF,OAAO,CAACgC,IAAI,CAAC,iGAAiG,CAAC;QACjH;MACF;IACF,CAAC;IAEDH,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACzH,KAAK,EAAEK,aAAa,CAAC,CAAC;EAE1BxB,SAAS,CAAC,MAAM;IACd6B,YAAY,CAACmH,OAAO,CAAC,gBAAgB,EAAEtH,SAAS,CAAC;EACnD,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMuH,eAAe,GAAG,MAAOC,aAAa,IAAK;IAC3C,IAAI;MAAA,IAAAC,qBAAA;MACF,MAAMC,eAAe,GAAG;QACtB7C,KAAK,EAAE2C,aAAa,CAAC3C,KAAK;QAC1B8C,QAAQ,EAAEH,aAAa,CAACG,QAAQ;QAChCC,QAAQ,EAAE,GAAGJ,aAAa,CAACrD,GAAG,IAAIqD,aAAa,CAACpD,OAAO,EAAE;QACzDU,OAAO,EAAE0C,aAAa,CAAC1C,OAAO;QAC9B+C,KAAK,EAAE,CAAC,aAAa,CAAC;QACtBjD,IAAI,EAAE4C,aAAa,CAAC5C,IAAI;QACxBJ,eAAe,EAAEgD,aAAa,CAAChD;MACjC,CAAC;MAED,MAAMsD,YAAY,GAAG,MAAMrJ,KAAK,CAACsJ,IAAI,CAAC,GAAG3I,eAAe,WAAW,EAAEsI,eAAe,CAAC;MACrFrC,OAAO,CAAC2C,GAAG,CAAC,sCAAsC,EAAEF,YAAY,CAAClE,IAAI,CAAC;MAEtE,MAAMK,MAAM,GAAG6D,YAAY,CAAClE,IAAI,CAACG,EAAE,MAAA0D,qBAAA,GAAIK,YAAY,CAAClE,IAAI,CAACqE,IAAI,cAAAR,qBAAA,uBAAtBA,qBAAA,CAAwB1D,EAAE,KAAI,IAAI;MAEzE,IAAI,CAACE,MAAM,EAAE;QACT,MAAM,IAAIiE,KAAK,CAAC,6CAA6C,CAAC;MAClE;MAEA,MAAMC,oBAAoB,GAAG;QAC3BlE,MAAM,EAAEA,MAAM;QACdE,GAAG,EAAEqD,aAAa,CAACrD,GAAG;QACtBC,OAAO,EAAEoD,aAAa,CAACpD,OAAO;QAC9BS,KAAK,EAAE2C,aAAa,CAAC3C,KAAK;QAC1BC,OAAO,EAAE0C,aAAa,CAAC1C,OAAO;QAC9BF,IAAI,EAAE4C,aAAa,CAAC5C,IAAI;QACxBJ,eAAe,EAAEgD,aAAa,CAAChD,eAAe;QAC9CO,YAAY,EAAEyC,aAAa,CAACzC,YAAY,IAAI,EAAE;QAC9CC,QAAQ,EAAEwC,aAAa,CAACxC,QAAQ,KAAK,IAAI,IAAIwC,aAAa,CAACxC,QAAQ,KAAKC,SAAS,GAAGuC,aAAa,CAACxC,QAAQ,GAAG,CAAC;QAC9GE,MAAM,EAAE;MACV,CAAC;MAED,MAAMzG,KAAK,CAAC2J,GAAG,CAAC,GAAGlJ,4BAA4B,6BAA6B+E,MAAM,EAAE,EAAEkE,oBAAoB,EAAEzI,WAAW,CAAC;MAExH6D,UAAU,CAAC,MAAM;QACbC,YAAY,CAAC,CAAC;MAClB,CAAC,EAAE,GAAG,CAAC;MAEP1C,kBAAkB,CAAC,KAAK,CAAC;MACzBsC,gBAAgB,CAAC,sDAAsD,CAAC;IAC1E,CAAC,CAAC,OAAO+B,KAAK,EAAE;MAAA,IAAAkD,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACdlD,OAAO,CAACF,KAAK,CAAC,oCAAoC,EAAE,EAAAkD,gBAAA,GAAAlD,KAAK,CAAC1B,QAAQ,cAAA4E,gBAAA,uBAAdA,gBAAA,CAAgBzE,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;MAC1FD,gBAAgB,CAAC,EAAAkF,gBAAA,GAAAnD,KAAK,CAAC1B,QAAQ,cAAA6E,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB1E,IAAI,cAAA2E,qBAAA,uBAApBA,qBAAA,CAAsBlF,OAAO,KAAI,oCAAoC,EAAE,QAAQ,CAAC;IACnG;EACF,CAAC;EAEA,MAAMmF,kBAAkB,GAAG,MAAOC,aAAa,IAAK;IAChD,IAAI;MACF,IAAI,CAACA,aAAa,CAAC1E,EAAE,EAAE;QACnBX,gBAAgB,CAAC,qCAAqC,EAAE,QAAQ,CAAC;QACjEiC,OAAO,CAACF,KAAK,CAAC,qCAAqC,EAAEsD,aAAa,CAAC;QACnE;MACJ;MAEA,MAAMC,mBAAmB,GAAG;QAC1BvE,GAAG,EAAEsE,aAAa,CAACtE,GAAG;QACtBC,OAAO,EAAEqE,aAAa,CAACrE,OAAO;QAC9BS,KAAK,EAAE4D,aAAa,CAAC5D,KAAK;QAC1BC,OAAO,EAAE2D,aAAa,CAAC3D,OAAO;QAC9BF,IAAI,EAAE6D,aAAa,CAAC7D,IAAI;QACxBJ,eAAe,EAAEiE,aAAa,CAACjE,eAAe;QAC9CO,YAAY,EAAE0D,aAAa,CAAC1D,YAAY,IAAI,EAAE;QAC9CC,QAAQ,EAAEyD,aAAa,CAACzD,QAAQ,KAAK,IAAI,IAAIyD,aAAa,CAACzD,QAAQ,KAAKC,SAAS,GAAGwD,aAAa,CAACzD,QAAQ,GAAG,CAAC;QAC9GE,MAAM,EAAEuD,aAAa,CAACvD,MAAM,IAAI;MAClC,CAAC;MACD,MAAMzG,KAAK,CAAC2J,GAAG,CAAC,GAAGlJ,4BAA4B,gBAAgBuJ,aAAa,CAAC1E,EAAE,EAAE,EAAE2E,mBAAmB,EAAEhJ,WAAW,CAAC;MAEpH,MAAMiJ,iBAAiB,GAAG;QACxB9D,KAAK,EAAE4D,aAAa,CAAC5D,KAAK;QAC1B+C,QAAQ,EAAE,GAAGa,aAAa,CAACtE,GAAG,IAAIsE,aAAa,CAACrE,OAAO,EAAE;QACzDU,OAAO,EAAE2D,aAAa,CAAC3D;MACzB,CAAC;MACD,IAAI2D,aAAa,CAACxE,MAAM,EAAE;QACtB,MAAMxF,KAAK,CAAC2J,GAAG,CAAC,GAAGhJ,eAAe,UAAUqJ,aAAa,CAACxE,MAAM,EAAE,EAAE0E,iBAAiB,EAAEjJ,WAAW,CAAC;MACvG,CAAC,MAAM;QACH2F,OAAO,CAACgC,IAAI,CAAC,8DAA8D,CAAC;MAChF;MAEA7D,YAAY,CAAC,CAAC;MACd1C,kBAAkB,CAAC,KAAK,CAAC;MACzBE,gBAAgB,CAAC,IAAI,CAAC;MACtBoC,gBAAgB,CAAC,2BAA2B,EAAE,SAAS,CAAC;IAC1D,CAAC,CAAC,OAAO+B,KAAK,EAAE;MAAA,IAAAyD,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACdzD,OAAO,CAACF,KAAK,CAAC,qCAAqC,EAAE,EAAAyD,gBAAA,GAAAzD,KAAK,CAAC1B,QAAQ,cAAAmF,gBAAA,uBAAdA,gBAAA,CAAgBhF,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;MAC3FD,gBAAgB,CAAC,EAAAyF,gBAAA,GAAA1D,KAAK,CAAC1B,QAAQ,cAAAoF,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBjF,IAAI,cAAAkF,qBAAA,uBAApBA,qBAAA,CAAsBzF,OAAO,KAAI,qCAAqC,EAAE,QAAQ,CAAC;IACpG;EACF,CAAC;EAED,MAAM,CAAC0F,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3K,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC4K,aAAa,EAAEC,gBAAgB,CAAC,GAAG7K,QAAQ,CAAC,MAAM,MAAM,CAAC,CAAC,CAAC;EAClE,MAAM,CAAC8K,cAAc,EAAEC,iBAAiB,CAAC,GAAG/K,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgL,YAAY,EAAEC,eAAe,CAAC,GAAGjL,QAAQ,CAAC,SAAS,CAAC;EAE3D,MAAMkL,iBAAiB,GAAGA,CAAClG,OAAO,EAAEmG,MAAM,EAAEC,KAAK,GAAG,SAAS,KAAK;IAChEL,iBAAiB,CAAC/F,OAAO,CAAC;IAC1B6F,gBAAgB,CAAC,MAAMM,MAAM,CAAC;IAC9BF,eAAe,CAACG,KAAK,CAAC;IACtBT,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMU,mBAAmB,GAAGA,CAAA,KAAM;IAChCT,aAAa,CAAC,CAAC;IACfD,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMW,kBAAkB,GAAG,MAAO5F,EAAE,IAAK;IACvCwF,iBAAiB,CACf,mGAAmG,EACnG,YAAY;MACV,IAAI;QACF,MAAMK,cAAc,GAAGvJ,OAAO,CAACwJ,IAAI,CAAC/F,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKA,EAAE,CAAC;QACzD,IAAI,CAAC6F,cAAc,IAAI,CAACA,cAAc,CAAC3F,MAAM,EAAE;UAC7Cb,gBAAgB,CAAC,kDAAkD,EAAE,QAAQ,CAAC;UAC9E;QACF;QAEA,MAAM3E,KAAK,CAACqL,MAAM,CAAC,GAAG5K,4BAA4B,gBAAgB6E,EAAE,EAAE,EAAErE,WAAW,CAAC;QACpF,MAAMjB,KAAK,CAACqL,MAAM,CAAC,GAAG1K,eAAe,UAAUwK,cAAc,CAAC3F,MAAM,EAAE,EAAEvE,WAAW,CAAC;QAEpF8D,YAAY,CAAC,CAAC;QACdJ,gBAAgB,CAAC,0BAA0B,EAAE,QAAQ,CAAC;MACxD,CAAC,CAAC,OAAO+B,KAAK,EAAE;QAAA,IAAA4E,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;QACd5E,OAAO,CAACF,KAAK,CAAC,mCAAmC,EAAE,EAAA4E,gBAAA,GAAA5E,KAAK,CAAC1B,QAAQ,cAAAsG,gBAAA,uBAAdA,gBAAA,CAAgBnG,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;QACzFD,gBAAgB,CAAC,EAAA4G,gBAAA,GAAA7E,KAAK,CAAC1B,QAAQ,cAAAuG,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBpG,IAAI,cAAAqG,qBAAA,uBAApBA,qBAAA,CAAsB5G,OAAO,KAAI,mCAAmC,EAAE,QAAQ,CAAC;MAClG;IACF,CAAC,EACD,0BACF,CAAC;EACH,CAAC;EAED,MAAM6G,eAAe,GAAGA,CAACC,MAAM,GAAG,IAAI,KAAK;IACzCnJ,gBAAgB,CAACmJ,MAAM,CAAC;IACxBrJ,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMsJ,eAAe,GAAG/J,OAAO,CAACgK,MAAM,CAACF,MAAM,IAC3CA,MAAM,CAACjG,IAAI,CAACoG,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpI,gBAAgB,CAACmI,WAAW,CAAC,CAAC,CAAC,IAClEH,MAAM,CAAC9F,SAAS,CAACiG,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpI,gBAAgB,CAACmI,WAAW,CAAC,CAAC,CAAC,IACvEH,MAAM,CAACxF,IAAI,CAAC2F,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpI,gBAAgB,CAACmI,WAAW,CAAC,CAAC,CAAC,IACjEH,MAAM,CAACtF,KAAK,IAAIsF,MAAM,CAACtF,KAAK,CAACyF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpI,gBAAgB,CAACmI,WAAW,CAAC,CAAC,CAAE,IACpFH,MAAM,CAACrF,OAAO,IAAIqF,MAAM,CAACrF,OAAO,CAACwF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpI,gBAAgB,CAACmI,WAAW,CAAC,CAAC,CAAE,IACxFH,MAAM,CAACpF,YAAY,IAAIoF,MAAM,CAACpF,YAAY,CAACuF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpI,gBAAgB,CAACmI,WAAW,CAAC,CAAC,CACnG,CAAC;EACD,MAAME,iBAAiB,GAAG7H,kBAAkB,GAAGQ,YAAY;EAC3D,MAAMsH,kBAAkB,GAAGD,iBAAiB,GAAGrH,YAAY;EAC3D,MAAMuH,cAAc,GAAGN,eAAe,CAACO,KAAK,CAACF,kBAAkB,EAAED,iBAAiB,CAAC;EACnF,MAAMI,gBAAgB,GAAGC,IAAI,CAACC,IAAI,CAACV,eAAe,CAAC3F,MAAM,GAAGtB,YAAY,CAAC;EAE3E,MAAM4H,gBAAgB,GAAG,MAAOC,UAAU,IAAK;IAC7C,IAAI;MAAA,IAAAC,sBAAA;MACF5F,OAAO,CAAC2C,GAAG,CAAC,wDAAwD,CAAC;MACrE,MAAMN,eAAe,GAAG;QACtB7C,KAAK,EAAEmG,UAAU,CAACnG,KAAK;QACvB8C,QAAQ,EAAEqD,UAAU,CAACrD,QAAQ;QAC7BC,QAAQ,EAAE,GAAGoD,UAAU,CAAC7G,GAAG,IAAI6G,UAAU,CAAC5G,OAAO,EAAE;QACnDU,OAAO,EAAEkG,UAAU,CAAClG,OAAO;QAC3B+C,KAAK,EAAE,CAAC,eAAe,CAAC;QACxBjD,IAAI,EAAE,IAAI;QACVJ,eAAe,EAAE;MACnB,CAAC;MACDa,OAAO,CAAC2C,GAAG,CAAC,0DAA0D,EAAEN,eAAe,CAAC;MACxF,MAAMI,YAAY,GAAG,MAAMrJ,KAAK,CAACsJ,IAAI,CAAC,GAAG3I,eAAe,WAAW,EAAEsI,eAAe,CAAC;MAErFrC,OAAO,CAAC2C,GAAG,CAAC,oDAAoD,EAAEF,YAAY,CAAClE,IAAI,CAAC;MAEpF,MAAMK,MAAM,GAAG6D,YAAY,CAAClE,IAAI,CAACG,EAAE,MAAAkH,sBAAA,GAAInD,YAAY,CAAClE,IAAI,CAACqE,IAAI,cAAAgD,sBAAA,uBAAtBA,sBAAA,CAAwBlH,EAAE,KAAI,IAAI;MAEzE,IAAI,CAACE,MAAM,EAAE;QACT,MAAM,IAAIiE,KAAK,CAAC,0DAA0D,CAAC;MAC/E;MAEA7C,OAAO,CAAC2C,GAAG,CAAC,6HAA6H,CAAC;MAE1IzE,UAAU,CAAC,MAAM;QACb+B,aAAa,CAAC,CAAC;MACnB,CAAC,EAAE,GAAG,CAAC;MAEPpE,mBAAmB,CAAC,KAAK,CAAC;MAC1BkC,gBAAgB,CAAC,qCAAqC,EAAE,SAAS,CAAC;MAClEiC,OAAO,CAAC2C,GAAG,CAAC,8FAA8F,CAAC;IAE7G,CAAC,CAAC,OAAO7C,KAAK,EAAE;MAAA,IAAA+F,gBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACd/F,OAAO,CAACF,KAAK,CAAC,sCAAsC,EAAE,EAAA+F,gBAAA,GAAA/F,KAAK,CAAC1B,QAAQ,cAAAyH,gBAAA,uBAAdA,gBAAA,CAAgBtH,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;MAC5FD,gBAAgB,CAAC,EAAA+H,iBAAA,GAAAhG,KAAK,CAAC1B,QAAQ,cAAA0H,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBvH,IAAI,cAAAwH,qBAAA,uBAApBA,qBAAA,CAAsB/H,OAAO,KAAI,iFAAiF,EAAE,QAAQ,CAAC;IAChJ;EACF,CAAC;EAGN,MAAMgI,mBAAmB,GAAG,MAAOC,cAAc,IAAK;IACpD,IAAI;MACF,MAAMC,oBAAoB,GAAG;QAC3BpH,GAAG,EAAEmH,cAAc,CAACnH,GAAG;QACvBC,OAAO,EAAEkH,cAAc,CAAClH,OAAO;QAC/BS,KAAK,EAAEyG,cAAc,CAACzG,KAAK;QAC3BC,OAAO,EAAEwG,cAAc,CAACxG;MAC1B,CAAC;MACD,MAAMrG,KAAK,CAAC2J,GAAG,CAAC,GAAGlJ,4BAA4B,kBAAkBoM,cAAc,CAACvH,EAAE,EAAE,EAAEwH,oBAAoB,EAAE7L,WAAW,CAAC;MAExH,MAAMiJ,iBAAiB,GAAG;QACxB9D,KAAK,EAAEyG,cAAc,CAACzG,KAAK;QAC3B+C,QAAQ,EAAE,GAAG0D,cAAc,CAACnH,GAAG,IAAImH,cAAc,CAAClH,OAAO,EAAE;QAC3DU,OAAO,EAAEwG,cAAc,CAACxG;MAC1B,CAAC;MACD,IAAIwG,cAAc,CAACrH,MAAM,EAAE;QACvB,MAAMxF,KAAK,CAAC2J,GAAG,CAAC,GAAGhJ,eAAe,UAAUkM,cAAc,CAACrH,MAAM,EAAE,EAAE0E,iBAAiB,EAAEjJ,WAAW,CAAC;MACxG,CAAC,MAAM;QACH2F,OAAO,CAACgC,IAAI,CAAC,8DAA8D,CAAC;MAChF;MAEA/B,aAAa,CAAC,CAAC;MACfpE,mBAAmB,CAAC,KAAK,CAAC;MAC1BE,iBAAiB,CAAC,IAAI,CAAC;MACvBgC,gBAAgB,CAAC,6BAA6B,EAAE,SAAS,CAAC;IAC5D,CAAC,CAAC,OAAO+B,KAAK,EAAE;MAAA,IAAAqG,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACdrG,OAAO,CAACF,KAAK,CAAC,uCAAuC,EAAE,EAAAqG,iBAAA,GAAArG,KAAK,CAAC1B,QAAQ,cAAA+H,iBAAA,uBAAdA,iBAAA,CAAgB5H,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;MAC7FD,gBAAgB,CAAC,EAAAqI,iBAAA,GAAAtG,KAAK,CAAC1B,QAAQ,cAAAgI,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgB7H,IAAI,cAAA8H,qBAAA,uBAApBA,qBAAA,CAAsBrI,OAAO,KAAI,kFAAkF,EAAE,QAAQ,CAAC;IACjJ;EACF,CAAC;EAED,MAAMsI,mBAAmB,GAAG,MAAO5H,EAAE,IAAK;IACxCwF,iBAAiB,CACf,qGAAqG,EACrG,YAAY;MACV,IAAI;QACF,MAAMqC,eAAe,GAAGrL,QAAQ,CAACsJ,IAAI,CAACrE,GAAG,IAAIA,GAAG,CAACzB,EAAE,KAAKA,EAAE,CAAC;QAC3D,IAAI,CAAC6H,eAAe,IAAI,CAACA,eAAe,CAAC3H,MAAM,EAAE;UAC/Cb,gBAAgB,CAAC,oDAAoD,EAAE,QAAQ,CAAC;UAChF;QACF;QAEA,MAAM3E,KAAK,CAACqL,MAAM,CAAC,GAAG5K,4BAA4B,kBAAkB6E,EAAE,EAAE,EAAErE,WAAW,CAAC;QACtF,MAAMjB,KAAK,CAACqL,MAAM,CAAC,GAAG1K,eAAe,UAAUwM,eAAe,CAAC3H,MAAM,EAAE,EAAEvE,WAAW,CAAC;QAErF4F,aAAa,CAAC,CAAC;QACflC,gBAAgB,CAAC,4BAA4B,EAAE,SAAS,CAAC;MAC3D,CAAC,CAAC,OAAO+B,KAAK,EAAE;QAAA,IAAA0G,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;QACd1G,OAAO,CAACF,KAAK,CAAC,qCAAqC,EAAE,EAAA0G,iBAAA,GAAA1G,KAAK,CAAC1B,QAAQ,cAAAoI,iBAAA,uBAAdA,iBAAA,CAAgBjI,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;QAC3FD,gBAAgB,CAAC,EAAA0I,iBAAA,GAAA3G,KAAK,CAAC1B,QAAQ,cAAAqI,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBlI,IAAI,cAAAmI,qBAAA,uBAApBA,qBAAA,CAAsB1I,OAAO,KAAI,qCAAqC,EAAE,QAAQ,CAAC;MACpG;IACF,CAAC,EACD,4BACF,CAAC;EACH,CAAC;EAED,MAAM2I,gBAAgB,GAAGA,CAACC,OAAO,GAAG,IAAI,KAAK;IAC3C7K,iBAAiB,CAAC6K,OAAO,CAAC;IAC1B/K,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMgL,gBAAgB,GAAG3L,QAAQ,CAAC8J,MAAM,CAAC4B,OAAO,IAC9CA,OAAO,CAAC/H,IAAI,CAACoG,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClI,iBAAiB,CAACiI,WAAW,CAAC,CAAC,CAAC,IACpE2B,OAAO,CAACpH,KAAK,CAACyF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClI,iBAAiB,CAACiI,WAAW,CAAC,CAAC,CAAC,IACpE2B,OAAO,CAACvG,KAAK,IAAIuG,OAAO,CAACvG,KAAK,CAAC4E,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClI,iBAAiB,CAACiI,WAAW,CAAC,CAAC,CACxF,CAAC;EACD,MAAM6B,kBAAkB,GAAGtJ,mBAAmB,GAAGM,YAAY;EAC7D,MAAMiJ,mBAAmB,GAAGD,kBAAkB,GAAGhJ,YAAY;EAC7D,MAAMkJ,eAAe,GAAGH,gBAAgB,CAACvB,KAAK,CAACyB,mBAAmB,EAAED,kBAAkB,CAAC;EACvF,MAAMG,iBAAiB,GAAGzB,IAAI,CAACC,IAAI,CAACoB,gBAAgB,CAACzH,MAAM,GAAGtB,YAAY,CAAC;EAG3E,MAAMoJ,aAAa,GAAG,MAAOC,WAAW,IAAK;IAC3C,IAAI;MACFnH,OAAO,CAAC2C,GAAG,CAAC,uCAAuC,EAAEwE,WAAW,CAAC;MACjE,MAAM/I,QAAQ,GAAG,MAAMhF,KAAK,CAACsJ,IAAI,CAAC,GAAG5I,2BAA2B,cAAc,EAAEqN,WAAW,EAAE9M,WAAW,CAAC;MACzG0D,gBAAgB,CAAC,6BAA6B,EAAE,SAAS,CAAC;MAC1DwC,UAAU,CAAC,CAAC;MACZtE,gBAAgB,CAAC,KAAK,CAAC;IACzB,CAAC,CAAC,OAAO6D,KAAK,EAAE;MAAA,IAAAsH,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACdtH,OAAO,CAACF,KAAK,CAAC,oCAAoC,EAAE,EAAAsH,iBAAA,GAAAtH,KAAK,CAAC1B,QAAQ,cAAAgJ,iBAAA,uBAAdA,iBAAA,CAAgB7I,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;MAC1FD,gBAAgB,CAAC,EAAAsJ,iBAAA,GAAAvH,KAAK,CAAC1B,QAAQ,cAAAiJ,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgB9I,IAAI,cAAA+I,qBAAA,uBAApBA,qBAAA,CAAsBtJ,OAAO,KAAI,oCAAoC,EAAE,QAAQ,CAAC;IACnG;EACF,CAAC;EAED,MAAMuJ,gBAAgB,GAAG,MAAOC,WAAW,IAAK;IAC9C,IAAI;MACF,MAAMC,WAAW,GAAG;QAClB9I,QAAQ,EAAE6I,WAAW,CAAC7I,QAAQ;QAC9BgC,KAAK,EAAE6G,WAAW,CAAC7G,KAAK;QACxBC,OAAO,EAAE4G,WAAW,CAAC5G,OAAO;QAC5BC,UAAU,EAAE2G,WAAW,CAAC3G;MAC1B,CAAC;MACDb,OAAO,CAAC2C,GAAG,CAAC,0CAA0C,EAAE8E,WAAW,CAAC;MACpE,MAAMrO,KAAK,CAAC2J,GAAG,CAAC,GAAGjJ,2BAA2B,gBAAgB0N,WAAW,CAAC9I,EAAE,EAAE,EAAE+I,WAAW,EAAEpN,WAAW,CAAC;MACzG0D,gBAAgB,CAAC,2BAA2B,EAAE,SAAS,CAAC;MACxDwC,UAAU,CAAC,CAAC;MACZtE,gBAAgB,CAAC,KAAK,CAAC;MACvBE,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAO2D,KAAK,EAAE;MAAA,IAAA4H,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACd5H,OAAO,CAACF,KAAK,CAAC,qCAAqC,EAAE,EAAA4H,iBAAA,GAAA5H,KAAK,CAAC1B,QAAQ,cAAAsJ,iBAAA,uBAAdA,iBAAA,CAAgBnJ,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;MAC3FD,gBAAgB,CAAC,EAAA4J,iBAAA,GAAA7H,KAAK,CAAC1B,QAAQ,cAAAuJ,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBpJ,IAAI,cAAAqJ,qBAAA,uBAApBA,qBAAA,CAAsB5J,OAAO,KAAI,qCAAqC,EAAE,QAAQ,CAAC;IACpG;EACF,CAAC;EAED,MAAM6J,gBAAgB,GAAG,MAAOnJ,EAAE,IAAK;IACrCwF,iBAAiB,CACf,kDAAkD,EAClD,YAAY;MACV,IAAI;QACF,MAAM9K,KAAK,CAACqL,MAAM,CAAC,GAAG3K,2BAA2B,gBAAgB4E,EAAE,EAAE,EAAErE,WAAW,CAAC;QACnF0D,gBAAgB,CAAC,0BAA0B,EAAE,SAAS,CAAC;QACvDwC,UAAU,CAAC,CAAC;MACd,CAAC,CAAC,OAAOT,KAAK,EAAE;QAAA,IAAAgI,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;QACdhI,OAAO,CAACF,KAAK,CAAC,mCAAmC,EAAE,EAAAgI,iBAAA,GAAAhI,KAAK,CAAC1B,QAAQ,cAAA0J,iBAAA,uBAAdA,iBAAA,CAAgBvJ,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;QACzFD,gBAAgB,CAAC,EAAAgK,iBAAA,GAAAjI,KAAK,CAAC1B,QAAQ,cAAA2J,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBxJ,IAAI,cAAAyJ,qBAAA,uBAApBA,qBAAA,CAAsBhK,OAAO,KAAI,mCAAmC,EAAE,QAAQ,CAAC;MAClG;IACF,CAAC,EACD,0BACF,CAAC;EACH,CAAC;EAED,MAAMiK,aAAa,GAAGA,CAACxH,IAAI,GAAG,IAAI,KAAK;IACrC,IAAIA,IAAI,EAAE;MACNtE,cAAc,CAAC;QAAE,GAAGsE,IAAI;QAAE9B,QAAQ,EAAE8B,IAAI,CAAC9B,QAAQ;QAAEkC,UAAU,EAAEJ,IAAI,CAACI;MAAW,CAAC,CAAC;IACrF,CAAC,MAAM;MACH1E,cAAc,CAAC,IAAI,CAAC;IACxB;IACAF,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMiM,aAAa,GAAG5M,KAAK,CAAC0J,MAAM,CAACvE,IAAI,IACpCA,IAAI,CAAC9B,QAAQ,IAAI,IAAI,IAAI8B,IAAI,CAAC9B,QAAQ,CAACwJ,QAAQ,CAAC,CAAC,CAAClD,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChI,cAAc,CAAC+H,WAAW,CAAC,CAAC,CAAC,IACtGxE,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACE,KAAK,CAACsE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChI,cAAc,CAAC+H,WAAW,CAAC,CAAC,CAAE,IAC9ExE,IAAI,CAACG,OAAO,IAAIH,IAAI,CAACG,OAAO,CAACqE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChI,cAAc,CAAC+H,WAAW,CAAC,CAAC,CAAE,IAClFxE,IAAI,CAACI,UAAU,KAAKjB,SAAS,IAAI,CAACa,IAAI,CAACI,UAAU,GAAG,UAAU,GAAG,QAAQ,EAAEqE,QAAQ,CAAChI,cAAc,CAAC+H,WAAW,CAAC,CAAC,CACnH,CAAC;EACD,MAAMmD,eAAe,GAAG1K,gBAAgB,GAAGI,YAAY;EACvD,MAAMuK,gBAAgB,GAAGD,eAAe,GAAGtK,YAAY;EACvD,MAAMwK,YAAY,GAAGJ,aAAa,CAAC5C,KAAK,CAAC+C,gBAAgB,EAAED,eAAe,CAAC;EAC3E,MAAMG,cAAc,GAAG/C,IAAI,CAACC,IAAI,CAACyC,aAAa,CAAC9I,MAAM,GAAGtB,YAAY,CAAC;EAGrE,MAAM0K,oBAAoB,GAAG,MAAOC,kBAAkB,IAAK;IACzDzI,OAAO,CAAC2C,GAAG,CAAC,8CAA8C,EAAE8F,kBAAkB,CAAC;IAC/E,IAAI;MACA,MAAMC,OAAO,GAAG;QACZtI,UAAU,EAAEqI,kBAAkB,CAACrI,UAAU;QACzCzB,QAAQ,EAAE8J,kBAAkB,CAAC9J,QAAQ;QACrC+B,QAAQ,EAAE+H,kBAAkB,CAAC/H,QAAQ;QACrCa,aAAa,EAAEkH,kBAAkB,CAAClH,aAAa;QAC/CC,eAAe,EAAEiH,kBAAkB,CAACjH,eAAe;QACnDC,MAAM,EAAEgH,kBAAkB,CAAChH,MAAM;QACjCC,iBAAiB,EAAE+G,kBAAkB,CAAC/G,iBAAiB;QACvDC,aAAa,EAAE8G,kBAAkB,CAAC9G;MACtC,CAAC;MACD,MAAMvD,QAAQ,GAAG,MAAMhF,KAAK,CAACsJ,IAAI,CAAC,GAAG5I,2BAA2B,eAAe,EAAE4O,OAAO,EAAErO,WAAW,CAAC;MACtG2F,OAAO,CAAC2C,GAAG,CAAC,mBAAmB,EAAEvE,QAAQ,CAACG,IAAI,CAAC;MAC/CwC,iBAAiB,CAAC,CAAC;MACnB1E,uBAAuB,CAAC,KAAK,CAAC;MAC9B0B,gBAAgB,CAAC,8BAA8B,EAAE,SAAS,CAAC;IAC/D,CAAC,CAAC,OAAO+B,KAAK,EAAE;MAAA,IAAA6I,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACZ7I,OAAO,CAACF,KAAK,CAAC,qCAAqC,EAAE,EAAA6I,iBAAA,GAAA7I,KAAK,CAAC1B,QAAQ,cAAAuK,iBAAA,uBAAdA,iBAAA,CAAgBpK,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;MAC3F,MAAM8K,YAAY,GAAG,EAAAF,iBAAA,GAAA9I,KAAK,CAAC1B,QAAQ,cAAAwK,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBrK,IAAI,cAAAsK,qBAAA,uBAApBA,qBAAA,CAAsB7K,OAAO,KAAI8B,KAAK,CAAC9B,OAAO,IAAI,+CAA+C;MACtHD,gBAAgB,CAAC+K,YAAY,EAAE,QAAQ,CAAC;IAC5C;EACF,CAAC;EAED,MAAMC,uBAAuB,GAAG,MAAOC,kBAAkB,IAAK;IAC5D,IAAI;MACF,IAAI,CAACA,kBAAkB,CAACtK,EAAE,EAAE;QAC1BX,gBAAgB,CAAC,sCAAsC,EAAE,QAAQ,CAAC;QAClEiC,OAAO,CAACF,KAAK,CAAC,sCAAsC,EAAEkJ,kBAAkB,CAAC;QACzE;MACF;MACA,MAAMN,OAAO,GAAG;QACdtI,UAAU,EAAE4I,kBAAkB,CAAC5I,UAAU;QACzCzB,QAAQ,EAAEqK,kBAAkB,CAACrK,QAAQ;QACrC+B,QAAQ,EAAEsI,kBAAkB,CAACtI,QAAQ;QACrCa,aAAa,EAAEyH,kBAAkB,CAACzH,aAAa;QAC/CC,eAAe,EAAEwH,kBAAkB,CAACxH,eAAe;QACnDC,MAAM,EAAEuH,kBAAkB,CAACvH,MAAM;QACjCC,iBAAiB,EAAEsH,kBAAkB,CAACtH,iBAAiB;QACvDC,aAAa,EAAEqH,kBAAkB,CAACrH;MACpC,CAAC;MACD,MAAMvI,KAAK,CAAC2J,GAAG,CAAC,GAAGjJ,2BAA2B,iBAAiBkP,kBAAkB,CAACtK,EAAE,EAAE,EAAEgK,OAAO,EAAErO,WAAW,CAAC;MAC7G0G,iBAAiB,CAAC,CAAC;MACnB1E,uBAAuB,CAAC,KAAK,CAAC;MAC9B0B,gBAAgB,CAAC,4BAA4B,EAAE,SAAS,CAAC;IAC3D,CAAC,CAAC,OAAO+B,KAAK,EAAE;MAAA,IAAAmJ,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACdnJ,OAAO,CAACF,KAAK,CAAC,sCAAsC,EAAE,EAAAmJ,iBAAA,GAAAnJ,KAAK,CAAC1B,QAAQ,cAAA6K,iBAAA,uBAAdA,iBAAA,CAAgB1K,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;MAC5F,MAAM8K,YAAY,GAAG,EAAAI,iBAAA,GAAApJ,KAAK,CAAC1B,QAAQ,cAAA8K,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgB3K,IAAI,cAAA4K,qBAAA,uBAApBA,qBAAA,CAAsBnL,OAAO,KAAI8B,KAAK,CAAC9B,OAAO,IAAI,gDAAgD;MACvHD,gBAAgB,CAAC+K,YAAY,EAAE,QAAQ,CAAC;IAC1C;EACF,CAAC;EAED,MAAMM,uBAAuB,GAAG,MAAO1K,EAAE,IAAK;IAC5CwF,iBAAiB,CACf,mDAAmD,EACnD,YAAY;MACV,IAAI;QACF,MAAM9K,KAAK,CAACqL,MAAM,CAAC,GAAG3K,2BAA2B,iBAAiB4E,EAAE,EAAE,EAAErE,WAAW,CAAC;QACpF0D,gBAAgB,CAAC,2BAA2B,EAAE,SAAS,CAAC;QACxDgD,iBAAiB,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOjB,KAAK,EAAE;QAAA,IAAAuJ,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;QACdvJ,OAAO,CAACF,KAAK,CAAC,oCAAoC,EAAE,EAAAuJ,iBAAA,GAAAvJ,KAAK,CAAC1B,QAAQ,cAAAiL,iBAAA,uBAAdA,iBAAA,CAAgB9K,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;QAC1FD,gBAAgB,CAAC,EAAAuL,iBAAA,GAAAxJ,KAAK,CAAC1B,QAAQ,cAAAkL,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgB/K,IAAI,cAAAgL,qBAAA,uBAApBA,qBAAA,CAAsBvL,OAAO,KAAI,oCAAoC,EAAE,QAAQ,CAAC;MACnG;IACF,CAAC,EACD,2BACF,CAAC;EACH,CAAC;;EAED;EACA,MAAMwL,oBAAoB,GAAGA,CAACC,WAAW,GAAG,IAAI,KAAK;IACnDzJ,OAAO,CAAC2C,GAAG,CAAC,yEAAyE,EAAE8G,WAAW,CAAC;IACnG,IAAIA,WAAW,EAAE;MACblN,qBAAqB,CAAC;QAClB,GAAGkN,WAAW;QACdrJ,UAAU,EAAEqJ,WAAW,CAACrJ,UAAU;QAClCzB,QAAQ,EAAE8K,WAAW,CAAC9K,QAAQ;QAC9B+B,QAAQ,EAAE+I,WAAW,CAAC/I,QAAQ;QAC9Ba,aAAa,EAAEkI,WAAW,CAAClI,aAAa;QACxCC,eAAe,EAAEiI,WAAW,CAACjI;MACjC,CAAC,CAAC;IACN,CAAC,MAAM;MACHjF,qBAAqB,CAAC,IAAI,CAAC;IAC/B;IACAF,uBAAuB,CAAC,IAAI,CAAC;IAC7B2D,OAAO,CAAC2C,GAAG,CAAC,8GAA8G,CAAC;EAC7H,CAAC;EAED,MAAM+G,oBAAoB,GAAGtO,YAAY,CAAC4J,MAAM,CAAC2E,IAAI,IAClDA,IAAI,CAACxI,WAAW,IAAIwI,IAAI,CAACxI,WAAW,CAAC8D,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC9H,qBAAqB,CAAC6H,WAAW,CAAC,CAAC,CAAC,IAChG0E,IAAI,CAACtI,UAAU,IAAIsI,IAAI,CAACtI,UAAU,CAAC4D,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC9H,qBAAqB,CAAC6H,WAAW,CAAC,CAAC,CAAE,IAC/F0E,IAAI,CAAClI,MAAM,IAAIkI,IAAI,CAAClI,MAAM,CAACwD,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC9H,qBAAqB,CAAC6H,WAAW,CAAC,CAAC,CAAE,IACvF0E,IAAI,CAACpI,aAAa,IAAIoI,IAAI,CAACpI,aAAa,CAAC0D,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC9H,qBAAqB,CAAC6H,WAAW,CAAC,CAAC,CAAE,IACrG0E,IAAI,CAACnI,eAAe,IAAImI,IAAI,CAACnI,eAAe,CAACyD,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC9H,qBAAqB,CAAC6H,WAAW,CAAC,CAAC,CAC1G,CAAC;EACD,MAAM2E,sBAAsB,GAAGhM,uBAAuB,GAAGE,YAAY;EACrE,MAAM+L,uBAAuB,GAAGD,sBAAsB,GAAG9L,YAAY;EACrE,MAAMgM,mBAAmB,GAAGJ,oBAAoB,CAACpE,KAAK,CAACuE,uBAAuB,EAAED,sBAAsB,CAAC;EACvG,MAAMG,qBAAqB,GAAGvE,IAAI,CAACC,IAAI,CAACiE,oBAAoB,CAACtK,MAAM,GAAGtB,YAAY,CAAC;;EAGnF;EACA,MAAMkM,eAAe,GAAG,CACpB;IAAEnL,IAAI,EAAE,KAAK;IAAEoL,KAAK,EAAE,KAAK;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAC3D;IAAErL,IAAI,EAAE,SAAS;IAAEoL,KAAK,EAAE,SAAS;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EACnE;IAAErL,IAAI,EAAE,OAAO;IAAEoL,KAAK,EAAE,OAAO;IAAEhM,IAAI,EAAE,OAAO;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAChE;IAAErL,IAAI,EAAE,UAAU;IAAEoL,KAAK,EAAE,SAAS;IAAEhM,IAAI,EAAE,UAAU;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EACxE;IAAErL,IAAI,EAAE,SAAS;IAAEoL,KAAK,EAAE,SAAS;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EACnE;IAAErL,IAAI,EAAE,MAAM;IAAEoL,KAAK,EAAE,MAAM;IAAEhM,IAAI,EAAE,QAAQ;IAAEiM,QAAQ,EAAE,IAAI;IAAEC,OAAO,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO;EAAE,CAAC,EAC1I;IAAEtL,IAAI,EAAE,iBAAiB;IAAEoL,KAAK,EAAE,iBAAiB;IAAEhM,IAAI,EAAE,QAAQ;IAAEiM,QAAQ,EAAE,IAAI;IAAEC,OAAO,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY;EAAE,CAAC,EACpM;IAAEtL,IAAI,EAAE,cAAc;IAAEoL,KAAK,EAAE,eAAe;IAAEhM,IAAI,EAAE;EAAO,CAAC,EAC9D;IAAEY,IAAI,EAAE,UAAU;IAAEoL,KAAK,EAAE,iBAAiB;IAAEhM,IAAI,EAAE;EAAS,CAAC,CACjE;EAED,MAAMmM,gBAAgB,GAAG,CACrB;IAAEvL,IAAI,EAAE,IAAI;IAAEoL,KAAK,EAAE,YAAY;IAAEhM,IAAI,EAAE,MAAM;IAAEoM,QAAQ,EAAE;EAAK,CAAC,EACjE;IAAExL,IAAI,EAAE,KAAK;IAAEoL,KAAK,EAAE,KAAK;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAC3D;IAAErL,IAAI,EAAE,SAAS;IAAEoL,KAAK,EAAE,SAAS;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EACnE;IAAErL,IAAI,EAAE,OAAO;IAAEoL,KAAK,EAAE,OAAO;IAAEhM,IAAI,EAAE,OAAO;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAChE;IAAErL,IAAI,EAAE,SAAS;IAAEoL,KAAK,EAAE,SAAS;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EACnE;IAAErL,IAAI,EAAE,MAAM;IAAEoL,KAAK,EAAE,MAAM;IAAEhM,IAAI,EAAE,QAAQ;IAAEiM,QAAQ,EAAE,IAAI;IAAEC,OAAO,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO;EAAE,CAAC,EAC1I;IAAEtL,IAAI,EAAE,iBAAiB;IAAEoL,KAAK,EAAE,iBAAiB;IAAEhM,IAAI,EAAE,QAAQ;IAAEiM,QAAQ,EAAE,IAAI;IAAEC,OAAO,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY;EAAE,CAAC,EACpM;IAAEtL,IAAI,EAAE,cAAc;IAAEoL,KAAK,EAAE,eAAe;IAAEhM,IAAI,EAAE;EAAO,CAAC,EAC9D;IAAEY,IAAI,EAAE,UAAU;IAAEoL,KAAK,EAAE,iBAAiB;IAAEhM,IAAI,EAAE;EAAS,CAAC,EAC9D;IAAEY,IAAI,EAAE,QAAQ;IAAEoL,KAAK,EAAE,QAAQ;IAAEhM,IAAI,EAAE,QAAQ;IAAEoM,QAAQ,EAAE;EAAK,CAAC,CACtE;;EAED;EACA,MAAMC,gBAAgB,GAAG,CACrB;IAAEzL,IAAI,EAAE,KAAK;IAAEoL,KAAK,EAAE,KAAK;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAC3D;IAAErL,IAAI,EAAE,SAAS;IAAEoL,KAAK,EAAE,SAAS;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EACnE;IAAErL,IAAI,EAAE,OAAO;IAAEoL,KAAK,EAAE,OAAO;IAAEhM,IAAI,EAAE,OAAO;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAChE;IAAErL,IAAI,EAAE,UAAU;IAAEoL,KAAK,EAAE,SAAS;IAAEhM,IAAI,EAAE,UAAU;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EACxE;IAAErL,IAAI,EAAE,SAAS;IAAEoL,KAAK,EAAE,SAAS;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,CACtE;EAED,MAAMK,iBAAiB,GAAG,CACtB;IAAE1L,IAAI,EAAE,IAAI;IAAEoL,KAAK,EAAE,cAAc;IAAEhM,IAAI,EAAE,MAAM;IAAEoM,QAAQ,EAAE;EAAK,CAAC,EACnE;IAAExL,IAAI,EAAE,KAAK;IAAEoL,KAAK,EAAE,KAAK;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAC3D;IAAErL,IAAI,EAAE,SAAS;IAAEoL,KAAK,EAAE,SAAS;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EACnE;IAAErL,IAAI,EAAE,OAAO;IAAEoL,KAAK,EAAE,OAAO;IAAEhM,IAAI,EAAE,OAAO;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAChE;IAAErL,IAAI,EAAE,SAAS;IAAEoL,KAAK,EAAE,SAAS;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,CACtE;;EAED;EACA,MAAMM,aAAa,GAAG,CAClB;IAAE3L,IAAI,EAAE,UAAU;IAAEoL,KAAK,EAAE,YAAY;IAAEhM,IAAI,EAAE,QAAQ;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EACzE;IAAErL,IAAI,EAAE,OAAO;IAAEoL,KAAK,EAAE,OAAO;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAC/D;IAAErL,IAAI,EAAE,SAAS;IAAEoL,KAAK,EAAE,iBAAiB;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAC3E;IAAErL,IAAI,EAAE,YAAY;IAAEoL,KAAK,EAAE,YAAY;IAAEhM,IAAI,EAAE;EAAW,CAAC,CAChE;EAED,MAAMwM,cAAc,GAAG,CACnB;IAAE5L,IAAI,EAAE,IAAI;IAAEoL,KAAK,EAAE,YAAY;IAAEhM,IAAI,EAAE,MAAM;IAAEoM,QAAQ,EAAE;EAAK,CAAC,EACjE;IAAExL,IAAI,EAAE,UAAU;IAAEoL,KAAK,EAAE,YAAY;IAAEhM,IAAI,EAAE,QAAQ;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EACzE;IAAErL,IAAI,EAAE,OAAO;IAAEoL,KAAK,EAAE,OAAO;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAC/D;IAAErL,IAAI,EAAE,SAAS;IAAEoL,KAAK,EAAE,iBAAiB;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAC3E;IAAErL,IAAI,EAAE,YAAY;IAAEoL,KAAK,EAAE,YAAY;IAAEhM,IAAI,EAAE;EAAW,CAAC,CAChE;;EAED;EACA,MAAMyM,oBAAoB,GAAG,CACzB;IAAE7L,IAAI,EAAE,YAAY;IAAEoL,KAAK,EAAE,cAAc;IAAEhM,IAAI,EAAE,QAAQ;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAC7E;IAAErL,IAAI,EAAE,UAAU;IAAEoL,KAAK,EAAE,YAAY;IAAEhM,IAAI,EAAE,QAAQ;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EACzE;IAAErL,IAAI,EAAE,UAAU;IAAEoL,KAAK,EAAE,YAAY;IAAEhM,IAAI,EAAE,QAAQ;IAAEiM,QAAQ,EAAE,IAAI;IAAEG,QAAQ,EAAE;EAAM,CAAC,EAC1F;IAAExL,IAAI,EAAE,eAAe;IAAEoL,KAAK,EAAE,gBAAgB;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE,IAAI;IAAEG,QAAQ,EAAE;EAAM,CAAC,EACjG;IAAExL,IAAI,EAAE,iBAAiB;IAAEoL,KAAK,EAAE,kBAAkB;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE,IAAI;IAAEG,QAAQ,EAAE;EAAM,CAAC,EACrG;IAAExL,IAAI,EAAE,QAAQ;IAAEoL,KAAK,EAAE,QAAQ;IAAEhM,IAAI,EAAE,QAAQ;IAAEkM,OAAO,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC;IAAED,QAAQ,EAAE;EAAK,CAAC,EAChH;IAAErL,IAAI,EAAE,mBAAmB;IAAEoL,KAAK,EAAE,oBAAoB;IAAEhM,IAAI,EAAE;EAAW,CAAC,EAC5E;IAAEY,IAAI,EAAE,eAAe;IAAEoL,KAAK,EAAE,gBAAgB;IAAEhM,IAAI,EAAE;EAAS,CAAC,CACrE;EAED,MAAM0M,qBAAqB,GAAG,CAC1B;IAAE9L,IAAI,EAAE,IAAI;IAAEoL,KAAK,EAAE,aAAa;IAAEhM,IAAI,EAAE,MAAM;IAAEoM,QAAQ,EAAE;EAAK,CAAC,EAClE;IAAExL,IAAI,EAAE,YAAY;IAAEoL,KAAK,EAAE,cAAc;IAAEhM,IAAI,EAAE,QAAQ;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EAC7E;IAAErL,IAAI,EAAE,UAAU;IAAEoL,KAAK,EAAE,YAAY;IAAEhM,IAAI,EAAE,QAAQ;IAAEiM,QAAQ,EAAE;EAAK,CAAC,EACzE;IAAErL,IAAI,EAAE,UAAU;IAAEoL,KAAK,EAAE,YAAY;IAAEhM,IAAI,EAAE,QAAQ;IAAEiM,QAAQ,EAAE,IAAI;IAAEG,QAAQ,EAAE;EAAK,CAAC,EACzF;IAAExL,IAAI,EAAE,eAAe;IAAEoL,KAAK,EAAE,gBAAgB;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE,IAAI;IAAEG,QAAQ,EAAE;EAAK,CAAC,EAChG;IAAExL,IAAI,EAAE,iBAAiB;IAAEoL,KAAK,EAAE,kBAAkB;IAAEhM,IAAI,EAAE,MAAM;IAAEiM,QAAQ,EAAE,IAAI;IAAEG,QAAQ,EAAE;EAAK,CAAC,EACpG;IAAExL,IAAI,EAAE,QAAQ;IAAEoL,KAAK,EAAE,QAAQ;IAAEhM,IAAI,EAAE,QAAQ;IAAEkM,OAAO,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC;IAAED,QAAQ,EAAE;EAAK,CAAC,EAChH;IAAErL,IAAI,EAAE,mBAAmB;IAAEoL,KAAK,EAAE,oBAAoB;IAAEhM,IAAI,EAAE;EAAW,CAAC,EAC5E;IAAEY,IAAI,EAAE,eAAe;IAAEoL,KAAK,EAAE,gBAAgB;IAAEhM,IAAI,EAAE;EAAS,CAAC,CACrE;;EAGD;EACA,MAAM2M,SAAS,GAAGA,CAAC;IAAEC,IAAI;IAAEC,OAAO;IAAEvM,IAAI;IAAEwM,MAAM;IAAEC,MAAM;IAAE5G,KAAK;IAAE6G,QAAQ;IAAE5Q,WAAW;IAAE0D;EAAiB,CAAC,KAAK;IAAA7D,EAAA;IAC7G,MAAMgR,eAAe,GAAG/R,MAAM,CAAC,IAAI,CAAC;IACpC,MAAM,CAACgS,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGpS,QAAQ,CAAC,KAAK,CAAC;;IAE3E;IACA;IACA;IACA,MAAM,CAACqS,QAAQ,EAAEC,WAAW,CAAC,GAAGtS,QAAQ,CAAC,MAAM;MAC3C,MAAMuS,WAAW,GAAGhN,IAAI,GAAG;QAAE,GAAGA;MAAK,CAAC,GAAG,CAAC,CAAC;MAC3CyM,MAAM,CAACQ,OAAO,CAACC,KAAK,IAAI;QACpB,IAAIlN,IAAI,IAAIA,IAAI,CAACkN,KAAK,CAAC5M,IAAI,CAAC,KAAKe,SAAS,IAAIrB,IAAI,CAACkN,KAAK,CAAC5M,IAAI,CAAC,KAAK,IAAI,EAAE;UACrE,IAAI6M,KAAK,GAAGnN,IAAI,CAACkN,KAAK,CAAC5M,IAAI,CAAC;UAC5B,IAAI4M,KAAK,CAACxN,IAAI,KAAK,MAAM,IAAI,OAAOyN,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACxG,QAAQ,CAAC,GAAG,CAAC,EAAE;YAC3EwG,KAAK,GAAGA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAC/B,CAAC,MAAM,IAAIF,KAAK,CAACxN,IAAI,KAAK,MAAM,IAAI,OAAOyN,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACtM,MAAM,GAAG,CAAC,EAAE;YAC/EsM,KAAK,GAAGA,KAAK,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;UACjC,CAAC,MAAM,IAAIH,KAAK,CAAC5M,IAAI,KAAK,iBAAiB,IAAII,KAAK,CAACC,OAAO,CAACwM,KAAK,CAAC,EAAE;YACjEA,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;UAC1B;UACAH,WAAW,CAACE,KAAK,CAAC5M,IAAI,CAAC,GAAG6M,KAAK;QACnC,CAAC,MAAM;UACH,IAAID,KAAK,CAAC5M,IAAI,KAAK,iBAAiB,EAAE;YAClC0M,WAAW,CAACE,KAAK,CAAC5M,IAAI,CAAC,GAAG,EAAE;UAChC,CAAC,MAAM,IAAI4M,KAAK,CAACxN,IAAI,KAAK,QAAQ,EAAE;YAChCsN,WAAW,CAACE,KAAK,CAAC5M,IAAI,CAAC,GAAG,IAAI;UAClC,CAAC,MAAM,IAAI4M,KAAK,CAACxN,IAAI,KAAK,UAAU,EAAE;YAClCsN,WAAW,CAACE,KAAK,CAAC5M,IAAI,CAAC,GAAG,KAAK;UACnC,CAAC,MAAM;YACH0M,WAAW,CAACE,KAAK,CAAC5M,IAAI,CAAC,GAAG,EAAE;UAChC;QACJ;MACJ,CAAC,CAAC;MACFmB,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,8CAA8C,EAAEM,WAAW,CAAC;MAC9F,OAAOA,WAAW;IACtB,CAAC,CAAC;;IAEF;IACA;IACA;IACAtS,SAAS,CAAC,MAAM;MACZ;MACA;MACA,IAAIsF,IAAI,KAAK,IAAI,EAAE;QACf,MAAMsN,SAAS,GAAG,CAAC,CAAC;QACpBb,MAAM,CAACQ,OAAO,CAACC,KAAK,IAAI;UACpB,IAAIA,KAAK,CAAC5M,IAAI,KAAK,iBAAiB,EAAE;YAClCgN,SAAS,CAACJ,KAAK,CAAC5M,IAAI,CAAC,GAAG,EAAE;UAC9B,CAAC,MAAM,IAAI4M,KAAK,CAACxN,IAAI,KAAK,QAAQ,EAAE;YAChC4N,SAAS,CAACJ,KAAK,CAAC5M,IAAI,CAAC,GAAG,IAAI;UAChC,CAAC,MAAM,IAAI4M,KAAK,CAACxN,IAAI,KAAK,UAAU,EAAE;YAClC4N,SAAS,CAACJ,KAAK,CAAC5M,IAAI,CAAC,GAAG,KAAK;UACjC,CAAC,MAAM;YACHgN,SAAS,CAACJ,KAAK,CAAC5M,IAAI,CAAC,GAAG,EAAE;UAC9B;QACJ,CAAC,CAAC;QACFyM,WAAW,CAACO,SAAS,CAAC;QACtB7L,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,6DAA6D,EAAEY,SAAS,CAAC;MAC/G,CAAC,MAAM;QACH;QACA,MAAMC,sBAAsB,GAAG,CAAC,CAAC;QACjCd,MAAM,CAACQ,OAAO,CAACC,KAAK,IAAI;UACpB,IAAIlN,IAAI,CAACkN,KAAK,CAAC5M,IAAI,CAAC,KAAKe,SAAS,IAAIrB,IAAI,CAACkN,KAAK,CAAC5M,IAAI,CAAC,KAAK,IAAI,EAAE;YAC7D,IAAI6M,KAAK,GAAGnN,IAAI,CAACkN,KAAK,CAAC5M,IAAI,CAAC;YAC5B,IAAI4M,KAAK,CAACxN,IAAI,KAAK,MAAM,IAAI,OAAOyN,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACxG,QAAQ,CAAC,GAAG,CAAC,EAAE;cAC3EwG,KAAK,GAAGA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/B,CAAC,MAAM,IAAIF,KAAK,CAACxN,IAAI,KAAK,MAAM,IAAI,OAAOyN,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACtM,MAAM,GAAG,CAAC,EAAE;cAC/EsM,KAAK,GAAGA,KAAK,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;YACjC,CAAC,MAAM,IAAIH,KAAK,CAAC5M,IAAI,KAAK,iBAAiB,IAAII,KAAK,CAACC,OAAO,CAACwM,KAAK,CAAC,EAAE;cACjEA,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;YAC1B,CAAC,MAAM,IAAID,KAAK,CAACxN,IAAI,KAAK,UAAU,EAAE;cAClCyN,KAAK,GAAGK,OAAO,CAACL,KAAK,CAAC;YAC1B;YACAI,sBAAsB,CAACL,KAAK,CAAC5M,IAAI,CAAC,GAAG6M,KAAK;UAC9C,CAAC,MAAM;YACH,IAAID,KAAK,CAAC5M,IAAI,KAAK,iBAAiB,EAAE;cAClCiN,sBAAsB,CAACL,KAAK,CAAC5M,IAAI,CAAC,GAAG,EAAE;YAC3C,CAAC,MAAM,IAAI4M,KAAK,CAACxN,IAAI,KAAK,QAAQ,EAAE;cAChC6N,sBAAsB,CAACL,KAAK,CAAC5M,IAAI,CAAC,GAAG,IAAI;YAC7C,CAAC,MAAM,IAAI4M,KAAK,CAACxN,IAAI,KAAK,UAAU,EAAE;cAClC6N,sBAAsB,CAACL,KAAK,CAAC5M,IAAI,CAAC,GAAG,KAAK;YAC9C,CAAC,MAAM;cACHiN,sBAAsB,CAACL,KAAK,CAAC5M,IAAI,CAAC,GAAG,EAAE;YAC3C;UACJ;QACJ,CAAC,CAAC;QACFyM,WAAW,CAACQ,sBAAsB,CAAC;QACnC9L,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,wDAAwD,EAAEa,sBAAsB,CAAC;MACvH;MACAZ,eAAe,CAACc,OAAO,GAAG,IAAI,CAAC,CAAC;MAChCZ,yBAAyB,CAAC,KAAK,CAAC,CAAC,CAAC;IACtC,CAAC,EAAE,CAAC7M,IAAI,EAAEyM,MAAM,EAAEC,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAE9B;IACA,MAAMgB,kBAAkB,GAAGA,CAAA,KAAM;MAC7B,IAAIhB,QAAQ,KAAK,aAAa,EAAE;QAC5B,MAAMiB,eAAe,GAAGb,QAAQ,CAAC3K,QAAQ;QACzC,MAAMyL,yBAAyB,GAAG,OAAOD,eAAe,KAAK,QAAQ,IAAIA,eAAe,GAAG,CAAC;QAE5FlM,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,0CAA0CiB,eAAe,8BAA8BhB,eAAe,CAACc,OAAO,EAAE,CAAC;QAEnJ,IAAIG,yBAAyB,IAAID,eAAe,KAAKhB,eAAe,CAACc,OAAO,EAAE;UAC1EhM,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,6FAA6F,CAAC;UAChIG,yBAAyB,CAAC,IAAI,CAAC;QACnC,CAAC,MAAM,IAAI,CAACgB,yBAAyB,IAAIlB,eAAe,CAACc,OAAO,KAAK,IAAI,EAAE;UACtE;UACDhM,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,mDAAmDiB,eAAe,mDAAmD,CAAC;UACxJZ,WAAW,CAACe,IAAI,KAAK;YACjB,GAAGA,IAAI;YACP1N,QAAQ,EAAE,IAAI;YACd4C,aAAa,EAAE,EAAE;YACjBC,eAAe,EAAE;UACrB,CAAC,CAAC,CAAC;UACH0J,eAAe,CAACc,OAAO,GAAG,IAAI,CAAC,CAAC;UAChCZ,yBAAyB,CAAC,KAAK,CAAC,CAAC,CAAC;QACtC,CAAC,MAAM,IAAIc,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,CAAC,IAAIA,eAAe,KAAK,EAAE,EAAE;UACpF;UACAlM,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,yHAAyH,CAAC;UAC5J;UACA,IAAII,QAAQ,CAAC1M,QAAQ,KAAK,IAAI,IAAI0M,QAAQ,CAAC9J,aAAa,KAAK,EAAE,IAAI8J,QAAQ,CAAC7J,eAAe,KAAK,EAAE,EAAE;YAChG8J,WAAW,CAACe,IAAI,KAAK;cACjB,GAAGA,IAAI;cACP1N,QAAQ,EAAE,IAAI;cACd4C,aAAa,EAAE,EAAE;cACjBC,eAAe,EAAE;YACrB,CAAC,CAAC,CAAC;UACP;UACA0J,eAAe,CAACc,OAAO,GAAG,IAAI;UAC9BZ,yBAAyB,CAAC,KAAK,CAAC;QACpC;MACJ;IACJ,CAAC;;IAGD;IACAnS,SAAS,CAAC,MAAM;MACZ,IAAIkS,sBAAsB,IAAIF,QAAQ,KAAK,aAAa,EAAE;QACtD,MAAMqB,eAAe,GAAGjB,QAAQ,CAAC3K,QAAQ,CAAC,CAAC;QAC3C,IAAI,EAAE,OAAO4L,eAAe,KAAK,QAAQ,IAAIA,eAAe,GAAG,CAAC,CAAC,EAAE;UAC/DtM,OAAO,CAACgC,IAAI,CAAC,cAAciJ,QAAQ,qDAAqD,EAAEqB,eAAe,CAAC;UAC1GlB,yBAAyB,CAAC,KAAK,CAAC;UAChC;QACJ;QAEA,MAAMmB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;UACjCvM,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,4DAA4DqB,eAAe,EAAE,CAAC;UAChH,IAAI;YACA,MAAMlO,QAAQ,GAAG,MAAMhF,KAAK,CAACiF,GAAG,CAAC,GAAGvE,2BAA2B,gBAAgBwS,eAAe,EAAE,EAAEjS,WAAW,CAAC;YAC9G,MAAMmS,WAAW,GAAGpO,QAAQ,CAACG,IAAI;YACjCyB,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,oDAAoD,EAAEuB,WAAW,CAAC;YAEpGlB,WAAW,CAACe,IAAI,IAAI;cAChB,MAAMI,QAAQ,GAAG;gBACb,GAAGJ,IAAI;gBACP1N,QAAQ,EAAE6N,WAAW,CAAC7N,QAAQ;gBAC9B4C,aAAa,EAAEiL,WAAW,CAAC7L,KAAK;gBAChCa,eAAe,EAAEgL,WAAW,CAAC5L,OAAO,CAACgL,SAAS,CAAC,CAAC,EAAE,CAAC;cACvD,CAAC;cACD5L,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,mDAAmD,EAAEwB,QAAQ,CAAC;cAChG,OAAOA,QAAQ;YACnB,CAAC,CAAC;YACFvB,eAAe,CAACc,OAAO,GAAGM,eAAe,CAAC,CAAC;YAC3CvO,gBAAgB,CAAC,qCAAqC,EAAE,MAAM,CAAC;UACnE,CAAC,CAAC,OAAO+B,KAAK,EAAE;YAAA,IAAA4M,iBAAA;YACZ1M,OAAO,CAACF,KAAK,CAAC,cAAcmL,QAAQ,wEAAwE,EAAE,EAAAyB,iBAAA,GAAA5M,KAAK,CAAC1B,QAAQ,cAAAsO,iBAAA,uBAAdA,iBAAA,CAAgBnO,IAAI,KAAIuB,KAAK,CAAC9B,OAAO,CAAC;YACpJD,gBAAgB,CAAC,iEAAiE,EAAE,QAAQ,CAAC;YAC7FuN,WAAW,CAACe,IAAI,IAAI;cAChB,MAAMI,QAAQ,GAAG;gBACb,GAAGJ,IAAI;gBACP1N,QAAQ,EAAE,IAAI;gBACd4C,aAAa,EAAE,EAAE;gBACjBC,eAAe,EAAE;cACrB,CAAC;cACDxB,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,mEAAmE,EAAEwB,QAAQ,CAAC;cAChH,OAAOA,QAAQ;YACnB,CAAC,CAAC;YACFvB,eAAe,CAACc,OAAO,GAAG,IAAI,CAAC,CAAC;UACpC,CAAC,SAAS;YACNZ,yBAAyB,CAAC,KAAK,CAAC,CAAC,CAAC;UACtC;QACJ,CAAC;QACDmB,gBAAgB,CAAC,CAAC;MACtB;IACJ,CAAC,EAAE,CAACpB,sBAAsB,EAAEF,QAAQ,EAAE5Q,WAAW,EAAE0D,gBAAgB,EAAEjE,2BAA2B,CAAC,CAAC;IAElG,MAAM6S,YAAY,GAAIC,CAAC,IAAK;MAC1B,MAAM;QAAE/N,IAAI;QAAE6M,KAAK;QAAEzN,IAAI;QAAE4O;MAAQ,CAAC,GAAGD,CAAC,CAACE,MAAM;MAC/C9M,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,0BAA0BpM,IAAI,aAAa6M,KAAK,YAAYzN,IAAI,EAAE,CAAC;MACrG+B,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,sDAAsDpM,IAAI,GAAG,EAAEwM,QAAQ,CAAC;MAE1GC,WAAW,CAACe,IAAI,IAAI;QAClB,IAAIU,QAAQ,GAAGrB,KAAK;QAEpB,IAAI7M,IAAI,KAAK,iBAAiB,EAAE;UAC5BkO,QAAQ,GAAGrB,KAAK;QACpB,CAAC,MAAM,IAAIzN,IAAI,KAAK,QAAQ,EAAE;UAC1B8O,QAAQ,GAAGrB,KAAK,KAAK,EAAE,GAAG,IAAI,GAAGsB,MAAM,CAACtB,KAAK,CAAC;UAC9C,IAAIuB,KAAK,CAACF,QAAQ,CAAC,EAAE;YACjBA,QAAQ,GAAG,IAAI;UACnB;QACJ,CAAC,MAAM,IAAI9O,IAAI,KAAK,UAAU,EAAE;UAC5B8O,QAAQ,GAAGF,OAAO;QACtB;QACA,MAAMJ,QAAQ,GAAG;UAAE,GAAGJ,IAAI;UAAE,CAACxN,IAAI,GAAGkO;QAAS,CAAC;QAC9C/M,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,0CAA0CpM,IAAI,GAAG,EAAE4N,QAAQ,CAAC;QAC9F,OAAOA,QAAQ;MACjB,CAAC,CAAC;IACJ,CAAC;IAED,MAAMS,YAAY,GAAIN,CAAC,IAAK;MAC1BA,CAAC,CAACO,cAAc,CAAC,CAAC;MAClB,MAAMC,aAAa,GAAG;QAAE,GAAG/B;MAAS,CAAC;MAErC,IAAIJ,QAAQ,KAAK,QAAQ,IAAI,OAAOmC,aAAa,CAACjO,eAAe,KAAK,QAAQ,EAAE;QAC5EiO,aAAa,CAACjO,eAAe,GAAGiO,aAAa,CAACjO,eAAe,GAAG,CAACiO,aAAa,CAACjO,eAAe,CAAC,GAAG,EAAE;MACxG;;MAEA;MACA,IAAIkO,gBAAgB,GAAG,EAAE;MACzBrC,MAAM,CAACQ,OAAO,CAACC,KAAK,IAAI;QACtB,IAAIA,KAAK,CAACvB,QAAQ,EAAE;UAClB,IAAIuB,KAAK,CAACxN,IAAI,KAAK,MAAM,IAAIwN,KAAK,CAACxN,IAAI,KAAK,UAAU,IAAIwN,KAAK,CAACxN,IAAI,KAAK,MAAM,IAAIwN,KAAK,CAACxN,IAAI,KAAK,MAAM,IAAIwN,KAAK,CAACxN,IAAI,KAAK,QAAQ,EAAE;YACnI,IAAI,CAACmP,aAAa,CAAC3B,KAAK,CAAC5M,IAAI,CAAC,IAAIuO,aAAa,CAAC3B,KAAK,CAAC5M,IAAI,CAAC,CAACsJ,QAAQ,CAAC,CAAC,CAACmF,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;cACpFD,gBAAgB,CAACE,IAAI,CAAC,GAAG9B,KAAK,CAACxB,KAAK,qBAAqB,CAAC;YAC5D;UACF,CAAC,MAAM,IAAIwB,KAAK,CAACxN,IAAI,KAAK,QAAQ,EAAE;YAClC,IAAImP,aAAa,CAAC3B,KAAK,CAAC5M,IAAI,CAAC,KAAK,IAAI,IAAIuO,aAAa,CAAC3B,KAAK,CAAC5M,IAAI,CAAC,KAAKe,SAAS,IAAI,OAAOwN,aAAa,CAAC3B,KAAK,CAAC5M,IAAI,CAAC,KAAK,QAAQ,IAAIuO,aAAa,CAAC3B,KAAK,CAAC5M,IAAI,CAAC,IAAI,CAAC,EAAE;cACpKwO,gBAAgB,CAACE,IAAI,CAAC,GAAG9B,KAAK,CAACxB,KAAK,6DAA6D,CAAC;YACpG;UACF;QACF;MACF,CAAC,CAAC;MAEF,IAAIoD,gBAAgB,CAACjO,MAAM,GAAG,CAAC,EAAE;QAC/BrB,gBAAgB,CAAC,0CAA0CsP,gBAAgB,CAAChO,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC;QACrG;MACF;MAEA2L,MAAM,CAACQ,OAAO,CAACC,KAAK,IAAI;QACpB,IAAIA,KAAK,CAACxN,IAAI,KAAK,QAAQ,IAAIwN,KAAK,CAACvB,QAAQ,EAAE;UAC3C,IAAIkD,aAAa,CAAC3B,KAAK,CAAC5M,IAAI,CAAC,KAAK,IAAI,IAAIuO,aAAa,CAAC3B,KAAK,CAAC5M,IAAI,CAAC,KAAKe,SAAS,EAAE;YAC/EwN,aAAa,CAAC3B,KAAK,CAAC5M,IAAI,CAAC,GAAG,CAAC;UACjC;QACJ;MACJ,CAAC,CAAC;MAEF,IAAIoM,QAAQ,KAAK,MAAM,IAAImC,aAAa,CAACxM,OAAO,EAAE;QAC9C,IAAIwM,aAAa,CAACxM,OAAO,CAACxB,MAAM,KAAK,CAAC,EAAE;UACpCgO,aAAa,CAACxM,OAAO,IAAI,KAAK;QAClC;MACJ,CAAC,MAAM,IAAIqK,QAAQ,KAAK,aAAa,IAAImC,aAAa,CAAC5L,eAAe,EAAE;QACpE,IAAI4L,aAAa,CAAC5L,eAAe,CAACpC,MAAM,KAAK,CAAC,EAAE;UAC5CgO,aAAa,CAAC5L,eAAe,IAAI,KAAK;QAC1C;MACJ;MAEAxB,OAAO,CAAC2C,GAAG,CAAC,cAAcsI,QAAQ,+CAA+C,EAAEmC,aAAa,CAAC;MAEjGrC,MAAM,CAACqC,aAAa,CAAC;IACvB,CAAC;IAED,oBACEzT,OAAA,CAACL,KAAK;MAACuR,IAAI,EAAEA,IAAK;MAAC2C,MAAM,EAAE1C,OAAQ;MAAC2C,QAAQ;MAAAC,QAAA,gBAC1C/T,OAAA,CAACL,KAAK,CAACqU,MAAM;QAACC,WAAW;QAAAF,QAAA,eACvB/T,OAAA,CAACL,KAAK,CAACuU,KAAK;UAAAH,QAAA,EAAEtJ;QAAK;UAAA0J,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACftU,OAAA,CAACH,IAAI;QAAC0U,QAAQ,EAAEhB,YAAa;QAAAQ,QAAA,gBAC3B/T,OAAA,CAACL,KAAK,CAAC6U,IAAI;UAAAT,QAAA,EACR1C,MAAM,CAACxM,GAAG,CAACiN,KAAK,iBACf9R,OAAA,CAACH,IAAI,CAAC4U,KAAK;YAACC,SAAS,EAAC,MAAM;YAACC,SAAS,EAAE,GAAGrD,QAAQ,IAAIQ,KAAK,CAAC5M,IAAI,EAAG;YAAA6O,QAAA,gBAClE/T,OAAA,CAACH,IAAI,CAAC+U,KAAK;cAAAb,QAAA,EAAEjC,KAAK,CAACxB;YAAK;cAAA6D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,EACrCxC,KAAK,CAACxN,IAAI,KAAK,QAAQ,gBACtBtE,OAAA,CAACH,IAAI,CAACgV,MAAM;cACV3P,IAAI,EAAE4M,KAAK,CAAC5M,IAAK;cACjB6M,KAAK,EAAEL,QAAQ,CAACI,KAAK,CAAC5M,IAAI,CAAC,KAAK,IAAI,GAAG,EAAE,GAAGwM,QAAQ,CAACI,KAAK,CAAC5M,IAAI,CAAE;cACjE4P,QAAQ,EAAE9B,YAAa;cACvBzC,QAAQ,EAAEuB,KAAK,CAACvB,QAAS;cAAAwD,QAAA,gBAEzB/T,OAAA;gBAAQ+R,KAAK,EAAC,EAAE;gBAAAgC,QAAA,GAAC,SAAO,EAACjC,KAAK,CAACxB,KAAK;cAAA;gBAAA6D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,EAC7CxC,KAAK,CAACtB,OAAO,CAAC3L,GAAG,CAACkQ,MAAM,iBACvB/U,OAAA;gBAAqB+R,KAAK,EAAEgD,MAAO;gBAAAhB,QAAA,EAAEgB;cAAM,GAA9BA,MAAM;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAiC,CACrD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACS,CAAC,GACZxC,KAAK,CAACxN,IAAI,KAAK,UAAU,gBAC3BtE,OAAA,CAACH,IAAI,CAACmV,OAAO;cACXC,EAAE,EAAC,UAAU;cACbC,IAAI,EAAE,CAAE;cACRhQ,IAAI,EAAE4M,KAAK,CAAC5M,IAAK;cACjB6M,KAAK,EAAEL,QAAQ,CAACI,KAAK,CAAC5M,IAAI,CAAC,IAAI,EAAG;cAClC4P,QAAQ,EAAE9B,YAAa;cACvBzC,QAAQ,EAAEuB,KAAK,CAACvB;YAAS;cAAA4D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B,CAAC,GACAxC,KAAK,CAACxN,IAAI,KAAK,UAAU,gBACzBtE,OAAA,CAACH,IAAI,CAACsV,KAAK;cACP7Q,IAAI,EAAC,UAAU;cACfY,IAAI,EAAE4M,KAAK,CAAC5M,IAAK;cACjBgO,OAAO,EAAExB,QAAQ,CAACI,KAAK,CAAC5M,IAAI,CAAC,IAAI,KAAM;cACvC4P,QAAQ,EAAE9B,YAAa;cACvB1C,KAAK,EAAEwB,KAAK,CAACxB;YAAM;cAAA6D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC,gBAEJtU,OAAA,CAACH,IAAI,CAACmV,OAAO;cACX1Q,IAAI,EAAEwN,KAAK,CAACxN,IAAI,IAAI,MAAO;cAC3BY,IAAI,EAAE4M,KAAK,CAAC5M,IAAK;cACjB6M,KAAK,EACAL,QAAQ,CAACI,KAAK,CAAC5M,IAAI,CAAC,KAAK,IAAI,IAAIwM,QAAQ,CAACI,KAAK,CAAC5M,IAAI,CAAC,KAAKe,SAAS,IAAIyL,QAAQ,CAACI,KAAK,CAAC5M,IAAI,CAAC,KAAK,KAAK,GACpG,EAAE,GACFwM,QAAQ,CAACI,KAAK,CAAC5M,IAAI,CACxB;cACD4P,QAAQ,EAAE9B,YAAa;cACvBzC,QAAQ,EAAEuB,KAAK,CAACvB,QAAS;cACzBG,QAAQ,EAAE,CAAC,CAAC9L,IAAI,KAAKkN,KAAK,CAAC5M,IAAI,KAAK,UAAU,IAAI4M,KAAK,CAAC5M,IAAI,KAAK,eAAe,IAAI4M,KAAK,CAAC5M,IAAI,KAAK,iBAAiB;cACpH;cAAA;cACAkQ,MAAM,EAAEtD,KAAK,CAAC5M,IAAI,KAAK,UAAU,IAAIoM,QAAQ,KAAK,aAAa,GAAGgB,kBAAkB,GAAGrM;YAAU;cAAAkO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClG,CACF;UAAA,GA9CuExC,KAAK,CAAC5M,IAAI;YAAAiP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA+CxE,CACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC,eACbtU,OAAA,CAACL,KAAK,CAAC0V,MAAM;UAAAtB,QAAA,gBACX/T,OAAA,CAACJ,MAAM;YAAC0V,OAAO,EAAC,WAAW;YAACC,OAAO,EAAEpE,OAAQ;YAAA4C,QAAA,EAAC;UAE9C;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTtU,OAAA,CAACJ,MAAM;YAAC0V,OAAO,EAAC,SAAS;YAAChR,IAAI,EAAC,QAAQ;YAAAyP,QAAA,EAAC;UAExC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEZ,CAAC;EAAC/T,EAAA,CAzUI0Q,SAAS;EA2Uf,MAAMuE,UAAU,GAAGA,CAAC;IAAErR,YAAY;IAAEsR,UAAU;IAAEC,WAAW;IAAEC;EAAS,CAAC,KAAK;IAC1E,MAAMC,WAAW,GAAG,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIhK,IAAI,CAACC,IAAI,CAAC2J,UAAU,GAAGtR,YAAY,CAAC,EAAE0R,CAAC,EAAE,EAAE;MAC9DD,WAAW,CAAChC,IAAI,CAACiC,CAAC,CAAC;IACrB;IAEA,oBACE7V,OAAA;MAAA+T,QAAA,eACE/T,OAAA;QAAI0U,SAAS,EAAC,wCAAwC;QAAAX,QAAA,EACnD6B,WAAW,CAAC/Q,GAAG,CAACiR,MAAM,iBACrB9V,OAAA;UAAiB0U,SAAS,EAAE,aAAagB,WAAW,KAAKI,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;UAAA/B,QAAA,eAChF/T,OAAA;YAAQuV,OAAO,EAAEA,CAAA,KAAMI,QAAQ,CAACG,MAAM,CAAE;YAACpB,SAAS,EAAC,WAAW;YAAAX,QAAA,EAC3D+B;UAAM;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC,GAHFwB,MAAM;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIX,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEV,CAAC;EAED,MAAMyB,aAAa,GAAGA,CAAA,KAAM;IAC1B,QAAQ/U,SAAS;MACf,KAAK,UAAU;QACb,oBACEhB,OAAA;UAAA+T,QAAA,gBACE/T,OAAA;YAAI0U,SAAS,EAAC,MAAM;YAAAX,QAAA,EAAC;UAAkB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5CtU,OAAA;YAAK0U,SAAS,EAAC,SAAS;YAAAX,QAAA,gBACtB/T,OAAA;cAAK0U,SAAS,EAAC,UAAU;cAAAX,QAAA,eACvB/T,OAAA;gBAAK0U,SAAS,EAAC,iCAAiC;gBAAAX,QAAA,gBAC9C/T,OAAA;kBAAK0U,SAAS,EAAC,aAAa;kBAAAX,QAAA,EAAC;gBAAa;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAChDtU,OAAA;kBAAK0U,SAAS,EAAC,WAAW;kBAAAX,QAAA,eACxB/T,OAAA;oBAAI0U,SAAS,EAAC,sBAAsB;oBAAAX,QAAA,EAAE1S,OAAO,CAACoE;kBAAM;oBAAA0O,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNtU,OAAA;cAAK0U,SAAS,EAAC,UAAU;cAAAX,QAAA,eACvB/T,OAAA;gBAAK0U,SAAS,EAAC,iCAAiC;gBAAAX,QAAA,gBAC9C/T,OAAA;kBAAK0U,SAAS,EAAC,aAAa;kBAAAX,QAAA,EAAC;gBAAc;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACjDtU,OAAA;kBAAK0U,SAAS,EAAC,WAAW;kBAAAX,QAAA,eACxB/T,OAAA;oBAAI0U,SAAS,EAAC,sBAAsB;oBAAAX,QAAA,EAAExS,QAAQ,CAACkE;kBAAM;oBAAA0O,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNtU,OAAA;cAAK0U,SAAS,EAAC,UAAU;cAAAX,QAAA,eACvB/T,OAAA;gBAAK0U,SAAS,EAAC,8BAA8B;gBAAAX,QAAA,gBAC3C/T,OAAA;kBAAK0U,SAAS,EAAC,aAAa;kBAAAX,QAAA,EAAC;gBAAe;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAClDtU,OAAA;kBAAK0U,SAAS,EAAC,WAAW;kBAAAX,QAAA,eACxB/T,OAAA;oBAAI0U,SAAS,EAAC,sBAAsB;oBAAAX,QAAA,EAAEpS,KAAK,CAAC0J,MAAM,CAAC2K,CAAC,IAAIA,CAAC,CAAC9O,UAAU,KAAK,IAAI,CAAC,CAACzB;kBAAM;oBAAA0O,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxF,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNtU,OAAA;cAAK0U,SAAS,EAAC,UAAU;cAAAX,QAAA,eACvB/T,OAAA;gBAAK0U,SAAS,EAAC,iCAAiC;gBAAAX,QAAA,gBAC9C/T,OAAA;kBAAK0U,SAAS,EAAC,aAAa;kBAAAX,QAAA,EAAC;gBAAoB;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACvDtU,OAAA;kBAAK0U,SAAS,EAAC,WAAW;kBAAAX,QAAA,eACxB/T,OAAA;oBAAI0U,SAAS,EAAC,sBAAsB;oBAAAX,QAAA,EAAEtS,YAAY,CAAC4J,MAAM,CAAC2E,IAAI,IAAIA,IAAI,CAAClI,MAAM,KAAK,SAAS,CAAC,CAACrC;kBAAM;oBAAA0O,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNtU,OAAA;YAAK0U,SAAS,EAAC,MAAM;YAAAX,QAAA,gBACnB/T,OAAA;cAAA+T,QAAA,EAAI;YAAa;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtBtU,OAAA;cAAK0U,SAAS,EAAC,wBAAwB;cAAAX,QAAA,gBACrC/T,OAAA;gBAAQ0U,SAAS,EAAC,yBAAyB;gBAACa,OAAO,EAAEA,CAAA,KAAMrK,eAAe,CAAC,CAAE;gBAAA6I,QAAA,EAAC;cAAc;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACrGtU,OAAA;gBAAQ0U,SAAS,EAAC,yBAAyB;gBAACa,OAAO,EAAEA,CAAA,KAAMvI,gBAAgB,CAAC,CAAE;gBAAA+G,QAAA,EAAC;cAAe;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACvGtU,OAAA;gBAAQ0U,SAAS,EAAC,sBAAsB;gBAACa,OAAO,EAAEA,CAAA,KAAMjH,aAAa,CAAC,CAAE;gBAAAyF,QAAA,EAAC;cAAY;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC9FtU,OAAA;gBAAQ0U,SAAS,EAAC,yBAAyB;gBAACa,OAAO,EAAEA,CAAA,KAAM1F,oBAAoB,CAAC,CAAE;gBAAAkE,QAAA,EAAC;cAAmB;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5G,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAEV,KAAK,SAAS;QACZ,oBACEtU,OAAA;UAAA+T,QAAA,gBACE/T,OAAA;YAAI0U,SAAS,EAAC,MAAM;YAAAX,QAAA,EAAC;UAAc;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxCtU,OAAA;YAAK0U,SAAS,EAAC,qCAAqC;YAAAX,QAAA,gBAClD/T,OAAA;cAAQ0U,SAAS,EAAC,iBAAiB;cAACa,OAAO,EAAEA,CAAA,KAAMrK,eAAe,CAAC,CAAE;cAAA6I,QAAA,EAAC;YAAc;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC7FtU,OAAA;cACEsE,IAAI,EAAC,MAAM;cACXoQ,SAAS,EAAC,mBAAmB;cAC7BuB,WAAW,EAAC,mBAAmB;cAC/BlE,KAAK,EAAE5O,gBAAiB;cACxB2R,QAAQ,EAAG7B,CAAC,IAAK7P,mBAAmB,CAAC6P,CAAC,CAACE,MAAM,CAACpB,KAAK;YAAE;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNtU,OAAA;YAAK0U,SAAS,EAAC,kBAAkB;YAAAX,QAAA,eAC/B/T,OAAA;cAAO0U,SAAS,EAAC,iCAAiC;cAAAX,QAAA,gBAChD/T,OAAA;gBAAA+T,QAAA,eACE/T,OAAA;kBAAA+T,QAAA,gBACE/T,OAAA;oBAAA+T,QAAA,EAAI;kBAAE;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACXtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAI;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAS;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAClBtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAI;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAK;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACdtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAK;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACdtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAU;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACnBtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAU;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACnBtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAM;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACftU,OAAA;oBAAA+T,QAAA,EAAI;kBAAO;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACRtU,OAAA;gBAAA+T,QAAA,EACGrI,cAAc,CAACjG,MAAM,GAAG,CAAC,GACxBiG,cAAc,CAAC7G,GAAG,CAACsG,MAAM,iBACvBnL,OAAA;kBAAA+T,QAAA,gBACE/T,OAAA;oBAAA+T,QAAA,EAAK5I,MAAM,CAACpG;kBAAE;oBAAAoP,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACpBtU,OAAA;oBAAA+T,QAAA,EAAK5I,MAAM,CAACjG;kBAAI;oBAAAiP,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACtBtU,OAAA;oBAAA+T,QAAA,EAAK5I,MAAM,CAAC9F;kBAAS;oBAAA8O,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC3BtU,OAAA;oBAAA+T,QAAA,EAAK5I,MAAM,CAACxF;kBAAI;oBAAAwO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACtBtU,OAAA;oBAAA+T,QAAA,EAAK5I,MAAM,CAACtF;kBAAK;oBAAAsO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACvBtU,OAAA;oBAAA+T,QAAA,EAAK5I,MAAM,CAACrF;kBAAO;oBAAAqO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACzBtU,OAAA;oBAAA+T,QAAA,EAAK5I,MAAM,CAACpF;kBAAY;oBAAAoO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC9BtU,OAAA;oBAAA+T,QAAA,EAAK5I,MAAM,CAACnF;kBAAQ;oBAAAmO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC1BtU,OAAA;oBAAA+T,QAAA,EAAK5I,MAAM,CAACjF;kBAAM;oBAAAiO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACxBtU,OAAA;oBAAA+T,QAAA,gBACE/T,OAAA;sBAAQ0U,SAAS,EAAC,0BAA0B;sBAACa,OAAO,EAAEA,CAAA,KAAMrK,eAAe,CAACC,MAAM,CAAE;sBAAA4I,QAAA,EAAC;oBAAI;sBAAAI,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eAClGtU,OAAA;sBAAQ0U,SAAS,EAAC,uBAAuB;sBAACa,OAAO,EAAEA,CAAA,KAAM5K,kBAAkB,CAACQ,MAAM,CAACpG,EAAE,CAAE;sBAAAgP,QAAA,EAAC;oBAAM;sBAAAI,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrG,CAAC;gBAAA,GAbEnJ,MAAM,CAACpG,EAAE;kBAAAoP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAcd,CACL,CAAC,gBAEFtU,OAAA;kBAAA+T,QAAA,eACE/T,OAAA;oBAAIkW,OAAO,EAAC,IAAI;oBAACxB,SAAS,EAAC,aAAa;oBAAAX,QAAA,EAAC;kBAAiB;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7D;cACL;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNtU,OAAA,CAACwV,UAAU;YACTrR,YAAY,EAAEA,YAAa;YAC3BsR,UAAU,EAAErK,eAAe,CAAC3F,MAAO;YACnCiQ,WAAW,EAAE/R,kBAAmB;YAChCgS,QAAQ,EAAE/R;UAAsB;YAAAuQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAEV,KAAK,UAAU;QACb,oBACEtU,OAAA;UAAA+T,QAAA,gBACE/T,OAAA;YAAI0U,SAAS,EAAC,MAAM;YAAAX,QAAA,EAAC;UAAe;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzCtU,OAAA;YAAK0U,SAAS,EAAC,qCAAqC;YAAAX,QAAA,gBAClD/T,OAAA;cAAQ0U,SAAS,EAAC,iBAAiB;cAACa,OAAO,EAAEA,CAAA,KAAMvI,gBAAgB,CAAC,CAAE;cAAA+G,QAAA,EAAC;YAAe;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC/FtU,OAAA;cACEsE,IAAI,EAAC,MAAM;cACXoQ,SAAS,EAAC,mBAAmB;cAC7BuB,WAAW,EAAC,oBAAoB;cAChClE,KAAK,EAAE1O,iBAAkB;cACzByR,QAAQ,EAAG7B,CAAC,IAAK3P,oBAAoB,CAAC2P,CAAC,CAACE,MAAM,CAACpB,KAAK;YAAE;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNtU,OAAA;YAAK0U,SAAS,EAAC,kBAAkB;YAAAX,QAAA,eAC/B/T,OAAA;cAAO0U,SAAS,EAAC,iCAAiC;cAAAX,QAAA,gBAChD/T,OAAA;gBAAA+T,QAAA,eACE/T,OAAA;kBAAA+T,QAAA,gBACE/T,OAAA;oBAAA+T,QAAA,EAAI;kBAAE;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACXtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAI;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAK;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACdtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAK;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACdtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAO;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACRtU,OAAA;gBAAA+T,QAAA,EACG1G,eAAe,CAAC5H,MAAM,GAAG,CAAC,GACzB4H,eAAe,CAACxI,GAAG,CAACoI,OAAO,iBACzBjN,OAAA;kBAAA+T,QAAA,gBACE/T,OAAA;oBAAA+T,QAAA,EAAK9G,OAAO,CAAClI;kBAAE;oBAAAoP,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACrBtU,OAAA;oBAAA+T,QAAA,EAAK9G,OAAO,CAAC/H;kBAAI;oBAAAiP,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACvBtU,OAAA;oBAAA+T,QAAA,EAAK9G,OAAO,CAACpH;kBAAK;oBAAAsO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACxBtU,OAAA;oBAAA+T,QAAA,EAAK9G,OAAO,CAACnH;kBAAO;oBAAAqO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC1BtU,OAAA;oBAAA+T,QAAA,gBACE/T,OAAA;sBAAQ0U,SAAS,EAAC,0BAA0B;sBAACa,OAAO,EAAEA,CAAA,KAAMvI,gBAAgB,CAACC,OAAO,CAAE;sBAAA8G,QAAA,EAAC;oBAAI;sBAAAI,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eACpGtU,OAAA;sBAAQ0U,SAAS,EAAC,uBAAuB;sBAACa,OAAO,EAAEA,CAAA,KAAM5I,mBAAmB,CAACM,OAAO,CAAClI,EAAE,CAAE;sBAAAgP,QAAA,EAAC;oBAAM;sBAAAI,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACvG,CAAC;gBAAA,GARErH,OAAO,CAAClI,EAAE;kBAAAoP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OASf,CACL,CAAC,gBAEFtU,OAAA;kBAAA+T,QAAA,eACE/T,OAAA;oBAAIkW,OAAO,EAAC,GAAG;oBAACxB,SAAS,EAAC,aAAa;oBAAAX,QAAA,EAAC;kBAAkB;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7D;cACL;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNtU,OAAA,CAACwV,UAAU;YACTrR,YAAY,EAAEA,YAAa;YAC3BsR,UAAU,EAAEvI,gBAAgB,CAACzH,MAAO;YACpCiQ,WAAW,EAAE7R,mBAAoB;YACjC8R,QAAQ,EAAE7R;UAAuB;YAAAqQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAEV,KAAK,OAAO;QAAE;QACZ,oBACEtU,OAAA;UAAA+T,QAAA,gBACE/T,OAAA;YAAI0U,SAAS,EAAC,MAAM;YAAAX,QAAA,EAAC;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtCtU,OAAA;YAAK0U,SAAS,EAAC,qCAAqC;YAAAX,QAAA,gBAClD/T,OAAA;cAAQ0U,SAAS,EAAC,iBAAiB;cAACa,OAAO,EAAEA,CAAA,KAAMjH,aAAa,CAAC,CAAE;cAAAyF,QAAA,EAAC;YAAY;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACzFtU,OAAA;cACEsE,IAAI,EAAC,MAAM;cACXoQ,SAAS,EAAC,mBAAmB;cAC7BuB,WAAW,EAAC,iBAAiB;cAC7BlE,KAAK,EAAExO,cAAe;cACtBuR,QAAQ,EAAG7B,CAAC,IAAKzP,iBAAiB,CAACyP,CAAC,CAACE,MAAM,CAACpB,KAAK;YAAE;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNtU,OAAA;YAAK0U,SAAS,EAAC,kBAAkB;YAAAX,QAAA,eAC/B/T,OAAA;cAAO0U,SAAS,EAAC,iCAAiC;cAAAX,QAAA,gBAChD/T,OAAA;gBAAA+T,QAAA,eACE/T,OAAA;kBAAA+T,QAAA,gBACE/T,OAAA;oBAAA+T,QAAA,EAAI;kBAAE;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACXtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAS;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAClBtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAI;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAI;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAS;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAClBtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAO;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACRtU,OAAA;gBAAA+T,QAAA,EACGpF,YAAY,CAAClJ,MAAM,GAAG,CAAC,GACtBkJ,YAAY,CAAC9J,GAAG,CAACiC,IAAI,iBACnB9G,OAAA;kBAAA+T,QAAA,gBACE/T,OAAA;oBAAA+T,QAAA,EAAKjN,IAAI,CAAC/B;kBAAE;oBAAAoP,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAClBtU,OAAA;oBAAA+T,QAAA,EAAKjN,IAAI,CAAC9B;kBAAQ;oBAAAmP,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACxBtU,OAAA;oBAAA+T,QAAA,EAAKjN,IAAI,CAACE;kBAAK;oBAAAmN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACrBtU,OAAA;oBAAA+T,QAAA,EAAKjN,IAAI,CAACG;kBAAO;oBAAAkN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACvBtU,OAAA;oBAAA+T,QAAA,EAAKjN,IAAI,CAACI,UAAU,GAAG,UAAU,GAAG;kBAAQ;oBAAAiN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAClDtU,OAAA;oBAAA+T,QAAA,gBACE/T,OAAA;sBAAQ0U,SAAS,EAAC,0BAA0B;sBAACa,OAAO,EAAEA,CAAA,KAAMjH,aAAa,CAACxH,IAAI,CAAE;sBAAAiN,QAAA,EAAC;oBAAI;sBAAAI,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eAC9FtU,OAAA;sBAAQ0U,SAAS,EAAC,uBAAuB;sBAACa,OAAO,EAAEA,CAAA,KAAMrH,gBAAgB,CAACpH,IAAI,CAAC/B,EAAE,CAAE;sBAAAgP,QAAA,EAAC;oBAAM;sBAAAI,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjG,CAAC;gBAAA,GATExN,IAAI,CAAC/B,EAAE;kBAAAoP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAUZ,CACL,CAAC,gBAEFtU,OAAA;kBAAA+T,QAAA,eACE/T,OAAA;oBAAIkW,OAAO,EAAC,GAAG;oBAACxB,SAAS,EAAC,aAAa;oBAAAX,QAAA,EAAC;kBAAe;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1D;cACL;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNtU,OAAA,CAACwV,UAAU;YACTrR,YAAY,EAAEA,YAAa;YAC3BsR,UAAU,EAAElH,aAAa,CAAC9I,MAAO;YACjCiQ,WAAW,EAAE3R,gBAAiB;YAC9B4R,QAAQ,EAAE3R;UAAoB;YAAAmQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAEV,KAAK,cAAc;QAAE;QACnB,oBACEtU,OAAA;UAAA+T,QAAA,gBACE/T,OAAA;YAAI0U,SAAS,EAAC,MAAM;YAAAX,QAAA,EAAC;UAAmB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7CtU,OAAA;YAAK0U,SAAS,EAAC,qCAAqC;YAAAX,QAAA,gBAClD/T,OAAA;cAAQ0U,SAAS,EAAC,iBAAiB;cAACa,OAAO,EAAEA,CAAA,KAAM1F,oBAAoB,CAAC,CAAE;cAAAkE,QAAA,EAAC;YAAmB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACvGtU,OAAA;cACEsE,IAAI,EAAC,MAAM;cACXoQ,SAAS,EAAC,mBAAmB;cAC7BuB,WAAW,EAAC,wBAAwB;cACpClE,KAAK,EAAEtO,qBAAsB;cAC7BqR,QAAQ,EAAG7B,CAAC,IAAKvP,wBAAwB,CAACuP,CAAC,CAACE,MAAM,CAACpB,KAAK;YAAE;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNtU,OAAA;YAAK0U,SAAS,EAAC,kBAAkB;YAAAX,QAAA,eAC/B/T,OAAA;cAAO0U,SAAS,EAAC,iCAAiC;cAAAX,QAAA,gBAChD/T,OAAA;gBAAA+T,QAAA,eACE/T,OAAA;kBAAA+T,QAAA,gBACE/T,OAAA;oBAAA+T,QAAA,EAAI;kBAAE;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACXtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAO;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAChBtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAM;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACftU,OAAA;oBAAA+T,QAAA,EAAI;kBAAO;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAChBtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAI;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAI;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAM;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACftU,OAAA;oBAAA+T,QAAA,EAAI;kBAAe;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACxBtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAa;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACtBtU,OAAA;oBAAA+T,QAAA,EAAI;kBAAO;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACRtU,OAAA;gBAAA+T,QAAA,EACG5D,mBAAmB,CAAC1K,MAAM,GAAG,CAAC,GAC7B0K,mBAAmB,CAACtL,GAAG,CAACiL,WAAW,iBACjC9P,OAAA;kBAAA+T,QAAA,gBACE/T,OAAA;oBAAA+T,QAAA,EAAKjE,WAAW,CAAC/K;kBAAE;oBAAAoP,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACzBtU,OAAA;oBAAA+T,QAAA,EAAKjE,WAAW,CAACtI;kBAAW;oBAAA2M,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAClCtU,OAAA;oBAAA+T,QAAA,EAAKjE,WAAW,CAACpI;kBAAU;oBAAAyM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACjCtU,OAAA;oBAAA+T,QAAA,EAAKjE,WAAW,CAAC/I;kBAAQ;oBAAAoN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC/BtU,OAAA;oBAAA+T,QAAA,EAAKjE,WAAW,CAAClI;kBAAa;oBAAAuM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACpCtU,OAAA;oBAAA+T,QAAA,EAAKjE,WAAW,CAACjI;kBAAe;oBAAAsM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACtCtU,OAAA;oBAAA+T,QAAA,eACE/T,OAAA;sBACE0U,SAAS,EAAC,aAAa;sBACvB3C,KAAK,EAAEjC,WAAW,CAAChI,MAAO;sBAC1BgN,QAAQ,EAAG7B,CAAC,IAAK7D,uBAAuB,CACpC;wBACE,GAAGU,WAAW;wBACdhI,MAAM,EAAEmL,CAAC,CAACE,MAAM,CAACpB,KAAK;wBACtBnK,aAAa,EAAEkI,WAAW,CAAClI,aAAa;wBACxCC,eAAe,EAAEiI,WAAW,CAACjI;sBAC/B,CACJ,CAAE;sBAAAkM,QAAA,gBAEF/T,OAAA;wBAAQ+R,KAAK,EAAC,SAAS;wBAAAgC,QAAA,EAAC;sBAAO;wBAAAI,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC,eACxCtU,OAAA;wBAAQ+R,KAAK,EAAC,UAAU;wBAAAgC,QAAA,EAAC;sBAAQ;wBAAAI,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC,eAC1CtU,OAAA;wBAAQ+R,KAAK,EAAC,SAAS;wBAAAgC,QAAA,EAAC;sBAAO;wBAAAI,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAClC;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACP,CAAC,eACLtU,OAAA;oBAAA+T,QAAA,EAAKjE,WAAW,CAAC/H;kBAAiB;oBAAAoM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACxCtU,OAAA;oBAAA+T,QAAA,EAAKjE,WAAW,CAAC9H;kBAAa;oBAAAmM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACpCtU,OAAA;oBAAA+T,QAAA,gBACE/T,OAAA;sBAAQ0U,SAAS,EAAC,0BAA0B;sBAACa,OAAO,EAAEA,CAAA,KAAM1F,oBAAoB,CAACC,WAAW,CAAE;sBAAAiE,QAAA,EAAC;oBAAI;sBAAAI,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eAC5GtU,OAAA;sBAAQ0U,SAAS,EAAC,uBAAuB;sBAACa,OAAO,EAAEA,CAAA,KAAM9F,uBAAuB,CAACK,WAAW,CAAC/K,EAAE,CAAE;sBAAAgP,QAAA,EAAC;oBAAM;sBAAAI,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/G,CAAC;gBAAA,GA9BExE,WAAW,CAAC/K,EAAE;kBAAAoP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OA+BnB,CACL,CAAC,gBAEFtU,OAAA;kBAAA+T,QAAA,eACE/T,OAAA;oBAAIkW,OAAO,EAAC,IAAI;oBAACxB,SAAS,EAAC,aAAa;oBAAAX,QAAA,EAAC;kBAAsB;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClE;cACL;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNtU,OAAA,CAACwV,UAAU;YACTrR,YAAY,EAAEA,YAAa;YAC3BsR,UAAU,EAAE1F,oBAAoB,CAACtK,MAAO;YACxCiQ,WAAW,EAAEzR,uBAAwB;YACrC0R,QAAQ,EAAEzR;UAA2B;YAAAiQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAEV;QACE,oBAAOtU,OAAA;UAAA+T,QAAA,EAAG;QAA6B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;IAC/C;EACF,CAAC;EAGD,IAAI1T,cAAc,EAAE;IAClB,oBACEZ,OAAA;MAAK0U,SAAS,EAAC,kDAAkD;MAACyB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAQ,CAAE;MAAArC,QAAA,eAC9F/T,OAAA;QAAK0U,SAAS,EAAC,6BAA6B;QAAC2B,IAAI,EAAC,QAAQ;QAAAtC,QAAA,eACxD/T,OAAA;UAAM0U,SAAS,EAAC,iBAAiB;UAAAX,QAAA,EAAC;QAAsC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAI,CAAC1T,cAAc,IAAI,CAACH,KAAK,IAAIK,aAAa,EAAE;IAC9C,oBACEd,OAAA;MAAK0U,SAAS,EAAC,kDAAkD;MAACyB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAQ,CAAE;MAAArC,QAAA,eAC9F/T,OAAA;QAAK0U,SAAS,EAAC,aAAa;QAAAX,QAAA,gBAC1B/T,OAAA;UAAI0U,SAAS,EAAC,aAAa;UAAAX,QAAA,EAAC;QAAe;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChDtU,OAAA;UAAG0U,SAAS,EAAC,MAAM;UAAAX,QAAA,EAAC;QAAmF;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACEtU,OAAA;IAAK0U,SAAS,EAAC,iBAAiB;IAAAX,QAAA,GAC7BlR,SAAS,iBACR7C,OAAA,CAACF,KAAK;MAACwV,OAAO,EAAErS,SAAU;MAACkO,OAAO,EAAEA,CAAA,KAAMrO,YAAY,CAAC,KAAK,CAAE;MAACwT,WAAW;MAAC5B,SAAS,EAAC,uDAAuD;MAACyB,KAAK,EAAE;QAAEI,MAAM,EAAE;MAAK,CAAE;MAAAxC,QAAA,EAClKhR;IAAY;MAAAoR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACR,eAEDtU,OAAA,CAACL,KAAK;MAACuR,IAAI,EAAEnH,gBAAiB;MAAC8J,MAAM,EAAEA,CAAA,KAAM7J,mBAAmB,CAAC,KAAK,CAAE;MAAC8J,QAAQ;MAAAC,QAAA,gBAC/E/T,OAAA,CAACL,KAAK,CAACqU,MAAM;QAACC,WAAW;QAAAF,QAAA,eACvB/T,OAAA,CAACL,KAAK,CAACuU,KAAK;UAAAH,QAAA,EAAE1J;QAAY;UAAA8J,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACftU,OAAA,CAACL,KAAK,CAAC6U,IAAI;QAAAT,QAAA,EACR5J;MAAc;QAAAgK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACbtU,OAAA,CAACL,KAAK,CAAC0V,MAAM;QAAAtB,QAAA,gBACX/T,OAAA,CAACJ,MAAM;UAAC0V,OAAO,EAAC,WAAW;UAACC,OAAO,EAAEA,CAAA,KAAMvL,mBAAmB,CAAC,KAAK,CAAE;UAAA+J,QAAA,EAAC;QAEvE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtU,OAAA,CAACJ,MAAM;UAAC0V,OAAO,EAAC,QAAQ;UAACC,OAAO,EAAE7K,mBAAoB;UAAAqJ,QAAA,EAAC;QAEvD;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAERtU,OAAA;MAAK0U,SAAS,EAAC,KAAK;MAAAX,QAAA,gBAClB/T,OAAA;QAAK0U,SAAS,EAAC,wDAAwD;QAACyB,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAQ,CAAE;QAAArC,QAAA,eACpG/T,OAAA;UAAK0U,SAAS,EAAC,sBAAsB;UAAAX,QAAA,eACnC/T,OAAA;YAAI0U,SAAS,EAAC,iBAAiB;YAAAX,QAAA,gBAC7B/T,OAAA;cAAI0U,SAAS,EAAC,UAAU;cAAAX,QAAA,eACtB/T,OAAA;gBAAG0U,SAAS,EAAE,YAAY1T,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;gBAACwV,IAAI,EAAC,GAAG;gBAACjB,OAAO,EAAEA,CAAA,KAAMtU,YAAY,CAAC,UAAU,CAAE;gBAAA8S,QAAA,EAAC;cAExH;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACLtU,OAAA;cAAI0U,SAAS,EAAC,UAAU;cAAAX,QAAA,eACtB/T,OAAA;gBAAG0U,SAAS,EAAE,YAAY1T,SAAS,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;gBAACwV,IAAI,EAAC,GAAG;gBAACjB,OAAO,EAAEA,CAAA,KAAMtU,YAAY,CAAC,SAAS,CAAE;gBAAA8S,QAAA,EAAC;cAEtH;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACLtU,OAAA;cAAI0U,SAAS,EAAC,UAAU;cAAAX,QAAA,eACtB/T,OAAA;gBAAG0U,SAAS,EAAE,YAAY1T,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;gBAACwV,IAAI,EAAC,GAAG;gBAACjB,OAAO,EAAEA,CAAA,KAAMtU,YAAY,CAAC,UAAU,CAAE;gBAAA8S,QAAA,EAAC;cAExH;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACLtU,OAAA;cAAI0U,SAAS,EAAC,UAAU;cAAAX,QAAA,eACtB/T,OAAA;gBAAG0U,SAAS,EAAE,YAAY1T,SAAS,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAG;gBAACwV,IAAI,EAAC,GAAG;gBAACjB,OAAO,EAAEA,CAAA,KAAMtU,YAAY,CAAC,OAAO,CAAE;gBAAA8S,QAAA,EAAC;cAElH;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACLtU,OAAA;cAAI0U,SAAS,EAAC,UAAU;cAAAX,QAAA,eACtB/T,OAAA;gBAAG0U,SAAS,EAAE,YAAY1T,SAAS,KAAK,cAAc,GAAG,QAAQ,GAAG,EAAE,EAAG;gBAACwV,IAAI,EAAC,GAAG;gBAACjB,OAAO,EAAEA,CAAA,KAAMtU,YAAY,CAAC,cAAc,CAAE;gBAAA8S,QAAA,EAAC;cAEhI;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENtU,OAAA;QAAM0U,SAAS,EAAC,4CAA4C;QAAAX,QAAA,EACzDgC,aAAa,CAAC;MAAC;QAAA5B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EAELzS,eAAe,iBACd7B,OAAA,CAACiR,SAAS;MACRC,IAAI,EAAErP,eAAgB;MACtBsP,OAAO,EAAEA,CAAA,KAAM;QAACrP,kBAAkB,CAAC,KAAK,CAAC;QAAEE,gBAAgB,CAAC,IAAI,CAAC;MAAC,CAAE,CAAC;MAAA;MACrE4C,IAAI,EAAE7C,aAAc;MACpBqP,MAAM,EAAErP,aAAa,GAAGyH,kBAAkB,GAAGjB,eAAgB;MAC7DkC,KAAK,EAAE1I,aAAa,GAAG,eAAe,GAAG,qBAAsB;MAC/DuP,QAAQ,EAAC,QAAQ;MACjBD,MAAM,EAAEtP,aAAa,GAAG0O,gBAAgB,GAAGJ,eAAgB;MAC3D3P,WAAW,EAAEA,WAAY;MACzB0D,gBAAgB,EAAEA;IAAiB,GAC9BrC,aAAa,GAAG,eAAeA,aAAa,CAACgD,EAAE,EAAE,GAAG,YAAY;MAAAoP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CACF,EAEArS,gBAAgB,iBACfjC,OAAA,CAACiR,SAAS;MACRC,IAAI,EAAEjP,gBAAiB;MACvBkP,OAAO,EAAEA,CAAA,KAAM;QAACjP,mBAAmB,CAAC,KAAK,CAAC;QAAEE,iBAAiB,CAAC,IAAI,CAAC;MAAC,CAAE,CAAC;MAAA;MACvEwC,IAAI,EAAEzC,cAAe;MACrBiP,MAAM,EAAEjP,cAAc,GAAGkK,mBAAmB,GAAGN,gBAAiB;MAChEtB,KAAK,EAAEtI,cAAc,GAAG,iBAAiB,GAAG,uBAAwB;MACpEmP,QAAQ,EAAC,SAAS;MAClBD,MAAM,EAAElP,cAAc,GAAGyO,iBAAiB,GAAGD,gBAAiB;MAC9DjQ,WAAW,EAAEA,WAAY;MACzB0D,gBAAgB,EAAEA;IAAiB,GAC9BjC,cAAc,GAAG,gBAAgBA,cAAc,CAAC4C,EAAE,EAAE,GAAG,aAAa;MAAAoP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CACF,EAEAjS,aAAa,iBACZrC,OAAA,CAACiR,SAAS;MACRC,IAAI,EAAE7O,aAAc;MACpB8O,OAAO,EAAEA,CAAA,KAAM;QAAC7O,gBAAgB,CAAC,KAAK,CAAC;QAAEE,cAAc,CAAC,IAAI,CAAC;MAAC,CAAE,CAAC;MAAA;MACjEoC,IAAI,EAAErC,WAAY;MAClB6O,MAAM,EAAE7O,WAAW,GAAGqL,gBAAgB,GAAGL,aAAc;MACvD9C,KAAK,EAAElI,WAAW,GAAG,cAAc,GAAG,mBAAoB;MAC1D+O,QAAQ,EAAC,MAAM;MACfD,MAAM,EAAE9O,WAAW,GAAGuO,cAAc,GAAGD,aAAc;MACrDnQ,WAAW,EAAEA,WAAY;MACzB0D,gBAAgB,EAAEA;IAAiB,GAC9B7B,WAAW,GAAG,aAAaA,WAAW,CAACwC,EAAE,EAAE,GAAG,UAAU;MAAAoP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CACF,EAEA7R,oBAAoB,iBACnBzC,OAAA,CAACiR,SAAS;MACRC,IAAI,EAAEzO,oBAAqB;MAC3B0O,OAAO,EAAEA,CAAA,KAAM;QAACzO,uBAAuB,CAAC,KAAK,CAAC;QAAEE,qBAAqB,CAAC,IAAI,CAAC;MAAC,CAAE,CAAC;MAAA;MAC/EgC,IAAI,EAAEjC,kBAAmB;MACzByO,MAAM,EAAEzO,kBAAkB,GAAGyM,uBAAuB,GAAGP,oBAAqB;MAC5EpE,KAAK,EAAE9H,kBAAkB,GAAG,eAAe,GAAG,oBAAqB;MACnE2O,QAAQ,EAAC,aAAa;MACtBD,MAAM,EAAE1O,kBAAkB,GAAGqO,qBAAqB,GAAGD,oBAAqB;MAC1ErQ,WAAW,EAAEA,WAAY;MACzB0D,gBAAgB,EAAEA;IAAiB,GAC9BzB,kBAAkB,GAAG,oBAAoBA,kBAAkB,CAACoC,EAAE,EAAE,GAAG,iBAAiB;MAAAoP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1F,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChU,GAAA,CAz+CQD,cAAc;EAAA,QACHX,OAAO;AAAA;AAAA+W,EAAA,GADlBpW,cAAc;AA2+CvB,eAAeA,cAAc;AAAC,IAAAoW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}