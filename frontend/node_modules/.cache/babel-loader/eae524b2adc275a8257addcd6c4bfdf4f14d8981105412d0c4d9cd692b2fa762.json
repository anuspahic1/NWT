{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\DoctorDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\nfunction DoctorDashboard() {\n  _s();\n  var _patients$find2;\n  const [activeTab, setActiveTab] = useState('overview');\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]); // Ova lista pacijenata treba da sadrži i userId\n  const [examinations, setExaminations] = useState([]);\n  const [terms, setTerms] = useState([]);\n  const [activityLog, setActivityLog] = useState([]);\n  const [currentDoctorProfile, setCurrentDoctorProfile] = useState(null);\n  const [isEditingProfile, setIsEditingProfile] = useState(false);\n  const [editIme, setEditIme] = useState('');\n  const [editPrezime, setEditPrezime] = useState('');\n  const [editEmail, setEditEmail] = useState('');\n  const [editTelefon, setEditTelefon] = useState('');\n  const [editSpecijalizacije, setEditSpecijalizacije] = useState('');\n  const [editGrad, setEditGrad] = useState('');\n  const [editRadnoVrijeme, setEditRadnoVrijeme] = useState('');\n  const [editIskustvo, setEditIskustvo] = useState('');\n  const [editOcjena, setEditOcjena] = useState('');\n  const [profileImageFile, setProfileImageFile] = useState(null);\n  const [profileImagePreview, setProfileImagePreview] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState({\n    recipientId: '',\n    subject: '',\n    content: ''\n  }); // recipientId će sada biti Long userId\n  const [replyMessage, setReplyMessage] = useState({\n    messageId: '',\n    content: ''\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\n  const [examinationFilterStatus, setExaminationFilterStatus] = useState('All');\n  const [myPatientsCurrentPage, setMyPatientsCurrentPage] = useState(1);\n  const [myExaminationsCurrentPage, setMyExaminationsCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n  const [showPatientDetailModal, setShowPatientDetailModal] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [patientNotes, setPatientNotes] = useState('');\n  const [newTermDate, setNewTermDate] = useState('');\n  const [newTermTime, setNewTermTime] = useState('');\n  const [selectedTermStatus, setSelectedTermStatus] = useState('dostupan');\n  const {\n    token,\n    user,\n    loading: authLoading\n  } = useAuth();\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n  const fetchDoctors = async () => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      setDoctors(response.data.map(doc => ({\n        id: doc.doktorID,\n        // Doktor ID (Integer)\n        userId: doc.userId,\n        // User ID iz Auth servisa (Long)\n        name: `${doc.ime} ${doc.prezime}`,\n        ime: doc.ime,\n        prezime: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        grad: doc.grad,\n        email: doc.email,\n        telefon: doc.telefon,\n        radnoVrijeme: doc.radnoVrijeme,\n        iskustvo: doc.iskustvo,\n        ocjena: doc.ocjena,\n        profileImageBase64: doc.profileImageBase64\n      })));\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error fetching all doctors:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      showNotification(\"Error fetching doctors.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\n      setPatients(response.data.map(pat => ({\n        id: pat.pacijentID,\n        // Pacijent ID (Integer)\n        userId: pat.userId,\n        // User ID iz Auth servisa (Long)\n        name: `${pat.ime} ${pat.prezime}`,\n        ime: pat.ime,\n        prezime: pat.prezime,\n        email: pat.email,\n        phone: pat.telefon\n      })));\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Error fetching all patients:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      showNotification(\"Error fetching patients.\", \"danger\");\n    }\n  };\n  const fetchTerms = async () => {\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      console.warn(\"Cannot fetch terms: doktorId is missing or auth not ready.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${user.doktorId}`, authHeaders);\n      setTerms(response.data.map(term => ({\n        id: term.terminID,\n        doktorId: term.doktorID,\n        datum: term.datum,\n        vrijeme: term.vrijeme,\n        dostupnost: term.dostupnost\n      })));\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Error fetching doctor's terms:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      showNotification(\"Error fetching doctor's terms.\", \"danger\");\n    }\n  };\n  const fetchExaminations = async () => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\n      setExaminations(response.data.map(exam => ({\n        id: exam.pregledID,\n        pacijentId: exam.pacijentID,\n        doktorId: exam.doktorID,\n        patientName: exam.pacijentIme || 'N/A',\n        doctorName: exam.doktorIme || 'N/A',\n        date: exam.datumPregleda,\n        time: exam.vrijemePregleda,\n        status: exam.status,\n        komentarPacijenta: exam.komentarPacijenta || '',\n        ocjenaDoktora: exam.ocjenaDoktora || null,\n        terminID: exam.terminID\n      })));\n    } catch (error) {\n      var _error$response4;\n      console.error(\"Error fetching all examinations:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      showNotification(\"Error fetching examinations.\", \"danger\");\n    }\n  };\n  const fetchActivityLog = async () => {\n    if (!token) return;\n    try {\n      console.warn(\"Activity Log endpoint is not defined, skipping fetching activity log.\");\n      setActivityLog([]);\n    } catch (error) {\n      var _error$response5;\n      console.error(\"Error fetching activity log:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      showNotification(\"Error fetching activity log.\", \"danger\");\n    }\n  };\n  const fetchPatientNotes = async patientId => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${patientId}/notes`, authHeaders);\n      setPatientNotes(response.data.notes || '');\n    } catch (error) {\n      var _error$response6;\n      console.error(\"Error fetching patient notes:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      setPatientNotes('');\n      showNotification(\"Error fetching patient notes.\", \"danger\");\n    }\n  };\n  const handleSavePatientNotes = async () => {\n    if (!token || !selectedPatient) return;\n    try {\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${selectedPatient.id}/notes`, {\n        notes: patientNotes\n      }, authHeaders);\n      showNotification(\"Notes successfully saved!\");\n      fetchActivityLog();\n      setShowPatientDetailModal(false);\n    } catch (error) {\n      var _error$response7, _error$response8, _error$response8$data;\n      console.error(\"Error saving notes:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      showNotification(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Error saving notes.', 'danger');\n    }\n  };\n  const openPatientDetailModal = async patient => {\n    setSelectedPatient(patient);\n    await fetchPatientNotes(patient.id);\n    setShowPatientDetailModal(true);\n  };\n  const closePatientDetailModal = () => {\n    setShowPatientDetailModal(false);\n    setSelectedPatient(null);\n    setPatientNotes('');\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setProfileImageFile(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setProfileImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setProfileImageFile(null);\n      setProfileImagePreview(null);\n    }\n  };\n  const fetchCurrentDoctorProfile = async () => {\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      console.warn(\"Cannot fetch current doctor profile: doktorId is missing or auth not ready.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, authHeaders);\n      const profileData = response.data;\n      setCurrentDoctorProfile(profileData);\n      setEditIme(profileData.ime || '');\n      setEditPrezime(profileData.prezime || '');\n      setEditEmail(profileData.email || '');\n      setEditTelefon(profileData.telefon || '');\n      setEditSpecijalizacije(Array.isArray(profileData.specijalizacije) ? profileData.specijalizacije.join(', ') : '');\n      setEditGrad(profileData.grad || '');\n      setEditRadnoVrijeme(profileData.radnoVrijeme || '');\n      setEditIskustvo(profileData.iskustvo || '');\n      setEditOcjena(profileData.ocjena || '');\n      setProfileImagePreview(profileData.profileImageBase64 || null);\n    } catch (error) {\n      var _error$response9;\n      console.error(\"Error fetching doctor profile:\", ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n      showNotification(\"Error fetching doctor profile.\", \"danger\");\n    }\n  };\n  const handleUpdateDoctorProfile = async e => {\n    e.preventDefault();\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      showNotification(\"You are not authorized or doctor ID is missing.\", \"danger\");\n      return;\n    }\n    const updatedProfile = {\n      doktorID: user.doktorId,\n      userId: currentDoctorProfile.userId,\n      ime: editIme,\n      prezime: editPrezime,\n      email: editEmail,\n      telefon: editTelefon,\n      specijalizacije: editSpecijalizacije.split(',').map(s => s.trim()).filter(s => s !== ''),\n      grad: editGrad,\n      radnoVrijeme: editRadnoVrijeme,\n      iskustvo: parseInt(editIskustvo, 10),\n      ocjena: parseFloat(editOcjena) || 0.0,\n      profileImageBase64: profileImagePreview\n    };\n    try {\n      const response = await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, updatedProfile, authHeaders);\n      setCurrentDoctorProfile(response.data);\n      setIsEditingProfile(false);\n      showNotification(\"Profile successfully updated!\");\n      fetchDoctors();\n    } catch (error) {\n      var _error$response0, _error$response1, _error$response1$data;\n      console.error(\"Error updating profile:\", ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error.message);\n      showNotification(((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || 'Error updating profile.', 'danger');\n    }\n  };\n  const fetchDocuments = async () => {\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      console.warn(\"Cannot fetch documents: doktorId is missing or auth not ready.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/doktor/${user.doktorId}`, authHeaders);\n      const transformedDocuments = response.data.map(doc => ({\n        id: doc.dokumentID,\n        fileName: doc.nazivDokumenta,\n        documentType: doc.tipDokumenta,\n        uploadDate: doc.datumKreiranja,\n        pristup: doc.pristup,\n        pacijentIme: doc.pacijentIme\n      }));\n      setDocuments(transformedDocuments);\n      showNotification(\"Documents successfully fetched!\", \"success\");\n    } catch (error) {\n      var _error$response10;\n      console.error('Error fetching documents for doctor:', ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message);\n      showNotification('Failed to fetch documents.', \"danger\");\n    }\n  };\n  const handleDocumentUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!user || user.doktorId === null || user.doktorId === undefined) {\n      showNotification(\"Doctor ID is not available for document upload.\", \"danger\");\n      return;\n    }\n    console.log(\"Attempting document upload with Doktor ID:\", user.doktorId);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('doktorID', user.doktorId);\n    formData.append('tipDokumenta', 'Doctor Upload');\n    formData.append('pristup', 'PRIVATNA');\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      showNotification('Document successfully uploaded!', 'success');\n      fetchDocuments();\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response12$dat;\n      console.error('Error uploading document:', ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message);\n      showNotification('Document upload failed. ' + (((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.message) || error.message), \"danger\");\n    }\n  };\n  const fetchMessages = async () => {\n    if (!token || !user || user.userId === null || user.userId === undefined) {\n      // Koristi user.userId\n      console.warn(\"Cannot fetch messages: user.userId is missing or auth not ready.\");\n      return;\n    }\n    try {\n      // Ažuriran endpoint za dohvaćanje poruka koristeći user.userId i userType DOKTOR\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=DOKTOR`, authHeaders);\n      const transformedMessages = response.data.map(msg => ({\n        id: msg.porukaID,\n        senderId: msg.senderId,\n        // Ovo je sada Auth userId\n        senderType: msg.senderType,\n        senderIme: msg.senderIme,\n        receiverId: msg.receiverId,\n        // Ovo je sada Auth userId\n        receiverType: msg.receiverType,\n        receiverIme: msg.receiverIme,\n        subject: msg.subject,\n        content: msg.content,\n        timestamp: msg.timestamp,\n        replies: msg.replies || []\n      }));\n      setMessages(transformedMessages);\n      showNotification(\"Messages successfully fetched!\", \"success\");\n    } catch (error) {\n      var _error$response13;\n      console.error('Error fetching messages for doctor:', ((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) || error.message);\n      showNotification('Failed to fetch messages.', \"danger\");\n    }\n  };\n  const handleNewMessageChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMessage(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSendMessage = async () => {\n    if (!user || user.userId === null || user.userId === undefined) {\n      // Koristi user.userId\n      showNotification('Your user ID is not available. Cannot send message.', 'danger');\n      return;\n    }\n    if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\n      showNotification('Please fill in all message fields.', 'warning');\n      return;\n    }\n    try {\n      const messageData = {\n        senderId: user.userId,\n        // SENDER je sada user.userId (Long)\n        senderType: 'DOKTOR',\n        receiverId: parseInt(newMessage.recipientId, 10),\n        // RECIPIENT je user.userId pacijenta (Long)\n        receiverType: 'PACIJENT',\n        subject: newMessage.subject,\n        content: newMessage.content\n      };\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\n      showNotification('Message successfully sent!', 'success');\n      setNewMessage({\n        recipientId: '',\n        subject: '',\n        content: ''\n      });\n      fetchMessages();\n    } catch (error) {\n      var _error$response14, _error$response15, _error$response15$dat;\n      console.error('Error sending message:', ((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : _error$response14.data) || error.message);\n      showNotification('Failed to send message. ' + (((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : (_error$response15$dat = _error$response15.data) === null || _error$response15$dat === void 0 ? void 0 : _error$response15$dat.message) || error.message), \"danger\");\n    }\n  };\n  const handleReplyMessageChange = e => {\n    setReplyMessage(prev => ({\n      ...prev,\n      content: e.target.value\n    }));\n  };\n  const handleReply = async messageId => {\n    if (!user || user.userId === null || user.userId === undefined) {\n      // Koristi user.userId\n      showNotification('Your user ID is not available. Cannot reply.', 'danger');\n      return;\n    }\n    if (!replyMessage.content) {\n      showNotification('Reply content cannot be empty.', 'warning');\n      return;\n    }\n    try {\n      const replyPayload = {\n        senderId: user.userId,\n        // SENDER je sada user.userId (Long)\n        senderType: 'DOKTOR',\n        content: replyMessage.content\n      };\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, replyPayload, authHeaders);\n      showNotification('Reply successfully sent!', 'success');\n      setReplyMessage({\n        messageId: '',\n        content: ''\n      });\n      fetchMessages();\n      // Ažuriraj lokalno stanje za trenutni prikaz odgovora\n      setSelectedMessage(prev => {\n        if (!prev) return null;\n        return {\n          ...prev,\n          replies: [...(prev.replies || []), {\n            senderId: user.userId,\n            // Važno: Koristite user.userId ovdje\n            senderIme: `${user.ime || ''} ${user.prezime || ''}`.trim(),\n            // Koristi ime/prezime iz useAuth, ako je dostupno\n            senderType: 'DOKTOR',\n            content: replyMessage.content,\n            timestamp: new Date().toISOString()\n          }]\n        };\n      });\n    } catch (error) {\n      var _error$response16, _error$response17, _error$response17$dat;\n      console.error('Error sending reply:', ((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : _error$response16.data) || error.message);\n      showNotification('Failed to send reply. ' + (((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : (_error$response17$dat = _error$response17.data) === null || _error$response17$dat === void 0 ? void 0 : _error$response17$dat.message) || error.message), \"danger\");\n    }\n  };\n  const handleViewMessage = message => {\n    setSelectedMessage(message);\n  };\n  const closeMessageModal = () => {\n    setSelectedMessage(null);\n    setReplyMessage({\n      messageId: '',\n      content: ''\n    });\n  };\n  const handleCreateTerm = async e => {\n    e.preventDefault();\n    if (!user || user.doktorId === null || user.doktorId === undefined) {\n      showNotification(\"Doctor ID is not available. Cannot create term.\", \"danger\");\n      return;\n    }\n    if (!newTermDate || !newTermTime) {\n      showNotification(\"Please select both date and time for the new term.\", \"warning\");\n      return;\n    }\n    try {\n      const termData = {\n        doktorID: user.doktorId,\n        datum: newTermDate,\n        vrijeme: newTermTime + ':00',\n        dostupnost: selectedTermStatus === 'dostupan'\n      };\n      await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, termData, authHeaders);\n      showNotification(\"Term successfully created!\", \"success\");\n      setNewTermDate('');\n      setNewTermTime('');\n      setSelectedTermStatus('dostupan');\n      fetchTerms();\n    } catch (error) {\n      var _error$response18, _error$response19, _error$response19$dat;\n      console.error(\"Error creating term:\", ((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : _error$response18.data) || error.message);\n      showNotification(`Failed to create term: ${((_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : (_error$response19$dat = _error$response19.data) === null || _error$response19$dat === void 0 ? void 0 : _error$response19$dat.message) || error.message}`, \"danger\");\n    }\n  };\n  const handleDeleteTerm = async termId => {\n    if (!token) return;\n    try {\n      await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${termId}`, authHeaders);\n      showNotification(\"Term successfully deleted!\", \"success\");\n      fetchTerms();\n    } catch (error) {\n      var _error$response20, _error$response21, _error$response21$dat;\n      console.error(\"Error deleting term:\", ((_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : _error$response20.data) || error.message);\n      showNotification(`Failed to delete term: ${((_error$response21 = error.response) === null || _error$response21 === void 0 ? void 0 : (_error$response21$dat = _error$response21.data) === null || _error$response21$dat === void 0 ? void 0 : _error$response21$dat.message) || error.message}`, \"danger\");\n    }\n  };\n  useEffect(() => {\n    console.log(\"DoctorDashboard useEffect: token=\", token, \"user=\", user, \"authLoading=\", authLoading);\n    if (!authLoading && token && user && user.doktorId) {\n      // user.doktorId je i dalje potreban za doktor profile, termine, dokumente\n      console.log(\"DoctorDashboard useEffect: Initiating data fetching for doktorId:\", user.doktorId);\n      fetchDoctors();\n      fetchPatients();\n      fetchTerms();\n      fetchExaminations();\n      fetchActivityLog();\n      fetchCurrentDoctorProfile();\n      fetchDocuments();\n      fetchMessages(); // Ovdje se fetchuju poruke, sada po user.userId\n    } else if (!authLoading) {\n      console.log(\"DoctorDashboard useEffect: Data fetching skipped because condition not met.\", {\n        token,\n        user,\n        doktorId: user === null || user === void 0 ? void 0 : user.doktorId,\n        authLoading\n      });\n    }\n  }, [token, user, authLoading]);\n  console.log(\"DoctorDashboard render check: token=\", token, \"user=\", user, \"user.doktorId=\", user === null || user === void 0 ? void 0 : user.doktorId, \"authLoading=\", authLoading);\n  if (authLoading) {\n    console.log(\"DoctorDashboard: Still loading authentication...\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3\",\n        children: \"Loading authentication...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 13\n    }, this);\n  }\n  if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n    console.log(\"DoctorDashboard: Not authorized as doctor or incomplete data. Conditions:\", {\n      token: !!token,\n      user: !!user,\n      doktorIdDefined: (user === null || user === void 0 ? void 0 : user.doktorId) !== null && (user === null || user === void 0 ? void 0 : user.doktorId) !== undefined\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3\",\n        children: \"Not authorized as a doctor or incomplete data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 13\n    }, this);\n  }\n  const currentDoctorId = user.doktorId;\n  const currentDoctorUserId = user.userId; // NOVO: Dohvati user.userId\n  console.log(\"DoctorDashboard: Current doctor ID for filtering (after initial checks):\", currentDoctorId, \"Current User ID:\", currentDoctorUserId);\n  const doctorsExaminations = examinations.filter(examination => examination.doktorId === currentDoctorId);\n  const patientIdsWithExaminations = new Set(doctorsExaminations.map(exam => exam.pacijentId));\n  const myPatients = patients.filter(patient => patientIdsWithExaminations.has(patient.id));\n  const handleUpdateExaminationStatus = async (id, newStatus) => {\n    try {\n      const existingExamination = examinations.find(exam => exam.id === id);\n      if (!existingExamination) {\n        showNotification('Examination not found for status update.', 'danger');\n        return;\n      }\n      console.log(\"Existing Examination object before update:\", existingExamination);\n      const terminIdToSend = existingExamination.terminID;\n      console.log(\"Termin ID to send:\", terminIdToSend);\n      if (terminIdToSend === null || terminIdToSend === undefined) {\n        showNotification('Error: Term ID is missing for this examination. Please ensure all examinations have a valid term.', 'danger');\n        return;\n      }\n      const ratingToSend = newStatus === 'obavljen' ? existingExamination.ocjenaDoktora || 5.0 : existingExamination.ocjenaDoktora;\n      const examinationPayload = {\n        pregledID: existingExamination.id,\n        pacijentID: existingExamination.pacijentId,\n        doktorID: existingExamination.doktorId,\n        datumPregleda: existingExamination.date.split('T')[0],\n        vrijemePregleda: existingExamination.time.split('.')[0],\n        status: newStatus,\n        komentarPacijenta: existingExamination.komentarPacijenta,\n        ocjenaDoktora: ratingToSend,\n        terminID: terminIdToSend\n      };\n      const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, examinationPayload, authHeaders);\n      const updatedExam = {\n        id: response.data.pregledID,\n        pacijentId: response.data.pacijentID,\n        doktorId: response.data.doktorID,\n        patientName: response.data.pacijentIme || 'N/A',\n        doctorName: response.data.doktorIme || 'N/A',\n        date: response.data.datumPregleda,\n        time: response.data.vrijemePregleda,\n        status: response.data.status,\n        komentarPacijenta: response.data.komentarPacijenta || '',\n        ocjenaDoktora: response.data.ocjenaDoktora || null,\n        terminID: response.data.terminID\n      };\n      setExaminations(examinations.map(exam => exam.id === id ? updatedExam : exam));\n      fetchActivityLog();\n      showNotification(`Examination status updated to ${newStatus}!`, 'info');\n    } catch (error) {\n      var _error$response22, _error$response23, _error$response23$dat;\n      console.error(\"Error updating examination status:\", ((_error$response22 = error.response) === null || _error$response22 === void 0 ? void 0 : _error$response22.data) || error.message);\n      showNotification(((_error$response23 = error.response) === null || _error$response23 === void 0 ? void 0 : (_error$response23$dat = _error$response23.data) === null || _error$response23$dat === void 0 ? void 0 : _error$response23$dat.message) || 'Error updating examination status.', \"danger\");\n    }\n  };\n  const filteredMyPatients = myPatients.filter(patient => patient.name && patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email && patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastMyPatient = myPatientsCurrentPage * itemsPerPage;\n  const indexOfFirstMyPatient = indexOfLastMyPatient - itemsPerPage;\n  const currentMyPatients = filteredMyPatients.slice(indexOfFirstMyPatient, indexOfLastMyPatient);\n  const totalMyPatientPages = Math.ceil(filteredMyPatients.length / itemsPerPage);\n  const filteredMyExaminations = doctorsExaminations.filter(examination => {\n    const matchesSearch = examination.patientName && examination.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || examination.status && examination.status.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || examination.date && new Date(examination.date).toLocaleDateString().includes(examinationSearchTerm);\n    const matchesFilterStatus = examinationFilterStatus === 'All' || examination.status === examinationFilterStatus;\n    return matchesSearch && matchesFilterStatus;\n  });\n  const indexOfLastMyExaminations = myExaminationsCurrentPage * itemsPerPage;\n  const indexOfFirstMyExaminations = indexOfLastMyExaminations - itemsPerPage;\n  const currentMyExaminations = filteredMyExaminations.slice(indexOfFirstMyExaminations, indexOfLastMyExaminations);\n  const totalMyExaminationsPages = Math.ceil(filteredMyExaminations.length / itemsPerPage);\n  const Pagination = ({\n    itemsPerPage,\n    totalItems,\n    currentPage,\n    paginate\n  }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center mt-4\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === number ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 29\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 13\n    }, this);\n  };\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Pregled doktora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-info mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Ukupno pacijenata pod skrbi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: myPatients.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 677,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-warning mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Pregledi na \\u010Dekanju\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: doctorsExaminations.filter(exam => exam.status === 'zakazan').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Brze akcije\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-info\",\n                onClick: () => setActiveTab('my-examinations'),\n                children: \"Moji pregledi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-success\",\n                onClick: () => setActiveTab('my-patients'),\n                children: \"Moji pacijenti\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => setActiveTab('documents'),\n                children: \"Dokumenti\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary\",\n                onClick: () => setActiveTab('messages'),\n                children: \"Poruke\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-danger\",\n                onClick: () => setActiveTab('manage-terms'),\n                children: \"Upravljaj terminima\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Nedavne aktivnosti\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: activityLog.length > 0 ? activityLog.filter(log => log.doktorId === currentDoctorId).slice(-5).reverse().map(log => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item d-flex justify-content-between align-items-center\",\n                children: [log.action, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"badge bg-light text-dark\",\n                  children: new Date(log.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 49\n                }, this)]\n              }, log.id || Math.random(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 45\n              }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item text-center text-muted\",\n                children: \"Nema nedavnih aktivnosti.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 21\n        }, this);\n      case 'my-examinations':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Upravljanje mojim pregledima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25 me-2\",\n              placeholder: \"Pretra\\u017Eite preglede (ime pacijenta, status, datum)...\",\n              value: examinationSearchTerm,\n              onChange: e => setExaminationSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              className: \"w-auto\",\n              value: examinationFilterStatus,\n              onChange: e => setExaminationFilterStatus(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"All\",\n                children: \"Filtriraj po statusu (Svi)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"zakazan\",\n                children: \"Zakazan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"obavljen\",\n                children: \"Obavljen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"otkazan\",\n                children: \"Otkazan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 746,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Pacijent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 747,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Datum\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Vrijeme\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 749,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 750,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Akcije\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 745,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentMyExaminations.length > 0 ? currentMyExaminations.map(examination => {\n                  const patient = patients.find(p => p.id === examination.pacijentId);\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: examination.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 760,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: patient ? patient.name : 'N/A'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 761,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: new Date(examination.date).toLocaleDateString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: examination.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 763,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `badge ${examination.status === 'zakazan' ? 'bg-warning text-dark' : examination.status === 'obavljen' ? 'bg-success' : examination.status === 'otkazan' ? 'bg-danger' : 'bg-secondary'}`,\n                        children: examination.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 765,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 764,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [examination.status === 'zakazan' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-success btn-sm me-2\",\n                          onClick: () => handleUpdateExaminationStatus(examination.id, 'obavljen'),\n                          children: \"Ozna\\u010Di kao obavljeno\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 777,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-danger btn-sm\",\n                          onClick: () => handleUpdateExaminationStatus(examination.id, 'otkazan'),\n                          children: \"Otka\\u017Ei\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 783,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true), examination.status === 'obavljen' && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-muted\",\n                        children: \"Obavljen\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 792,\n                        columnNumber: 61\n                      }, this), examination.status === 'otkazan' && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-muted\",\n                        children: \"Otkazan\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 795,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 774,\n                      columnNumber: 53\n                    }, this)]\n                  }, examination.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 759,\n                    columnNumber: 49\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: \"text-center\",\n                    children: \"Nema prona\\u0111enih pregleda.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 803,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 802,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredMyExaminations.length,\n            currentPage: myExaminationsCurrentPage,\n            paginate: setMyExaminationsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 21\n        }, this);\n      case 'my-patients':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Moji pacijenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Pretra\\u017Eite pacijente...\",\n              value: patientSearchTerm,\n              onChange: e => setPatientSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 834,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Ime\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 835,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 836,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Telefon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 837,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Akcije\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 838,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 833,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentMyPatients.length > 0 ? currentMyPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 845,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 846,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 847,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 848,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-primary btn-sm me-2\",\n                      onClick: () => openPatientDetailModal(patient),\n                      children: \"Detalji pregleda\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 850,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 849,\n                    columnNumber: 49\n                  }, this)]\n                }, patient.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 844,\n                  columnNumber: 45\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"Nema prona\\u0111enih pacijenata.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 861,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 860,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 841,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredMyPatients.length,\n            currentPage: myPatientsCurrentPage,\n            paginate: setMyPatientsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 21\n        }, this);\n      case 'documents':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Moji dokumenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"U\\u010Ditaj novi dokument\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 880,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              onChange: handleDocumentUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 25\n          }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Naziv dokumenta\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 888,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Tip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 889,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Datum u\\u010Ditavanja\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 890,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pristup\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 891,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Akcije\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 892,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 886,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: doc.fileName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 898,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: doc.documentType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 899,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(doc.uploadDate).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 900,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`,\n                    children: doc.pristup\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 901,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 901,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    size: \"sm\",\n                    href: `${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${doc.id}`,\n                    target: \"_blank\",\n                    children: \"Preuzmi\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 903,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 902,\n                  columnNumber: 45\n                }, this)]\n              }, doc.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nema prona\\u0111enih dokumenata.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 21\n        }, this);\n      case 'messages':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Moje poruke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mb-3\",\n            onClick: () => setNewMessage({\n              recipientId: '',\n              subject: '',\n              content: ''\n            }),\n            children: \"Napi\\u0161i novu poruku\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 25\n          }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: messages.map(msg => {\n              var _patients$find;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item d-flex justify-content-between align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"Od: \", msg.senderId === currentDoctorUserId ? 'Ja' : ((_patients$find = patients.find(p => p.userId === msg.senderId)) === null || _patients$find === void 0 ? void 0 : _patients$find.name) || `Pacijent (${msg.senderId})`]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 926,\n                    columnNumber: 45\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 926,\n                    columnNumber: 200\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Predmet:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 927,\n                    columnNumber: 45\n                  }, this), \" \", msg.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 927,\n                    columnNumber: 85\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: new Date(msg.timestamp).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 928,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  onClick: () => handleViewMessage(msg),\n                  children: \"Pogledaj poruku\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 930,\n                  columnNumber: 41\n                }, this)]\n              }, msg.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nema prona\\u0111enih poruka.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Napi\\u0161i novu poruku\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Primatelj (Pacijent)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                name: \"recipientId\",\n                value: newMessage.recipientId,\n                onChange: handleNewMessageChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- Odaberite pacijenta --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 951,\n                  columnNumber: 37\n                }, this), myPatients.map(patient => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: patient.userId,\n                  children: patient.name\n                }, patient.userId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 953,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Predmet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"subject\",\n                value: newMessage.subject,\n                onChange: handleNewMessageChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Sadr\\u017Eaj\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 968,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                name: \"content\",\n                value: newMessage.content,\n                onChange: handleNewMessageChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 967,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleSendMessage,\n              children: \"Po\\u0161alji poruku\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 978,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 21\n        }, this);\n      case 'manage-terms':\n        const doctorsTerms = terms.filter(term => term.doktorId === currentDoctorId);\n        const sortedTerms = doctorsTerms.sort((a, b) => {\n          const dateA = new Date(`${a.datum}T${a.vrijeme}`);\n          const dateB = new Date(`${b.datum}T${b.vrijeme}`);\n          return dateA - dateB;\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Upravljajte mojim terminima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Kreirajte novi termin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleCreateTerm,\n            className: \"mb-5 p-3 border rounded shadow-sm bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"newTermDate\",\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Datum\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 998,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  value: newTermDate,\n                  onChange: e => setNewTermDate(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 999,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"newTermTime\",\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Vrijeme\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1007,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"time\",\n                  value: newTermTime,\n                  onChange: e => setNewTermTime(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1008,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1006,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"newTermStatus\",\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Dostupnost\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1016,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  value: selectedTermStatus,\n                  onChange: e => setSelectedTermStatus(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"dostupan\",\n                    children: \"Dostupan\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1022,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"nedostupan\",\n                    children: \"Nedostupan\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1023,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1017,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1015,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              children: \"Kreiraj termin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1027,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 995,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Moji postoje\\u0107i termini\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1030,\n            columnNumber: 25\n          }, this), sortedTerms.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1036,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Datum\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1037,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Vrijeme\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1038,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Dostupnost\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1039,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Akcije\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1040,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1035,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: sortedTerms.map(term => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1046,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: new Date(term.datum).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1047,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.vrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1048,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge ${term.dostupnost ? 'bg-success' : 'bg-danger'}`,\n                      children: term.dostupnost ? 'Dostupan' : 'Nedostupan'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1050,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1049,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"danger\",\n                      size: \"sm\",\n                      onClick: () => handleDeleteTerm(term.id),\n                      children: \"Obri\\u0161i\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1055,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1054,\n                    columnNumber: 49\n                  }, this)]\n                }, term.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1045,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1033,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nema prona\\u0111enih termina za va\\u0161 profil. Molimo kreirajte nove.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1063,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 21\n        }, this);\n      case 'settings':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container my-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Postavke profila doktora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1070,\n            columnNumber: 25\n          }, this), !currentDoctorProfile ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"U\\u010Ditavanje profila doktora...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 29\n          }, this) : isEditingProfile ? /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleUpdateDoctorProfile,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Ime\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1078,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editIme,\n                  onChange: e => setEditIme(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1079,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Prezime\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1082,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editPrezime,\n                  onChange: e => setEditPrezime(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1083,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1081,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1076,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1088,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  value: editEmail,\n                  onChange: e => setEditEmail(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1089,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1087,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Telefon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1092,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editTelefon,\n                  onChange: e => setEditTelefon(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1093,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1091,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Specijalizacije (odvojene zarezom)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: editSpecijalizacije,\n                onChange: e => setEditSpecijalizacije(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1098,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Grad\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1102,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editGrad,\n                  onChange: e => setEditGrad(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1103,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1101,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Radno vrijeme\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1106,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editRadnoVrijeme,\n                  onChange: e => setEditRadnoVrijeme(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1107,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1100,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Iskustvo (godine)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1111,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: editIskustvo,\n                onChange: e => setEditIskustvo(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1112,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1110,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Profilna slika\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleImageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1116,\n                columnNumber: 41\n              }, this), profileImagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: profileImagePreview,\n                  alt: \"Pregled profilne slike\",\n                  style: {\n                    maxWidth: '100px',\n                    maxHeight: '100px',\n                    borderRadius: '50%',\n                    objectFit: 'cover'\n                  },\n                  className: \"border border-secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1123,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-end\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                className: \"me-2\",\n                onClick: () => setIsEditingProfile(false),\n                children: \"Otka\\u017Ei\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1133,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Sa\\u010Duvaj promjene\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1134,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1132,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: currentDoctorProfile.profileImageBase64 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: currentDoctorProfile.profileImageBase64,\n                alt: \"Profil doktora\",\n                style: {\n                  width: '100px',\n                  height: '100px',\n                  borderRadius: '50%',\n                  objectFit: 'cover'\n                },\n                className: \"mb-3 border border-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1141,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://placehold.co/100x100/CCCCCC/000000?text=Nema+slike\",\n                alt: \"Nema profilne slike\",\n                style: {\n                  width: '100px',\n                  height: '100px',\n                  borderRadius: '50%',\n                  objectFit: 'cover'\n                },\n                className: \"mb-3 border border-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1148,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Ime:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1156,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.ime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1156,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Prezime:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1157,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.prezime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1157,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1158,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Telefon:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1159,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.telefon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1159,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Specijalizacije:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1160,\n                columnNumber: 40\n              }, this), \" \", Array.isArray(currentDoctorProfile.specijalizacije) ? currentDoctorProfile.specijalizacije.join(', ') : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1160,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Grad:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1161,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.grad]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Radno vrijeme:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1162,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.radnoVrijeme]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1162,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Iskustvo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1163,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.iskustvo, \" godina\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1163,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Ocjena:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1164,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.ocjena]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => setIsEditingProfile(true),\n              children: \"Uredi profil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1165,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1069,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Odaberite karticu iz bo\\u010Dnog menija.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-white p-4\",\n      style: {\n        width: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-4\",\n        children: \"Panel doktora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('overview'),\n            children: \"Pregled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-examinations' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('my-examinations'),\n            children: \"Moji pregledi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-patients' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('my-patients'),\n            children: \"Moji pacijenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'manage-terms' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('manage-terms'),\n            children: \"Upravljaj terminima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('documents'),\n            children: \"Dokumenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1214,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('messages'),\n            children: \"Poruke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1222,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'settings' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('settings'),\n            children: \"Postavke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1230,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 p-4 bg-light\",\n      children: [showAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${alertType} alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3`,\n        role: \"alert\",\n        style: {\n          zIndex: 1050\n        },\n        children: [alertMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-close\",\n          onClick: () => setShowAlert(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1244,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1242,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: \"Doktorska kontrolna plo\\u010Da\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1248,\n        columnNumber: 17\n      }, this), renderContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1240,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showPatientDetailModal,\n      onHide: closePatientDetailModal,\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Detalji pacijenta: \", selectedPatient === null || selectedPatient === void 0 ? void 0 : selectedPatient.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedPatient && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1262,\n              columnNumber: 32\n            }, this), \" \", selectedPatient.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1262,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Telefon:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1263,\n              columnNumber: 32\n            }, this), \" \", selectedPatient.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Historija pregleda za \", selectedPatient.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1265,\n            columnNumber: 29\n          }, this), doctorsExaminations.filter(exam => exam.pacijentId === selectedPatient.id).length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group mb-3\",\n            children: doctorsExaminations.filter(exam => exam.pacijentId === selectedPatient.id).sort((a, b) => new Date(b.date) - new Date(a.date)).map(exam => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Datum:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1273,\n                columnNumber: 49\n              }, this), \" \", new Date(exam.date).toLocaleDateString(), \", \", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Vrijeme:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1274,\n                columnNumber: 49\n              }, this), \" \", exam.time, \", \", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1275,\n                columnNumber: 49\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `badge ${exam.status === 'zakazan' ? 'bg-warning text-dark' : exam.status === 'obavljen' ? 'bg-success' : exam.status === 'otkazan' ? 'bg-danger' : 'bg-secondary'}`,\n                children: exam.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1275,\n                columnNumber: 74\n              }, this)]\n            }, exam.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1272,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1267,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nema historije pregleda za ovog pacijenta.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1285,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1287,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Bilje\\u0161ke o pacijentu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1288,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 5,\n              value: patientNotes,\n              onChange: e => setPatientNotes(e.target.value),\n              placeholder: \"Dodajte ili uredite bilje\\u0161ke za ovog pacijenta...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1290,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1289,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closePatientDetailModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSavePatientNotes,\n          children: \"Sa\\u010Duvaj bilje\\u0161ke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1305,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1301,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: !!selectedMessage,\n      onHide: closeMessageModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Poruka: \", selectedMessage === null || selectedMessage === void 0 ? void 0 : selectedMessage.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1313,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1312,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Od:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1319,\n              columnNumber: 32\n            }, this), \" \", selectedMessage.senderId === currentDoctorUserId ? 'Ja' : ((_patients$find2 = patients.find(p => p.userId === selectedMessage.senderId)) === null || _patients$find2 === void 0 ? void 0 : _patients$find2.name) || `Pacijent (${selectedMessage.senderId})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1319,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1320,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedMessage.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1320,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1321,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1322,\n            columnNumber: 29\n          }, this), selectedMessage.replies && selectedMessage.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Odgovori:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1326,\n              columnNumber: 37\n            }, this), selectedMessage.replies.map((reply, index) => {\n              var _patients$find3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border p-2 mb-2 rounded bg-light\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [reply.senderId === currentDoctorUserId ? 'Ja' : ((_patients$find3 = patients.find(p => p.userId === reply.senderId)) === null || _patients$find3 === void 0 ? void 0 : _patients$find3.name) || `Pacijent (${reply.senderId})`, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1330,\n                  columnNumber: 45\n                }, this), \" \", reply.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1331,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(reply.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1332,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1328,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1325,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odgovori\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1339,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: replyMessage.content,\n              onChange: handleReplyMessageChange,\n              placeholder: \"Upi\\u0161ite svoj odgovor ovdje...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1340,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1338,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mt-2\",\n            onClick: () => handleReply(selectedMessage.id),\n            children: \"Po\\u0161alji odgovor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1348,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeMessageModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1352,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1311,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1177,\n    columnNumber: 9\n  }, this);\n}\n_s(DoctorDashboard, \"pbfgqc7P63zHZjiD/FkzhE+2N28=\", false, function () {\n  return [useAuth];\n});\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["axios","useAuth","React","useState","useEffect","useMemo","Modal","Button","Form","Alert","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","OBAVIJESTI_DOKUMENTI_API_PREFIX","DoctorDashboard","_s","_patients$find2","activeTab","setActiveTab","doctors","setDoctors","patients","setPatients","examinations","setExaminations","terms","setTerms","activityLog","setActivityLog","currentDoctorProfile","setCurrentDoctorProfile","isEditingProfile","setIsEditingProfile","editIme","setEditIme","editPrezime","setEditPrezime","editEmail","setEditEmail","editTelefon","setEditTelefon","editSpecijalizacije","setEditSpecijalizacije","editGrad","setEditGrad","editRadnoVrijeme","setEditRadnoVrijeme","editIskustvo","setEditIskustvo","editOcjena","setEditOcjena","profileImageFile","setProfileImageFile","profileImagePreview","setProfileImagePreview","documents","setDocuments","messages","setMessages","newMessage","setNewMessage","recipientId","subject","content","replyMessage","setReplyMessage","messageId","selectedMessage","setSelectedMessage","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","patientSearchTerm","setPatientSearchTerm","examinationSearchTerm","setExaminationSearchTerm","examinationFilterStatus","setExaminationFilterStatus","myPatientsCurrentPage","setMyPatientsCurrentPage","myExaminationsCurrentPage","setMyExaminationsCurrentPage","itemsPerPage","showPatientDetailModal","setShowPatientDetailModal","selectedPatient","setSelectedPatient","patientNotes","setPatientNotes","newTermDate","setNewTermDate","newTermTime","setNewTermTime","selectedTermStatus","setSelectedTermStatus","token","user","loading","authLoading","authHeaders","headers","showNotification","message","type","setTimeout","fetchDoctors","response","get","data","map","doc","id","doktorID","userId","name","ime","prezime","specialty","Array","isArray","specijalizacije","length","join","grad","email","telefon","radnoVrijeme","iskustvo","ocjena","profileImageBase64","error","_error$response","console","fetchPatients","pat","pacijentID","phone","_error$response2","fetchTerms","doktorId","undefined","warn","term","terminID","datum","vrijeme","dostupnost","_error$response3","fetchExaminations","exam","pregledID","pacijentId","patientName","pacijentIme","doctorName","doktorIme","date","datumPregleda","time","vrijemePregleda","status","komentarPacijenta","ocjenaDoktora","_error$response4","fetchActivityLog","_error$response5","fetchPatientNotes","patientId","notes","_error$response6","handleSavePatientNotes","put","_error$response7","_error$response8","_error$response8$data","openPatientDetailModal","patient","closePatientDetailModal","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","fetchCurrentDoctorProfile","profileData","_error$response9","handleUpdateDoctorProfile","preventDefault","updatedProfile","split","s","trim","filter","parseInt","parseFloat","_error$response0","_error$response1","_error$response1$data","fetchDocuments","transformedDocuments","dokumentID","fileName","nazivDokumenta","documentType","tipDokumenta","uploadDate","datumKreiranja","pristup","_error$response10","handleDocumentUpload","log","formData","FormData","append","post","_error$response11","_error$response12","_error$response12$dat","fetchMessages","transformedMessages","msg","porukaID","senderId","senderType","senderIme","receiverId","receiverType","receiverIme","timestamp","replies","_error$response13","handleNewMessageChange","value","prev","handleSendMessage","messageData","_error$response14","_error$response15","_error$response15$dat","handleReplyMessageChange","handleReply","replyPayload","Date","toISOString","_error$response16","_error$response17","_error$response17$dat","handleViewMessage","closeMessageModal","handleCreateTerm","termData","_error$response18","_error$response19","_error$response19$dat","handleDeleteTerm","termId","delete","_error$response20","_error$response21","_error$response21$dat","className","style","minHeight","children","role","_jsxFileName","lineNumber","columnNumber","doktorIdDefined","currentDoctorId","currentDoctorUserId","doctorsExaminations","examination","patientIdsWithExaminations","Set","myPatients","has","handleUpdateExaminationStatus","newStatus","existingExamination","find","terminIdToSend","ratingToSend","examinationPayload","updatedExam","_error$response22","_error$response23","_error$response23$dat","filteredMyPatients","toLowerCase","includes","indexOfLastMyPatient","indexOfFirstMyPatient","currentMyPatients","slice","totalMyPatientPages","Math","ceil","filteredMyExaminations","matchesSearch","toLocaleDateString","matchesFilterStatus","indexOfLastMyExaminations","indexOfFirstMyExaminations","currentMyExaminations","totalMyExaminationsPages","Pagination","totalItems","currentPage","paginate","pageNumbers","i","push","number","onClick","renderContent","reverse","action","toLocaleString","random","placeholder","onChange","Select","p","colSpan","Group","controlId","Label","Control","variant","size","href","_patients$find","as","required","rows","doctorsTerms","sortedTerms","sort","a","b","dateA","dateB","onSubmit","accept","src","alt","maxWidth","maxHeight","borderRadius","objectFit","width","height","zIndex","show","onHide","Header","closeButton","Title","Body","Footer","reply","index","_patients$find3","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/DoctorDashboard.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\r\n\r\nfunction DoctorDashboard() {\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [patients, setPatients] = useState([]); // Ova lista pacijenata treba da sadrži i userId\r\n    const [examinations, setExaminations] = useState([]);\r\n    const [terms, setTerms] = useState([]);\r\n    const [activityLog, setActivityLog] = useState([]);\r\n\r\n    const [currentDoctorProfile, setCurrentDoctorProfile] = useState(null);\r\n    const [isEditingProfile, setIsEditingProfile] = useState(false);\r\n\r\n    const [editIme, setEditIme] = useState('');\r\n    const [editPrezime, setEditPrezime] = useState('');\r\n    const [editEmail, setEditEmail] = useState('');\r\n    const [editTelefon, setEditTelefon] = useState('');\r\n    const [editSpecijalizacije, setEditSpecijalizacije] = useState('');\r\n    const [editGrad, setEditGrad] = useState('');\r\n    const [editRadnoVrijeme, setEditRadnoVrijeme] = useState('');\r\n    const [editIskustvo, setEditIskustvo] = useState('');\r\n    const [editOcjena, setEditOcjena] = useState('');\r\n    const [profileImageFile, setProfileImageFile] = useState(null);\r\n    const [profileImagePreview, setProfileImagePreview] = useState(null);\r\n\r\n    const [documents, setDocuments] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState({ recipientId: '', subject: '', content: '' }); // recipientId će sada biti Long userId\r\n    const [replyMessage, setReplyMessage] = useState({ messageId: '', content: '' });\r\n    const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('success');\r\n\r\n    const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n    const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\r\n    const [examinationFilterStatus, setExaminationFilterStatus] = useState('All');\r\n\r\n    const [myPatientsCurrentPage, setMyPatientsCurrentPage] = useState(1);\r\n    const [myExaminationsCurrentPage, setMyExaminationsCurrentPage] = useState(1);\r\n    const itemsPerPage = 5;\r\n\r\n    const [showPatientDetailModal, setShowPatientDetailModal] = useState(false);\r\n    const [selectedPatient, setSelectedPatient] = useState(null);\r\n    const [patientNotes, setPatientNotes] = useState('');\r\n\r\n    const [newTermDate, setNewTermDate] = useState('');\r\n    const [newTermTime, setNewTermTime] = useState('');\r\n    const [selectedTermStatus, setSelectedTermStatus] = useState('dostupan');\r\n\r\n    const { token, user, loading: authLoading } = useAuth();\r\n\r\n    const authHeaders = useMemo(() => ({\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }), [token]);\r\n\r\n    const showNotification = (message, type = 'success') => {\r\n        setAlertMessage(message);\r\n        setAlertType(type);\r\n        setShowAlert(true);\r\n        setTimeout(() => {\r\n            setShowAlert(false);\r\n            setAlertMessage('');\r\n        }, 3000);\r\n    };\r\n\r\n    const fetchDoctors = async () => {\r\n        if (!token) return;\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n            setDoctors(response.data.map(doc => ({\r\n                id: doc.doktorID, // Doktor ID (Integer)\r\n                userId: doc.userId, // User ID iz Auth servisa (Long)\r\n                name: `${doc.ime} ${doc.prezime}`,\r\n                ime: doc.ime,\r\n                prezime: doc.prezime,\r\n                specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                           ? doc.specijalizacije.join(', ')\r\n                           : 'N/A',\r\n                grad: doc.grad,\r\n                email: doc.email,\r\n                telefon: doc.telefon,\r\n                radnoVrijeme: doc.radnoVrijeme,\r\n                iskustvo: doc.iskustvo,\r\n                ocjena: doc.ocjena,\r\n                profileImageBase64: doc.profileImageBase64,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Error fetching all doctors:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching doctors.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchPatients = async () => {\r\n        if (!token) return;\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\r\n            setPatients(response.data.map(pat => ({\r\n                id: pat.pacijentID, // Pacijent ID (Integer)\r\n                userId: pat.userId, // User ID iz Auth servisa (Long)\r\n                name: `${pat.ime} ${pat.prezime}`,\r\n                ime: pat.ime,\r\n                prezime: pat.prezime,\r\n                email: pat.email,\r\n                phone: pat.telefon,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Error fetching all patients:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching patients.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchTerms = async () => {\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            console.warn(\"Cannot fetch terms: doktorId is missing or auth not ready.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${user.doktorId}`, authHeaders);\r\n            setTerms(response.data.map(term => ({\r\n                id: term.terminID,\r\n                doktorId: term.doktorID,\r\n                datum: term.datum,\r\n                vrijeme: term.vrijeme,\r\n                dostupnost: term.dostupnost,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Error fetching doctor's terms:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching doctor's terms.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchExaminations = async () => {\r\n        if (!token) return;\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\r\n            setExaminations(response.data.map(exam => ({\r\n                id: exam.pregledID,\r\n                pacijentId: exam.pacijentID,\r\n                doktorId: exam.doktorID,\r\n                patientName: exam.pacijentIme || 'N/A',\r\n                doctorName: exam.doktorIme || 'N/A',\r\n                date: exam.datumPregleda,\r\n                time: exam.vrijemePregleda,\r\n                status: exam.status,\r\n                komentarPacijenta: exam.komentarPacijenta || '',\r\n                ocjenaDoktora: exam.ocjenaDoktora || null,\r\n                terminID: exam.terminID,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Error fetching all examinations:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching examinations.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchActivityLog = async () => {\r\n        if (!token) return;\r\n        try {\r\n            console.warn(\"Activity Log endpoint is not defined, skipping fetching activity log.\");\r\n            setActivityLog([]);\r\n        } catch (error) {\r\n            console.error(\"Error fetching activity log:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching activity log.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchPatientNotes = async (patientId) => {\r\n        if (!token) return;\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${patientId}/notes`, authHeaders);\r\n            setPatientNotes(response.data.notes || '');\r\n        } catch (error) {\r\n            console.error(\"Error fetching patient notes:\", error.response?.data || error.message);\r\n            setPatientNotes('');\r\n            showNotification(\"Error fetching patient notes.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleSavePatientNotes = async () => {\r\n        if (!token || !selectedPatient) return;\r\n        try {\r\n            await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${selectedPatient.id}/notes`, { notes: patientNotes }, authHeaders);\r\n            showNotification(\"Notes successfully saved!\");\r\n            fetchActivityLog();\r\n            setShowPatientDetailModal(false);\r\n        } catch (error) {\r\n            console.error(\"Error saving notes:\", error.response?.data || error.message);\r\n            showNotification(error.response?.data?.message || 'Error saving notes.', 'danger');\r\n        }\r\n    };\r\n\r\n    const openPatientDetailModal = async (patient) => {\r\n        setSelectedPatient(patient);\r\n        await fetchPatientNotes(patient.id);\r\n        setShowPatientDetailModal(true);\r\n    };\r\n\r\n    const closePatientDetailModal = () => {\r\n        setShowPatientDetailModal(false);\r\n        setSelectedPatient(null);\r\n        setPatientNotes('');\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            setProfileImageFile(file);\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setProfileImagePreview(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        } else {\r\n            setProfileImageFile(null);\r\n            setProfileImagePreview(null);\r\n        }\r\n    };\r\n\r\n    const fetchCurrentDoctorProfile = async () => {\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            console.warn(\"Cannot fetch current doctor profile: doktorId is missing or auth not ready.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, authHeaders);\r\n            const profileData = response.data;\r\n            setCurrentDoctorProfile(profileData);\r\n            setEditIme(profileData.ime || '');\r\n            setEditPrezime(profileData.prezime || '');\r\n            setEditEmail(profileData.email || '');\r\n            setEditTelefon(profileData.telefon || '');\r\n            setEditSpecijalizacije(Array.isArray(profileData.specijalizacije) ? profileData.specijalizacije.join(', ') : '');\r\n            setEditGrad(profileData.grad || '');\r\n            setEditRadnoVrijeme(profileData.radnoVrijeme || '');\r\n            setEditIskustvo(profileData.iskustvo || '');\r\n            setEditOcjena(profileData.ocjena || '');\r\n            setProfileImagePreview(profileData.profileImageBase64 || null);\r\n        } catch (error) {\r\n            console.error(\"Error fetching doctor profile:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching doctor profile.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleUpdateDoctorProfile = async (e) => {\r\n        e.preventDefault();\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            showNotification(\"You are not authorized or doctor ID is missing.\", \"danger\");\r\n            return;\r\n        }\r\n\r\n        const updatedProfile = {\r\n            doktorID: user.doktorId,\r\n            userId: currentDoctorProfile.userId,\r\n            ime: editIme,\r\n            prezime: editPrezime,\r\n            email: editEmail,\r\n            telefon: editTelefon,\r\n            specijalizacije: editSpecijalizacije.split(',').map(s => s.trim()).filter(s => s !== ''),\r\n            grad: editGrad,\r\n            radnoVrijeme: editRadnoVrijeme,\r\n            iskustvo: parseInt(editIskustvo, 10),\r\n            ocjena: parseFloat(editOcjena) || 0.0,\r\n            profileImageBase64: profileImagePreview,\r\n        };\r\n\r\n        try {\r\n            const response = await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, updatedProfile, authHeaders);\r\n            setCurrentDoctorProfile(response.data);\r\n            setIsEditingProfile(false);\r\n            showNotification(\"Profile successfully updated!\");\r\n            fetchDoctors();\r\n        } catch (error) {\r\n            console.error(\"Error updating profile:\", error.response?.data || error.message);\r\n            showNotification(error.response?.data?.message || 'Error updating profile.', 'danger');\r\n        }\r\n    };\r\n\r\n    const fetchDocuments = async () => {\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            console.warn(\"Cannot fetch documents: doktorId is missing or auth not ready.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/doktor/${user.doktorId}`, authHeaders);\r\n            const transformedDocuments = response.data.map(doc => ({\r\n                id: doc.dokumentID,\r\n                fileName: doc.nazivDokumenta,\r\n                documentType: doc.tipDokumenta,\r\n                uploadDate: doc.datumKreiranja,\r\n                pristup: doc.pristup,\r\n                pacijentIme: doc.pacijentIme\r\n            }));\r\n            setDocuments(transformedDocuments);\r\n            showNotification(\"Documents successfully fetched!\", \"success\");\r\n        } catch (error) {\r\n            console.error('Error fetching documents for doctor:', error.response?.data || error.message);\r\n            showNotification('Failed to fetch documents.', \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleDocumentUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n\r\n        if (!user || user.doktorId === null || user.doktorId === undefined) {\r\n            showNotification(\"Doctor ID is not available for document upload.\", \"danger\");\r\n            return;\r\n        }\r\n\r\n        console.log(\"Attempting document upload with Doktor ID:\", user.doktorId);\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('doktorID', user.doktorId);\r\n        formData.append('tipDokumenta', 'Doctor Upload');\r\n        formData.append('pristup', 'PRIVATNA');\r\n\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            showNotification('Document successfully uploaded!', 'success');\r\n            fetchDocuments();\r\n        } catch (error) {\r\n            console.error('Error uploading document:', error.response?.data || error.message);\r\n            showNotification('Document upload failed. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async () => {\r\n        if (!token || !user || user.userId === null || user.userId === undefined) { // Koristi user.userId\r\n            console.warn(\"Cannot fetch messages: user.userId is missing or auth not ready.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Ažuriran endpoint za dohvaćanje poruka koristeći user.userId i userType DOKTOR\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=DOKTOR`, authHeaders);\r\n            const transformedMessages = response.data.map(msg => ({\r\n                id: msg.porukaID,\r\n                senderId: msg.senderId, // Ovo je sada Auth userId\r\n                senderType: msg.senderType,\r\n                senderIme: msg.senderIme,\r\n                receiverId: msg.receiverId, // Ovo je sada Auth userId\r\n                receiverType: msg.receiverType,\r\n                receiverIme: msg.receiverIme,\r\n                subject: msg.subject,\r\n                content: msg.content,\r\n                timestamp: msg.timestamp,\r\n                replies: msg.replies || []\r\n            }));\r\n            setMessages(transformedMessages);\r\n            showNotification(\"Messages successfully fetched!\", \"success\");\r\n        } catch (error) {\r\n            console.error('Error fetching messages for doctor:', error.response?.data || error.message);\r\n            showNotification('Failed to fetch messages.', \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleNewMessageChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewMessage(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!user || user.userId === null || user.userId === undefined) { // Koristi user.userId\r\n            showNotification('Your user ID is not available. Cannot send message.', 'danger');\r\n            return;\r\n        }\r\n        if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\r\n            showNotification('Please fill in all message fields.', 'warning');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const messageData = {\r\n                senderId: user.userId, // SENDER je sada user.userId (Long)\r\n                senderType: 'DOKTOR',\r\n                receiverId: parseInt(newMessage.recipientId, 10), // RECIPIENT je user.userId pacijenta (Long)\r\n                receiverType: 'PACIJENT',\r\n                subject: newMessage.subject,\r\n                content: newMessage.content\r\n            };\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\r\n            showNotification('Message successfully sent!', 'success');\r\n            setNewMessage({ recipientId: '', subject: '', content: '' });\r\n            fetchMessages();\r\n        } catch (error) {\r\n            console.error('Error sending message:', error.response?.data || error.message);\r\n            showNotification('Failed to send message. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleReplyMessageChange = (e) => {\r\n        setReplyMessage(prev => ({ ...prev, content: e.target.value }));\r\n    };\r\n\r\n    const handleReply = async (messageId) => {\r\n        if (!user || user.userId === null || user.userId === undefined) { // Koristi user.userId\r\n            showNotification('Your user ID is not available. Cannot reply.', 'danger');\r\n            return;\r\n        }\r\n        if (!replyMessage.content) {\r\n            showNotification('Reply content cannot be empty.', 'warning');\r\n            return;\r\n        }\r\n        try {\r\n            const replyPayload = {\r\n                senderId: user.userId, // SENDER je sada user.userId (Long)\r\n                senderType: 'DOKTOR',\r\n                content: replyMessage.content\r\n            };\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, replyPayload, authHeaders);\r\n            showNotification('Reply successfully sent!', 'success');\r\n            setReplyMessage({ messageId: '', content: '' });\r\n            fetchMessages();\r\n            // Ažuriraj lokalno stanje za trenutni prikaz odgovora\r\n            setSelectedMessage(prev => {\r\n                if (!prev) return null;\r\n                return {\r\n                    ...prev,\r\n                    replies: [...(prev.replies || []), {\r\n                        senderId: user.userId, // Važno: Koristite user.userId ovdje\r\n                        senderIme: `${user.ime || ''} ${user.prezime || ''}`.trim(), // Koristi ime/prezime iz useAuth, ako je dostupno\r\n                        senderType: 'DOKTOR',\r\n                        content: replyMessage.content,\r\n                        timestamp: new Date().toISOString()\r\n                    }]\r\n                };\r\n            });\r\n        } catch (error) {\r\n            console.error('Error sending reply:', error.response?.data || error.message);\r\n            showNotification('Failed to send reply. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleViewMessage = (message) => {\r\n        setSelectedMessage(message);\r\n    };\r\n\r\n    const closeMessageModal = () => {\r\n        setSelectedMessage(null);\r\n        setReplyMessage({ messageId: '', content: '' });\r\n    };\r\n\r\n    const handleCreateTerm = async (e) => {\r\n        e.preventDefault();\r\n        if (!user || user.doktorId === null || user.doktorId === undefined) {\r\n            showNotification(\"Doctor ID is not available. Cannot create term.\", \"danger\");\r\n            return;\r\n        }\r\n        if (!newTermDate || !newTermTime) {\r\n            showNotification(\"Please select both date and time for the new term.\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const termData = {\r\n                doktorID: user.doktorId,\r\n                datum: newTermDate,\r\n                vrijeme: newTermTime + ':00',\r\n                dostupnost: selectedTermStatus === 'dostupan'\r\n            };\r\n\r\n            await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, termData, authHeaders);\r\n            showNotification(\"Term successfully created!\", \"success\");\r\n            setNewTermDate('');\r\n            setNewTermTime('');\r\n            setSelectedTermStatus('dostupan');\r\n            fetchTerms();\r\n        } catch (error) {\r\n            console.error(\"Error creating term:\", error.response?.data || error.message);\r\n            showNotification(`Failed to create term: ${error.response?.data?.message || error.message}`, \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleDeleteTerm = async (termId) => {\r\n        if (!token) return;\r\n        try {\r\n            await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${termId}`, authHeaders);\r\n            showNotification(\"Term successfully deleted!\", \"success\");\r\n            fetchTerms();\r\n        } catch (error) {\r\n            console.error(\"Error deleting term:\", error.response?.data || error.message);\r\n            showNotification(`Failed to delete term: ${error.response?.data?.message || error.message}`, \"danger\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"DoctorDashboard useEffect: token=\", token, \"user=\", user, \"authLoading=\", authLoading);\r\n        if (!authLoading && token && user && user.doktorId) { // user.doktorId je i dalje potreban za doktor profile, termine, dokumente\r\n            console.log(\"DoctorDashboard useEffect: Initiating data fetching for doktorId:\", user.doktorId);\r\n            fetchDoctors();\r\n            fetchPatients();\r\n            fetchTerms();\r\n            fetchExaminations();\r\n            fetchActivityLog();\r\n            fetchCurrentDoctorProfile();\r\n            fetchDocuments();\r\n            fetchMessages(); // Ovdje se fetchuju poruke, sada po user.userId\r\n        } else if (!authLoading) {\r\n            console.log(\"DoctorDashboard useEffect: Data fetching skipped because condition not met.\", { token, user, doktorId: user?.doktorId, authLoading });\r\n        }\r\n    }, [token, user, authLoading]);\r\n\r\n    console.log(\"DoctorDashboard render check: token=\", token, \"user=\", user, \"user.doktorId=\", user?.doktorId, \"authLoading=\", authLoading);\r\n    if (authLoading) {\r\n        console.log(\"DoctorDashboard: Still loading authentication...\");\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <p className=\"ms-3\">Loading authentication...</p>\r\n            </div>\r\n        );\r\n    }\r\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n        console.log(\"DoctorDashboard: Not authorized as doctor or incomplete data. Conditions:\", { token: !!token, user: !!user, doktorIdDefined: user?.doktorId !== null && user?.doktorId !== undefined });\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <p className=\"ms-3\">Not authorized as a doctor or incomplete data.</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const currentDoctorId = user.doktorId;\r\n    const currentDoctorUserId = user.userId; // NOVO: Dohvati user.userId\r\n    console.log(\"DoctorDashboard: Current doctor ID for filtering (after initial checks):\", currentDoctorId, \"Current User ID:\", currentDoctorUserId);\r\n\r\n\r\n    const doctorsExaminations = examinations.filter(\r\n        (examination) => examination.doktorId === currentDoctorId\r\n    );\r\n\r\n    const patientIdsWithExaminations = new Set(\r\n        doctorsExaminations.map((exam) => exam.pacijentId)\r\n    );\r\n    const myPatients = patients.filter((patient) =>\r\n        patientIdsWithExaminations.has(patient.id)\r\n    );\r\n\r\n    const handleUpdateExaminationStatus = async (id, newStatus) => {\r\n        try {\r\n            const existingExamination = examinations.find(exam => exam.id === id);\r\n            if (!existingExamination) {\r\n                showNotification('Examination not found for status update.', 'danger');\r\n                return;\r\n            }\r\n\r\n            console.log(\"Existing Examination object before update:\", existingExamination);\r\n            const terminIdToSend = existingExamination.terminID;\r\n            console.log(\"Termin ID to send:\", terminIdToSend);\r\n\r\n            if (terminIdToSend === null || terminIdToSend === undefined) {\r\n                showNotification('Error: Term ID is missing for this examination. Please ensure all examinations have a valid term.', 'danger');\r\n                return;\r\n            }\r\n\r\n            const ratingToSend = newStatus === 'obavljen' ? (existingExamination.ocjenaDoktora || 5.0) : existingExamination.ocjenaDoktora;\r\n\r\n\r\n            const examinationPayload = {\r\n                pregledID: existingExamination.id,\r\n                pacijentID: existingExamination.pacijentId,\r\n                doktorID: existingExamination.doktorId,\r\n                datumPregleda: existingExamination.date.split('T')[0],\r\n                vrijemePregleda: existingExamination.time.split('.')[0],\r\n                status: newStatus,\r\n                komentarPacijenta: existingExamination.komentarPacijenta,\r\n                ocjenaDoktora: ratingToSend,\r\n                terminID: terminIdToSend,\r\n            };\r\n\r\n            const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, examinationPayload, authHeaders);\r\n            const updatedExam = {\r\n                id: response.data.pregledID,\r\n                pacijentId: response.data.pacijentID,\r\n                doktorId: response.data.doktorID,\r\n                patientName: response.data.pacijentIme || 'N/A',\r\n                doctorName: response.data.doktorIme || 'N/A',\r\n                date: response.data.datumPregleda,\r\n                time: response.data.vrijemePregleda,\r\n                status: response.data.status,\r\n                komentarPacijenta: response.data.komentarPacijenta || '',\r\n                ocjenaDoktora: response.data.ocjenaDoktora || null,\r\n                terminID: response.data.terminID,\r\n            };\r\n            setExaminations(examinations.map(exam => (exam.id === id ? updatedExam : exam)));\r\n            fetchActivityLog();\r\n            showNotification(`Examination status updated to ${newStatus}!`, 'info');\r\n        } catch (error) {\r\n            console.error(\"Error updating examination status:\", error.response?.data || error.message);\r\n            showNotification(error.response?.data?.message || 'Error updating examination status.', \"danger\");\r\n        }\r\n    };\r\n\r\n    const filteredMyPatients = myPatients.filter(patient =>\r\n        (patient.name && patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase())) ||\r\n        (patient.email && patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase())) ||\r\n        (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n    );\r\n\r\n    const indexOfLastMyPatient = myPatientsCurrentPage * itemsPerPage;\r\n    const indexOfFirstMyPatient = indexOfLastMyPatient - itemsPerPage;\r\n    const currentMyPatients = filteredMyPatients.slice(indexOfFirstMyPatient, indexOfLastMyPatient);\r\n    const totalMyPatientPages = Math.ceil(filteredMyPatients.length / itemsPerPage);\r\n\r\n    const filteredMyExaminations = doctorsExaminations.filter(examination => {\r\n        const matchesSearch = (examination.patientName && examination.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n            (examination.status && examination.status.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n            (examination.date && new Date(examination.date).toLocaleDateString().includes(examinationSearchTerm));\r\n\r\n        const matchesFilterStatus = examinationFilterStatus === 'All' || examination.status === examinationFilterStatus;\r\n\r\n        return matchesSearch && matchesFilterStatus;\r\n    });\r\n\r\n    const indexOfLastMyExaminations = myExaminationsCurrentPage * itemsPerPage;\r\n    const indexOfFirstMyExaminations = indexOfLastMyExaminations - itemsPerPage;\r\n    const currentMyExaminations = filteredMyExaminations.slice(indexOfFirstMyExaminations, indexOfLastMyExaminations);\r\n    const totalMyExaminationsPages = Math.ceil(filteredMyExaminations.length / itemsPerPage);\r\n\r\n\r\n    const Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        return (\r\n            <nav>\r\n                <ul className=\"pagination justify-content-center mt-4\">\r\n                    {pageNumbers.map(number => (\r\n                        <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n                            <button onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n        );\r\n    };\r\n\r\n\r\n    const renderContent = () => {\r\n        switch (activeTab) {\r\n            case 'overview':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Pregled doktora</h4>\r\n                        <div className=\"row g-4\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card text-white bg-info mb-3\">\r\n                                    <div className=\"card-header\">Ukupno pacijenata pod skrbi</div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title display-4\">{myPatients.length}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card text-white bg-warning mb-3\">\r\n                                    <div className=\"card-header\">Pregledi na čekanju</div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title display-4\">{doctorsExaminations.filter(exam => exam.status === 'zakazan').length}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <h5>Brze akcije</h5>\r\n                            <div className=\"d-flex gap-2\">\r\n                                <button className=\"btn btn-outline-info\" onClick={() => setActiveTab('my-examinations')}>Moji pregledi</button>\r\n                                <button className=\"btn btn-outline-success\" onClick={() => setActiveTab('my-patients')}>Moji pacijenti</button>\r\n                                <button className=\"btn btn-outline-primary\" onClick={() => setActiveTab('documents')}>Dokumenti</button>\r\n                                <button className=\"btn btn-outline-secondary\" onClick={() => setActiveTab('messages')}>Poruke</button>\r\n                                <button className=\"btn btn-outline-danger\" onClick={() => setActiveTab('manage-terms')}>Upravljaj terminima</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <h5>Nedavne aktivnosti</h5>\r\n                            <ul className=\"list-group\">\r\n                                {activityLog.length > 0 ? (\r\n                                    activityLog\r\n                                        .filter(log => log.doktorId === currentDoctorId)\r\n                                        .slice(-5).reverse().map(log => (\r\n                                            <li key={log.id || Math.random()} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                {log.action}\r\n                                                <span className=\"badge bg-light text-dark\">{new Date(log.timestamp).toLocaleString()}</span>\r\n                                            </li>\r\n                                        ))\r\n                                ) : (\r\n                                    <li className=\"list-group-item text-center text-muted\">Nema nedavnih aktivnosti.</li>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'my-examinations':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Upravljanje mojim pregledima</h4>\r\n                        <div className=\"d-flex justify-content-between mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control w-25 me-2\"\r\n                                placeholder=\"Pretražite preglede (ime pacijenta, status, datum)...\"\r\n                                value={examinationSearchTerm}\r\n                                onChange={(e) => setExaminationSearchTerm(e.target.value)}\r\n                            />\r\n                            <Form.Select\r\n                                className=\"w-auto\"\r\n                                value={examinationFilterStatus}\r\n                                onChange={(e) => setExaminationFilterStatus(e.target.value)}\r\n                            >\r\n                                <option value=\"All\">Filtriraj po statusu (Svi)</option>\r\n                                <option value=\"zakazan\">Zakazan</option>\r\n                                <option value=\"obavljen\">Obavljen</option>\r\n                                <option value=\"otkazan\">Otkazan</option>\r\n                            </Form.Select>\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Pacijent</th>\r\n                                        <th>Datum</th>\r\n                                        <th>Vrijeme</th>\r\n                                        <th>Status</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentMyExaminations.length > 0 ? (\r\n                                        currentMyExaminations.map(examination => {\r\n                                            const patient = patients.find(p => p.id === examination.pacijentId);\r\n                                            return (\r\n                                                <tr key={examination.id}>\r\n                                                    <td>{examination.id}</td>\r\n                                                    <td>{patient ? patient.name : 'N/A'}</td>\r\n                                                    <td>{new Date(examination.date).toLocaleDateString()}</td>\r\n                                                    <td>{examination.time}</td>\r\n                                                    <td>\r\n                                                        <span className={`badge ${\r\n                                                            examination.status === 'zakazan' ? 'bg-warning text-dark' :\r\n                                                            examination.status === 'obavljen' ? 'bg-success' :\r\n                                                            examination.status === 'otkazan' ? 'bg-danger' :\r\n                                                            'bg-secondary'\r\n                                                        }`}>\r\n                                                            {examination.status}\r\n                                                        </span>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {examination.status === 'zakazan' && (\r\n                                                            <>\r\n                                                                <button\r\n                                                                    className=\"btn btn-success btn-sm me-2\"\r\n                                                                    onClick={() => handleUpdateExaminationStatus(examination.id, 'obavljen')}\r\n                                                                >\r\n                                                                    Označi kao obavljeno\r\n                                                                </button>\r\n                                                                <button\r\n                                                                    className=\"btn btn-danger btn-sm\"\r\n                                                                    onClick={() => handleUpdateExaminationStatus(examination.id, 'otkazan')}\r\n                                                                >\r\n                                                                    Otkaži\r\n                                                                </button>\r\n                                                            </>\r\n                                                        )}\r\n                                                        {examination.status === 'obavljen' && (\r\n                                                            <span className=\"text-muted\">Obavljen</span>\r\n                                                        )}\r\n                                                        {examination.status === 'otkazan' && (\r\n                                                            <span className=\"text-muted\">Otkazan</span>\r\n                                                        )}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td colSpan=\"6\" className=\"text-center\">Nema pronađenih pregleda.</td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={filteredMyExaminations.length}\r\n                            currentPage={myExaminationsCurrentPage}\r\n                            paginate={setMyExaminationsCurrentPage}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 'my-patients':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Moji pacijenti</h4>\r\n                        <div className=\"d-flex justify-content-between mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control w-25\"\r\n                                placeholder=\"Pretražite pacijente...\"\r\n                                value={patientSearchTerm}\r\n                                onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Ime</th>\r\n                                        <th>Email</th>\r\n                                        <th>Telefon</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentMyPatients.length > 0 ? (\r\n                                        currentMyPatients.map(patient => (\r\n                                            <tr key={patient.id}>\r\n                                                <td>{patient.id}</td>\r\n                                                <td>{patient.name}</td>\r\n                                                <td>{patient.email}</td>\r\n                                                <td>{patient.phone}</td>\r\n                                                <td>\r\n                                                    <button\r\n                                                        className=\"btn btn-primary btn-sm me-2\"\r\n                                                        onClick={() => openPatientDetailModal(patient)}\r\n                                                    >\r\n                                                        Detalji pregleda\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td colSpan=\"5\" className=\"text-center\">Nema pronađenih pacijenata.</td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={filteredMyPatients.length}\r\n                            currentPage={myPatientsCurrentPage}\r\n                            paginate={setMyPatientsCurrentPage}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 'documents':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Moji dokumenti</h4>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Učitaj novi dokument</Form.Label>\r\n                            <Form.Control type=\"file\" onChange={handleDocumentUpload} />\r\n                        </Form.Group>\r\n\r\n                        {documents.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Naziv dokumenta</th>\r\n                                        <th>Tip</th>\r\n                                        <th>Datum učitavanja</th>\r\n                                        <th>Pristup</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {documents.map(doc => (\r\n                                        <tr key={doc.id}>\r\n                                            <td>{doc.fileName}</td>\r\n                                            <td>{doc.documentType}</td>\r\n                                            <td>{new Date(doc.uploadDate).toLocaleDateString()}</td>\r\n                                            <td><span className={`badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`}>{doc.pristup}</span></td>\r\n                                            <td>\r\n                                                <Button variant=\"success\" size=\"sm\" href={`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${doc.id}`} target=\"_blank\">Preuzmi</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih dokumenata.</p>\r\n                        )}\r\n                    </div>\r\n                );\r\n            case 'messages':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Moje poruke</h4>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => setNewMessage({ recipientId: '', subject: '', content: '' })}>Napiši novu poruku</Button>\r\n\r\n                        {messages.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {messages.map(msg => (\r\n                                    <li key={msg.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            {/* Prikazuje ime pošiljatelja poruke (Auth userId), provjerava je li trenutni korisnik doktor ili pacijent */}\r\n                                            <strong>Od: {msg.senderId === currentDoctorUserId ? 'Ja' : (patients.find(p => p.userId === msg.senderId)?.name || `Pacijent (${msg.senderId})`)}</strong> <br />\r\n                                            <strong>Predmet:</strong> {msg.subject} <br />\r\n                                            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                        <Button variant=\"info\" size=\"sm\" onClick={() => handleViewMessage(msg)}>Pogledaj poruku</Button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Nema pronađenih poruka.</p>\r\n                        )}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <h4>Napiši novu poruku</h4>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Primatelj (Pacijent)</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"recipientId\"\r\n                                    value={newMessage.recipientId}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Odaberite pacijenta --</option>\r\n                                    {myPatients.map(patient => (\r\n                                        <option key={patient.userId} value={patient.userId}>{patient.name}</option> \r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Predmet</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    value={newMessage.subject}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Sadržaj</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"content\"\r\n                                    value={newMessage.content}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSendMessage}>Pošalji poruku</Button>\r\n                        </Form>\r\n                    </div>\r\n                );\r\n            case 'manage-terms':\r\n                const doctorsTerms = terms.filter(term => term.doktorId === currentDoctorId);\r\n                const sortedTerms = doctorsTerms.sort((a, b) => {\r\n                    const dateA = new Date(`${a.datum}T${a.vrijeme}`);\r\n                    const dateB = new Date(`${b.datum}T${b.vrijeme}`);\r\n                    return dateA - dateB;\r\n                });\r\n\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Upravljajte mojim terminima</h4>\r\n\r\n                        <h5>Kreirajte novi termin</h5>\r\n                        <Form onSubmit={handleCreateTerm} className=\"mb-5 p-3 border rounded shadow-sm bg-white\">\r\n                            <div className=\"row mb-3\">\r\n                                <Form.Group controlId=\"newTermDate\" className=\"col-md-4\">\r\n                                    <Form.Label>Datum</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"date\"\r\n                                        value={newTermDate}\r\n                                        onChange={(e) => setNewTermDate(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"newTermTime\" className=\"col-md-4\">\r\n                                    <Form.Label>Vrijeme</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"time\"\r\n                                        value={newTermTime}\r\n                                        onChange={(e) => setNewTermTime(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"newTermStatus\" className=\"col-md-4\">\r\n                                    <Form.Label>Dostupnost</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        value={selectedTermStatus}\r\n                                        onChange={(e) => setSelectedTermStatus(e.target.value)}\r\n                                    >\r\n                                        <option value=\"dostupan\">Dostupan</option>\r\n                                        <option value=\"nedostupan\">Nedostupan</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </div>\r\n                            <Button variant=\"success\" type=\"submit\">Kreiraj termin</Button>\r\n                        </Form>\r\n\r\n                        <h5>Moji postojeći termini</h5>\r\n                        {sortedTerms.length > 0 ? (\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-striped table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th>Datum</th>\r\n                                            <th>Vrijeme</th>\r\n                                            <th>Dostupnost</th>\r\n                                            <th>Akcije</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {sortedTerms.map(term => (\r\n                                            <tr key={term.id}>\r\n                                                <td>{term.id}</td>\r\n                                                <td>{new Date(term.datum).toLocaleDateString()}</td>\r\n                                                <td>{term.vrijeme}</td>\r\n                                                <td>\r\n                                                    <span className={`badge ${term.dostupnost ? 'bg-success' : 'bg-danger'}`}>\r\n                                                        {term.dostupnost ? 'Dostupan' : 'Nedostupan'}\r\n                                                    </span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <Button variant=\"danger\" size=\"sm\" onClick={() => handleDeleteTerm(term.id)}>Obriši</Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        ) : (\r\n                            <p>Nema pronađenih termina za vaš profil. Molimo kreirajte nove.</p>\r\n                        )}\r\n                    </div>\r\n                );\r\n            case 'settings':\r\n                return (\r\n                    <div className=\"container my-4\">\r\n                        <h4 className=\"mb-4\">Postavke profila doktora</h4>\r\n                        {!currentDoctorProfile ? (\r\n                            <p>Učitavanje profila doktora...</p>\r\n                        ) : (\r\n                            isEditingProfile ? (\r\n                                <Form onSubmit={handleUpdateDoctorProfile}>\r\n                                    <div className=\"row mb-3\">\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Ime</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editIme} onChange={(e) => setEditIme(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Prezime</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editPrezime} onChange={(e) => setEditPrezime(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control type=\"email\" value={editEmail} onChange={(e) => setEditEmail(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Telefon</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editTelefon} onChange={(e) => setEditTelefon(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Specijalizacije (odvojene zarezom)</Form.Label>\r\n                                        <Form.Control type=\"text\" value={editSpecijalizacije} onChange={(e) => setEditSpecijalizacije(e.target.value)} />\r\n                                    </Form.Group>\r\n                                    <div className=\"row mb-3\">\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Grad</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editGrad} onChange={(e) => setEditGrad(e.target.value)} />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Radno vrijeme</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editRadnoVrijeme} onChange={(e) => setEditRadnoVrijeme(e.target.value)} />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Iskustvo (godine)</Form.Label>\r\n                                        <Form.Control type=\"number\" value={editIskustvo} onChange={(e) => setEditIskustvo(e.target.value)} />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Profilna slika</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"file\"\r\n                                            accept=\"image/*\"\r\n                                            onChange={handleImageChange}\r\n                                        />\r\n                                        {profileImagePreview && (\r\n                                            <div className=\"mt-2\">\r\n                                                <img\r\n                                                    src={profileImagePreview}\r\n                                                    alt=\"Pregled profilne slike\"\r\n                                                    style={{ maxWidth: '100px', maxHeight: '100px', borderRadius: '50%', objectFit: 'cover' }}\r\n                                                    className=\"border border-secondary\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </Form.Group>\r\n                                    <div className=\"d-flex justify-content-end\">\r\n                                        <Button variant=\"secondary\" className=\"me-2\" onClick={() => setIsEditingProfile(false)}>Otkaži</Button>\r\n                                        <Button variant=\"primary\" type=\"submit\">Sačuvaj promjene</Button>\r\n                                    </div>\r\n                                </Form>\r\n                            ) : (\r\n                                <div>\r\n                                    <p>\r\n                                        {currentDoctorProfile.profileImageBase64 ? (\r\n                                            <img\r\n                                                src={currentDoctorProfile.profileImageBase64}\r\n                                                alt=\"Profil doktora\"\r\n                                                style={{ width: '100px', height: '100px', borderRadius: '50%', objectFit: 'cover' }}\r\n                                                className=\"mb-3 border border-secondary\"\r\n                                            />\r\n                                        ) : (\r\n                                            <img\r\n                                                src=\"https://placehold.co/100x100/CCCCCC/000000?text=Nema+slike\"\r\n                                                alt=\"Nema profilne slike\"\r\n                                                style={{ width: '100px', height: '100px', borderRadius: '50%', objectFit: 'cover' }}\r\n                                                className=\"mb-3 border border-secondary\"\r\n                                            />\r\n                                        )}\r\n                                    </p>\r\n                                    <p><strong>Ime:</strong> {currentDoctorProfile.ime}</p>\r\n                                    <p><strong>Prezime:</strong> {currentDoctorProfile.prezime}</p>\r\n                                    <p><strong>Email:</strong> {currentDoctorProfile.email}</p>\r\n                                    <p><strong>Telefon:</strong> {currentDoctorProfile.telefon}</p>\r\n                                    <p><strong>Specijalizacije:</strong> {Array.isArray(currentDoctorProfile.specijalizacije) ? currentDoctorProfile.specijalizacije.join(', ') : 'N/A'}</p>\r\n                                    <p><strong>Grad:</strong> {currentDoctorProfile.grad}</p>\r\n                                    <p><strong>Radno vrijeme:</strong> {currentDoctorProfile.radnoVrijeme}</p>\r\n                                    <p><strong>Iskustvo:</strong> {currentDoctorProfile.iskustvo} godina</p>\r\n                                    <p><strong>Ocjena:</strong> {currentDoctorProfile.ocjena}</p>\r\n                                    <Button variant=\"primary\" onClick={() => setIsEditingProfile(true)}>Uredi profil</Button>\r\n                                </div>\r\n                            )\r\n                        )}\r\n                    </div>\r\n                );\r\n            default:\r\n                return <div>Odaberite karticu iz bočnog menija.</div>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ minHeight: '100vh' }}>\r\n            <div className=\"bg-dark text-white p-4\" style={{ width: '250px' }}>\r\n                <h3 className=\"mb-4\">Panel doktora</h3>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('overview')}\r\n                        >\r\n                            Pregled\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-examinations' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('my-examinations')}\r\n                        >\r\n                            Moji pregledi\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-patients' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('my-patients')}\r\n                        >\r\n                            Moji pacijenti\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'manage-terms' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('manage-terms')}\r\n                        >\r\n                            Upravljaj terminima\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('documents')}\r\n                        >\r\n                            Dokumenti\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('messages')}\r\n                        >\r\n                            Poruke\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'settings' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('settings')}\r\n                        >\r\n                            Postavke\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"flex-grow-1 p-4 bg-light\">\r\n                {showAlert && (\r\n                    <div className={`alert alert-${alertType} alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3`} role=\"alert\" style={{ zIndex: 1050 }}>\r\n                        {alertMessage}\r\n                        <button type=\"button\" className=\"btn-close\" onClick={() => setShowAlert(false)}></button>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <h2 className=\"mb-0\">Doktorska kontrolna ploča</h2>\r\n                </div>\r\n\r\n                {renderContent()}\r\n            </div>\r\n\r\n            <Modal show={showPatientDetailModal} onHide={closePatientDetailModal} size=\"lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Detalji pacijenta: {selectedPatient?.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedPatient && (\r\n                        <div>\r\n                            <p><strong>Email:</strong> {selectedPatient.email}</p>\r\n                            <p><strong>Telefon:</strong> {selectedPatient.phone}</p>\r\n                            <hr />\r\n                            <h5>Historija pregleda za {selectedPatient.name}</h5>\r\n                            {doctorsExaminations.filter(exam => exam.pacijentId === selectedPatient.id).length > 0 ? (\r\n                                <ul className=\"list-group mb-3\">\r\n                                    {doctorsExaminations\r\n                                        .filter(exam => exam.pacijentId === selectedPatient.id)\r\n                                        .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n                                        .map(exam => (\r\n                                            <li key={exam.id} className=\"list-group-item\">\r\n                                                <strong>Datum:</strong> {new Date(exam.date).toLocaleDateString()}, {' '}\r\n                                                <strong>Vrijeme:</strong> {exam.time}, {' '}\r\n                                                <strong>Status:</strong> <span className={`badge ${\r\n                                                    exam.status === 'zakazan' ? 'bg-warning text-dark' :\r\n                                                    exam.status === 'obavljen' ? 'bg-success' :\r\n                                                    exam.status === 'otkazan' ? 'bg-danger' :\r\n                                                    'bg-secondary'\r\n                                                }`}>{exam.status}</span>\r\n                                            </li>\r\n                                        ))}\r\n                                </ul>\r\n                            ) : (\r\n                                <p>Nema historije pregleda za ovog pacijenta.</p>\r\n                            )}\r\n                            <hr />\r\n                            <h5>Bilješke o pacijentu</h5>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={5}\r\n                                    value={patientNotes}\r\n                                    onChange={(e) => setPatientNotes(e.target.value)}\r\n                                    placeholder=\"Dodajte ili uredite bilješke za ovog pacijenta...\"\r\n                                />\r\n                            </Form.Group>\r\n                        </div>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closePatientDetailModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSavePatientNotes}>\r\n                        Sačuvaj bilješke\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={!!selectedMessage} onHide={closeMessageModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Poruka: {selectedMessage?.subject}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedMessage && (\r\n                        <>\r\n                            {/* Prikaz pošiljatelja poruke (Auth userId) */}\r\n                            <p><strong>Od:</strong> {selectedMessage.senderId === currentDoctorUserId ? 'Ja' : (patients.find(p => p.userId === selectedMessage.senderId)?.name || `Pacijent (${selectedMessage.senderId})`)}</p>\r\n                            <p><strong>Datum:</strong> {new Date(selectedMessage.timestamp).toLocaleString()}</p>\r\n                            <hr />\r\n                            <p>{selectedMessage.content}</p>\r\n\r\n                            {selectedMessage.replies && selectedMessage.replies.length > 0 && (\r\n                                <div className=\"mt-4\">\r\n                                    <h5>Odgovori:</h5>\r\n                                    {selectedMessage.replies.map((reply, index) => (\r\n                                        <div key={index} className=\"border p-2 mb-2 rounded bg-light\">\r\n                                            {/* Prikaz pošiljatelja odgovora (Auth userId) */}\r\n                                            <strong>{reply.senderId === currentDoctorUserId ? 'Ja' : (patients.find(p => p.userId === reply.senderId)?.name || `Pacijent (${reply.senderId})`)}:</strong> {reply.content}\r\n                                            <br />\r\n                                            <small>{new Date(reply.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            <Form.Group className=\"mt-4\">\r\n                                <Form.Label>Odgovori</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={2}\r\n                                    value={replyMessage.content}\r\n                                    onChange={handleReplyMessageChange}\r\n                                    placeholder=\"Upišite svoj odgovor ovdje...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" className=\"mt-2\" onClick={() => handleReply(selectedMessage.id)}>Pošalji odgovor</Button>\r\n                        </>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeMessageModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}