{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\n\n// KLJUČNA PROMJENA: URL-ovi sada moraju biti konzistentni sa Gateway rutama i context-pathovima\n// Frontend šalje: http://localhost:8081/api/korisnici-doktori/api/doktori\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori/api`;\n// Frontend šalje: http://localhost:8081/api/termini-pregledi/api/pregledi\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi/api`;\n// Auth servis nema context-path, Gateway ruta je direktno /auth\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\nfunction AdminDashboard() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    token\n  } = useAuth();\n\n  // Stanje za praćenje početnog učitavanja panela\n  const [loadingInitial, setLoadingInitial] = useState(true);\n  // Stanje za praćenje je li AuthContext završio početnu provjeru autentifikacije\n  const [isAuthChecked, setIsAuthChecked] = useState(false);\n  const authHeaders = {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n\n  // Aktivni tab, sa čuvanjem u lokalnom skladištu\n  const [activeTab, setActiveTab] = useState(() => {\n    const savedTab = localStorage.getItem('adminActiveTab');\n    return savedTab || 'overview';\n  });\n\n  // Stanja za podatke iz API-ja\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n\n  // Stanja za modale i forme\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\n  const [editingDoctor, setEditingDoctor] = useState(null);\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n\n  // Stanja za notifikacije (Alert)\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n\n  // Stanja za pretragu\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n\n  // Stanja za paginaciju\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\n  const [appointmentsCurrentPage, setAppointmentsCurrentPage] = useState(1);\n  const itemsPerPage = 5; // Broj stavki po stranici\n\n  // Funkcija za prikaz notifikacija\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000); // Notifikacija nestaje nakon 3 sekunde\n  };\n\n  // Funkcije za dohvat podataka sa backend-a\n  const fetchDoctors = async () => {\n    try {\n      // URL sada postaje: http://localhost:8081/api/korisnici-doktori/api/doktori\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: doc.userId,\n        name: `${doc.ime} ${doc.prezime}`,\n        ime: doc.ime,\n        prezime: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        specijalizacije: doc.specijalizacije,\n        city: doc.grad || 'N/A',\n        grad: doc.grad,\n        email: doc.email || 'N/A',\n        telefon: doc.telefon || 'N/A',\n        radnoVrijeme: doc.radnoVrijeme || 'N/A',\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : 'N/A',\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 'N/A'\n      }));\n      setDoctors(transformedDoctors);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja doktora:\", error);\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    try {\n      // ISPRAVLJENO: URL sada postaje: http://localhost:8081/api/korisnici-doktori/api/pacijenti\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti`, authHeaders);\n      const transformedPatients = response.data.map(pat => ({\n        id: pat.pacijentID,\n        userId: pat.userId,\n        name: `${pat.ime} ${pat.prezime}`,\n        ime: pat.ime,\n        prezime: pat.prezime,\n        email: pat.email || 'N/A',\n        phone: pat.telefon || 'N/A',\n        telefon: pat.telefon\n      }));\n      setPatients(transformedPatients);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", error);\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\n    }\n  };\n  const fetchAppointments = async () => {\n    try {\n      // URL sada postaje: http://localhost:8081/api/termini-pregledi/api/pregledi\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/pregledi`, authHeaders);\n      const transformedAppointments = response.data.map(app => ({\n        id: app.pregledID,\n        patientName: app.pacijentIme || 'N/A',\n        doctorName: app.doktorIme || 'N/A',\n        date: app.datumPregleda,\n        time: app.vrijemePregleda,\n        status: app.status\n      }));\n      setAppointments(transformedAppointments);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja termina:\", error);\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\n    }\n  };\n\n  // Glavni useEffect hook za provjeru autentifikacije i dohvat podataka\n  useEffect(() => {\n    console.log(\"AdminDashboard useEffect - Trenutni token:\", token);\n    console.log(\"AdminDashboard useEffect - isAuthChecked:\", isAuthChecked);\n    console.log(\"AdminDashboard useEffect - loadingInitial (prije logike):\", loadingInitial);\n    if (token !== undefined && !isAuthChecked) {\n      setIsAuthChecked(true);\n      console.log(\"AdminDashboard useEffect - Provjera autentifikacije završena, postavljen isAuthChecked na true.\");\n    }\n    const initializeDashboard = async () => {\n      if (isAuthChecked) {\n        if (token) {\n          try {\n            await Promise.all([fetchDoctors(), fetchPatients(), fetchAppointments()]);\n            console.log(\"AdminDashboard useEffect - Podaci uspješno dohvaćeni.\");\n          } catch (error) {\n            console.error(\"Greška prilikom inicijalnog dohvaćanja podataka:\", error);\n            showNotification(\"Greška prilikom učitavanja početnih podataka.\", \"danger\");\n          } finally {\n            setLoadingInitial(false);\n            console.log(\"AdminDashboard useEffect - Postavljen loadingInitial na false nakon dohvaćanja podataka/greške.\");\n          }\n        } else {\n          setLoadingInitial(false);\n          console.warn(\"Provjera autentifikacije završena, ali token nije dostupan. Korisnik nije ulogovan/autorizovan.\");\n        }\n      } else {\n        console.log(\"AdminDashboard useEffect - Provjera autentifikacije još nije završena, loadingInitial ostaje true.\");\n      }\n    };\n    initializeDashboard();\n  }, [token, isAuthChecked]);\n  useEffect(() => {\n    localStorage.setItem('adminActiveTab', activeTab);\n  }, [activeTab]);\n  const handleAddDoctor = async newDoctorData => {\n    try {\n      const registerPayload = {\n        email: newDoctorData.email,\n        password: newDoctorData.password,\n        fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\n        telefon: newDoctorData.telefon,\n        roles: [\"ROLE_DOKTOR\"],\n        grad: newDoctorData.grad,\n        specijalizacije: newDoctorData.specijalizacije\n      };\n      await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      fetchDoctors();\n      setShowDoctorModal(false);\n      showNotification('Novi doktor uspješno registrovan i dodan!');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Greška prilikom dodavanja doktora (registracije):\", error);\n      showNotification(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Greška prilikom dodavanja doktora.', 'danger');\n    }\n  };\n  const handleUpdateDoctor = async updatedDoctor => {\n    try {\n      const doctorUpdatePayload = {\n        ime: updatedDoctor.ime,\n        prezime: updatedDoctor.prezime,\n        email: updatedDoctor.email,\n        telefon: updatedDoctor.telefon,\n        grad: updatedDoctor.grad,\n        specijalizacije: updatedDoctor.specijalizacije,\n        radnoVrijeme: updatedDoctor.radnoVrijeme,\n        iskustvo: updatedDoctor.iskustvo,\n        ocjena: updatedDoctor.ocjena\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\n      const userUpdatePayload = {\n        email: updatedDoctor.email,\n        fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\n        telefon: updatedDoctor.telefon\n      };\n      if (updatedDoctor.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchDoctors();\n      setShowDoctorModal(false);\n      setEditingDoctor(null);\n      showNotification('Doktor uspješno ažuriran!');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Greška prilikom ažuriranja doktora:\", error);\n      showNotification(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Greška prilikom ažuriranja doktora.', 'danger');\n    }\n  };\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(() => () => {});\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\n  const [confirmTitle, setConfirmTitle] = useState(\"Potvrda\");\n  const showCustomConfirm = (message, action, title = \"Potvrda\") => {\n    setConfirmMessage(message);\n    setConfirmAction(() => action);\n    setConfirmTitle(title);\n    setShowConfirmModal(true);\n  };\n  const handleConfirmAction = () => {\n    confirmAction();\n    setShowConfirmModal(false);\n  };\n  const handleDeleteDoctor = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.', async () => {\n      try {\n        const doctorToDelete = doctors.find(doc => doc.id === id);\n        if (!doctorToDelete || !doctorToDelete.userId) {\n          showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\n          return;\n        }\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/doktori/${id}`, authHeaders);\n        await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\n        fetchDoctors();\n        showNotification('Doktor uspješno obrisan!', 'danger');\n      } catch (error) {\n        var _error$response3, _error$response3$data;\n        console.error(\"Greška prilikom brisanja doktora:\", error);\n        showNotification(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Greška prilikom brisanja doktora.', 'danger');\n      }\n    }, \"Potvrdi brisanje doktora\");\n  };\n  const openDoctorModal = (doctor = null) => {\n    setEditingDoctor(doctor);\n    setShowDoctorModal(true);\n  };\n  const filteredDoctors = doctors.filter(doctor => doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()));\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\n  const handleAddPatient = async newPatient => {\n    try {\n      const registerPayload = {\n        email: newPatient.email,\n        password: newPatient.password,\n        fullName: `${newPatient.ime} ${newPatient.prezime}`,\n        telefon: newPatient.telefon,\n        roles: [\"ROLE_PATIENT\"],\n        grad: null,\n        specijalizacije: null\n      };\n      await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      fetchPatients();\n      setShowPatientModal(false);\n      showNotification('Novi pacijent uspješno registrovan i dodan!');\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error(\"Greška prilikom dodavanja pacijenta (registracije):\", error);\n      showNotification(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Greška prilikom dodavanja pacijenta.', 'danger');\n    }\n  };\n  const handleUpdatePatient = async updatedPatient => {\n    try {\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti/${updatedPatient.id}`, updatedPatient, authHeaders);\n      const userUpdatePayload = {\n        email: updatedPatient.email,\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\n        telefon: updatedPatient.telefon\n      };\n      if (updatedPatient.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchPatients();\n      setShowPatientModal(false);\n      setEditingPatient(null);\n      showNotification('Pacijent uspješno ažuriran!');\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", error);\n      showNotification(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Greška prilikom ažuriranja pacijenta.', 'danger');\n    }\n  };\n  const handleDeletePatient = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.', async () => {\n      try {\n        const patientToDelete = patients.find(pat => pat.id === id);\n        if (!patientToDelete || !patientToDelete.userId) {\n          showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\n          return;\n        }\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti/${id}`, authHeaders);\n        await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\n        fetchPatients();\n        showNotification('Pacijent uspješno obrisan!', 'danger');\n      } catch (error) {\n        var _error$response6, _error$response6$data;\n        console.error(\"Greška prilikom brisanja pacijenta:\", error);\n        showNotification(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Greška prilikom brisanja pacijenta.', 'danger');\n      }\n    }, \"Potvrdi brisanje pacijenta\");\n  };\n  const openPatientModal = (patient = null) => {\n    setEditingPatient(patient);\n    setShowPatientModal(true);\n  };\n  const filteredPatients = patients.filter(patient => patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\n  const handleUpdateAppointmentStatus = async (id, newStatus) => {\n    try {\n      // URL sada postaje: http://localhost:8081/api/termini-pregledi/api/pregledi/ID/status\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/pregledi/${id}/status`, {\n        status: newStatus\n      }, authHeaders);\n      fetchAppointments();\n      showNotification(`Status termina ažuriran na ${newStatus}!`, 'info');\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      console.error(\"Greška prilikom ažuriranja statusa termina:\", error);\n      showNotification(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Greška prilikom ažuriranja statusa termina.', 'danger');\n    }\n  };\n  const indexOfLastAppointment = appointmentsCurrentPage * itemsPerPage;\n  const indexOfFirstAppointment = indexOfLastAppointment - itemsPerPage;\n  const currentAppointments = appointments.slice(indexOfFirstAppointment, indexOfLastAppointment);\n  const totalAppointmentPages = Math.ceil(appointments.length / itemsPerPage);\n  const DataModal = ({\n    show,\n    onClose,\n    data,\n    onSave,\n    fields,\n    title,\n    idPrefix\n  }) => {\n    _s();\n    const [formData, setFormData] = useState(data || {});\n    useEffect(() => {\n      if (data) {\n        const updatedData = {\n          ...data\n        };\n        if (updatedData.radnoVrijeme === 'N/A') {\n          updatedData.radnoVrijeme = null;\n        }\n        if (updatedData.iskustvo === 0 && (data.iskustvo === null || data.iskustvo === undefined)) {\n          updatedData.iskustvo = null;\n        }\n        if (updatedData.ocjena === 0.0 && (data.ocjena === null || data.ocjena === undefined)) {\n          updatedData.ocjena = null;\n        }\n        if (updatedData.email === 'N/A' || updatedData.email === null) {\n          updatedData.email = '';\n        }\n        if (!Array.isArray(updatedData.specijalizacije) || updatedData.specijalizacije.length === 0) {\n          updatedData.specijalizacije = [];\n        }\n        setFormData(updatedData);\n      } else {\n        const initialData = {};\n        fields.forEach(field => {\n          if (field.name === 'specijalizacije') {\n            initialData[field.name] = [];\n          } else if (field.type === 'number') {\n            initialData[field.name] = null;\n          } else {\n            initialData[field.name] = '';\n          }\n        });\n        setFormData(initialData);\n      }\n    }, [data, fields]);\n    const handleChange = e => {\n      const {\n        name,\n        value,\n        type\n      } = e.target;\n      setFormData(prev => {\n        let newValue = value;\n        if (name === 'specijalizacije') {\n          newValue = [value];\n        } else if (type === 'number') {\n          newValue = value === '' ? null : Number(value);\n          if (isNaN(newValue)) {\n            newValue = null;\n          }\n        } else if (type === 'email' && value === '') {\n          newValue = value;\n        }\n        return {\n          ...prev,\n          [name]: newValue\n        };\n      });\n    };\n    const handleSubmit = e => {\n      e.preventDefault();\n      const finalFormData = {\n        ...formData\n      };\n      if (typeof finalFormData.specijalizacije === 'string') {\n        finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\n      }\n      onSave(finalFormData);\n    };\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: onClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: fields.map(field => /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: `${idPrefix}-${field.name}`,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this), field.type === 'select' ? /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: field.name,\n              value: Array.isArray(formData[field.name]) && formData[field.name].length > 0 ? formData[field.name][0] : formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: [\"Select \", field.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 21\n              }, this), field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this) : field.type === 'textarea' ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: field.type || 'text',\n              name: field.name,\n              value: formData[field.name] === null || field.type === 'number' && formData[field.name] === 0 && (data === null || data[field.name] === null || data[field.name] === undefined) || field.name === 'email' && formData[field.name] === 'N/A' ? '' : formData[field.name],\n              onChange: handleChange,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 19\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this);\n  };\n  _s(DataModal, \"JPolC2XS0g7tYnXkmRHL767uIww=\");\n  const Pagination = ({\n    itemsPerPage,\n    totalItems,\n    currentPage,\n    paginate\n  }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center mt-4\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === number ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this);\n  };\n  const renderContent = () => {\n    const addDoctorFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'password',\n      label: 'Password',\n      type: 'password',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }, {\n      name: 'grad',\n      label: 'City',\n      type: 'select',\n      required: true,\n      options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n    }, {\n      name: 'specijalizacije',\n      label: 'Specialty',\n      type: 'select',\n      required: true,\n      options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n    }, {\n      name: 'radnoVrijeme',\n      label: 'Work Hours',\n      type: 'text',\n      required: false\n    }, {\n      name: 'iskustvo',\n      label: 'Experience (years)',\n      type: 'number',\n      required: false\n    }, {\n      name: 'ocjena',\n      label: 'Rating (0.0-5.0)',\n      type: 'number',\n      required: false\n    }];\n    const editDoctorFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }, {\n      name: 'grad',\n      label: 'City',\n      type: 'select',\n      required: true,\n      options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n    }, {\n      name: 'specijalizacije',\n      label: 'Specialty',\n      type: 'select',\n      required: true,\n      options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n    }, {\n      name: 'radnoVrijeme',\n      label: 'Work Hours',\n      type: 'text',\n      required: false\n    }, {\n      name: 'iskustvo',\n      label: 'Experience (years)',\n      type: 'number',\n      required: false\n    }, {\n      name: 'ocjena',\n      label: 'Rating (0.0-5.0)',\n      type: 'number',\n      required: false\n    }];\n    const addPatientFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'password',\n      label: 'Password',\n      type: 'password',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }];\n    const editPatientFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }];\n    switch (activeTab) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Dashboard Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-primary mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Doctors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: doctors.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-success mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Patients\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: patients.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 621,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-warning mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Pending Appointments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: appointments.filter(app => app.status === 'Pending').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Quick Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => openDoctorModal(),\n                children: \"Add New Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-success\",\n                onClick: () => openPatientModal(),\n                children: \"Add New Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-info\",\n                onClick: () => setActiveTab('appointments'),\n                children: \"View Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this);\n      case 'doctors':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Doctors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openDoctorModal(),\n              children: \"Add New Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search doctors...\",\n              value: doctorSearchTerm,\n              onChange: e => setDoctorSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 662,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 663,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Specialty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 664,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"City\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 665,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 666,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Work Hours\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 670,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentDoctors.length > 0 ? currentDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 677,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 678,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.specialty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 679,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.city\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 680,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 681,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.telefon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 682,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.radnoVrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 683,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.ocjena\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 684,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openDoctorModal(doctor),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 686,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteDoctor(doctor.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 687,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 25\n                  }, this)]\n                }, doctor.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"9\",\n                    className: \"text-center\",\n                    children: \"No doctors found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 693,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredDoctors.length,\n            currentPage: doctorsCurrentPage,\n            paginate: setDoctorsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this);\n      case 'patients':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openPatientModal(),\n              children: \"Add New Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search patients...\",\n              value: patientSearchTerm,\n              onChange: e => setPatientSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 725,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 726,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 727,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 728,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 729,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentPatients.length > 0 ? currentPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 736,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 738,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 739,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openPatientModal(patient),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 741,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeletePatient(patient.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 742,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 740,\n                    columnNumber: 25\n                  }, this)]\n                }, patient.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"No patients found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredPatients.length,\n            currentPage: patientsCurrentPage,\n            paginate: setPatientsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 11\n        }, this);\n      case 'appointments':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 770,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Patient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 771,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 772,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 773,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 774,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 775,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 776,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentAppointments.length > 0 ? currentAppointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 783,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.patientName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 784,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.doctorName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 785,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 786,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 787,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select\",\n                      value: appointment.status,\n                      onChange: e => handleUpdateAppointmentStatus(appointment.id, e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Pending\",\n                        children: \"Pending\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 794,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Confirmed\",\n                        children: \"Confirmed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 795,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Completed\",\n                        children: \"Completed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 796,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Cancelled\",\n                        children: \"Cancelled\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 797,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 789,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 788,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => showNotification('Brisanje termina nije implementirano.', 'warning'),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 801,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 800,\n                    columnNumber: 25\n                  }, this)]\n                }, appointment.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"7\",\n                    className: \"text-center\",\n                    children: \"No appointments found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 807,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 806,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: appointments.length,\n            currentPage: appointmentsCurrentPage,\n            paginate: setAppointmentsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a tab to view content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const addDoctorFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Password',\n    type: 'password',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }, {\n    name: 'grad',\n    label: 'City',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specialty',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Work Hours',\n    type: 'text',\n    required: false\n  }, {\n    name: 'iskustvo',\n    label: 'Experience (years)',\n    type: 'number',\n    required: false\n  }, {\n    name: 'ocjena',\n    label: 'Rating (0.0-5.0)',\n    type: 'number',\n    required: false\n  }];\n  const editDoctorFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }, {\n    name: 'grad',\n    label: 'City',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specialty',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Work Hours',\n    type: 'text',\n    required: false\n  }, {\n    name: 'iskustvo',\n    label: 'Experience (years)',\n    type: 'number',\n    required: false\n  }, {\n    name: 'ocjena',\n    label: 'Rating (0.0-5.0)',\n    type: 'number',\n    required: false\n  }];\n  const addPatientFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Password',\n    type: 'password',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }];\n  const editPatientFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }];\n  if (loadingInitial) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje administratorskog panela...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 7\n    }, this);\n  }\n  if (!loadingInitial && !token && isAuthChecked) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-danger\",\n          children: \"Pristup odbijen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead\",\n          children: \"Niste autorizovani za pristup ovoj stranici. Molimo prijavite se kao administrator.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alertType,\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n      style: {\n        zIndex: 1050\n      },\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showConfirmModal,\n      onHide: () => setShowConfirmModal(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: confirmTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: confirmMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: onClose,\n          children: \"Poni\\u0161ti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleConfirmAction,\n          children: \"Potvrdi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\",\n        style: {\n          minHeight: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky pt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'overview' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('overview'),\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 917,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'doctors' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('doctors'),\n                children: \"Doctors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'patients' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('patients'),\n                children: \"Patients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 927,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 926,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'appointments' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('appointments'),\n                children: \"Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 932,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showDoctorModal,\n      onClose: () => setShowDoctorModal(false),\n      data: editingDoctor,\n      onSave: editingDoctor ? handleUpdateDoctor : handleAddDoctor,\n      title: editingDoctor ? 'Edit Doctor' : 'Add New Doctor',\n      idPrefix: \"doctor\",\n      fields: editingDoctor ? editDoctorFields : addDoctorFields\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 945,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showPatientModal,\n      onClose: () => setShowPatientModal(false),\n      data: editingPatient,\n      onSave: editingPatient ? handleUpdatePatient : handleAddPatient,\n      title: editingPatient ? 'Edit Patient' : 'Add New Patient',\n      idPrefix: \"patient\",\n      fields: editingPatient ? editPatientFields : addPatientFields\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 888,\n    columnNumber: 5\n  }, this);\n}\n_s2(AdminDashboard, \"mO0GypFgjK+4lPI7s5EwyGoi7RM=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","Modal","Button","Form","Alert","jsxDEV","_jsxDEV","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","AUTH_API_PREFIX","AdminDashboard","_s2","_s","$RefreshSig$","token","loadingInitial","setLoadingInitial","isAuthChecked","setIsAuthChecked","authHeaders","headers","activeTab","setActiveTab","savedTab","localStorage","getItem","doctors","setDoctors","patients","setPatients","appointments","setAppointments","showDoctorModal","setShowDoctorModal","editingDoctor","setEditingDoctor","showPatientModal","setShowPatientModal","editingPatient","setEditingPatient","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","doctorSearchTerm","setDoctorSearchTerm","patientSearchTerm","setPatientSearchTerm","doctorsCurrentPage","setDoctorsCurrentPage","patientsCurrentPage","setPatientsCurrentPage","appointmentsCurrentPage","setAppointmentsCurrentPage","itemsPerPage","showNotification","message","type","setTimeout","fetchDoctors","response","get","transformedDoctors","data","map","doc","id","doktorID","userId","name","ime","prezime","specialty","Array","isArray","specijalizacije","length","join","city","grad","email","telefon","radnoVrijeme","iskustvo","undefined","ocjena","error","console","fetchPatients","transformedPatients","pat","pacijentID","phone","fetchAppointments","transformedAppointments","app","pregledID","patientName","pacijentIme","doctorName","doktorIme","date","datumPregleda","time","vrijemePregleda","status","log","initializeDashboard","Promise","all","warn","setItem","handleAddDoctor","newDoctorData","registerPayload","password","fullName","roles","post","_error$response","_error$response$data","handleUpdateDoctor","updatedDoctor","doctorUpdatePayload","put","userUpdatePayload","_error$response2","_error$response2$data","showConfirmModal","setShowConfirmModal","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","confirmTitle","setConfirmTitle","showCustomConfirm","action","title","handleConfirmAction","handleDeleteDoctor","doctorToDelete","find","delete","_error$response3","_error$response3$data","openDoctorModal","doctor","filteredDoctors","filter","toLowerCase","includes","indexOfLastDoctor","indexOfFirstDoctor","currentDoctors","slice","totalDoctorPages","Math","ceil","handleAddPatient","newPatient","_error$response4","_error$response4$data","handleUpdatePatient","updatedPatient","_error$response5","_error$response5$data","handleDeletePatient","patientToDelete","_error$response6","_error$response6$data","openPatientModal","patient","filteredPatients","indexOfLastPatient","indexOfFirstPatient","currentPatients","totalPatientPages","handleUpdateAppointmentStatus","newStatus","_error$response7","_error$response7$data","indexOfLastAppointment","indexOfFirstAppointment","currentAppointments","totalAppointmentPages","DataModal","show","onClose","onSave","fields","idPrefix","formData","setFormData","updatedData","initialData","forEach","field","handleChange","e","value","target","prev","newValue","Number","isNaN","handleSubmit","preventDefault","finalFormData","onHide","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Body","Group","className","controlId","Label","label","Select","onChange","required","options","option","Control","as","rows","Footer","variant","onClick","Pagination","totalItems","currentPage","paginate","pageNumbers","i","push","number","renderContent","addDoctorFields","editDoctorFields","addPatientFields","editPatientFields","placeholder","colSpan","appointment","style","minHeight","role","dismissible","zIndex","href","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\n// KLJUČNA PROMJENA: URL-ovi sada moraju biti konzistentni sa Gateway rutama i context-pathovima\r\n// Frontend šalje: http://localhost:8081/api/korisnici-doktori/api/doktori\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori/api`;\r\n// Frontend šalje: http://localhost:8081/api/termini-pregledi/api/pregledi\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi/api`;\r\n// Auth servis nema context-path, Gateway ruta je direktno /auth\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\r\n\r\nfunction AdminDashboard() {\r\n  const { token } = useAuth();\r\n\r\n  // Stanje za praćenje početnog učitavanja panela\r\n  const [loadingInitial, setLoadingInitial] = useState(true);\r\n  // Stanje za praćenje je li AuthContext završio početnu provjeru autentifikacije\r\n  const [isAuthChecked, setIsAuthChecked] = useState(false);\r\n\r\n  const authHeaders = {\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  };\r\n\r\n  // Aktivni tab, sa čuvanjem u lokalnom skladištu\r\n  const [activeTab, setActiveTab] = useState(() => {\r\n    const savedTab = localStorage.getItem('adminActiveTab');\r\n    return savedTab || 'overview';\r\n  });\r\n\r\n  // Stanja za podatke iz API-ja\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  // Stanja za modale i forme\r\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\r\n  const [editingDoctor, setEditingDoctor] = useState(null);\r\n  const [showPatientModal, setShowPatientModal] = useState(false);\r\n  const [editingPatient, setEditingPatient] = useState(null);\r\n\r\n  // Stanja za notifikacije (Alert)\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [alertType, setAlertType] = useState('success');\r\n\r\n  // Stanja za pretragu\r\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\r\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n\r\n  // Stanja za paginaciju\r\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\r\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\r\n  const [appointmentsCurrentPage, setAppointmentsCurrentPage] = useState(1);\r\n  const itemsPerPage = 5; // Broj stavki po stranici\r\n\r\n  // Funkcija za prikaz notifikacija\r\n  const showNotification = (message, type = 'success') => {\r\n    setAlertMessage(message);\r\n    setAlertType(type);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n      setAlertMessage('');\r\n    }, 3000); // Notifikacija nestaje nakon 3 sekunde\r\n  };\r\n\r\n  // Funkcije za dohvat podataka sa backend-a\r\n   const fetchDoctors = async () => {\r\n      try {\r\n        // URL sada postaje: http://localhost:8081/api/korisnici-doktori/api/doktori\r\n        const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/doktori`, authHeaders);\r\n        const transformedDoctors = response.data.map(doc => ({\r\n          id: doc.doktorID,\r\n          userId: doc.userId,\r\n          name: `${doc.ime} ${doc.prezime}`,\r\n          ime: doc.ime,\r\n          prezime: doc.prezime,\r\n          specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                     ? doc.specijalizacije.join(', ')\r\n                     : 'N/A',\r\n          specijalizacije: doc.specijalizacije,\r\n          city: doc.grad || 'N/A',\r\n          grad: doc.grad,\r\n          email: doc.email || 'N/A',\r\n          telefon: doc.telefon || 'N/A',\r\n          radnoVrijeme: doc.radnoVrijeme || 'N/A',\r\n          iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : 'N/A',\r\n          ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 'N/A',\r\n        }));\r\n        setDoctors(transformedDoctors);\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom dohvaćanja doktora:\", error);\r\n        showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\r\n      }\r\n    };\r\n\r\n    const fetchPatients = async () => {\r\n      try {\r\n        // ISPRAVLJENO: URL sada postaje: http://localhost:8081/api/korisnici-doktori/api/pacijenti\r\n        const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti`, authHeaders);\r\n        const transformedPatients = response.data.map(pat => ({\r\n          id: pat.pacijentID,\r\n          userId: pat.userId,\r\n          name: `${pat.ime} ${pat.prezime}`,\r\n          ime: pat.ime,\r\n          prezime: pat.prezime,\r\n          email: pat.email || 'N/A',\r\n          phone: pat.telefon || 'N/A',\r\n          telefon: pat.telefon,\r\n        }));\r\n        setPatients(transformedPatients);\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom dohvaćanja pacijenata:\", error);\r\n        showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\r\n      }\r\n    };\r\n\r\n    const fetchAppointments = async () => {\r\n      try {\r\n        // URL sada postaje: http://localhost:8081/api/termini-pregledi/api/pregledi\r\n        const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/pregledi`, authHeaders);\r\n        const transformedAppointments = response.data.map(app => ({\r\n          id: app.pregledID,\r\n          patientName: app.pacijentIme || 'N/A',\r\n          doctorName: app.doktorIme || 'N/A',\r\n          date: app.datumPregleda,\r\n          time: app.vrijemePregleda,\r\n          status: app.status,\r\n        }));\r\n        setAppointments(transformedAppointments);\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom dohvaćanja termina:\", error);\r\n        showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\r\n      }\r\n    };\r\n\r\n  // Glavni useEffect hook za provjeru autentifikacije i dohvat podataka\r\n  useEffect(() => {\r\n    console.log(\"AdminDashboard useEffect - Trenutni token:\", token);\r\n    console.log(\"AdminDashboard useEffect - isAuthChecked:\", isAuthChecked);\r\n    console.log(\"AdminDashboard useEffect - loadingInitial (prije logike):\", loadingInitial);\r\n\r\n    if (token !== undefined && !isAuthChecked) {\r\n      setIsAuthChecked(true);\r\n      console.log(\"AdminDashboard useEffect - Provjera autentifikacije završena, postavljen isAuthChecked na true.\");\r\n    }\r\n\r\n    const initializeDashboard = async () => {\r\n      if (isAuthChecked) {\r\n        if (token) {\r\n          try {\r\n            await Promise.all([\r\n              fetchDoctors(),\r\n              fetchPatients(),\r\n              fetchAppointments()\r\n            ]);\r\n            console.log(\"AdminDashboard useEffect - Podaci uspješno dohvaćeni.\");\r\n          } catch (error) {\r\n            console.error(\"Greška prilikom inicijalnog dohvaćanja podataka:\", error);\r\n            showNotification(\"Greška prilikom učitavanja početnih podataka.\", \"danger\");\r\n          } finally {\r\n            setLoadingInitial(false);\r\n            console.log(\"AdminDashboard useEffect - Postavljen loadingInitial na false nakon dohvaćanja podataka/greške.\");\r\n          }\r\n        } else {\r\n          setLoadingInitial(false);\r\n          console.warn(\"Provjera autentifikacije završena, ali token nije dostupan. Korisnik nije ulogovan/autorizovan.\");\r\n        }\r\n      } else {\r\n        console.log(\"AdminDashboard useEffect - Provjera autentifikacije još nije završena, loadingInitial ostaje true.\");\r\n      }\r\n    };\r\n\r\n    initializeDashboard();\r\n  }, [token, isAuthChecked]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('adminActiveTab', activeTab);\r\n  }, [activeTab]);\r\n\r\n  const handleAddDoctor = async (newDoctorData) => {\r\n    try {\r\n      const registerPayload = {\r\n        email: newDoctorData.email,\r\n        password: newDoctorData.password,\r\n        fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\r\n        telefon: newDoctorData.telefon,\r\n        roles: [\"ROLE_DOKTOR\"],\r\n        grad: newDoctorData.grad,\r\n        specijalizacije: newDoctorData.specijalizacije,\r\n      };\r\n\r\n      await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n      fetchDoctors();\r\n      setShowDoctorModal(false);\r\n      showNotification('Novi doktor uspješno registrovan i dodan!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja doktora (registracije):\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja doktora.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleUpdateDoctor = async (updatedDoctor) => {\r\n    try {\r\n      const doctorUpdatePayload = {\r\n        ime: updatedDoctor.ime,\r\n        prezime: updatedDoctor.prezime,\r\n        email: updatedDoctor.email,\r\n        telefon: updatedDoctor.telefon,\r\n        grad: updatedDoctor.grad,\r\n        specijalizacije: updatedDoctor.specijalizacije,\r\n        radnoVrijeme: updatedDoctor.radnoVrijeme,\r\n        iskustvo: updatedDoctor.iskustvo,\r\n        ocjena: updatedDoctor.ocjena,\r\n      };\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\r\n\r\n      const userUpdatePayload = {\r\n        email: updatedDoctor.email,\r\n        fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\r\n        telefon: updatedDoctor.telefon,\r\n      };\r\n      if (updatedDoctor.userId) {\r\n          await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\r\n      } else {\r\n          console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n      }\r\n\r\n      fetchDoctors();\r\n      setShowDoctorModal(false);\r\n      setEditingDoctor(null);\r\n      showNotification('Doktor uspješno ažuriran!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja doktora:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja doktora.', 'danger');\r\n    }\r\n  };\r\n\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [confirmAction, setConfirmAction] = useState(() => () => {});\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [confirmTitle, setConfirmTitle] = useState(\"Potvrda\");\r\n\r\n  const showCustomConfirm = (message, action, title = \"Potvrda\") => {\r\n    setConfirmMessage(message);\r\n    setConfirmAction(() => action);\r\n    setConfirmTitle(title);\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const handleConfirmAction = () => {\r\n    confirmAction();\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const handleDeleteDoctor = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.',\r\n      async () => {\r\n        try {\r\n          const doctorToDelete = doctors.find(doc => doc.id === id);\r\n          if (!doctorToDelete || !doctorToDelete.userId) {\r\n            showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\r\n            return;\r\n          }\r\n\r\n          await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/doktori/${id}`, authHeaders);\r\n          await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\r\n\r\n          fetchDoctors();\r\n          showNotification('Doktor uspješno obrisan!', 'danger');\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja doktora:\", error);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja doktora.', 'danger');\r\n        }\r\n      },\r\n      \"Potvrdi brisanje doktora\"\r\n    );\r\n  };\r\n\r\n  const openDoctorModal = (doctor = null) => {\r\n    setEditingDoctor(doctor);\r\n    setShowDoctorModal(true);\r\n  };\r\n\r\n  const filteredDoctors = doctors.filter(doctor =>\r\n    doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n    doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n    doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n    (doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n    (doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n    (doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\r\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\r\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\r\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\r\n\r\n  const handleAddPatient = async (newPatient) => {\r\n    try {\r\n      const registerPayload = {\r\n        email: newPatient.email,\r\n        password: newPatient.password,\r\n        fullName: `${newPatient.ime} ${newPatient.prezime}`,\r\n        telefon: newPatient.telefon,\r\n        roles: [\"ROLE_PATIENT\"],\r\n        grad: null,\r\n        specijalizacije: null,\r\n      };\r\n      await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n      fetchPatients();\r\n      setShowPatientModal(false);\r\n      showNotification('Novi pacijent uspješno registrovan i dodan!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja pacijenta (registracije):\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja pacijenta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleUpdatePatient = async (updatedPatient) => {\r\n    try {\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti/${updatedPatient.id}`, updatedPatient, authHeaders);\r\n\r\n      const userUpdatePayload = {\r\n        email: updatedPatient.email,\r\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      if (updatedPatient.userId) {\r\n          await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\r\n      } else {\r\n          console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n      }\r\n\r\n      fetchPatients();\r\n      setShowPatientModal(false);\r\n      setEditingPatient(null);\r\n      showNotification('Pacijent uspješno ažuriran!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja pacijenta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleDeletePatient = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.',\r\n      async () => {\r\n        try {\r\n          const patientToDelete = patients.find(pat => pat.id === id);\r\n          if (!patientToDelete || !patientToDelete.userId) {\r\n            showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\r\n            return;\r\n          }\r\n\r\n          await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti/${id}`, authHeaders);\r\n          await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\r\n\r\n          fetchPatients();\r\n          showNotification('Pacijent uspješno obrisan!', 'danger');\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja pacijenta:\", error);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja pacijenta.', 'danger');\r\n        }\r\n      },\r\n      \"Potvrdi brisanje pacijenta\"\r\n    );\r\n  };\r\n\r\n  const openPatientModal = (patient = null) => {\r\n    setEditingPatient(patient);\r\n    setShowPatientModal(true);\r\n  };\r\n\r\n  const filteredPatients = patients.filter(patient =>\r\n    patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\r\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\r\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\r\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\r\n\r\n  const handleUpdateAppointmentStatus = async (id, newStatus) => {\r\n      try {\r\n        // URL sada postaje: http://localhost:8081/api/termini-pregledi/api/pregledi/ID/status\r\n        await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/pregledi/${id}/status`, { status: newStatus }, authHeaders);\r\n        fetchAppointments();\r\n        showNotification(`Status termina ažuriran na ${newStatus}!`, 'info');\r\n      } catch (error) {\r\n        console.error(\"Greška prilikom ažuriranja statusa termina:\", error);\r\n        showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja statusa termina.', 'danger');\r\n      }\r\n    };\r\n\r\n  const indexOfLastAppointment = appointmentsCurrentPage * itemsPerPage;\r\n  const indexOfFirstAppointment = indexOfLastAppointment - itemsPerPage;\r\n  const currentAppointments = appointments.slice(indexOfFirstAppointment, indexOfLastAppointment);\r\n  const totalAppointmentPages = Math.ceil(appointments.length / itemsPerPage);\r\n\r\n  const DataModal = ({ show, onClose, data, onSave, fields, title, idPrefix }) => {\r\n    const [formData, setFormData] = useState(data || {});\r\n\r\n    useEffect(() => {\r\n      if (data) {\r\n        const updatedData = { ...data };\r\n        if (updatedData.radnoVrijeme === 'N/A') {\r\n          updatedData.radnoVrijeme = null;\r\n        }\r\n        if (updatedData.iskustvo === 0 && (data.iskustvo === null || data.iskustvo === undefined)) {\r\n            updatedData.iskustvo = null;\r\n        }\r\n        if (updatedData.ocjena === 0.0 && (data.ocjena === null || data.ocjena === undefined)) {\r\n            updatedData.ocjena = null;\r\n        }\r\n        if (updatedData.email === 'N/A' || updatedData.email === null) {\r\n            updatedData.email = '';\r\n        }\r\n        if (!Array.isArray(updatedData.specijalizacije) || updatedData.specijalizacije.length === 0) {\r\n          updatedData.specijalizacije = [];\r\n        }\r\n\r\n        setFormData(updatedData);\r\n      } else {\r\n        const initialData = {};\r\n        fields.forEach(field => {\r\n          if (field.name === 'specijalizacije') {\r\n            initialData[field.name] = [];\r\n          } else if (field.type === 'number') {\r\n            initialData[field.name] = null;\r\n          } else {\r\n            initialData[field.name] = '';\r\n          }\r\n        });\r\n        setFormData(initialData);\r\n      }\r\n    }, [data, fields]);\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value, type } = e.target;\r\n\r\n      setFormData(prev => {\r\n        let newValue = value;\r\n\r\n        if (name === 'specijalizacije') {\r\n          newValue = [value];\r\n        } else if (type === 'number') {\r\n          newValue = value === '' ? null : Number(value);\r\n          if (isNaN(newValue)) {\r\n              newValue = null;\r\n          }\r\n        } else if (type === 'email' && value === '') {\r\n            newValue = value;\r\n        }\r\n\r\n        return { ...prev, [name]: newValue };\r\n      });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const finalFormData = { ...formData };\r\n      if (typeof finalFormData.specijalizacije === 'string') {\r\n          finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\r\n      }\r\n      onSave(finalFormData);\r\n    };\r\n\r\n    return (\r\n      <Modal show={show} onHide={onClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body>\r\n            {fields.map(field => (\r\n              <Form.Group className=\"mb-3\" controlId={`${idPrefix}-${field.name}`} key={field.name}>\r\n                <Form.Label>{field.label}</Form.Label>\r\n                {field.type === 'select' ? (\r\n                  <Form.Select\r\n                    name={field.name}\r\n                    value={Array.isArray(formData[field.name]) && formData[field.name].length > 0\r\n                             ? formData[field.name][0]\r\n                             : formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  >\r\n                    <option value=\"\">Select {field.label}</option>\r\n                    {field.options.map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                ) : field.type === 'textarea' ? (\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    name={field.name}\r\n                    value={formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  />\r\n                ) : (\r\n                  <Form.Control\r\n                    type={field.type || 'text'}\r\n                    name={field.name}\r\n                    value={\r\n                      formData[field.name] === null ||\r\n                      (field.type === 'number' && formData[field.name] === 0 && (data === null || data[field.name] === null || data[field.name] === undefined)) ||\r\n                      (field.name === 'email' && formData[field.name] === 'N/A')\r\n                      ? ''\r\n                      : formData[field.name]\r\n                    }\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  />\r\n                )}\r\n              </Form.Group>\r\n            ))}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination justify-content-center mt-4\">\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n              <button onClick={() => paginate(number)} className=\"page-link\">\r\n                {number}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const renderContent = () => {\r\n    const addDoctorFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n      { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n    const editDoctorFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n      { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n    const addPatientFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n    const editPatientFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n    switch (activeTab) {\r\n      case 'overview':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Dashboard Overview</h4>\r\n            <div className=\"row g-4\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-primary mb-3\">\r\n                  <div className=\"card-header\">Total Doctors</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{doctors.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-success mb-3\">\r\n                  <div className=\"card-header\">Total Patients</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{patients.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-warning mb-3\">\r\n                  <div className=\"card-header\">Pending Appointments</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{appointments.filter(app => app.status === 'Pending').length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h5>Quick Actions</h5>\r\n              <div className=\"d-flex gap-2\">\r\n                <button className=\"btn btn-outline-primary\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n                <button className=\"btn btn-outline-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n                <button className=\"btn btn-outline-info\" onClick={() => setActiveTab('appointments')}>View Appointments</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'doctors':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Doctors</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search doctors...\"\r\n                value={doctorSearchTerm}\r\n                onChange={(e) => setDoctorSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Specialty</th>\r\n                    <th>City</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Work Hours</th>\r\n                    <th>Rating</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentDoctors.length > 0 ? (\r\n                    currentDoctors.map(doctor => (\r\n                      <tr key={doctor.id}>\r\n                        <td>{doctor.id}</td>\r\n                        <td>{doctor.name}</td>\r\n                        <td>{doctor.specialty}</td>\r\n                        <td>{doctor.city}</td>\r\n                        <td>{doctor.email}</td>\r\n                        <td>{doctor.telefon}</td>\r\n                        <td>{doctor.radnoVrijeme}</td>\r\n                        <td>{doctor.ocjena}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openDoctorModal(doctor)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteDoctor(doctor.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"9\" className=\"text-center\">No doctors found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredDoctors.length}\r\n              currentPage={doctorsCurrentPage}\r\n              paginate={setDoctorsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'patients':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Patients</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search patients...\"\r\n                value={patientSearchTerm}\r\n                onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentPatients.length > 0 ? (\r\n                    currentPatients.map(patient => (\r\n                      <tr key={patient.id}>\r\n                        <td>{patient.id}</td>\r\n                        <td>{patient.name}</td>\r\n                        <td>{patient.email}</td>\r\n                        <td>{patient.phone}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openPatientModal(patient)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeletePatient(patient.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"text-center\">No patients found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredPatients.length}\r\n              currentPage={patientsCurrentPage}\r\n              paginate={setPatientsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'appointments':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Appointments</h4>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Patient</th>\r\n                    <th>Doctor</th>\r\n                    <th>Date</th>\r\n                    <th>Time</th>\r\n                    <th>Status</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentAppointments.length > 0 ? (\r\n                    currentAppointments.map(appointment => (\r\n                      <tr key={appointment.id}>\r\n                        <td>{appointment.id}</td>\r\n                        <td>{appointment.patientName}</td>\r\n                        <td>{appointment.doctorName}</td>\r\n                        <td>{appointment.date}</td>\r\n                        <td>{appointment.time}</td>\r\n                        <td>\r\n                          <select\r\n                            className=\"form-select\"\r\n                            value={appointment.status}\r\n                            onChange={(e) => handleUpdateAppointmentStatus(appointment.id, e.target.value)}\r\n                          >\r\n                            <option value=\"Pending\">Pending</option>\r\n                            <option value=\"Confirmed\">Confirmed</option>\r\n                            <option value=\"Completed\">Completed</option>\r\n                            <option value=\"Cancelled\">Cancelled</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => showNotification('Brisanje termina nije implementirano.', 'warning')}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"7\" className=\"text-center\">No appointments found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={appointments.length}\r\n              currentPage={appointmentsCurrentPage}\r\n              paginate={setAppointmentsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return <p>Select a tab to view content.</p>;\r\n    }\r\n  };\r\n\r\n  const addDoctorFields = [\r\n    { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n    { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n    { name: 'email', label: 'Email', type: 'email', required: true },\r\n    { name: 'password', label: 'Password', type: 'password', required: true },\r\n    { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n    { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n    { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n    { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n    { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n  ];\r\n\r\n    const editDoctorFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n      { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n  const addPatientFields = [\r\n    { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n    { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n    { name: 'email', label: 'Email', type: 'email', required: true },\r\n    { name: 'password', label: 'Password', type: 'password', required: true },\r\n    { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n  ];\r\n\r\n  const editPatientFields = [\r\n    { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n    { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n    { name: 'email', label: 'Email', type: 'email', required: true },\r\n    { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n  ];\r\n\r\n  if (loadingInitial) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Učitavanje administratorskog panela...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadingInitial && !token && isAuthChecked) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-danger\">Pristup odbijen</h2>\r\n          <p className=\"lead\">Niste autorizovani za pristup ovoj stranici. Molimo prijavite se kao administrator.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {showAlert && (\r\n        <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      <Modal show={showConfirmModal} onHide={() => setShowConfirmModal(false)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{confirmTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {confirmMessage}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={onClose}>\r\n            Poništi\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleConfirmAction}>\r\n            Potvrdi\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <div className=\"row\">\r\n        <nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" style={{ minHeight: '100vh' }}>\r\n          <div className=\"position-sticky pt-3\">\r\n            <ul className=\"nav flex-column\">\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'overview' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('overview')}>\r\n                  Overview\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'doctors' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('doctors')}>\r\n                  Doctors\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'patients' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('patients')}>\r\n                  Patients\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'appointments' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('appointments')}>\r\n                  Appointments\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\">\r\n          {renderContent()}\r\n        </main>\r\n      </div>\r\n\r\n      <DataModal\r\n        show={showDoctorModal}\r\n        onClose={() => setShowDoctorModal(false)}\r\n        data={editingDoctor}\r\n        onSave={editingDoctor ? handleUpdateDoctor : handleAddDoctor}\r\n        title={editingDoctor ? 'Edit Doctor' : 'Add New Doctor'}\r\n        idPrefix=\"doctor\"\r\n        fields={editingDoctor ? editDoctorFields : addDoctorFields}\r\n      />\r\n\r\n      <DataModal\r\n        show={showPatientModal}\r\n        onClose={() => setShowPatientModal(false)}\r\n        data={editingPatient}\r\n        onSave={editingPatient ? handleUpdatePatient : handleAddPatient}\r\n        title={editingPatient ? 'Edit Patient' : 'Add New Patient'}\r\n        idPrefix=\"patient\"\r\n        fields={editingPatient ? editPatientFields : addPatientFields}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}