{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs } from 'react-bootstrap';\n// Nema potrebe za react-datepickerom ako vaša originalna verzija ne koristi.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\n\n// Definisanje API prefiksa za svaki mikroservis - KORISTIMO OVE PREFIKSE!\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`; // Pretpostavljena putanja za autentifikaciju, ako se koristi direktno\n\nfunction PatientDashboard() {\n  _s();\n  var _doctors$find3, _doctors$find4;\n  // AŽURIRANO: user objekat sada sadrži authId (Long), id (email), patientId (Integer)\n  const {\n    token,\n    user\n  } = useAuth();\n  console.log(\"Trenutni user objekat iz useAuth (PatientDashboard):\", user);\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [allAppointments, setAllAppointments] = useState([]); // Svi pregledi, bez obzira na status\n  const [medicalHistory, setMedicalHistory] = useState([]);\n  const [patientProfile, setPatientProfile] = useState({});\n  const [doctors, setDoctors] = useState([]); // Ova lista doktora također treba sadržavati userId\n  const [allDoctorAvailableTerms, setAllDoctorAvailableTerms] = useState([]);\n  const [bills, setBills] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState({\n    recipientId: '',\n    subject: '',\n    content: ''\n  });\n  const [replyMessage, setReplyMessage] = useState({\n    messageId: '',\n    content: ''\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [newAppointment, setNewAppointment] = useState({\n    doctorId: '',\n    appointmentDate: '',\n    appointmentTime: '',\n    terminId: '',\n    reason: ''\n  });\n  const [editingAppointment, setEditingAppointment] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Stanje za modal za ocjenjivanje\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  // Dodano: Čuvamo ID pregleda koji se ocjenjuje\n  const [selectedAppointmentForRating, setSelectedAppointmentForRating] = useState(null);\n  const [selectedDoctorForRating, setSelectedDoctorForRating] = useState(null);\n  const [ratingData, setRatingData] = useState({\n    ocjena: 5,\n    komentar: ''\n  }); // Podrazumijevana ocjena 5\n\n  // NOVO: Stanje za modal detalja računa\n  const [showBillDetailsModal, setShowBillDetailsModal] = useState(false);\n  const [selectedBillDetails, setSelectedBillDetails] = useState(null);\n\n  // --- API Pozivi ---\n\n  // AŽURIRANA FUNKCIJA: Sada dohvaća SVE preglede za pacijenta\n  const fetchPatientAppointments = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje pregleda.\");\n      return;\n    }\n    try {\n      // Predpostavljamo da ste dodali /api/pregledi/pacijent/{pacijentId} na backendu\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedAppointments = response.data.map(app => ({\n        id: app.pregledID,\n        doktorID: app.doktorID,\n        pacijentID: app.pacijentID,\n        datumPregleda: app.datumPregleda,\n        vrijemePregleda: app.vrijemePregleda,\n        komentarPacijenta: app.komentarPacijenta,\n        status: app.status,\n        terminID: app.terminID,\n        doktorIme: app.doktorIme,\n        // Određuje da li je pregled već ocijenjen na osnovu ocjenaDoktora iz backend DTO-a\n        rated: app.ocjenaDoktora !== null && app.ocjenaDoktora > 0\n      }));\n      setAllAppointments(transformedAppointments); // Spremamo sve preglede\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response;\n      console.error('Greška pri dohvaćanju pacijentovih pregleda (svi):', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setAlertMessage('Nije uspjelo dohvaćanje pregleda.');\n      setAlertType('danger');\n      setShowAlert(true);\n      setAllAppointments([]); // Osiguraj prazan niz u slučaju greške\n    }\n  };\n  const fetchMedicalHistory = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje medicinske historije.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedHistory = response.data.map(record => ({\n        id: record.zapisID,\n        patientId: record.pacijentID,\n        doctorId: record.doktorID,\n        doctorName: record.doktorIme,\n        date: record.datumZapisivanja,\n        diagnosis: record.dijagnoza,\n        treatment: record.lijecenje,\n        notes: record.napomene\n      }));\n      setMedicalHistory(transformedHistory);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response2;\n      console.error('Greška pri dohvaćanju medicinske historije:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      setAlertMessage('Nije uspjelo dohvaćanje medicinske historije.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchPatientProfile = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje profila pacijenta.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, authHeaders);\n      setPatientProfile({\n        id: response.data.pacijentID,\n        firstName: response.data.ime,\n        lastName: response.data.prezime,\n        email: response.data.email,\n        phone: response.data.telefon,\n        userId: Number(response.data.userId)\n      });\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response3;\n      console.error('Greška pri dohvaćanju profila pacijenta:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      setAlertMessage('Nije uspjelo dohvaćanje podataka profila.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: Number(doc.userId),\n        firstName: doc.ime,\n        lastName: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\n        email: doc.email,\n        phone: doc.telefon,\n        ocjena: doc.ocjena\n      }));\n      setDoctors(transformedDoctors);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response4;\n      console.error('Greška pri dohvaćanju doktora:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      setAlertMessage('Nije uspjelo dohvaćanje liste doktora.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctorAllAvailableTerms = async doktorId => {\n    if (!doktorId) {\n      setAllDoctorAvailableTerms([]);\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/slobodni/${doktorId}`, authHeaders);\n      const termsData = Array.isArray(response.data) ? response.data : [];\n      const available = termsData.map(term => ({\n        terminID: term.terminID,\n        datum: term.datum,\n        vrijeme: term.vrijeme,\n        display: `${term.datum} ${term.vrijeme.substring(0, 5)}`\n      })).sort((a, b) => {\n        const dateTimeA = `${a.datum}T${a.vrijeme}`;\n        const dateTimeB = `${b.datum}T${b.vrijeme}`;\n        return new Date(dateTimeA) - new Date(dateTimeB);\n      });\n      setAllDoctorAvailableTerms(available);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response5;\n      console.error('Greška pri dohvaćanju dostupnosti doktora:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      setAlertMessage('Nije uspjelo dohvaćanje dostupnosti doktora.');\n      setAlertType('danger');\n      setShowAlert(true);\n      setAllDoctorAvailableTerms([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchBills = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje računa.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedBills = response.data.map(bill => ({\n        id: bill.racunID,\n        billDate: bill.datumIzdavanja,\n        amount: bill.iznos,\n        status: bill.status,\n        dueDate: bill.datumDospijeca,\n        opis: bill.opis,\n        doktorIme: bill.doktorIme\n      }));\n      setBills(transformedBills);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response6;\n      console.error('Greška pri dohvaćanju računa:', ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      setAlertMessage('Nije uspjelo dohvaćanje informacija o naplati.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMessages = async () => {\n    if (!user || !user.userId) {\n      console.warn(\"ID korisnika nije dostupan za dohvaćanje poruka.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=PACIJENT`, authHeaders);\n      const transformedMessages = response.data.map(msg => ({\n        id: msg.porukaID,\n        senderId: Number(msg.senderId),\n        senderType: msg.senderType,\n        senderIme: msg.senderIme,\n        receiverId: Number(msg.receiverId),\n        receiverType: msg.receiverType,\n        receiverIme: msg.receiverIme,\n        subject: msg.subject,\n        content: msg.content,\n        timestamp: msg.timestamp,\n        replies: msg.replies || []\n      }));\n      setMessages(transformedMessages);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response7;\n      console.error('Greška pri dohvaćanju poruka:', ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      setAlertMessage('Nije uspjelo dohvaćanje poruka.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- useEffect Hookovi ---\n  useEffect(() => {\n    const loadAllData = async () => {\n      if (token && user) {\n        setLoading(true);\n        await Promise.all([fetchPatientAppointments(), fetchMedicalHistory(), fetchPatientProfile(), fetchDoctors(), fetchBills(), fetchMessages()]);\n        setLoading(false);\n      } else if (!token || user && !user.pacijentId && !user.doktorId) {\n        setLoading(false);\n        if (!token) {\n          console.warn(\"Token nije dostupan. Korisnik nije prijavljen.\");\n        } else {\n          console.warn(\"User objekat je dostupan, ali patientId ni doktorId nisu. Korisnik možda nije ni pacijent ni doktor.\");\n        }\n      }\n    };\n    loadAllData();\n  }, [token, user]);\n\n  // --- Zakazivanje/Otkazivanje pregleda ---\n\n  const openAppointmentModal = (appointment = null, doctorIdFromSearch = null) => {\n    if (appointment) {\n      setEditingAppointment(appointment);\n      setNewAppointment({\n        doctorId: appointment.doktorID,\n        appointmentDate: appointment.datumPregleda,\n        appointmentTime: appointment.vrijemePregleda,\n        terminId: appointment.terminID,\n        reason: appointment.komentarPacijenta\n      });\n      fetchDoctorAllAvailableTerms(appointment.doktorID);\n    } else {\n      setEditingAppointment(null);\n      setNewAppointment({\n        doctorId: doctorIdFromSearch || '',\n        appointmentDate: '',\n        appointmentTime: '',\n        terminId: '',\n        reason: ''\n      });\n      setAllDoctorAvailableTerms([]);\n      if (doctorIdFromSearch) {\n        fetchDoctorAllAvailableTerms(doctorIdFromSearch);\n      }\n    }\n    setShowAppointmentModal(true);\n  };\n  const closeAppointmentModal = () => {\n    setShowAppointmentModal(false);\n    setEditingAppointment(null);\n    setNewAppointment({\n      doctorId: '',\n      appointmentDate: '',\n      appointmentTime: '',\n      terminId: '',\n      reason: ''\n    });\n    setAllDoctorAvailableTerms([]);\n  };\n  const handleNewAppointmentChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let updatedAppointment = {\n      ...newAppointment,\n      [name]: value\n    };\n    if (name === 'doctorId') {\n      updatedAppointment.appointmentDate = '';\n      updatedAppointment.appointmentTime = '';\n      updatedAppointment.terminId = '';\n      if (value) {\n        await fetchDoctorAllAvailableTerms(value);\n      } else {\n        setAllDoctorAvailableTerms([]);\n      }\n    } else if (name === 'terminId') {\n      const selectedTerm = allDoctorAvailableTerms.find(term => term.terminID === parseInt(value));\n      if (selectedTerm) {\n        updatedAppointment.terminId = selectedTerm.terminID;\n        updatedAppointment.appointmentDate = selectedTerm.datum;\n        updatedAppointment.appointmentTime = selectedTerm.vrijeme;\n      } else {\n        updatedAppointment.terminId = '';\n        updatedAppointment.appointmentTime = '';\n        updatedAppointment.appointmentDate = '';\n      }\n    }\n    setNewAppointment(updatedAppointment);\n  };\n  const handleScheduleAppointment = async () => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće zakazati pregled.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason) {\n      setAlertMessage('Molimo odaberite doktora, dostupan termin i navedite razlog.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    const appointmentData = {\n      pacijentID: user.pacijentId,\n      doktorID: parseInt(newAppointment.doctorId),\n      terminID: newAppointment.terminId,\n      datumPregleda: newAppointment.appointmentDate,\n      vrijemePregleda: newAppointment.appointmentTime,\n      komentarPacijenta: newAppointment.reason,\n      status: editingAppointment ? editingAppointment.status : 'zakazan'\n    };\n    try {\n      await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\n      setAlertMessage('Zahtjev za zakazivanje pregleda je uspješno prihvaćen. Dobit ćete obavijest kada bude obrađen.');\n      setAlertType('info');\n      setShowAlert(true);\n      closeAppointmentModal();\n      fetchPatientAppointments(); // Osvježi sve preglede\n    } catch (error) {\n      var _error$response8, _error$response9, _error$response9$data;\n      console.error('Greška pri zakazivanju/ažuriranju pregleda:', ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n      let errorMessage = 'Nije uspjelo zakazivanje/ažuriranje pregleda. Molimo pokušajte ponovo.';\n      if ((_error$response9 = error.response) !== null && _error$response9 !== void 0 && (_error$response9$data = _error$response9.data) !== null && _error$response9$data !== void 0 && _error$response9$data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      setAlertMessage(errorMessage);\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleCancelAppointment = async appointmentId => {\n    if (window.confirm('Da li ste sigurni da želite otkazati ovaj pregled?')) {\n      if (!user || !user.pacijentId) {\n        setAlertMessage('ID pacijenta nije dostupan za otkazivanje. Molimo pokušajte ponovo.');\n        setAlertType('danger');\n        setShowAlert(true);\n        return;\n      }\n      try {\n        const existingApp = allAppointments.find(app => app.id === appointmentId);\n        if (!existingApp) {\n          setAlertMessage(\"Pregled nije pronađen za otkazivanje.\");\n          setAlertType('danger');\n          setShowAlert(true);\n          return;\n        }\n        const cancelPayload = {\n          pregledID: existingApp.id,\n          pacijentID: user.pacijentId,\n          doktorID: existingApp.doktorID,\n          terminID: existingApp.terminID,\n          datumPregleda: existingApp.datumPregleda,\n          vrijemePregleda: existingApp.vrijemePregleda,\n          komentarPacijenta: existingApp.komentarPacijenta,\n          status: 'otkazan'\n        };\n        await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}`, cancelPayload, authHeaders);\n        setAlertMessage('Pregled uspješno otkazan!');\n        setAlertType('success');\n        setShowAlert(true);\n        fetchPatientAppointments(); // Osvježi sve preglede\n      } catch (error) {\n        var _error$response0, _error$response1, _error$response1$data;\n        console.error('Greška pri otkazivanju pregleda:', ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error.message);\n        setAlertMessage('Nije uspjelo otkazivanje pregleda. Molimo pokušajte ponovo. ' + (((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || error.message));\n        setAlertType('danger');\n        setShowAlert(true);\n      }\n    }\n  };\n\n  // --- Ažuriranje profila ---\n  const handleProfileChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPatientProfile(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSaveProfile = async () => {\n    if (!user || !user.pacijentId || !user.userId) {\n      setAlertMessage('ID pacijenta ili ID korisnika nije dostupan. Nije moguće sačuvati profil.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const patientDetailsPayload = {\n        pacijentID: user.pacijentId,\n        ime: patientProfile.firstName,\n        prezime: patientProfile.lastName,\n        email: patientProfile.email,\n        telefon: patientProfile.phone,\n        userId: user.userId\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, patientDetailsPayload, authHeaders);\n      const authProfilePayload = {\n        email: patientProfile.email,\n        fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\n        telefon: patientProfile.phone\n      };\n      await axios.put(`${AUTH_API_PREFIX}/users/${user.userId}`, authProfilePayload, authHeaders);\n      setAlertMessage('Profil uspješno ažuriran!');\n      setAlertType('success');\n      setShowAlert(true);\n      fetchPatientProfile();\n    } catch (error) {\n      var _error$response10, _error$response11, _error$response11$dat;\n      console.error('Greška pri ažuriranju profila:', ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message);\n      setAlertMessage('Nije uspjelo ažuriranje profila. Molimo pokušajte ponovo. ' + (((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : (_error$response11$dat = _error$response11.data) === null || _error$response11$dat === void 0 ? void 0 : _error$response11$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- Sigurno slanje poruka ---\n  const handleNewMessageChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMessage(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleReplyMessageChange = e => {\n    setReplyMessage(prev => ({\n      ...prev,\n      content: e.target.value\n    }));\n  };\n  const handleSendMessage = async () => {\n    if (!user || !user.userId) {\n      setAlertMessage('Vaš ID korisnika nije dostupan. Nije moguće poslati poruku.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\n      setAlertMessage('Molimo popunite sva polja poruke.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const messageData = {\n        senderId: user.userId,\n        senderType: 'PACIJENT',\n        receiverId: Number(newMessage.recipientId),\n        receiverType: 'DOKTOR',\n        subject: newMessage.subject,\n        content: newMessage.content\n      };\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\n      setAlertMessage('Poruka uspješno poslana!');\n      setAlertType('success');\n      setShowAlert(true);\n      setNewMessage({\n        recipientId: '',\n        subject: '',\n        content: ''\n      });\n      fetchMessages();\n    } catch (error) {\n      var _error$response12, _error$response13, _error$response13$dat;\n      console.error('Greška pri slanju poruke:', ((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : _error$response12.data) || error.message);\n      setAlertMessage('Nije uspjelo slanje poruke. ' + (((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : (_error$response13$dat = _error$response13.data) === null || _error$response13$dat === void 0 ? void 0 : _error$response13$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleReply = async messageId => {\n    if (!user || !user.userId) {\n      setAlertMessage('Vaš ID korisnika nije dostupan. Nije moguće odgovoriti.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!replyMessage.content) {\n      setAlertMessage('Sadržaj odgovora ne može biti prazan.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\n        senderId: user.userId,\n        senderIme: user.fullName,\n        senderType: 'PACIJENT',\n        content: replyMessage.content,\n        timestamp: new Date().toISOString()\n      }, authHeaders);\n      setAlertMessage('Odgovor uspješno poslan!', 'success');\n      setAlertType('success');\n      setShowAlert(true);\n      setReplyMessage({\n        messageId: '',\n        content: ''\n      });\n      fetchMessages();\n      setSelectedMessage(prev => {\n        if (!prev) return null;\n        return {\n          ...prev,\n          replies: [...(prev.replies || []), {\n            senderId: user.userId,\n            senderIme: user.fullName,\n            senderType: 'PACIJENT',\n            content: replyMessage.content,\n            timestamp: new Date().toISOString()\n          }]\n        };\n      });\n    } catch (error) {\n      var _error$response14, _error$response15, _error$response15$dat;\n      console.error('Greška pri slanju odgovora:', ((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : _error$response14.data) || error.message);\n      setAlertMessage('Nije uspjelo slanje odgovora. ' + (((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : (_error$response15$dat = _error$response15.data) === null || _error$response15$dat === void 0 ? void 0 : _error$response15$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleViewMessage = message => {\n    setSelectedMessage(message);\n  };\n  const closeMessageModal = () => {\n    setSelectedMessage(null);\n    setReplyMessage({\n      messageId: '',\n      content: ''\n    });\n  };\n\n  // --- Funkcije ocjenjivanja ---\n  // Ažurirano: Sada prima i appointmentId\n  const openRatingModal = (doktorID, doktorIme, appointmentId) => {\n    setSelectedDoctorForRating({\n      id: doktorID,\n      name: doktorIme\n    });\n    setSelectedAppointmentForRating(appointmentId); // Čuvamo ID pregleda\n    setRatingData({\n      ocjena: 5,\n      komentar: ''\n    });\n    setShowRatingModal(true);\n  };\n  const closeRatingModal = () => {\n    setShowRatingModal(false);\n    setSelectedDoctorForRating(null);\n    setSelectedAppointmentForRating(null); // Resetujemo ID pregleda\n    setRatingData({\n      ocjena: 5,\n      komentar: ''\n    });\n  };\n  const handleRatingChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRatingData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmitRating = async () => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće poslati ocjenu.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!selectedDoctorForRating || ratingData.ocjena === null) {\n      setAlertMessage('Molimo odaberite ocjenu.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    if (!selectedAppointmentForRating) {\n      // Provjera da li je pregled ID prisutan\n      setAlertMessage('Nije moguće poslati ocjenu bez ID-a pregleda.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const ratingPayload = {\n        pacijentID: user.pacijentId,\n        doktorID: selectedDoctorForRating.id,\n        ocjena: parseFloat(ratingData.ocjena),\n        komentar: ratingData.komentar,\n        pregledID: selectedAppointmentForRating // <-- DODANO: Slanje pregledID-a\n      };\n      await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/ocjene`, ratingPayload, authHeaders);\n      setAlertMessage(`Ocjena uspješno poslana za doktora ${selectedDoctorForRating.name}! Prosječna ocjena će biti ažurirana.`);\n      setAlertType('success');\n      setShowAlert(true);\n      closeRatingModal();\n\n      // Važno: Osvježi SVE preglede da bi se povukla nova vrijednost ocjeneDoktora iz backend DTO-a\n      // i ispravno ažurirao 'rated' status na frontendu.\n      fetchPatientAppointments();\n      fetchDoctors(); // Osvježi listu doktora (da bi se ažurirala prosječna ocjena)\n    } catch (error) {\n      var _error$response16, _error$response17, _error$response17$dat;\n      console.error('Greška pri slanju ocjene:', ((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : _error$response16.data) || error.message);\n      let errorMessage = 'Nije uspjelo slanje ocjene. Molimo pokušajte ponovo.';\n      if ((_error$response17 = error.response) !== null && _error$response17 !== void 0 && (_error$response17$dat = _error$response17.data) !== null && _error$response17$dat !== void 0 && _error$response17$dat.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      setAlertMessage(errorMessage);\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // NOVO: Funkcionalnost \"Plati sada\"\n  const handlePayNow = async billId => {\n    if (window.confirm('Da li ste sigurni da želite označiti ovaj račun kao plaćen?')) {\n      try {\n        // Poziv backend endpointa za ažuriranje statusa računa\n        await axios.put(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/${billId}/oznaci-kao-placeno`, {}, authHeaders);\n        setAlertMessage('Račun uspješno označen kao plaćen!');\n        setAlertType('success');\n        setShowAlert(true);\n        fetchBills(); // Osvježi listu računa\n      } catch (error) {\n        var _error$response18, _error$response19, _error$response19$dat;\n        console.error('Greška pri označavanju računa kao plaćenog:', ((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : _error$response18.data) || error.message);\n        setAlertMessage('Nije uspjelo označavanje računa kao plaćenog. ' + (((_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : (_error$response19$dat = _error$response19.data) === null || _error$response19$dat === void 0 ? void 0 : _error$response19$dat.message) || error.message));\n        setAlertType('danger');\n        setShowAlert(true);\n      }\n    }\n  };\n\n  // NOVO: Funkcionalnost \"Pregledaj detalje\"\n  const handleViewBillDetails = bill => {\n    setSelectedBillDetails(bill);\n    setShowBillDetailsModal(true);\n  };\n  const closeBillDetailsModal = () => {\n    setShowBillDetailsModal(false);\n    setSelectedBillDetails(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-2\",\n        children: \"U\\u010Ditavanje podataka nadzorne plo\\u010De...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 13\n    }, this);\n  }\n  const currentPatientUserId = user.userId;\n\n  // Filtriranje pregleda za prikaz u različitim tabovima\n  const upcomingAppointments = allAppointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').sort((a, b) => new Date(a.datumPregleda + 'T' + a.vrijemePregleda) - new Date(b.datumPregleda + 'T' + b.vrijemePregleda));\n  const pastAppointments = allAppointments.filter(app => app.status === 'obavljen' || app.status === 'otkazan').sort((a, b) => new Date(b.datumPregleda + 'T' + b.vrijemePregleda) - new Date(a.datumPregleda + 'T' + a.vrijemePregleda)); // Najnoviji prvi\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-white p-3\",\n      style: {\n        width: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-4\",\n        children: \"Nadzorna plo\\u010Da pacijenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('overview'),\n            children: \"Pregled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('myAppointments'),\n            children: \"Moji nadolaze\\u0107i pregledi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'pastAppointments' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('pastAppointments'),\n            children: \"Pro\\u0161li pregledi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('medicalHistory'),\n            children: \"Medicinska historija\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('billing'),\n            children: \"Naplata i pla\\u0107anja\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('messages'),\n            children: \"Poruke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('doctorSearch'),\n            children: \"Prona\\u0111i doktora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('profileSettings'),\n            children: \"Postavke profila\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 p-4 bg-light\",\n      children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: alertType,\n        onClose: () => setShowAlert(false),\n        dismissible: true,\n        className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n        style: {\n          zIndex: 1050\n        },\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: \"Nadzorna plo\\u010Da pacijenta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 17\n      }, this), activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Dobrodo\\u0161li, \", patientProfile.firstName || (user ? user.fullName : 'Pacijent'), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ovo je va\\u0161 pregled pacijenta. Ovdje mo\\u017Eete brzo vidjeti svoje nadolaze\\u0107e preglede i nedavne aktivnosti.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: \"Nadolaze\\u0107i pregledi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 834,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-group list-group-flush\",\n                children: upcomingAppointments.length > 0 ? upcomingAppointments.map(app => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item d-flex justify-content-between align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [app.datumPregleda, \" u \", app.vrijemePregleda]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 842,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 843,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Razlog: \", app.komentarPacijenta]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 844,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 845,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Doktor: \", app.doktorIme]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 846,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 841,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`,\n                    children: app.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 848,\n                    columnNumber: 53\n                  }, this)]\n                }, app.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 49\n                }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: \"Nema nadolaze\\u0107ih pregleda.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 852,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 21\n      }, this), activeTab === 'myAppointments' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moji nadolaze\\u0107i pregledi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => openAppointmentModal(),\n          children: \"Zaka\\u017Ei novi pregled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 25\n        }, this), upcomingAppointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Doktor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 871,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vrijeme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 873,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Razlog\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: upcomingAppointments.map(app => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.doktorIme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.datumPregleda\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.vrijemePregleda\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.komentarPacijenta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${app.status === 'zakazan' ? 'warning' : 'info'}`,\n                  children: app.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 886,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"sm\",\n                  onClick: () => handleCancelAppointment(app.id),\n                  children: \"Otka\\u017Ei\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 888,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 45\n              }, this)]\n            }, app.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih nadolaze\\u0107ih pregleda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 21\n      }, this), activeTab === 'pastAppointments' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pro\\u0161li pregledi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 25\n        }, this), pastAppointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Doktor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 907,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vrijeme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Razlog\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: pastAppointments.map(app => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.doktorIme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.datumPregleda\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.vrijemePregleda\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.komentarPacijenta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${app.status === 'obavljen' ? 'success' : 'danger'}`,\n                  children: app.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 922,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.status === 'obavljen' && !app.rated ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  onClick: () => openRatingModal(app.doktorID, app.doktorIme, app.id),\n                  children: \"Ocjeni\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 925,\n                  columnNumber: 53\n                }, this) : app.status === 'obavljen' && app.rated ? /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: [\"Ocijenjeno (\", app.ocjenaDoktora ? app.ocjenaDoktora.toFixed(1) : 'N/A', \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 53\n                }, this) : app.status === 'otkazan' ? /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: \"Otkazan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 929,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Nema dostupnih akcija\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 931,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 45\n              }, this)]\n            }, app.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih pro\\u0161lih pregleda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 21\n      }, this), activeTab === 'medicalHistory' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moja medicinska historija\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 25\n        }, this), medicalHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: medicalHistory.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 41\n            }, this), \" \", record.date, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 79\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Dijagnoza:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 41\n            }, this), \" \", record.diagnosis, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 88\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tretman:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 41\n            }, this), \" \", record.treatment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 86\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Doktor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 41\n            }, this), \" \", record.doctorName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 86\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Bilje\\u0161ke:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 41\n            }, this), \" \", record.notes || 'N/A']\n          }, record.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih zapisa medicinske historije.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 21\n      }, this), activeTab === 'billing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Naplata i pla\\u0107anja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 25\n        }, this), bills.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID ra\\u010Duna\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum izdavanja\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Iznos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 974,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 975,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Opis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 976,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Izdao\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 978,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 971,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: bills.map(bill => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(bill.billDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.amount ? bill.amount.toFixed(2) : 'N/A', \" KM\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 986,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${bill.status === 'PLACEN' ? 'success' : 'warning'}`,\n                  children: bill.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 987,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 987,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.opis\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 988,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.doktorIme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 989,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.status === 'NEPLACEN' && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  className: \"me-2\",\n                  onClick: () => handlePayNow(bill.id),\n                  children: \"Plati sada\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 992,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  onClick: () => handleViewBillDetails(bill),\n                  children: \"Pregledaj detalje\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 994,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 45\n              }, this)]\n            }, bill.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih zapisa o naplati.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 21\n      }, this), activeTab === 'messages' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moje poruke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => setNewMessage({\n            recipientId: '',\n            subject: '',\n            content: ''\n          }),\n          children: \"Napi\\u0161i novu poruku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 25\n        }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: messages.map(msg => {\n            var _doctors$find, _doctors$find2;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"Od: \", msg.senderId === currentPatientUserId ? 'Ja' : ((_doctors$find = doctors.find(d => d.userId === msg.senderId)) === null || _doctors$find === void 0 ? void 0 : _doctors$find.firstName) + ' ' + ((_doctors$find2 = doctors.find(d => d.userId === msg.senderId)) === null || _doctors$find2 === void 0 ? void 0 : _doctors$find2.lastName) || `Doktor (${msg.senderId})`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1017,\n                  columnNumber: 45\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1017,\n                  columnNumber: 266\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Naslov:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1018,\n                  columnNumber: 45\n                }, this), \" \", msg.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1018,\n                  columnNumber: 84\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(msg.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1019,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1015,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                size: \"sm\",\n                onClick: () => handleViewMessage(msg),\n                children: \"Pregledaj poruku\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1021,\n                columnNumber: 41\n              }, this)]\n            }, msg.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih poruka.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1029,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Napi\\u0161i novu poruku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formRecipient\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Primalac (Doktor)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"recipientId\",\n              value: newMessage.recipientId,\n              onChange: handleNewMessageChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite doktora --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 37\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.userId,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.userId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1044,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1033,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formSubject\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Naslov\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"subject\",\n              value: newMessage.subject,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1048,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formContent\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Sadr\\u017Eaj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"content\",\n              value: newMessage.content,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSendMessage,\n            children: \"Po\\u0161alji poruku\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1069,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1032,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 21\n      }, this), activeTab === 'doctorSearch' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Prona\\u0111i doktora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pretra\\u017Eite doktore po imenu ili specijalnosti kako biste prona\\u0161li pravu njegu za vas.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Pretra\\u017Eite po imenu ili specijalnosti...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1078,\n          columnNumber: 25\n        }, this), doctors.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Ime\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Specijalnost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1086,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Kontakt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1087,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Ocjena\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1088,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1089,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1095,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.specialty || 'Opšti praktičar'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1096,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.email, \" | \", doctor.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.ocjena ? doctor.ocjena.toFixed(1) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1098,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"sm\",\n                  onClick: () => {\n                    openAppointmentModal(null, doctor.id);\n                  },\n                  children: \"Zaka\\u017Ei pregled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1100,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1099,\n                columnNumber: 45\n              }, this)]\n            }, doctor.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1094,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nije prona\\u0111en nijedan doktor.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1075,\n        columnNumber: 21\n      }, this), activeTab === 'profileSettings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Postavke profila\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formFirstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Ime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1119,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              value: patientProfile.firstName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formLastName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Prezime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1128,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              value: patientProfile.lastName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1129,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1137,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: patientProfile.email || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1136,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formPhone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Telefon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"phone\",\n              value: patientProfile.phone || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1147,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSaveProfile,\n            children: \"Sa\\u010Duvaj profil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1115,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAppointmentModal,\n      onHide: closeAppointmentModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: editingAppointment ? 'Uredi pregled' : 'Zakaži novi pregled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDoctor\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odaberite doktora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"doctorId\",\n              value: newAppointment.doctorId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite doktora --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1178,\n                columnNumber: 33\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.id,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1180,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1171,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1169,\n            columnNumber: 25\n          }, this), newAppointment.doctorId && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAvailableTerm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odaberite dostupan termin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1187,\n              columnNumber: 33\n            }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1189,\n              columnNumber: 37\n            }, this) : allDoctorAvailableTerms.length > 0 ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"terminId\",\n              value: newAppointment.terminId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite datum i vrijeme --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1198,\n                columnNumber: 41\n              }, this), allDoctorAvailableTerms.map(term => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term.terminID,\n                children: term.display\n              }, term.terminID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1200,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1191,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: \"Nema dostupnih termina za ovog doktora.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1204,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1186,\n            columnNumber: 29\n          }, this), newAppointment.terminId && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formAppointmentDateDisplay\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Odabrani datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1212,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: newAppointment.appointmentDate,\n                readOnly: true,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1213,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formAppointmentTimeDisplay\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Odabrano vrijeme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1221,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: newAppointment.appointmentTime ? newAppointment.appointmentTime.substring(0, 5) : '',\n                readOnly: true,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1222,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1220,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formReason\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Razlog za pregled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"reason\",\n              value: newAppointment.reason,\n              onChange: handleNewAppointmentChange,\n              placeholder: \"npr. Op\\u0161ti pregled, specifi\\u010Dni simptomi...\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1234,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1232,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeAppointmentModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleScheduleAppointment,\n          disabled: !newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason || loading,\n          children: editingAppointment ? 'Ažuriraj pregled' : 'Zakaži pregled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: selectedMessage !== null,\n      onHide: closeMessageModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Poruka: \", selectedMessage === null || selectedMessage === void 0 ? void 0 : selectedMessage.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Od:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1268,\n              columnNumber: 32\n            }, this), \" \", selectedMessage.senderId === currentPatientUserId ? 'Ja' : ((_doctors$find3 = doctors.find(d => d.userId === selectedMessage.senderId)) === null || _doctors$find3 === void 0 ? void 0 : _doctors$find3.firstName) + ' ' + ((_doctors$find4 = doctors.find(d => d.userId === selectedMessage.senderId)) === null || _doctors$find4 === void 0 ? void 0 : _doctors$find4.lastName) || `Doktor (${selectedMessage.senderId})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1268,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1269,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedMessage.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1270,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1271,\n            columnNumber: 29\n          }, this), selectedMessage.replies && selectedMessage.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Odgovori:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1275,\n              columnNumber: 37\n            }, this), selectedMessage.replies.map((reply, index) => {\n              var _doctors$find5, _doctors$find6;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border p-2 mb-2 rounded bg-light\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [reply.senderId === currentPatientUserId ? 'Ja' : ((_doctors$find5 = doctors.find(d => d.userId === reply.senderId)) === null || _doctors$find5 === void 0 ? void 0 : _doctors$find5.firstName) + ' ' + ((_doctors$find6 = doctors.find(d => d.userId === reply.senderId)) === null || _doctors$find6 === void 0 ? void 0 : _doctors$find6.lastName) || `Doktor (${reply.senderId})`, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1278,\n                  columnNumber: 45\n                }, this), \" \", reply.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1279,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(reply.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1280,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1277,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1274,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odgovor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1287,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: replyMessage.content,\n              onChange: handleReplyMessageChange,\n              placeholder: \"Upi\\u0161ite svoj odgovor ovdje...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1288,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1286,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mt-2\",\n            onClick: () => handleReply(selectedMessage.id),\n            children: \"Po\\u0161alji odgovor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1296,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeMessageModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1301,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1300,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1261,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showRatingModal,\n      onHide: closeRatingModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Ocjeni doktora: \", selectedDoctorForRating === null || selectedDoctorForRating === void 0 ? void 0 : selectedDoctorForRating.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1310,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1309,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formRating\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Ocjena (1-5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1315,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"ocjena\",\n              value: ratingData.ocjena,\n              onChange: handleRatingChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"1 - Vrlo lo\\u0161e\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1323,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"2 - Lo\\u0161e\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1324,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"3 - Prosje\\u010Dno\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1325,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"4 - Dobro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1326,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5 - Odli\\u010Dno\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1327,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1316,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formRatingComment\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Komentar (opcionalno)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1331,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"komentar\",\n              value: ratingData.komentar,\n              onChange: handleRatingChange,\n              placeholder: \"Napi\\u0161ite komentar o svom iskustvu...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1332,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1330,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1313,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1312,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeRatingModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1344,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmitRating,\n          children: \"Po\\u0161alji ocjenu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1347,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1343,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1308,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showBillDetailsModal,\n      onHide: closeBillDetailsModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Detalji ra\\u010Duna\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1356,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedBillDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ID ra\\u010Duna:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1361,\n              columnNumber: 32\n            }, this), \" \", selectedBillDetails.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1361,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum izdavanja:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1362,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedBillDetails.billDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1362,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Iznos:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1363,\n              columnNumber: 32\n            }, this), \" \", selectedBillDetails.amount ? selectedBillDetails.amount.toFixed(2) : 'N/A', \" KM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1363,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1364,\n              columnNumber: 32\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `badge bg-${selectedBillDetails.status === 'PLACEN' ? 'success' : 'warning'}`,\n              children: selectedBillDetails.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1364,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Opis:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1365,\n              columnNumber: 32\n            }, this), \" \", selectedBillDetails.opis]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1365,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Izdao:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1366,\n              columnNumber: 32\n            }, this), \" \", selectedBillDetails.doktorIme]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1366,\n            columnNumber: 29\n          }, this), selectedBillDetails.dueDate && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum dospije\\u0107a:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1368,\n              columnNumber: 36\n            }, this), \" \", new Date(selectedBillDetails.dueDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1368,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1360,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeBillDetailsModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1374,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1373,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1354,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 741,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDashboard, \"VvJQLMJzKB/fYpuxVQWMfs7rg2E=\", false, function () {\n  return [useAuth];\n});\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["axios","useAuth","React","useState","useEffect","useMemo","Modal","Button","Form","Alert","Spinner","Tab","Tabs","jsxDEV","_jsxDEV","Fragment","_Fragment","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","OBAVIJESTI_DOKUMENTI_API_PREFIX","AUTH_API_PREFIX","PatientDashboard","_s","_doctors$find3","_doctors$find4","token","user","console","log","authHeaders","headers","activeTab","setActiveTab","allAppointments","setAllAppointments","medicalHistory","setMedicalHistory","patientProfile","setPatientProfile","doctors","setDoctors","allDoctorAvailableTerms","setAllDoctorAvailableTerms","bills","setBills","messages","setMessages","newMessage","setNewMessage","recipientId","subject","content","replyMessage","setReplyMessage","messageId","selectedMessage","setSelectedMessage","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","showAppointmentModal","setShowAppointmentModal","newAppointment","setNewAppointment","doctorId","appointmentDate","appointmentTime","terminId","reason","editingAppointment","setEditingAppointment","loading","setLoading","showRatingModal","setShowRatingModal","selectedAppointmentForRating","setSelectedAppointmentForRating","selectedDoctorForRating","setSelectedDoctorForRating","ratingData","setRatingData","ocjena","komentar","showBillDetailsModal","setShowBillDetailsModal","selectedBillDetails","setSelectedBillDetails","fetchPatientAppointments","pacijentId","warn","response","get","transformedAppointments","data","map","app","id","pregledID","doktorID","pacijentID","datumPregleda","vrijemePregleda","komentarPacijenta","status","terminID","doktorIme","rated","ocjenaDoktora","error","_error$response","message","fetchMedicalHistory","transformedHistory","record","zapisID","patientId","doctorName","date","datumZapisivanja","diagnosis","dijagnoza","treatment","lijecenje","notes","napomene","_error$response2","fetchPatientProfile","firstName","ime","lastName","prezime","email","phone","telefon","userId","Number","_error$response3","fetchDoctors","transformedDoctors","doc","specialty","Array","isArray","specijalizacije","join","_error$response4","fetchDoctorAllAvailableTerms","doktorId","termsData","available","term","datum","vrijeme","display","substring","sort","a","b","dateTimeA","dateTimeB","Date","_error$response5","fetchBills","transformedBills","bill","racunID","billDate","datumIzdavanja","amount","iznos","dueDate","datumDospijeca","opis","_error$response6","fetchMessages","transformedMessages","msg","porukaID","senderId","senderType","senderIme","receiverId","receiverType","receiverIme","timestamp","replies","_error$response7","loadAllData","Promise","all","openAppointmentModal","appointment","doctorIdFromSearch","closeAppointmentModal","handleNewAppointmentChange","e","name","value","target","updatedAppointment","selectedTerm","find","parseInt","handleScheduleAppointment","appointmentData","post","_error$response8","_error$response9","_error$response9$data","errorMessage","handleCancelAppointment","appointmentId","window","confirm","existingApp","cancelPayload","put","_error$response0","_error$response1","_error$response1$data","handleProfileChange","prev","handleSaveProfile","patientDetailsPayload","authProfilePayload","fullName","_error$response10","_error$response11","_error$response11$dat","handleNewMessageChange","handleReplyMessageChange","handleSendMessage","messageData","_error$response12","_error$response13","_error$response13$dat","handleReply","toISOString","_error$response14","_error$response15","_error$response15$dat","handleViewMessage","closeMessageModal","openRatingModal","closeRatingModal","handleRatingChange","handleSubmitRating","ratingPayload","parseFloat","_error$response16","_error$response17","_error$response17$dat","handlePayNow","billId","_error$response18","_error$response19","_error$response19$dat","handleViewBillDetails","closeBillDetailsModal","className","style","minHeight","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","currentPatientUserId","upcomingAppointments","filter","pastAppointments","width","onClick","variant","onClose","dismissible","zIndex","length","size","toFixed","index","toLocaleDateString","_doctors$find","_doctors$find2","d","toLocaleString","Group","controlId","Label","Control","as","onChange","required","doctor","type","rows","placeholder","show","onHide","Header","closeButton","Title","Body","readOnly","disabled","Footer","reply","_doctors$find5","_doctors$find6","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/PatientDashboard.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs } from 'react-bootstrap';\r\n// Nema potrebe za react-datepickerom ako vaša originalna verzija ne koristi.\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\n// Definisanje API prefiksa za svaki mikroservis - KORISTIMO OVE PREFIKSE!\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`; // Pretpostavljena putanja za autentifikaciju, ako se koristi direktno\r\n\r\nfunction PatientDashboard() {\r\n    // AŽURIRANO: user objekat sada sadrži authId (Long), id (email), patientId (Integer)\r\n    const { token, user } = useAuth();\r\n    console.log(\"Trenutni user objekat iz useAuth (PatientDashboard):\", user);\r\n\r\n    const authHeaders = useMemo(() => ({\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }), [token]);\r\n\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n    const [allAppointments, setAllAppointments] = useState([]); // Svi pregledi, bez obzira na status\r\n    const [medicalHistory, setMedicalHistory] = useState([]);\r\n    const [patientProfile, setPatientProfile] = useState({});\r\n    const [doctors, setDoctors] = useState([]); // Ova lista doktora također treba sadržavati userId\r\n    const [allDoctorAvailableTerms, setAllDoctorAvailableTerms] = useState([]);\r\n    const [bills, setBills] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState({ recipientId: '', subject: '', content: '' });\r\n    const [replyMessage, setReplyMessage] = useState({ messageId: '', content: '' });\r\n    const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('success');\r\n\r\n    const [showAppointmentModal, setShowAppointmentModal] = useState(false);\r\n    const [newAppointment, setNewAppointment] = useState({\r\n        doctorId: '',\r\n        appointmentDate: '',\r\n        appointmentTime: '',\r\n        terminId: '',\r\n        reason: ''\r\n    });\r\n    const [editingAppointment, setEditingAppointment] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Stanje za modal za ocjenjivanje\r\n    const [showRatingModal, setShowRatingModal] = useState(false);\r\n    // Dodano: Čuvamo ID pregleda koji se ocjenjuje\r\n    const [selectedAppointmentForRating, setSelectedAppointmentForRating] = useState(null);\r\n    const [selectedDoctorForRating, setSelectedDoctorForRating] = useState(null);\r\n    const [ratingData, setRatingData] = useState({ ocjena: 5, komentar: '' }); // Podrazumijevana ocjena 5\r\n\r\n    // NOVO: Stanje za modal detalja računa\r\n    const [showBillDetailsModal, setShowBillDetailsModal] = useState(false);\r\n    const [selectedBillDetails, setSelectedBillDetails] = useState(null);\r\n\r\n\r\n    // --- API Pozivi ---\r\n\r\n    // AŽURIRANA FUNKCIJA: Sada dohvaća SVE preglede za pacijenta\r\n    const fetchPatientAppointments = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje pregleda.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Predpostavljamo da ste dodali /api/pregledi/pacijent/{pacijentId} na backendu\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedAppointments = response.data.map(app => ({\r\n                id: app.pregledID,\r\n                doktorID: app.doktorID,\r\n                pacijentID: app.pacijentID,\r\n                datumPregleda: app.datumPregleda,\r\n                vrijemePregleda: app.vrijemePregleda,\r\n                komentarPacijenta: app.komentarPacijenta,\r\n                status: app.status,\r\n                terminID: app.terminID,\r\n                doktorIme: app.doktorIme,\r\n                // Određuje da li je pregled već ocijenjen na osnovu ocjenaDoktora iz backend DTO-a\r\n                rated: app.ocjenaDoktora !== null && app.ocjenaDoktora > 0\r\n            }));\r\n            setAllAppointments(transformedAppointments); // Spremamo sve preglede\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška pri dohvaćanju pacijentovih pregleda (svi):', error.response?.data || error.message);\r\n            setAlertMessage('Nije uspjelo dohvaćanje pregleda.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            setAllAppointments([]); // Osiguraj prazan niz u slučaju greške\r\n        }\r\n    };\r\n\r\n    const fetchMedicalHistory = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje medicinske historije.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedHistory = response.data.map(record => ({\r\n                id: record.zapisID,\r\n                patientId: record.pacijentID,\r\n                doctorId: record.doktorID,\r\n                doctorName: record.doktorIme,\r\n                date: record.datumZapisivanja,\r\n                diagnosis: record.dijagnoza,\r\n                treatment: record.lijecenje,\r\n                notes: record.napomene\r\n            }));\r\n            setMedicalHistory(transformedHistory);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška pri dohvaćanju medicinske historije:', error.response?.data || error.message);\r\n            setAlertMessage('Nije uspjelo dohvaćanje medicinske historije.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchPatientProfile = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje profila pacijenta.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, authHeaders);\r\n            setPatientProfile({\r\n                id: response.data.pacijentID,\r\n                firstName: response.data.ime,\r\n                lastName: response.data.prezime,\r\n                email: response.data.email,\r\n                phone: response.data.telefon,\r\n                userId: Number(response.data.userId)\r\n            });\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška pri dohvaćanju profila pacijenta:', error.response?.data || error.message);\r\n            setAlertMessage('Nije uspjelo dohvaćanje podataka profila.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctors = async () => {\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n            const transformedDoctors = response.data.map(doc => ({\r\n                id: doc.doktorID,\r\n                userId: Number(doc.userId),\r\n                firstName: doc.ime,\r\n                lastName: doc.prezime,\r\n                specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\r\n                email: doc.email,\r\n                phone: doc.telefon,\r\n                ocjena: doc.ocjena\r\n            }));\r\n            setDoctors(transformedDoctors);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška pri dohvaćanju doktora:', error.response?.data || error.message);\r\n            setAlertMessage('Nije uspjelo dohvaćanje liste doktora.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctorAllAvailableTerms = async (doktorId) => {\r\n        if (!doktorId) {\r\n            setAllDoctorAvailableTerms([]);\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/slobodni/${doktorId}`, authHeaders);\r\n            const termsData = Array.isArray(response.data) ? response.data : [];\r\n            const available = termsData\r\n                .map(term => ({\r\n                    terminID: term.terminID,\r\n                    datum: term.datum,\r\n                    vrijeme: term.vrijeme,\r\n                    display: `${term.datum} ${term.vrijeme.substring(0, 5)}`\r\n                }))\r\n                .sort((a, b) => {\r\n                    const dateTimeA = `${a.datum}T${a.vrijeme}`;\r\n                    const dateTimeB = `${b.datum}T${b.vrijeme}`;\r\n                    return new Date(dateTimeA) - new Date(dateTimeB);\r\n                });\r\n            setAllDoctorAvailableTerms(available);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška pri dohvaćanju dostupnosti doktora:', error.response?.data || error.message);\r\n            setAlertMessage('Nije uspjelo dohvaćanje dostupnosti doktora.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            setAllDoctorAvailableTerms([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchBills = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje računa.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedBills = response.data.map(bill => ({\r\n                id: bill.racunID,\r\n                billDate: bill.datumIzdavanja,\r\n                amount: bill.iznos,\r\n                status: bill.status,\r\n                dueDate: bill.datumDospijeca,\r\n                opis: bill.opis,\r\n                doktorIme: bill.doktorIme\r\n            }));\r\n            setBills(transformedBills);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška pri dohvaćanju računa:', error.response?.data || error.message);\r\n            setAlertMessage('Nije uspjelo dohvaćanje informacija o naplati.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async () => {\r\n        if (!user || !user.userId) {\r\n            console.warn(\"ID korisnika nije dostupan za dohvaćanje poruka.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=PACIJENT`, authHeaders);\r\n            const transformedMessages = response.data.map(msg => ({\r\n                id: msg.porukaID,\r\n                senderId: Number(msg.senderId),\r\n                senderType: msg.senderType,\r\n                senderIme: msg.senderIme,\r\n                receiverId: Number(msg.receiverId),\r\n                receiverType: msg.receiverType,\r\n                receiverIme: msg.receiverIme,\r\n                subject: msg.subject,\r\n                content: msg.content,\r\n                timestamp: msg.timestamp,\r\n                replies: msg.replies || []\r\n            }));\r\n            setMessages(transformedMessages);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška pri dohvaćanju poruka:', error.response?.data || error.message);\r\n            setAlertMessage('Nije uspjelo dohvaćanje poruka.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- useEffect Hookovi ---\r\n    useEffect(() => {\r\n        const loadAllData = async () => {\r\n            if (token && user) {\r\n                setLoading(true);\r\n                await Promise.all([\r\n                    fetchPatientAppointments(),\r\n                    fetchMedicalHistory(),\r\n                    fetchPatientProfile(),\r\n                    fetchDoctors(),\r\n                    fetchBills(),\r\n                    fetchMessages()\r\n                ]);\r\n                setLoading(false);\r\n            } else if (!token || (user && !user.pacijentId && !user.doktorId)) {\r\n                setLoading(false);\r\n                if (!token) {\r\n                    console.warn(\"Token nije dostupan. Korisnik nije prijavljen.\");\r\n                } else {\r\n                    console.warn(\"User objekat je dostupan, ali patientId ni doktorId nisu. Korisnik možda nije ni pacijent ni doktor.\");\r\n                }\r\n            }\r\n        };\r\n        loadAllData();\r\n    }, [token, user]);\r\n\r\n\r\n    // --- Zakazivanje/Otkazivanje pregleda ---\r\n\r\n    const openAppointmentModal = (appointment = null, doctorIdFromSearch = null) => {\r\n        if (appointment) {\r\n            setEditingAppointment(appointment);\r\n            setNewAppointment({\r\n                doctorId: appointment.doktorID,\r\n                appointmentDate: appointment.datumPregleda,\r\n                appointmentTime: appointment.vrijemePregleda,\r\n                terminId: appointment.terminID,\r\n                reason: appointment.komentarPacijenta\r\n            });\r\n            fetchDoctorAllAvailableTerms(appointment.doktorID);\r\n        } else {\r\n            setEditingAppointment(null);\r\n            setNewAppointment({\r\n                doctorId: doctorIdFromSearch || '',\r\n                appointmentDate: '',\r\n                appointmentTime: '',\r\n                terminId: '',\r\n                reason: ''\r\n            });\r\n            setAllDoctorAvailableTerms([]);\r\n            if (doctorIdFromSearch) {\r\n                fetchDoctorAllAvailableTerms(doctorIdFromSearch);\r\n            }\r\n        }\r\n        setShowAppointmentModal(true);\r\n    };\r\n\r\n    const closeAppointmentModal = () => {\r\n        setShowAppointmentModal(false);\r\n        setEditingAppointment(null);\r\n        setNewAppointment({\r\n            doctorId: '',\r\n            appointmentDate: '',\r\n            appointmentTime: '',\r\n            terminId: '',\r\n            reason: ''\r\n        });\r\n        setAllDoctorAvailableTerms([]);\r\n    };\r\n\r\n    const handleNewAppointmentChange = async (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        let updatedAppointment = { ...newAppointment, [name]: value };\r\n\r\n        if (name === 'doctorId') {\r\n            updatedAppointment.appointmentDate = '';\r\n            updatedAppointment.appointmentTime = '';\r\n            updatedAppointment.terminId = '';\r\n            if (value) {\r\n                await fetchDoctorAllAvailableTerms(value);\r\n            } else {\r\n                setAllDoctorAvailableTerms([]);\r\n            }\r\n        } else if (name === 'terminId') {\r\n            const selectedTerm = allDoctorAvailableTerms.find(term => term.terminID === parseInt(value));\r\n            if (selectedTerm) {\r\n                updatedAppointment.terminId = selectedTerm.terminID;\r\n                updatedAppointment.appointmentDate = selectedTerm.datum;\r\n                updatedAppointment.appointmentTime = selectedTerm.vrijeme;\r\n            } else {\r\n                updatedAppointment.terminId = '';\r\n                updatedAppointment.appointmentTime = '';\r\n                updatedAppointment.appointmentDate = '';\r\n            }\r\n        }\r\n        setNewAppointment(updatedAppointment);\r\n    };\r\n\r\n\r\n    const handleScheduleAppointment = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće zakazati pregled.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        if (!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason) {\r\n            setAlertMessage('Molimo odaberite doktora, dostupan termin i navedite razlog.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        const appointmentData = {\r\n            pacijentID: user.pacijentId,\r\n            doktorID: parseInt(newAppointment.doctorId),\r\n            terminID: newAppointment.terminId,\r\n            datumPregleda: newAppointment.appointmentDate,\r\n            vrijemePregleda: newAppointment.appointmentTime,\r\n            komentarPacijenta: newAppointment.reason,\r\n            status: editingAppointment ? editingAppointment.status : 'zakazan',\r\n        };\r\n\r\n        try {\r\n            await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\r\n\r\n            setAlertMessage('Zahtjev za zakazivanje pregleda je uspješno prihvaćen. Dobit ćete obavijest kada bude obrađen.');\r\n            setAlertType('info');\r\n            setShowAlert(true);\r\n\r\n            closeAppointmentModal();\r\n            fetchPatientAppointments(); // Osvježi sve preglede\r\n        } catch (error) {\r\n            console.error('Greška pri zakazivanju/ažuriranju pregleda:', error.response?.data || error.message);\r\n            let errorMessage = 'Nije uspjelo zakazivanje/ažuriranje pregleda. Molimo pokušajte ponovo.';\r\n            if (error.response?.data?.message) {\r\n                errorMessage = error.response.data.message;\r\n            } else if (error.message) {\r\n                errorMessage = error.message;\r\n            }\r\n            setAlertMessage(errorMessage);\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleCancelAppointment = async (appointmentId) => {\r\n        if (window.confirm('Da li ste sigurni da želite otkazati ovaj pregled?')) {\r\n            if (!user || !user.pacijentId) {\r\n                setAlertMessage('ID pacijenta nije dostupan za otkazivanje. Molimo pokušajte ponovo.');\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n                return;\r\n            }\r\n            try {\r\n                const existingApp = allAppointments.find(app => app.id === appointmentId);\r\n                if (!existingApp) {\r\n                    setAlertMessage(\"Pregled nije pronađen za otkazivanje.\");\r\n                    setAlertType('danger');\r\n                    setShowAlert(true);\r\n                    return;\r\n                }\r\n\r\n                const cancelPayload = {\r\n                    pregledID: existingApp.id,\r\n                    pacijentID: user.pacijentId,\r\n                    doktorID: existingApp.doktorID,\r\n                    terminID: existingApp.terminID,\r\n                    datumPregleda: existingApp.datumPregleda,\r\n                    vrijemePregleda: existingApp.vrijemePregleda,\r\n                    komentarPacijenta: existingApp.komentarPacijenta,\r\n                    status: 'otkazan'\r\n                };\r\n\r\n                await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}`, cancelPayload, authHeaders);\r\n                setAlertMessage('Pregled uspješno otkazan!');\r\n                setAlertType('success');\r\n                setShowAlert(true);\r\n                fetchPatientAppointments(); // Osvježi sve preglede\r\n            } catch (error) {\r\n                console.error('Greška pri otkazivanju pregleda:', error.response?.data || error.message);\r\n                setAlertMessage('Nije uspjelo otkazivanje pregleda. Molimo pokušajte ponovo. ' + (error.response?.data?.message || error.message));\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    // --- Ažuriranje profila ---\r\n    const handleProfileChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPatientProfile(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSaveProfile = async () => {\r\n        if (!user || !user.pacijentId || !user.userId) {\r\n            setAlertMessage('ID pacijenta ili ID korisnika nije dostupan. Nije moguće sačuvati profil.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const patientDetailsPayload = {\r\n                pacijentID: user.pacijentId,\r\n                ime: patientProfile.firstName,\r\n                prezime: patientProfile.lastName,\r\n                email: patientProfile.email,\r\n                telefon: patientProfile.phone,\r\n                userId: user.userId\r\n            };\r\n            await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, patientDetailsPayload, authHeaders);\r\n\r\n            const authProfilePayload = {\r\n                email: patientProfile.email,\r\n                fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\r\n                telefon: patientProfile.phone,\r\n            };\r\n            await axios.put(`${AUTH_API_PREFIX}/users/${user.userId}`, authProfilePayload, authHeaders);\r\n\r\n            setAlertMessage('Profil uspješno ažuriran!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchPatientProfile();\r\n        } catch (error) {\r\n            console.error('Greška pri ažuriranju profila:', error.response?.data || error.message);\r\n            setAlertMessage('Nije uspjelo ažuriranje profila. Molimo pokušajte ponovo. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- Sigurno slanje poruka ---\r\n    const handleNewMessageChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewMessage(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleReplyMessageChange = (e) => {\r\n        setReplyMessage(prev => ({ ...prev, content: e.target.value }));\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!user || !user.userId) {\r\n            setAlertMessage('Vaš ID korisnika nije dostupan. Nije moguće poslati poruku.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\r\n            setAlertMessage('Molimo popunite sva polja poruke.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const messageData = {\r\n                senderId: user.userId,\r\n                senderType: 'PACIJENT',\r\n                receiverId: Number(newMessage.recipientId),\r\n                receiverType: 'DOKTOR',\r\n                subject: newMessage.subject,\r\n                content: newMessage.content\r\n            };\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\r\n            setAlertMessage('Poruka uspješno poslana!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setNewMessage({ recipientId: '', subject: '', content: '' });\r\n            fetchMessages();\r\n        } catch (error) {\r\n            console.error('Greška pri slanju poruke:', error.response?.data || error.message);\r\n            setAlertMessage('Nije uspjelo slanje poruke. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleReply = async (messageId) => {\r\n        if (!user || !user.userId) {\r\n            setAlertMessage('Vaš ID korisnika nije dostupan. Nije moguće odgovoriti.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!replyMessage.content) {\r\n            setAlertMessage('Sadržaj odgovora ne može biti prazan.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\r\n                senderId: user.userId,\r\n                senderIme: user.fullName,\r\n                senderType: 'PACIJENT',\r\n                content: replyMessage.content,\r\n                timestamp: new Date().toISOString()\r\n            }, authHeaders);\r\n            setAlertMessage('Odgovor uspješno poslan!', 'success');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setReplyMessage({ messageId: '', content: '' });\r\n            fetchMessages();\r\n            setSelectedMessage(prev => {\r\n                if (!prev) return null;\r\n                return {\r\n                    ...prev,\r\n                    replies: [...(prev.replies || []), {\r\n                        senderId: user.userId,\r\n                        senderIme: user.fullName,\r\n                        senderType: 'PACIJENT',\r\n                        content: replyMessage.content,\r\n                        timestamp: new Date().toISOString()\r\n                    }]\r\n                };\r\n            });\r\n        } catch (error) {\r\n            console.error('Greška pri slanju odgovora:', error.response?.data || error.message);\r\n            setAlertMessage('Nije uspjelo slanje odgovora. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleViewMessage = (message) => {\r\n        setSelectedMessage(message);\r\n    };\r\n\r\n    const closeMessageModal = () => {\r\n        setSelectedMessage(null);\r\n        setReplyMessage({ messageId: '', content: '' });\r\n    };\r\n\r\n    // --- Funkcije ocjenjivanja ---\r\n    // Ažurirano: Sada prima i appointmentId\r\n    const openRatingModal = (doktorID, doktorIme, appointmentId) => {\r\n        setSelectedDoctorForRating({ id: doktorID, name: doktorIme });\r\n        setSelectedAppointmentForRating(appointmentId); // Čuvamo ID pregleda\r\n        setRatingData({ ocjena: 5, komentar: '' });\r\n        setShowRatingModal(true);\r\n    };\r\n\r\n    const closeRatingModal = () => {\r\n        setShowRatingModal(false);\r\n        setSelectedDoctorForRating(null);\r\n        setSelectedAppointmentForRating(null); // Resetujemo ID pregleda\r\n        setRatingData({ ocjena: 5, komentar: '' });\r\n    };\r\n\r\n    const handleRatingChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setRatingData(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmitRating = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće poslati ocjenu.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!selectedDoctorForRating || ratingData.ocjena === null) {\r\n            setAlertMessage('Molimo odaberite ocjenu.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!selectedAppointmentForRating) { // Provjera da li je pregled ID prisutan\r\n            setAlertMessage('Nije moguće poslati ocjenu bez ID-a pregleda.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const ratingPayload = {\r\n                pacijentID: user.pacijentId,\r\n                doktorID: selectedDoctorForRating.id,\r\n                ocjena: parseFloat(ratingData.ocjena),\r\n                komentar: ratingData.komentar,\r\n                pregledID: selectedAppointmentForRating // <-- DODANO: Slanje pregledID-a\r\n            };\r\n\r\n            await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/ocjene`, ratingPayload, authHeaders);\r\n\r\n            setAlertMessage(`Ocjena uspješno poslana za doktora ${selectedDoctorForRating.name}! Prosječna ocjena će biti ažurirana.`);\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            closeRatingModal();\r\n\r\n            // Važno: Osvježi SVE preglede da bi se povukla nova vrijednost ocjeneDoktora iz backend DTO-a\r\n            // i ispravno ažurirao 'rated' status na frontendu.\r\n            fetchPatientAppointments();\r\n            fetchDoctors(); // Osvježi listu doktora (da bi se ažurirala prosječna ocjena)\r\n\r\n        } catch (error) {\r\n            console.error('Greška pri slanju ocjene:', error.response?.data || error.message);\r\n            let errorMessage = 'Nije uspjelo slanje ocjene. Molimo pokušajte ponovo.';\r\n            if (error.response?.data?.message) {\r\n                errorMessage = error.response.data.message;\r\n            } else if (error.message) {\r\n                errorMessage = error.message;\r\n            }\r\n            setAlertMessage(errorMessage);\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // NOVO: Funkcionalnost \"Plati sada\"\r\n    const handlePayNow = async (billId) => {\r\n        if (window.confirm('Da li ste sigurni da želite označiti ovaj račun kao plaćen?')) {\r\n            try {\r\n                // Poziv backend endpointa za ažuriranje statusa računa\r\n                await axios.put(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/${billId}/oznaci-kao-placeno`, {}, authHeaders);\r\n                setAlertMessage('Račun uspješno označen kao plaćen!');\r\n                setAlertType('success');\r\n                setShowAlert(true);\r\n                fetchBills(); // Osvježi listu računa\r\n            } catch (error) {\r\n                console.error('Greška pri označavanju računa kao plaćenog:', error.response?.data || error.message);\r\n                setAlertMessage('Nije uspjelo označavanje računa kao plaćenog. ' + (error.response?.data?.message || error.message));\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    // NOVO: Funkcionalnost \"Pregledaj detalje\"\r\n    const handleViewBillDetails = (bill) => {\r\n        setSelectedBillDetails(bill);\r\n        setShowBillDetailsModal(true);\r\n    };\r\n\r\n    const closeBillDetailsModal = () => {\r\n        setShowBillDetailsModal(false);\r\n        setSelectedBillDetails(null);\r\n    };\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Učitavanje...</span>\r\n                </Spinner>\r\n                <p className=\"ms-2\">Učitavanje podataka nadzorne ploče...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const currentPatientUserId = user.userId;\r\n\r\n    // Filtriranje pregleda za prikaz u različitim tabovima\r\n    const upcomingAppointments = allAppointments.filter(app =>\r\n        app.status === 'zakazan' || app.status === 'potvrđen'\r\n    ).sort((a, b) => new Date(a.datumPregleda + 'T' + a.vrijemePregleda) - new Date(b.datumPregleda + 'T' + b.vrijemePregleda));\r\n\r\n    const pastAppointments = allAppointments.filter(app =>\r\n        app.status === 'obavljen' || app.status === 'otkazan'\r\n    ).sort((a, b) => new Date(b.datumPregleda + 'T' + b.vrijemePregleda) - new Date(a.datumPregleda + 'T' + a.vrijemePregleda)); // Najnoviji prvi\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ minHeight: '100vh' }}>\r\n            {/* Bočna traka */}\r\n            <div className=\"bg-dark text-white p-3\" style={{ width: '250px' }}>\r\n                <h4 className=\"mb-4\">Nadzorna ploča pacijenta</h4>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('overview')}\r\n                        >\r\n                            Pregled\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('myAppointments')}\r\n                        >\r\n                            Moji nadolazeći pregledi\r\n                        </button>\r\n                    </li>\r\n                    {/* NOVI TAB: Prošli pregledi */}\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'pastAppointments' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('pastAppointments')}\r\n                        >\r\n                            Prošli pregledi\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('medicalHistory')}\r\n                        >\r\n                            Medicinska historija\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('billing')}\r\n                        >\r\n                            Naplata i plaćanja\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('messages')}\r\n                        >\r\n                            Poruke\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('doctorSearch')}\r\n                        >\r\n                            Pronađi doktora\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('profileSettings')}\r\n                        >\r\n                            Postavke profila\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            {/* Glavni sadržaj */}\r\n            <div className=\"flex-grow-1 p-4 bg-light\">\r\n                {showAlert && (\r\n                    <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n                        {alertMessage}\r\n                    </Alert>\r\n                )}\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <h2 className=\"mb-0\">Nadzorna ploča pacijenta</h2>\r\n                </div>\r\n\r\n                {/* Sadržaj na osnovu aktivnog taba */}\r\n                {activeTab === 'overview' && (\r\n                    <div>\r\n                        <h3>Dobrodošli, {patientProfile.firstName || (user ? user.fullName : 'Pacijent')}!</h3>\r\n                        <p>Ovo je vaš pregled pacijenta. Ovdje možete brzo vidjeti svoje nadolazeće preglede i nedavne aktivnosti.</p>\r\n                        <div className=\"row mt-4\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        Nadolazeći pregledi\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        {upcomingAppointments.length > 0 ? (\r\n                                            upcomingAppointments.map(app => (\r\n                                                <li key={app.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                    <div>\r\n                                                        <strong>{app.datumPregleda} u {app.vrijemePregleda}</strong>\r\n                                                        <br />\r\n                                                        <small>Razlog: {app.komentarPacijenta}</small>\r\n                                                        <br />\r\n                                                        <small>Doktor: {app.doktorIme}</small>\r\n                                                    </div>\r\n                                                    <span className={`badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`}>{app.status}</span>\r\n                                                </li>\r\n                                            ))\r\n                                        ) : (\r\n                                            <li className=\"list-group-item\">Nema nadolazećih pregleda.</li>\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'myAppointments' && (\r\n                    <div>\r\n                        <h3>Moji nadolazeći pregledi</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => openAppointmentModal()}>\r\n                            Zakaži novi pregled\r\n                        </Button>\r\n                        {upcomingAppointments.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Doktor</th>\r\n                                        <th>Datum</th>\r\n                                        <th>Vrijeme</th>\r\n                                        <th>Razlog</th>\r\n                                        <th>Status</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {upcomingAppointments.map(app => (\r\n                                        <tr key={app.id}>\r\n                                            <td>{app.doktorIme}</td>\r\n                                            <td>{app.datumPregleda}</td>\r\n                                            <td>{app.vrijemePregleda}</td>\r\n                                            <td>{app.komentarPacijenta}</td>\r\n                                            <td><span className={`badge bg-${app.status === 'zakazan' ? 'warning' : 'info'}`}>{app.status}</span></td>\r\n                                            <td>\r\n                                                <Button variant=\"danger\" size=\"sm\" onClick={() => handleCancelAppointment(app.id)}>Otkaži</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih nadolazećih pregleda.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'pastAppointments' && (\r\n                    <div>\r\n                        <h3>Prošli pregledi</h3>\r\n                        {pastAppointments.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Doktor</th>\r\n                                        <th>Datum</th>\r\n                                        <th>Vrijeme</th>\r\n                                        <th>Razlog</th>\r\n                                        <th>Status</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {pastAppointments.map(app => (\r\n                                        <tr key={app.id}>\r\n                                            <td>{app.doktorIme}</td>\r\n                                            <td>{app.datumPregleda}</td>\r\n                                            <td>{app.vrijemePregleda}</td>\r\n                                            <td>{app.komentarPacijenta}</td>\r\n                                            <td><span className={`badge bg-${app.status === 'obavljen' ? 'success' : 'danger'}`}>{app.status}</span></td>\r\n                                            <td>\r\n                                                {app.status === 'obavljen' && !app.rated ? (\r\n                                                    <Button variant=\"success\" size=\"sm\" onClick={() => openRatingModal(app.doktorID, app.doktorIme, app.id)}>Ocjeni</Button>\r\n                                                ) : app.status === 'obavljen' && app.rated ? (\r\n                                                    <small className=\"text-muted\">Ocijenjeno ({app.ocjenaDoktora ? app.ocjenaDoktora.toFixed(1) : 'N/A'})</small>\r\n                                                ) : app.status === 'otkazan' ? (\r\n                                                    <small className=\"text-muted\">Otkazan</small>\r\n                                                ) : (\r\n                                                    <small>Nema dostupnih akcija</small>\r\n                                                )}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih prošlih pregleda.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'medicalHistory' && (\r\n                    <div>\r\n                        <h3>Moja medicinska historija</h3>\r\n                        {medicalHistory.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {medicalHistory.map((record, index) => (\r\n                                    <li key={record.id} className=\"list-group-item\">\r\n                                        <strong>Datum:</strong> {record.date} <br />\r\n                                        <strong>Dijagnoza:</strong> {record.diagnosis} <br />\r\n                                        <strong>Tretman:</strong> {record.treatment} <br />\r\n                                        <strong>Doktor:</strong> {record.doctorName} <br />\r\n                                        <strong>Bilješke:</strong> {record.notes || 'N/A'}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Nema pronađenih zapisa medicinske historije.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'billing' && (\r\n                    <div>\r\n                        <h3>Naplata i plaćanja</h3>\r\n                        {bills.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID računa</th>\r\n                                        <th>Datum izdavanja</th>\r\n                                        <th>Iznos</th>\r\n                                        <th>Status</th>\r\n                                        <th>Opis</th>\r\n                                        <th>Izdao</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {bills.map(bill => (\r\n                                        <tr key={bill.id}>\r\n                                            <td>{bill.id}</td>\r\n                                            <td>{new Date(bill.billDate).toLocaleDateString()}</td>\r\n                                            <td>{bill.amount ? bill.amount.toFixed(2) : 'N/A'} KM</td>\r\n                                            <td><span className={`badge bg-${bill.status === 'PLACEN' ? 'success' : 'warning'}`}>{bill.status}</span></td>\r\n                                            <td>{bill.opis}</td>\r\n                                            <td>{bill.doktorIme}</td>\r\n                                            <td>\r\n                                                {bill.status === 'NEPLACEN' && (\r\n                                                    <Button variant=\"success\" size=\"sm\" className=\"me-2\" onClick={() => handlePayNow(bill.id)}>Plati sada</Button>\r\n                                                )}\r\n                                                <Button variant=\"info\" size=\"sm\" onClick={() => handleViewBillDetails(bill)}>Pregledaj detalje</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih zapisa o naplati.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'messages' && (\r\n                    <div>\r\n                        <h3>Moje poruke</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => setNewMessage({ recipientId: '', subject: '', content: '' })}>Napiši novu poruku</Button>\r\n\r\n                        {messages.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {messages.map(msg => (\r\n                                    <li key={msg.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            {/* Prikazuje ime pošiljatelja poruke (Auth userId), provjerava je li trenutni korisnik pacijent ili doktor */}\r\n                                            <strong>Od: {msg.senderId === currentPatientUserId ? 'Ja' : (doctors.find(d => d.userId === msg.senderId)?.firstName + ' ' + doctors.find(d => d.userId === msg.senderId)?.lastName || `Doktor (${msg.senderId})`)}</strong> <br />\r\n                                            <strong>Naslov:</strong> {msg.subject} <br />\r\n                                            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                        <Button variant=\"info\" size=\"sm\" onClick={() => handleViewMessage(msg)}>Pregledaj poruku</Button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Nema pronađenih poruka.</p>\r\n                        )}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <h4>Napiši novu poruku</h4>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formRecipient\">\r\n                                <Form.Label>Primalac (Doktor)</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"recipientId\"\r\n                                    value={newMessage.recipientId}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Odaberite doktora --</option>\r\n                                    {doctors.map(doctor => (\r\n                                        <option key={doctor.userId} value={doctor.userId}>{doctor.firstName} {doctor.lastName}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formSubject\">\r\n                                <Form.Label>Naslov</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    value={newMessage.subject}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formContent\">\r\n                                <Form.Label>Sadržaj</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"content\"\r\n                                    value={newMessage.content}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSendMessage}>Pošalji poruku</Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'doctorSearch' && (\r\n                    <div>\r\n                        <h3>Pronađi doktora</h3>\r\n                        <p>Pretražite doktore po imenu ili specijalnosti kako biste pronašli pravu njegu za vas.</p>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control type=\"text\" placeholder=\"Pretražite po imenu ili specijalnosti...\" />\r\n                        </Form.Group>\r\n                        {doctors.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Ime</th>\r\n                                        <th>Specijalnost</th>\r\n                                        <th>Kontakt</th>\r\n                                        <th>Ocjena</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {doctors.map(doctor => (\r\n                                        <tr key={doctor.id}>\r\n                                            <td>{doctor.firstName} {doctor.lastName}</td>\r\n                                            <td>{doctor.specialty || 'Opšti praktičar'}</td>\r\n                                            <td>{doctor.email} | {doctor.phone}</td>\r\n                                            <td>{doctor.ocjena ? doctor.ocjena.toFixed(1) : 'N/A'}</td>\r\n                                            <td>\r\n                                                <Button variant=\"primary\" size=\"sm\" onClick={() => {\r\n                                                    openAppointmentModal(null, doctor.id);\r\n                                                }}>Zakaži pregled</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nije pronađen nijedan doktor.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'profileSettings' && (\r\n                    <div>\r\n                        <h3>Postavke profila</h3>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                                <Form.Label>Ime</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={patientProfile.firstName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                                <Form.Label>Prezime</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    value={patientProfile.lastName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={patientProfile.email || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formPhone\">\r\n                                <Form.Label>Telefon</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"phone\"\r\n                                    value={patientProfile.phone || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSaveProfile}>\r\n                                Sačuvaj profil\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Modal za zakazivanje pregleda */}\r\n            <Modal show={showAppointmentModal} onHide={closeAppointmentModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{editingAppointment ? 'Uredi pregled' : 'Zakaži novi pregled'}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formDoctor\">\r\n                            <Form.Label>Odaberite doktora</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"doctorId\"\r\n                                value={newAppointment.doctorId}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">-- Odaberite doktora --</option>\r\n                                {doctors.map(doctor => (\r\n                                    <option key={doctor.id} value={doctor.id}>{doctor.firstName} {doctor.lastName}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        {newAppointment.doctorId && (\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAvailableTerm\">\r\n                                <Form.Label>Odaberite dostupan termin</Form.Label>\r\n                                {loading ? (\r\n                                    <Spinner animation=\"border\" size=\"sm\" />\r\n                                ) : allDoctorAvailableTerms.length > 0 ? (\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"terminId\"\r\n                                        value={newAppointment.terminId}\r\n                                        onChange={handleNewAppointmentChange}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">-- Odaberite datum i vrijeme --</option>\r\n                                        {allDoctorAvailableTerms.map(term => (\r\n                                            <option key={term.terminID} value={term.terminID}>{term.display}</option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                ) : (\r\n                                    <Alert variant=\"info\">Nema dostupnih termina za ovog doktora.</Alert>\r\n                                )}\r\n                            </Form.Group>\r\n                        )}\r\n\r\n                        {newAppointment.terminId && (\r\n                            <>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formAppointmentDateDisplay\">\r\n                                    <Form.Label>Odabrani datum</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={newAppointment.appointmentDate}\r\n                                        readOnly\r\n                                        disabled\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formAppointmentTimeDisplay\">\r\n                                    <Form.Label>Odabrano vrijeme</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={newAppointment.appointmentTime ? newAppointment.appointmentTime.substring(0, 5) : ''}\r\n                                        readOnly\r\n                                        disabled\r\n                                    />\r\n                                </Form.Group>\r\n                            </>\r\n                        )}\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formReason\">\r\n                            <Form.Label>Razlog za pregled</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"reason\"\r\n                                value={newAppointment.reason}\r\n                                onChange={handleNewAppointmentChange}\r\n                                placeholder=\"npr. Opšti pregled, specifični simptomi...\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeAppointmentModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={handleScheduleAppointment}\r\n                        disabled={!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason || loading}\r\n                    >\r\n                        {editingAppointment ? 'Ažuriraj pregled' : 'Zakaži pregled'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Modal detalja poruke */}\r\n            <Modal show={selectedMessage !== null} onHide={closeMessageModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Poruka: {selectedMessage?.subject}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedMessage && (\r\n                        <>\r\n                            <p><strong>Od:</strong> {selectedMessage.senderId === currentPatientUserId ? 'Ja' : (doctors.find(d => d.userId === selectedMessage.senderId)?.firstName + ' ' + doctors.find(d => d.userId === selectedMessage.senderId)?.lastName || `Doktor (${selectedMessage.senderId})`)}</p>\r\n                            <p><strong>Datum:</strong> {new Date(selectedMessage.timestamp).toLocaleString()}</p>\r\n                            <hr />\r\n                            <p>{selectedMessage.content}</p>\r\n\r\n                            {selectedMessage.replies && selectedMessage.replies.length > 0 && (\r\n                                <div className=\"mt-4\">\r\n                                    <h5>Odgovori:</h5>\r\n                                    {selectedMessage.replies.map((reply, index) => (\r\n                                        <div key={index} className=\"border p-2 mb-2 rounded bg-light\">\r\n                                            <strong>{reply.senderId === currentPatientUserId ? 'Ja' : (doctors.find(d => d.userId === reply.senderId)?.firstName + ' ' + doctors.find(d => d.userId === reply.senderId)?.lastName || `Doktor (${reply.senderId})`)}:</strong> {reply.content}\r\n                                            <br />\r\n                                            <small>{new Date(reply.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            <Form.Group className=\"mt-4\">\r\n                                <Form.Label>Odgovor</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={2}\r\n                                    value={replyMessage.content}\r\n                                    onChange={handleReplyMessageChange}\r\n                                    placeholder=\"Upišite svoj odgovor ovdje...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" className=\"mt-2\" onClick={() => handleReply(selectedMessage.id)}>Pošalji odgovor</Button>\r\n                        </>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeMessageModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Modal za ocjenjivanje */}\r\n            <Modal show={showRatingModal} onHide={closeRatingModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Ocjeni doktora: {selectedDoctorForRating?.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formRating\">\r\n                            <Form.Label>Ocjena (1-5)</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"ocjena\"\r\n                                value={ratingData.ocjena}\r\n                                onChange={handleRatingChange}\r\n                                required\r\n                            >\r\n                                <option value=\"1\">1 - Vrlo loše</option>\r\n                                <option value=\"2\">2 - Loše</option>\r\n                                <option value=\"3\">3 - Prosječno</option>\r\n                                <option value=\"4\">4 - Dobro</option>\r\n                                <option value=\"5\">5 - Odlično</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formRatingComment\">\r\n                            <Form.Label>Komentar (opcionalno)</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"komentar\"\r\n                                value={ratingData.komentar}\r\n                                onChange={handleRatingChange}\r\n                                placeholder=\"Napišite komentar o svom iskustvu...\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeRatingModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSubmitRating}>\r\n                        Pošalji ocjenu\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* NOVO: Modal detalja računa */}\r\n            <Modal show={showBillDetailsModal} onHide={closeBillDetailsModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Detalji računa</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedBillDetails && (\r\n                        <div>\r\n                            <p><strong>ID računa:</strong> {selectedBillDetails.id}</p>\r\n                            <p><strong>Datum izdavanja:</strong> {new Date(selectedBillDetails.billDate).toLocaleDateString()}</p>\r\n                            <p><strong>Iznos:</strong> {selectedBillDetails.amount ? selectedBillDetails.amount.toFixed(2) : 'N/A'} KM</p>\r\n                            <p><strong>Status:</strong> <span className={`badge bg-${selectedBillDetails.status === 'PLACEN' ? 'success' : 'warning'}`}>{selectedBillDetails.status}</span></p>\r\n                            <p><strong>Opis:</strong> {selectedBillDetails.opis}</p>\r\n                            <p><strong>Izdao:</strong> {selectedBillDetails.doktorIme}</p>\r\n                            {selectedBillDetails.dueDate && (\r\n                                <p><strong>Datum dospijeća:</strong> {new Date(selectedBillDetails.dueDate).toLocaleDateString()}</p>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeBillDetailsModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}