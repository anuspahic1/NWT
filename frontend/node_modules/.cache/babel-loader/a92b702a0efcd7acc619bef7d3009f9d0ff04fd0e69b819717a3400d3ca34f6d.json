{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\n\n// Definiranje API prefiksa za svaki mikroservis\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`; // Pretpostavljena putanja za autentifikaciju, ako se koristi direktno\n\nfunction PatientDashboard() {\n  _s();\n  var _doctors$find6;\n  const {\n    token,\n    user\n  } = useAuth(); // Assuming 'user' object contains patient-specific info like ID\n  console.log(\"Current user object from useAuth:\", user); // <-- DODAJ OVU LINIJU\n\n  // Memoizacija authHeaders - kreira se samo kada se token promijeni\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [appointments, setAppointments] = useState([]);\n  const [medicalHistory, setMedicalHistory] = useState([]);\n  const [patientProfile, setPatientProfile] = useState({});\n  const [doctors, setDoctors] = useState([]); // To fetch doctors for appointment scheduling and search\n  const [availableTimes, setAvailableTimes] = useState([]); // For doctor availability\n  const [documents, setDocuments] = useState([]); // For patient documents\n  const [bills, setBills] = useState([]); // For billing information\n  const [messages, setMessages] = useState([]); // For secure messaging\n  const [newMessage, setNewMessage] = useState({\n    recipientId: '',\n    subject: '',\n    content: ''\n  });\n  const [replyMessage, setReplyMessage] = useState({\n    messageId: '',\n    content: ''\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null); // For viewing a single message\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [newAppointment, setNewAppointment] = useState({\n    doctorId: '',\n    // Ovo će biti doktorID iz baze\n    appointmentDate: '',\n    appointmentTime: '',\n    reason: ''\n  });\n  const [editingAppointment, setEditingAppointment] = useState(null);\n  const [loading, setLoading] = useState(true); // Loading state\n\n  // --- API Calls ---\n\n  const fetchPatientAppointments = async () => {\n    if (!user || !user.id) {\n      console.warn(\"Patient ID not available for fetching appointments.\");\n      return;\n    }\n    try {\n      // Pretpostavka: Termin i Pregledi servis ima endpoint za preglede po pacijentu\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/pacijent/${user.id}`, authHeaders);\n      // Prilagođavamo podatke da odgovaraju trenutnoj strukturi aplikacije\n      const transformedAppointments = response.data.map(app => ({\n        id: app.pregledID,\n        doctorId: app.doktorID,\n        patientId: app.pacijentID,\n        appointmentDate: app.datumPregleda,\n        appointmentTime: app.vrijemePregleda,\n        reason: app.komentarPacijenta,\n        // Koristimo komentarPacijenta kao razlog\n        status: app.status,\n        terminID: app.terminID // Dodajemo terminID\n      }));\n      setAppointments(transformedAppointments);\n    } catch (error) {\n      var _error$response;\n      console.error('Greška prilikom dohvaćanja pacijentovih pregleda:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje zakazanih pregleda.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMedicalHistory = async () => {\n    if (!user || !user.id) {\n      console.warn(\"Patient ID not available for fetching medical history.\");\n      return;\n    }\n    try {\n      // Pretpostavka: Korisnici i Doktori servis ima endpoint za medicinsku historiju pacijenta\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.id}/medical-history`, authHeaders);\n      setMedicalHistory(response.data); // Pretpostavljamo da je format odgovora kompatibilan\n    } catch (error) {\n      var _error$response2;\n      console.error('Greška prilikom dohvaćanja medicinske historije:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje medicinske historije.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchPatientProfile = async () => {\n    if (!user || !user.id) {\n      console.warn(\"Patient ID not available for fetching patient profile.\");\n      return;\n    }\n    try {\n      // Pretpostavka: Korisnici i Doktori servis ima endpoint za dohvaćanje profila pacijenta\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.id}`, authHeaders);\n      setPatientProfile({\n        id: response.data.pacijentID,\n        firstName: response.data.ime,\n        lastName: response.data.prezime,\n        email: response.data.email,\n        phone: response.data.telefon,\n        // address: response.data.adresa, // Dodaj ako postoji u backendu\n        userId: response.data.userId // Dodaj userId\n      });\n    } catch (error) {\n      var _error$response3;\n      console.error('Greška prilikom dohvaćanja pacijentovog profila:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje podataka profila.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctors = async () => {\n    try {\n      // Pretpostavka: Korisnici i Doktori servis ima endpoint za sve doktore\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        firstName: doc.ime,\n        lastName: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\n        email: doc.email,\n        phone: doc.telefon // Pretpostavljamo da je telefon\n      }));\n      setDoctors(transformedDoctors);\n    } catch (error) {\n      var _error$response4;\n      console.error('Greška prilikom dohvaćanja doktora:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje liste doktora.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctorAvailability = async (doctorId, date) => {\n    if (!doctorId || !date) {\n      setAvailableTimes([]);\n      return;\n    }\n    try {\n      // Pretpostavka: Termin i Pregledi servis ima endpoint za dostupnost doktora\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${doctorId}/datum/${date}`, authHeaders);\n      // Filtriramo samo dostupne termine i vraćamo samo vrijeme\n      const available = response.data.filter(term => term.dostupnost).map(term => term.vrijeme).sort(); // Sortiramo vremena\n      setAvailableTimes(available);\n    } catch (error) {\n      var _error$response5;\n      console.error('Greška prilikom dohvaćanja dostupnosti doktora:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje dostupnosti doktora.');\n      setAlertType('danger');\n      setShowAlert(true);\n      setAvailableTimes([]);\n    }\n  };\n  const fetchDocuments = async () => {\n    if (!user || !user.id) {\n      console.warn(\"Patient ID not available for fetching documents.\");\n      return;\n    }\n    try {\n      // Pretpostavka: Obavijesti i Dokumenti servis ima endpoint za dokumente pacijenta\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumenti/pacijent/${user.id}`, authHeaders);\n      const transformedDocuments = response.data.map(doc => ({\n        id: doc.dokumentID,\n        fileName: doc.nazivFajla,\n        documentType: doc.tipDokumenta,\n        // Pretpostavljamo da ovo postoji\n        uploadDate: doc.datumKreiranja // Pretpostavljamo da ovo postoji\n      }));\n      setDocuments(transformedDocuments);\n    } catch (error) {\n      var _error$response6;\n      console.error('Greška prilikom dohvaćanja dokumenata:', ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje dokumenata.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchBills = async () => {\n    if (!user || !user.id) {\n      console.warn(\"Patient ID not available for fetching bills.\");\n      return;\n    }\n    try {\n      // Pretpostavka: Obavijesti i Dokumenti servis ima endpoint za račune pacijenta\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.id}`, authHeaders);\n      const transformedBills = response.data.map(bill => ({\n        id: bill.racunID,\n        billDate: bill.datumIzdavanja,\n        amount: bill.iznos,\n        status: bill.statusRacuna,\n        // Pretpostavljamo da je string tipa 'PAID', 'UNPAID'\n        dueDate: bill.datumDospijeca // Pretpostavljamo da ovo postoji\n      }));\n      setBills(transformedBills);\n    } catch (error) {\n      var _error$response7;\n      console.error('Greška prilikom dohvaćanja računa:', ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje informacija o naplati.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMessages = async () => {\n    if (!user || !user.id) {\n      console.warn(\"Patient ID not available for fetching messages.\");\n      return;\n    }\n    try {\n      // Pretpostavka: Obavijesti i Dokumenti servis ima endpoint za poruke pacijenta\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/primatelj/${user.id}`, authHeaders);\n      // Mapiramo dolazne poruke na format koji očekuje frontend\n      const transformedMessages = response.data.map(msg => ({\n        id: msg.porukaID,\n        senderId: msg.posiljaocID,\n        senderType: msg.tipPosiljaoca,\n        // 'DOKTOR' ili 'PACIJENT'\n        recipientId: msg.primateljID,\n        subject: msg.naslov,\n        content: msg.sadrzaj,\n        timestamp: msg.datumVrijemeSlanja,\n        replies: msg.odgovori || [] // Pretpostavljamo da odgovori dolaze kao array\n      }));\n      setMessages(transformedMessages);\n    } catch (error) {\n      var _error$response8;\n      console.error('Greška prilikom dohvaćanja poruka:', ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje poruka.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- useEffect Hooks ---\n  useEffect(() => {\n    const loadAllData = async () => {\n      if (token && user && user.id) {\n        setLoading(true);\n        // Čekamo da se svi podaci dohvate\n        await Promise.all([fetchPatientAppointments(), fetchMedicalHistory(), fetchPatientProfile(), fetchDoctors(), fetchDocuments(), fetchBills(), fetchMessages()]);\n        setLoading(false);\n      } else if (!token) {\n        setLoading(false); // Ako nema tokena, prestajemo s učitavanjem\n      }\n    };\n    loadAllData();\n  }, [token, user]); // Re-run when token or user changes\n\n  // --- Appointment Scheduling/Cancellation ---\n\n  const openAppointmentModal = (appointment = null) => {\n    if (appointment) {\n      setEditingAppointment(appointment);\n      setNewAppointment({\n        doctorId: appointment.doctorId,\n        appointmentDate: appointment.appointmentDate,\n        appointmentTime: appointment.appointmentTime,\n        reason: appointment.reason\n      });\n      fetchDoctorAvailability(appointment.doctorId, appointment.appointmentDate);\n    } else {\n      setEditingAppointment(null);\n      setNewAppointment({\n        doctorId: '',\n        appointmentDate: '',\n        appointmentTime: '',\n        reason: ''\n      });\n      setAvailableTimes([]); // Clear availability for new appointment\n    }\n    setShowAppointmentModal(true);\n  };\n  const closeAppointmentModal = () => {\n    setShowAppointmentModal(false);\n    setEditingAppointment(null);\n    setNewAppointment({\n      doctorId: '',\n      appointmentDate: '',\n      appointmentTime: '',\n      reason: ''\n    });\n    setAvailableTimes([]);\n  };\n  const handleNewAppointmentChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewAppointment(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (name === 'doctorId' || name === 'appointmentDate') {\n      const docId = name === 'doctorId' ? value : newAppointment.doctorId;\n      const appDate = name === 'appointmentDate' ? value : newAppointment.appointmentDate;\n      if (docId && appDate) {\n        await fetchDoctorAvailability(docId, appDate);\n      } else {\n        setAvailableTimes([]);\n      }\n    }\n  };\n  const handleScheduleAppointment = async () => {\n    if (!user || !user.id) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće zakazati pregled.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      // Pronađi ID termina na osnovu datuma i vremena\n      const selectedTerm = availableTimes.find(term => term.vrijeme === newAppointment.appointmentTime);\n      if (!selectedTerm && !editingAppointment) {\n        setAlertMessage('Molimo odaberite validan termin iz liste dostupnih.');\n        setAlertType('warning');\n        setShowAlert(true);\n        return;\n      }\n      const appointmentData = {\n        pacijentID: user.id,\n        doktorID: newAppointment.doctorId,\n        datumPregleda: newAppointment.appointmentDate,\n        vrijemePregleda: newAppointment.appointmentTime,\n        komentarPacijenta: newAppointment.reason,\n        // Mapiramo razlog na komentarPacijenta\n        status: editingAppointment ? editingAppointment.status : 'zakazan',\n        // Početni status 'zakazan'\n        terminID: selectedTerm ? selectedTerm.terminID : editingAppointment === null || editingAppointment === void 0 ? void 0 : editingAppointment.terminID // Uzmi ID termina\n      };\n      let response;\n      if (editingAppointment) {\n        // Za ažuriranje postojećeg pregleda\n        response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${editingAppointment.id}`, appointmentData, authHeaders);\n        setAlertMessage('Pregled uspješno ažuriran!');\n      } else {\n        // Za zakazivanje novog pregleda\n        response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\n        setAlertMessage('Pregled uspješno zakazan!');\n      }\n      setAlertType('success');\n      setShowAlert(true);\n      fetchPatientAppointments(); // Osvježi listu pregleda\n      closeAppointmentModal();\n    } catch (error) {\n      var _error$response9, _error$response0, _error$response0$data;\n      console.error('Greška prilikom zakazivanja/ažuriranja pregleda:', ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n      let errorMessage = 'Neuspješno zakazivanje/ažuriranje pregleda. Molimo pokušajte ponovo.';\n      if ((_error$response0 = error.response) !== null && _error$response0 !== void 0 && (_error$response0$data = _error$response0.data) !== null && _error$response0$data !== void 0 && _error$response0$data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      setAlertMessage(errorMessage);\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleCancelAppointment = async appointmentId => {\n    // Zamijenimo window.confirm sa custom modalom\n    if (window.confirm('Jeste li sigurni da želite otkazati ovaj pregled?')) {\n      try {\n        // Ažuriramo status pregleda na 'otkazan'\n        await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}/status`, {\n          status: 'otkazan'\n        }, authHeaders);\n        setAlertMessage('Pregled uspješno otkazan!');\n        setAlertType('success');\n        setShowAlert(true);\n        fetchPatientAppointments(); // Osvježi listu pregleda\n      } catch (error) {\n        var _error$response1, _error$response10, _error$response10$dat;\n        console.error('Greška prilikom otkazivanja pregleda:', ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data) || error.message);\n        setAlertMessage('Neuspješno otkazivanje pregleda. Molimo pokušajte ponovo. ' + (((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.message) || error.message));\n        setAlertType('danger');\n        setShowAlert(true);\n      }\n    }\n  };\n\n  // --- Profile Update ---\n  const handleProfileChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPatientProfile(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSaveProfile = async () => {\n    if (!user || !user.id) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće sačuvati profil.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const profilePayload = {\n        ime: patientProfile.firstName,\n        prezime: patientProfile.lastName,\n        email: patientProfile.email,\n        telefon: patientProfile.phone,\n        // adresa: patientProfile.address, // Dodaj ako postoji u backendu\n        userId: patientProfile.userId || user.id // Osiguraj da imamo userId\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.id}`, profilePayload, authHeaders);\n\n      // Ažuriraj i Auth servis ako su se promijenili fullName, email ili telefon\n      const authProfilePayload = {\n        fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\n        email: patientProfile.email,\n        telefon: patientProfile.phone\n      };\n      await axios.put(`${AUTH_API_PREFIX}/users/${user.id}`, authProfilePayload, authHeaders);\n      setAlertMessage('Profil uspješno ažuriran!');\n      setAlertType('success');\n      setShowAlert(true);\n      fetchPatientProfile(); // Ponovo dohvati profil da se vide promjene\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response12$dat;\n      console.error('Greška prilikom ažuriranja profila:', ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message);\n      setAlertMessage('Neuspješno ažuriranje profila. Molimo pokušajte ponovo. ' + (((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- Document Upload ---\n  const handleDocumentUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('pacijentID', user.id); // Backend očekuje pacijentID\n    formData.append('tipDokumenta', 'Patient Upload'); // Može biti i input polje za ovo\n\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumenti/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setAlertMessage('Dokument uspješno prenesen!');\n      setAlertType('success');\n      setShowAlert(true);\n      fetchDocuments(); // Osvježi listu dokumenata\n    } catch (error) {\n      var _error$response13, _error$response14, _error$response14$dat;\n      console.error('Greška prilikom prijenosa dokumenta:', ((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) || error.message);\n      setAlertMessage('Neuspješan prijenos dokumenta. ' + (((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : (_error$response14$dat = _error$response14.data) === null || _error$response14$dat === void 0 ? void 0 : _error$response14$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- Secure Messaging ---\n  const handleNewMessageChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMessage(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleReplyMessageChange = e => {\n    setReplyMessage(prev => ({\n      ...prev,\n      content: e.target.value\n    }));\n  };\n  const handleSendMessage = async () => {\n    if (!user || !user.id) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće poslati poruku.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\n      setAlertMessage('Molimo popunite sva polja za poruku.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const messageData = {\n        posiljaocID: user.id,\n        // Pacijent je pošiljalac\n        primateljID: newMessage.recipientId,\n        // Doktorov ID\n        naslov: newMessage.subject,\n        sadrzaj: newMessage.content,\n        tipPosiljaoca: 'PACIJENT' // Označavamo tip pošiljaoca\n      };\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\n      setAlertMessage('Poruka uspješno poslana!');\n      setAlertType('success');\n      setShowAlert(true);\n      setNewMessage({\n        recipientId: '',\n        subject: '',\n        content: ''\n      }); // Očisti formu\n      fetchMessages(); // Osvježi poruke\n    } catch (error) {\n      var _error$response15, _error$response16, _error$response16$dat;\n      console.error('Greška prilikom slanja poruke:', ((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.data) || error.message);\n      setAlertMessage('Neuspješno slanje poruke. ' + (((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : (_error$response16$dat = _error$response16.data) === null || _error$response16$dat === void 0 ? void 0 : _error$response16$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleReply = async messageId => {\n    if (!user || !user.id) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće odgovoriti.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!replyMessage.content) {\n      setAlertMessage('Sadržaj odgovora ne može biti prazan.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      // Endpoint za odgovore\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\n        posiljaocID: user.id,\n        sadrzaj: replyMessage.content,\n        tipPosiljaoca: 'PACIJENT'\n      }, authHeaders);\n      setAlertMessage('Odgovor uspješno poslan!');\n      setAlertType('success');\n      setShowAlert(true);\n      setReplyMessage({\n        messageId: '',\n        content: ''\n      });\n      fetchMessages(); // Osvježi poruke da se vidi odgovor\n      // Ažuriraj odabranu poruku da se odgovor prikaže odmah\n      setSelectedMessage(prev => ({\n        ...prev,\n        replies: [...(prev.replies || []), {\n          posiljaocID: user.id,\n          // Koristi posiljaocID za replies\n          tipPosiljaoca: 'PACIJENT',\n          sadrzaj: replyMessage.content,\n          datumVrijemeSlanja: new Date().toISOString() // Koristi datumVrijemeSlanja\n        }]\n      }));\n    } catch (error) {\n      var _error$response17, _error$response18, _error$response18$dat;\n      console.error('Greška prilikom slanja odgovora:', ((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : _error$response17.data) || error.message);\n      setAlertMessage('Neuspješno slanje odgovora. ' + (((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : (_error$response18$dat = _error$response18.data) === null || _error$response18$dat === void 0 ? void 0 : _error$response18$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleViewMessage = message => {\n    setSelectedMessage(message);\n  };\n  const closeMessageModal = () => {\n    setSelectedMessage(null);\n    setReplyMessage({\n      messageId: '',\n      content: ''\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-2\",\n        children: \"U\\u010Ditavanje podataka kontrolne plo\\u010De...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-white p-3\",\n      style: {\n        width: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-4\",\n        children: \"Kontrolna plo\\u010Da pacijenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('overview'),\n            children: \"Pregled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('myAppointments'),\n            children: \"Moji pregledi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('medicalHistory'),\n            children: \"Medicinska historija\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('documents'),\n            children: \"Moji dokumenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('billing'),\n            children: \"Naplata i pla\\u0107anja\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('messages'),\n            children: \"Poruke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('doctorSearch'),\n            children: \"Prona\\u0111i doktora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('profileSettings'),\n            children: \"Postavke profila\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 p-4 bg-light\",\n      children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: alertType,\n        onClose: () => setShowAlert(false),\n        dismissible: true,\n        className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n        style: {\n          zIndex: 1050\n        },\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: \"Kontrolna plo\\u010Da pacijenta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 17\n      }, this), activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Dobrodo\\u0161li, \", patientProfile.firstName || (user ? user.firstName : 'Pacijent'), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ovo je va\\u0161 pregled pacijenta. Ovdje mo\\u017Eete brzo vidjeti svoje nadolaze\\u0107e preglede i nedavne aktivnosti.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: \"Nadolaze\\u0107i pregledi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-group list-group-flush\",\n                children: appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').length > 0 ? appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').map(app => {\n                  var _doctors$find, _doctors$find2;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"list-group-item d-flex justify-content-between align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [app.appointmentDate, \" u \", app.appointmentTime]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 682,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 683,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: [\"Razlog: \", app.reason]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 684,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 685,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: [\"Doktor: \", (_doctors$find = doctors.find(doc => doc.id === app.doctorId)) === null || _doctors$find === void 0 ? void 0 : _doctors$find.firstName, \" \", (_doctors$find2 = doctors.find(doc => doc.id === app.doctorId)) === null || _doctors$find2 === void 0 ? void 0 : _doctors$find2.lastName]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 686,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 681,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`,\n                      children: app.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 688,\n                      columnNumber: 53\n                    }, this)]\n                  }, app.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 680,\n                    columnNumber: 49\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: \"Nema nadolaze\\u0107ih pregleda.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 21\n      }, this), activeTab === 'myAppointments' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moji pregledi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => openAppointmentModal(),\n          children: \"Zaka\\u017Ei novi pregled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 25\n        }, this), appointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Doktor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vrijeme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Razlog\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: appointments.map(app => {\n              var _doctors$find3, _doctors$find4;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(_doctors$find3 = doctors.find(doc => doc.id === app.doctorId)) === null || _doctors$find3 === void 0 ? void 0 : _doctors$find3.firstName, \" \", (_doctors$find4 = doctors.find(doc => doc.id === app.doctorId)) === null || _doctors$find4 === void 0 ? void 0 : _doctors$find4.lastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: app.appointmentDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: app.appointmentTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: app.reason\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge bg-${app.status === 'obavljen' ? 'success' : app.status === 'zakazan' ? 'warning' : 'danger'}`,\n                    children: app.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 726,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: app.status === 'zakazan' || app.status === 'potvrđen' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"info\",\n                      size: \"sm\",\n                      className: \"me-2\",\n                      onClick: () => openAppointmentModal(app),\n                      children: \"Uredi\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 730,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"danger\",\n                      size: \"sm\",\n                      onClick: () => handleCancelAppointment(app.id),\n                      children: \"Otka\\u017Ei\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 731,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"Nema dostupnih akcija\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 734,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 727,\n                  columnNumber: 45\n                }, this)]\n              }, app.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111ene historije pregleda. Zaka\\u017Eite svoj prvi pregled!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 21\n      }, this), activeTab === 'medicalHistory' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moja medicinska historija\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 25\n        }, this), medicalHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: medicalHistory.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 41\n            }, this), \" \", record.date, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 79\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Dijagnoza:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 41\n            }, this), \" \", record.diagnosis, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 88\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tretman:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 41\n            }, this), \" \", record.treatment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 86\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Doktor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 41\n            }, this), \" \", record.doctorName]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih zapisa medicinske historije.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 21\n      }, this), activeTab === 'documents' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moji dokumenti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formFile\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Prenesi novi dokument\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: handleDocumentUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 25\n        }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Naziv dokumenta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum prijenosa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.documentType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(doc.uploadDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  href: `${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumenti/download/${doc.id}`,\n                  target: \"_blank\",\n                  children: \"Preuzmi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 793,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 45\n              }, this)]\n            }, doc.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih dokumenata.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 21\n      }, this), activeTab === 'billing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Naplata i pla\\u0107anja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 25\n        }, this), bills.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID ra\\u010Duna\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Iznos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum dospije\\u0107a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: bills.map(bill => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(bill.billDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 825,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", bill.amount ? bill.amount.toFixed(2) : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 826,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${bill.status === 'PAID' ? 'success' : 'danger'}`,\n                  children: bill.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 827,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(bill.dueDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.status === 'UNPAID' && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  className: \"me-2\",\n                  children: \"Plati sada\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 831,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  children: \"Pogledaj detalje\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 833,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 45\n              }, this)]\n            }, bill.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih zapisa o naplati.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 21\n      }, this), activeTab === 'messages' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moje poruke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => setNewMessage({\n            recipientId: '',\n            subject: '',\n            content: ''\n          }),\n          children: \"Sastavi novu poruku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 25\n        }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: messages.map(msg => {\n            var _doctors$find5;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"Od: \", msg.senderType === 'DOKTOR' ? ((_doctors$find5 = doctors.find(d => d.id === msg.senderId)) === null || _doctors$find5 === void 0 ? void 0 : _doctors$find5.lastName) || `Doktor (${msg.senderId})` : 'Ja']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 856,\n                  columnNumber: 45\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 856,\n                  columnNumber: 186\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Naslov:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 857,\n                  columnNumber: 45\n                }, this), \" \", msg.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 857,\n                  columnNumber: 84\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(msg.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 858,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                size: \"sm\",\n                onClick: () => handleViewMessage(msg),\n                children: \"Pogledaj poruku\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 41\n              }, this)]\n            }, msg.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih poruka.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sastavi novu poruku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Primalac (Doktor)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"recipientId\",\n              value: newMessage.recipientId,\n              onChange: handleNewMessageChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite doktora --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 881,\n                columnNumber: 37\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.id,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 874,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Naslov\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"subject\",\n              value: newMessage.subject,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Sadr\\u017Eaj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"content\",\n              value: newMessage.content,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSendMessage,\n            children: \"Po\\u0161alji poruku\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 21\n      }, this), activeTab === 'doctorSearch' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Prona\\u0111i doktora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pretra\\u017Eite doktore po imenu ili specijalnosti kako biste prona\\u0161li pravu njegu za vas.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Pretra\\u017Ei po imenu ili specijalnosti...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 25\n        }, this), doctors.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Ime\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Specijalnost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Kontakt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 927,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 924,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.specialty || 'Opšti praktičar'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 935,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.email, \" | \", doctor.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 936,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"sm\",\n                  onClick: () => {\n                    setNewAppointment(prev => ({\n                      ...prev,\n                      doctorId: doctor.id\n                    }));\n                    openAppointmentModal();\n                  },\n                  children: \"Zaka\\u017Ei pregled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 938,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 45\n              }, this)]\n            }, doctor.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 933,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih doktora.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 21\n      }, this), activeTab === 'profileSettings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Postavke profila\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formFirstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Ime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 958,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              value: patientProfile.firstName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formLastName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Prezime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 967,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              value: patientProfile.lastName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: patientProfile.email || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formPhone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Telefon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 985,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"phone\",\n              value: patientProfile.phone || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 984,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAddress\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Adresa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"address\",\n              value: patientProfile.address || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSaveProfile,\n            children: \"Sa\\u010Duvaj profil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAppointmentModal,\n      onHide: closeAppointmentModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: editingAppointment ? 'Uredi pregled' : 'Zakaži novi pregled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1013,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDoctor\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odaberite doktora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1018,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"doctorId\",\n              value: newAppointment.doctorId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite doktora --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 33\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.id,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAppointmentDate\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Datum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1033,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"appointmentDate\",\n              value: newAppointment.appointmentDate,\n              onChange: handleNewAppointmentChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 25\n          }, this), newAppointment.doctorId && newAppointment.appointmentDate && availableTimes.length > 0 && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAppointmentTime\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odaberite dostupno vrijeme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1044,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"appointmentTime\",\n              value: newAppointment.appointmentTime,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite vrijeme --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1052,\n                columnNumber: 37\n              }, this), availableTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: time,\n                children: time\n              }, time, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1054,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1043,\n            columnNumber: 29\n          }, this), newAppointment.doctorId && newAppointment.appointmentDate && availableTimes.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"info\",\n            children: \"Nema dostupnih termina za ovog doktora na odabrani datum. Molimo odaberite drugi datum ili doktora.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formReason\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Razlog za pregled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"reason\",\n              value: newAppointment.reason,\n              onChange: handleNewAppointmentChange,\n              placeholder: \"npr. Op\\u0161ti pregled, specifi\\u010Dni simptomi...\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1064,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeAppointmentModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleScheduleAppointment,\n          disabled: !newAppointment.appointmentTime && !editingAppointment,\n          children: editingAppointment ? 'Ažuriraj pregled' : 'Zakaži pregled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: !!selectedMessage,\n      onHide: closeMessageModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Poruka: \", selectedMessage === null || selectedMessage === void 0 ? void 0 : selectedMessage.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1089,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1088,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Od:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1094,\n              columnNumber: 32\n            }, this), \" \", selectedMessage.senderType === 'DOKTOR' ? ((_doctors$find6 = doctors.find(d => d.id === selectedMessage.senderId)) === null || _doctors$find6 === void 0 ? void 0 : _doctors$find6.lastName) || `Doktor (${selectedMessage.senderId})` : 'Ja']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1094,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1095,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedMessage.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1095,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1096,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 29\n          }, this), selectedMessage.replies && selectedMessage.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Odgovori:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 37\n            }, this), selectedMessage.replies.map((reply, index) => {\n              var _doctors$find7;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border p-2 mb-2 rounded bg-light\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [reply.tipPosiljaoca === 'DOKTOR' ? ((_doctors$find7 = doctors.find(d => d.id === reply.posiljaocID)) === null || _doctors$find7 === void 0 ? void 0 : _doctors$find7.lastName) || `Doktor (${reply.posiljaocID})` : 'Ja', \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1105,\n                  columnNumber: 45\n                }, this), \" \", reply.sadrzaj, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1106,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(reply.datumVrijemeSlanja).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1107,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1103,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odgovor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: replyMessage.content,\n              onChange: handleReplyMessageChange,\n              placeholder: \"Upi\\u0161ite va\\u0161 odgovor ovdje...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mt-2\",\n            onClick: () => handleReply(selectedMessage.id),\n            children: \"Po\\u0161alji odgovor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1123,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeMessageModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1087,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 582,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDashboard, \"dxofN7uOAxeW7LOYesHL4uMPNkw=\", false, function () {\n  return [useAuth];\n});\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["axios","useAuth","React","useState","useEffect","useMemo","Modal","Button","Form","Alert","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","OBAVIJESTI_DOKUMENTI_API_PREFIX","AUTH_API_PREFIX","PatientDashboard","_s","_doctors$find6","token","user","console","log","authHeaders","headers","activeTab","setActiveTab","appointments","setAppointments","medicalHistory","setMedicalHistory","patientProfile","setPatientProfile","doctors","setDoctors","availableTimes","setAvailableTimes","documents","setDocuments","bills","setBills","messages","setMessages","newMessage","setNewMessage","recipientId","subject","content","replyMessage","setReplyMessage","messageId","selectedMessage","setSelectedMessage","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","showAppointmentModal","setShowAppointmentModal","newAppointment","setNewAppointment","doctorId","appointmentDate","appointmentTime","reason","editingAppointment","setEditingAppointment","loading","setLoading","fetchPatientAppointments","id","warn","response","get","transformedAppointments","data","map","app","pregledID","doktorID","patientId","pacijentID","datumPregleda","vrijemePregleda","komentarPacijenta","status","terminID","error","_error$response","message","fetchMedicalHistory","_error$response2","fetchPatientProfile","firstName","ime","lastName","prezime","email","phone","telefon","userId","_error$response3","fetchDoctors","transformedDoctors","doc","specialty","Array","isArray","specijalizacije","join","_error$response4","fetchDoctorAvailability","date","available","filter","term","dostupnost","vrijeme","sort","_error$response5","fetchDocuments","transformedDocuments","dokumentID","fileName","nazivFajla","documentType","tipDokumenta","uploadDate","datumKreiranja","_error$response6","fetchBills","transformedBills","bill","racunID","billDate","datumIzdavanja","amount","iznos","statusRacuna","dueDate","datumDospijeca","_error$response7","fetchMessages","transformedMessages","msg","porukaID","senderId","posiljaocID","senderType","tipPosiljaoca","primateljID","naslov","sadrzaj","timestamp","datumVrijemeSlanja","replies","odgovori","_error$response8","loadAllData","Promise","all","openAppointmentModal","appointment","closeAppointmentModal","handleNewAppointmentChange","e","name","value","target","prev","docId","appDate","handleScheduleAppointment","selectedTerm","find","appointmentData","put","post","_error$response9","_error$response0","_error$response0$data","errorMessage","handleCancelAppointment","appointmentId","window","confirm","_error$response1","_error$response10","_error$response10$dat","handleProfileChange","handleSaveProfile","profilePayload","authProfilePayload","fullName","_error$response11","_error$response12","_error$response12$dat","handleDocumentUpload","file","files","formData","FormData","append","_error$response13","_error$response14","_error$response14$dat","handleNewMessageChange","handleReplyMessageChange","handleSendMessage","messageData","_error$response15","_error$response16","_error$response16$dat","handleReply","Date","toISOString","_error$response17","_error$response18","_error$response18$dat","handleViewMessage","closeMessageModal","className","style","minHeight","children","animation","role","_jsxFileName","lineNumber","columnNumber","width","onClick","variant","onClose","dismissible","zIndex","length","_doctors$find","_doctors$find2","_doctors$find3","_doctors$find4","size","record","index","diagnosis","treatment","doctorName","Group","controlId","Label","Control","type","onChange","toLocaleDateString","href","toFixed","_doctors$find5","d","toLocaleString","as","required","doctor","rows","placeholder","address","show","onHide","Header","closeButton","Title","Body","time","Footer","disabled","reply","_doctors$find7","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/PatientDashboard.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\n// Definiranje API prefiksa za svaki mikroservis\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`; // Pretpostavljena putanja za autentifikaciju, ako se koristi direktno\r\n\r\nfunction PatientDashboard() {\r\n    const { token, user } = useAuth(); // Assuming 'user' object contains patient-specific info like ID\r\n    console.log(\"Current user object from useAuth:\", user); // <-- DODAJ OVU LINIJU\r\n\r\n    // Memoizacija authHeaders - kreira se samo kada se token promijeni\r\n    const authHeaders = useMemo(() => ({\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }), [token]);\r\n\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [medicalHistory, setMedicalHistory] = useState([]);\r\n    const [patientProfile, setPatientProfile] = useState({});\r\n    const [doctors, setDoctors] = useState([]); // To fetch doctors for appointment scheduling and search\r\n    const [availableTimes, setAvailableTimes] = useState([]); // For doctor availability\r\n    const [documents, setDocuments] = useState([]); // For patient documents\r\n    const [bills, setBills] = useState([]); // For billing information\r\n    const [messages, setMessages] = useState([]); // For secure messaging\r\n    const [newMessage, setNewMessage] = useState({ recipientId: '', subject: '', content: '' });\r\n    const [replyMessage, setReplyMessage] = useState({ messageId: '', content: '' });\r\n    const [selectedMessage, setSelectedMessage] = useState(null); // For viewing a single message\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('success');\r\n\r\n    const [showAppointmentModal, setShowAppointmentModal] = useState(false);\r\n    const [newAppointment, setNewAppointment] = useState({\r\n        doctorId: '', // Ovo će biti doktorID iz baze\r\n        appointmentDate: '',\r\n        appointmentTime: '',\r\n        reason: ''\r\n    });\r\n    const [editingAppointment, setEditingAppointment] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n\r\n    // --- API Calls ---\r\n\r\n    const fetchPatientAppointments = async () => {\r\n        if (!user || !user.id) {\r\n            console.warn(\"Patient ID not available for fetching appointments.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Pretpostavka: Termin i Pregledi servis ima endpoint za preglede po pacijentu\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/pacijent/${user.id}`, authHeaders);\r\n            // Prilagođavamo podatke da odgovaraju trenutnoj strukturi aplikacije\r\n            const transformedAppointments = response.data.map(app => ({\r\n                id: app.pregledID,\r\n                doctorId: app.doktorID,\r\n                patientId: app.pacijentID,\r\n                appointmentDate: app.datumPregleda,\r\n                appointmentTime: app.vrijemePregleda,\r\n                reason: app.komentarPacijenta, // Koristimo komentarPacijenta kao razlog\r\n                status: app.status,\r\n                terminID: app.terminID // Dodajemo terminID\r\n            }));\r\n            setAppointments(transformedAppointments);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja pacijentovih pregleda:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje zakazanih pregleda.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMedicalHistory = async () => {\r\n        if (!user || !user.id) {\r\n            console.warn(\"Patient ID not available for fetching medical history.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Pretpostavka: Korisnici i Doktori servis ima endpoint za medicinsku historiju pacijenta\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.id}/medical-history`, authHeaders);\r\n            setMedicalHistory(response.data); // Pretpostavljamo da je format odgovora kompatibilan\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja medicinske historije:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje medicinske historije.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchPatientProfile = async () => {\r\n        if (!user || !user.id) {\r\n            console.warn(\"Patient ID not available for fetching patient profile.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Pretpostavka: Korisnici i Doktori servis ima endpoint za dohvaćanje profila pacijenta\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.id}`, authHeaders);\r\n            setPatientProfile({\r\n                id: response.data.pacijentID,\r\n                firstName: response.data.ime,\r\n                lastName: response.data.prezime,\r\n                email: response.data.email,\r\n                phone: response.data.telefon,\r\n                // address: response.data.adresa, // Dodaj ako postoji u backendu\r\n                userId: response.data.userId // Dodaj userId\r\n            });\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja pacijentovog profila:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje podataka profila.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctors = async () => {\r\n        try {\r\n            // Pretpostavka: Korisnici i Doktori servis ima endpoint za sve doktore\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n            const transformedDoctors = response.data.map(doc => ({\r\n                id: doc.doktorID,\r\n                firstName: doc.ime,\r\n                lastName: doc.prezime,\r\n                specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\r\n                email: doc.email,\r\n                phone: doc.telefon // Pretpostavljamo da je telefon\r\n            }));\r\n            setDoctors(transformedDoctors);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja doktora:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje liste doktora.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctorAvailability = async (doctorId, date) => {\r\n        if (!doctorId || !date) {\r\n            setAvailableTimes([]);\r\n            return;\r\n        }\r\n        try {\r\n            // Pretpostavka: Termin i Pregledi servis ima endpoint za dostupnost doktora\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${doctorId}/datum/${date}`, authHeaders);\r\n            // Filtriramo samo dostupne termine i vraćamo samo vrijeme\r\n            const available = response.data\r\n                .filter(term => term.dostupnost)\r\n                .map(term => term.vrijeme)\r\n                .sort(); // Sortiramo vremena\r\n            setAvailableTimes(available);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja dostupnosti doktora:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje dostupnosti doktora.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            setAvailableTimes([]);\r\n        }\r\n    };\r\n\r\n    const fetchDocuments = async () => {\r\n        if (!user || !user.id) {\r\n            console.warn(\"Patient ID not available for fetching documents.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Pretpostavka: Obavijesti i Dokumenti servis ima endpoint za dokumente pacijenta\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumenti/pacijent/${user.id}`, authHeaders);\r\n            const transformedDocuments = response.data.map(doc => ({\r\n                id: doc.dokumentID,\r\n                fileName: doc.nazivFajla,\r\n                documentType: doc.tipDokumenta, // Pretpostavljamo da ovo postoji\r\n                uploadDate: doc.datumKreiranja // Pretpostavljamo da ovo postoji\r\n            }));\r\n            setDocuments(transformedDocuments);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja dokumenata:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje dokumenata.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchBills = async () => {\r\n        if (!user || !user.id) {\r\n            console.warn(\"Patient ID not available for fetching bills.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Pretpostavka: Obavijesti i Dokumenti servis ima endpoint za račune pacijenta\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.id}`, authHeaders);\r\n            const transformedBills = response.data.map(bill => ({\r\n                id: bill.racunID,\r\n                billDate: bill.datumIzdavanja,\r\n                amount: bill.iznos,\r\n                status: bill.statusRacuna, // Pretpostavljamo da je string tipa 'PAID', 'UNPAID'\r\n                dueDate: bill.datumDospijeca // Pretpostavljamo da ovo postoji\r\n            }));\r\n            setBills(transformedBills);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja računa:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje informacija o naplati.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async () => {\r\n        if (!user || !user.id) {\r\n            console.warn(\"Patient ID not available for fetching messages.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Pretpostavka: Obavijesti i Dokumenti servis ima endpoint za poruke pacijenta\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/primatelj/${user.id}`, authHeaders);\r\n            // Mapiramo dolazne poruke na format koji očekuje frontend\r\n            const transformedMessages = response.data.map(msg => ({\r\n                id: msg.porukaID,\r\n                senderId: msg.posiljaocID,\r\n                senderType: msg.tipPosiljaoca, // 'DOKTOR' ili 'PACIJENT'\r\n                recipientId: msg.primateljID,\r\n                subject: msg.naslov,\r\n                content: msg.sadrzaj,\r\n                timestamp: msg.datumVrijemeSlanja,\r\n                replies: msg.odgovori || [] // Pretpostavljamo da odgovori dolaze kao array\r\n            }));\r\n            setMessages(transformedMessages);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja poruka:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje poruka.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n\r\n    // --- useEffect Hooks ---\r\n    useEffect(() => {\r\n        const loadAllData = async () => {\r\n            if (token && user && user.id) {\r\n                setLoading(true);\r\n                // Čekamo da se svi podaci dohvate\r\n                await Promise.all([\r\n                    fetchPatientAppointments(),\r\n                    fetchMedicalHistory(),\r\n                    fetchPatientProfile(),\r\n                    fetchDoctors(),\r\n                    fetchDocuments(),\r\n                    fetchBills(),\r\n                    fetchMessages()\r\n                ]);\r\n                setLoading(false);\r\n            } else if (!token) {\r\n                setLoading(false); // Ako nema tokena, prestajemo s učitavanjem\r\n            }\r\n        };\r\n        loadAllData();\r\n    }, [token, user]); // Re-run when token or user changes\r\n\r\n\r\n    // --- Appointment Scheduling/Cancellation ---\r\n\r\n    const openAppointmentModal = (appointment = null) => {\r\n        if (appointment) {\r\n            setEditingAppointment(appointment);\r\n            setNewAppointment({\r\n                doctorId: appointment.doctorId,\r\n                appointmentDate: appointment.appointmentDate,\r\n                appointmentTime: appointment.appointmentTime,\r\n                reason: appointment.reason\r\n            });\r\n            fetchDoctorAvailability(appointment.doctorId, appointment.appointmentDate);\r\n        } else {\r\n            setEditingAppointment(null);\r\n            setNewAppointment({\r\n                doctorId: '',\r\n                appointmentDate: '',\r\n                appointmentTime: '',\r\n                reason: ''\r\n            });\r\n            setAvailableTimes([]); // Clear availability for new appointment\r\n        }\r\n        setShowAppointmentModal(true);\r\n    };\r\n\r\n    const closeAppointmentModal = () => {\r\n        setShowAppointmentModal(false);\r\n        setEditingAppointment(null);\r\n        setNewAppointment({\r\n            doctorId: '',\r\n            appointmentDate: '',\r\n            appointmentTime: '',\r\n            reason: ''\r\n        });\r\n        setAvailableTimes([]);\r\n    };\r\n\r\n    const handleNewAppointmentChange = async (e) => {\r\n        const { name, value } = e.target;\r\n        setNewAppointment(prev => ({ ...prev, [name]: value }));\r\n\r\n        if (name === 'doctorId' || name === 'appointmentDate') {\r\n            const docId = name === 'doctorId' ? value : newAppointment.doctorId;\r\n            const appDate = name === 'appointmentDate' ? value : newAppointment.appointmentDate;\r\n            if (docId && appDate) {\r\n                await fetchDoctorAvailability(docId, appDate);\r\n            } else {\r\n                setAvailableTimes([]);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleScheduleAppointment = async () => {\r\n        if (!user || !user.id) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće zakazati pregled.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Pronađi ID termina na osnovu datuma i vremena\r\n            const selectedTerm = availableTimes.find(term => term.vrijeme === newAppointment.appointmentTime);\r\n            if (!selectedTerm && !editingAppointment) {\r\n                setAlertMessage('Molimo odaberite validan termin iz liste dostupnih.');\r\n                setAlertType('warning');\r\n                setShowAlert(true);\r\n                return;\r\n            }\r\n\r\n            const appointmentData = {\r\n                pacijentID: user.id,\r\n                doktorID: newAppointment.doctorId,\r\n                datumPregleda: newAppointment.appointmentDate,\r\n                vrijemePregleda: newAppointment.appointmentTime,\r\n                komentarPacijenta: newAppointment.reason, // Mapiramo razlog na komentarPacijenta\r\n                status: editingAppointment ? editingAppointment.status : 'zakazan', // Početni status 'zakazan'\r\n                terminID: selectedTerm ? selectedTerm.terminID : editingAppointment?.terminID // Uzmi ID termina\r\n            };\r\n\r\n            let response;\r\n            if (editingAppointment) {\r\n                // Za ažuriranje postojećeg pregleda\r\n                response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${editingAppointment.id}`, appointmentData, authHeaders);\r\n                setAlertMessage('Pregled uspješno ažuriran!');\r\n            } else {\r\n                // Za zakazivanje novog pregleda\r\n                response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\r\n                setAlertMessage('Pregled uspješno zakazan!');\r\n            }\r\n\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchPatientAppointments(); // Osvježi listu pregleda\r\n            closeAppointmentModal();\r\n        } catch (error) {\r\n            console.error('Greška prilikom zakazivanja/ažuriranja pregleda:', error.response?.data || error.message);\r\n            let errorMessage = 'Neuspješno zakazivanje/ažuriranje pregleda. Molimo pokušajte ponovo.';\r\n            if (error.response?.data?.message) {\r\n                errorMessage = error.response.data.message;\r\n            } else if (error.message) {\r\n                errorMessage = error.message;\r\n            }\r\n            setAlertMessage(errorMessage);\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleCancelAppointment = async (appointmentId) => {\r\n        // Zamijenimo window.confirm sa custom modalom\r\n        if (window.confirm('Jeste li sigurni da želite otkazati ovaj pregled?')) {\r\n            try {\r\n                // Ažuriramo status pregleda na 'otkazan'\r\n                await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}/status`, { status: 'otkazan' }, authHeaders);\r\n                setAlertMessage('Pregled uspješno otkazan!');\r\n                setAlertType('success');\r\n                setShowAlert(true);\r\n                fetchPatientAppointments(); // Osvježi listu pregleda\r\n            } catch (error) {\r\n                console.error('Greška prilikom otkazivanja pregleda:', error.response?.data || error.message);\r\n                setAlertMessage('Neuspješno otkazivanje pregleda. Molimo pokušajte ponovo. ' + (error.response?.data?.message || error.message));\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    // --- Profile Update ---\r\n    const handleProfileChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPatientProfile(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSaveProfile = async () => {\r\n        if (!user || !user.id) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće sačuvati profil.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const profilePayload = {\r\n                ime: patientProfile.firstName,\r\n                prezime: patientProfile.lastName,\r\n                email: patientProfile.email,\r\n                telefon: patientProfile.phone,\r\n                // adresa: patientProfile.address, // Dodaj ako postoji u backendu\r\n                userId: patientProfile.userId || user.id // Osiguraj da imamo userId\r\n            };\r\n            await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.id}`, profilePayload, authHeaders);\r\n\r\n            // Ažuriraj i Auth servis ako su se promijenili fullName, email ili telefon\r\n            const authProfilePayload = {\r\n                fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\r\n                email: patientProfile.email,\r\n                telefon: patientProfile.phone,\r\n            };\r\n            await axios.put(`${AUTH_API_PREFIX}/users/${user.id}`, authProfilePayload, authHeaders);\r\n\r\n            setAlertMessage('Profil uspješno ažuriran!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchPatientProfile(); // Ponovo dohvati profil da se vide promjene\r\n        } catch (error) {\r\n            console.error('Greška prilikom ažuriranja profila:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno ažuriranje profila. Molimo pokušajte ponovo. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- Document Upload ---\r\n    const handleDocumentUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('pacijentID', user.id); // Backend očekuje pacijentID\r\n        formData.append('tipDokumenta', 'Patient Upload'); // Može biti i input polje za ovo\r\n\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumenti/upload`, formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            setAlertMessage('Dokument uspješno prenesen!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchDocuments(); // Osvježi listu dokumenata\r\n        } catch (error) {\r\n            console.error('Greška prilikom prijenosa dokumenta:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješan prijenos dokumenta. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- Secure Messaging ---\r\n    const handleNewMessageChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewMessage(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleReplyMessageChange = (e) => {\r\n        setReplyMessage(prev => ({ ...prev, content: e.target.value }));\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!user || !user.id) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće poslati poruku.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\r\n            setAlertMessage('Molimo popunite sva polja za poruku.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const messageData = {\r\n                posiljaocID: user.id, // Pacijent je pošiljalac\r\n                primateljID: newMessage.recipientId, // Doktorov ID\r\n                naslov: newMessage.subject,\r\n                sadrzaj: newMessage.content,\r\n                tipPosiljaoca: 'PACIJENT', // Označavamo tip pošiljaoca\r\n            };\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\r\n            setAlertMessage('Poruka uspješno poslana!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setNewMessage({ recipientId: '', subject: '', content: '' }); // Očisti formu\r\n            fetchMessages(); // Osvježi poruke\r\n        } catch (error) {\r\n            console.error('Greška prilikom slanja poruke:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno slanje poruke. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleReply = async (messageId) => {\r\n        if (!user || !user.id) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće odgovoriti.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!replyMessage.content) {\r\n            setAlertMessage('Sadržaj odgovora ne može biti prazan.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        try {\r\n            // Endpoint za odgovore\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\r\n                posiljaocID: user.id,\r\n                sadrzaj: replyMessage.content,\r\n                tipPosiljaoca: 'PACIJENT',\r\n            }, authHeaders);\r\n            setAlertMessage('Odgovor uspješno poslan!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setReplyMessage({ messageId: '', content: '' });\r\n            fetchMessages(); // Osvježi poruke da se vidi odgovor\r\n            // Ažuriraj odabranu poruku da se odgovor prikaže odmah\r\n            setSelectedMessage(prev => ({\r\n                ...prev,\r\n                replies: [...(prev.replies || []), {\r\n                    posiljaocID: user.id, // Koristi posiljaocID za replies\r\n                    tipPosiljaoca: 'PACIJENT',\r\n                    sadrzaj: replyMessage.content,\r\n                    datumVrijemeSlanja: new Date().toISOString() // Koristi datumVrijemeSlanja\r\n                }]\r\n            }));\r\n        } catch (error) {\r\n            console.error('Greška prilikom slanja odgovora:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno slanje odgovora. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleViewMessage = (message) => {\r\n        setSelectedMessage(message);\r\n    };\r\n\r\n    const closeMessageModal = () => {\r\n        setSelectedMessage(null);\r\n        setReplyMessage({ messageId: '', content: '' });\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Učitavanje...</span>\r\n                </Spinner>\r\n                <p className=\"ms-2\">Učitavanje podataka kontrolne ploče...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ minHeight: '100vh' }}>\r\n            {/* Sidebar */}\r\n            <div className=\"bg-dark text-white p-3\" style={{ width: '250px' }}>\r\n                <h4 className=\"mb-4\">Kontrolna ploča pacijenta</h4>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('overview')}\r\n                        >\r\n                            Pregled\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('myAppointments')}\r\n                        >\r\n                            Moji pregledi\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('medicalHistory')}\r\n                        >\r\n                            Medicinska historija\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('documents')}\r\n                        >\r\n                            Moji dokumenti\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('billing')}\r\n                        >\r\n                            Naplata i plaćanja\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('messages')}\r\n                        >\r\n                            Poruke\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('doctorSearch')}\r\n                        >\r\n                            Pronađi doktora\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('profileSettings')}\r\n                        >\r\n                            Postavke profila\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            {/* Main Content Area */}\r\n            <div className=\"flex-grow-1 p-4 bg-light\">\r\n                {showAlert && (\r\n                    <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n                        {alertMessage}\r\n                    </Alert>\r\n                )}\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <h2 className=\"mb-0\">Kontrolna ploča pacijenta</h2>\r\n                </div>\r\n\r\n                {/* Content based on activeTab */}\r\n                {activeTab === 'overview' && (\r\n                    <div>\r\n                        <h3>Dobrodošli, {patientProfile.firstName || (user ? user.firstName : 'Pacijent')}!</h3>\r\n                        <p>Ovo je vaš pregled pacijenta. Ovdje možete brzo vidjeti svoje nadolazeće preglede i nedavne aktivnosti.</p>\r\n                        <div className=\"row mt-4\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        Nadolazeći pregledi\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        {appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').length > 0 ? (\r\n                                            appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').map(app => (\r\n                                                <li key={app.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                    <div>\r\n                                                        <strong>{app.appointmentDate} u {app.appointmentTime}</strong>\r\n                                                        <br />\r\n                                                        <small>Razlog: {app.reason}</small>\r\n                                                        <br />\r\n                                                        <small>Doktor: {doctors.find(doc => doc.id === app.doctorId)?.firstName} {doctors.find(doc => doc.id === app.doctorId)?.lastName}</small>\r\n                                                    </div>\r\n                                                    <span className={`badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`}>{app.status}</span>\r\n                                                </li>\r\n                                            ))\r\n                                        ) : (\r\n                                            <li className=\"list-group-item\">Nema nadolazećih pregleda.</li>\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'myAppointments' && (\r\n                    <div>\r\n                        <h3>Moji pregledi</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => openAppointmentModal()}>\r\n                            Zakaži novi pregled\r\n                        </Button>\r\n                        {appointments.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Doktor</th>\r\n                                        <th>Datum</th>\r\n                                        <th>Vrijeme</th>\r\n                                        <th>Razlog</th>\r\n                                        <th>Status</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {appointments.map(app => (\r\n                                        <tr key={app.id}>\r\n                                            <td>{doctors.find(doc => doc.id === app.doctorId)?.firstName} {doctors.find(doc => doc.id === app.doctorId)?.lastName}</td>\r\n                                            <td>{app.appointmentDate}</td>\r\n                                            <td>{app.appointmentTime}</td>\r\n                                            <td>{app.reason}</td>\r\n                                            <td><span className={`badge bg-${app.status === 'obavljen' ? 'success' : app.status === 'zakazan' ? 'warning' : 'danger'}`}>{app.status}</span></td>\r\n                                            <td>\r\n                                                {app.status === 'zakazan' || app.status === 'potvrđen' ? (\r\n                                                    <>\r\n                                                        <Button variant=\"info\" size=\"sm\" className=\"me-2\" onClick={() => openAppointmentModal(app)}>Uredi</Button>\r\n                                                        <Button variant=\"danger\" size=\"sm\" onClick={() => handleCancelAppointment(app.id)}>Otkaži</Button>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <small>Nema dostupnih akcija</small>\r\n                                                )}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađene historije pregleda. Zakažite svoj prvi pregled!</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'medicalHistory' && (\r\n                    <div>\r\n                        <h3>Moja medicinska historija</h3>\r\n                        {medicalHistory.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {medicalHistory.map((record, index) => (\r\n                                    <li key={index} className=\"list-group-item\">\r\n                                        <strong>Datum:</strong> {record.date} <br />\r\n                                        <strong>Dijagnoza:</strong> {record.diagnosis} <br />\r\n                                        <strong>Tretman:</strong> {record.treatment} <br />\r\n                                        <strong>Doktor:</strong> {record.doctorName}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Nema pronađenih zapisa medicinske historije.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'documents' && (\r\n                    <div>\r\n                        <h3>Moji dokumenti</h3>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Prenesi novi dokument</Form.Label>\r\n                            <Form.Control type=\"file\" onChange={handleDocumentUpload} />\r\n                        </Form.Group>\r\n\r\n                        {documents.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Naziv dokumenta</th>\r\n                                        <th>Tip</th>\r\n                                        <th>Datum prijenosa</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {documents.map(doc => (\r\n                                        <tr key={doc.id}>\r\n                                            <td>{doc.fileName}</td>\r\n                                            <td>{doc.documentType}</td>\r\n                                            <td>{new Date(doc.uploadDate).toLocaleDateString()}</td>\r\n                                            <td>\r\n                                                {/* Preuzimanje dokumenta - mora se prilagoditi backend putanji */}\r\n                                                <Button variant=\"success\" size=\"sm\" href={`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumenti/download/${doc.id}`} target=\"_blank\">Preuzmi</Button>\r\n                                                {/* Dodaj opciju brisanja ako je potrebno */}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih dokumenata.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'billing' && (\r\n                    <div>\r\n                        <h3>Naplata i plaćanja</h3>\r\n                        {bills.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID računa</th>\r\n                                        <th>Datum</th>\r\n                                        <th>Iznos</th>\r\n                                        <th>Status</th>\r\n                                        <th>Datum dospijeća</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {bills.map(bill => (\r\n                                        <tr key={bill.id}>\r\n                                            <td>{bill.id}</td>\r\n                                            <td>{new Date(bill.billDate).toLocaleDateString()}</td>\r\n                                            <td>${bill.amount ? bill.amount.toFixed(2) : 'N/A'}</td>\r\n                                            <td><span className={`badge bg-${bill.status === 'PAID' ? 'success' : 'danger'}`}>{bill.status}</span></td>\r\n                                            <td>{new Date(bill.dueDate).toLocaleDateString()}</td>\r\n                                            <td>\r\n                                                {bill.status === 'UNPAID' && (\r\n                                                    <Button variant=\"success\" size=\"sm\" className=\"me-2\">Plati sada</Button>\r\n                                                )}\r\n                                                <Button variant=\"info\" size=\"sm\">Pogledaj detalje</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih zapisa o naplati.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'messages' && (\r\n                    <div>\r\n                        <h3>Moje poruke</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => setNewMessage({ recipientId: '', subject: '', content: '' })}>Sastavi novu poruku</Button>\r\n\r\n                        {messages.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {messages.map(msg => (\r\n                                    <li key={msg.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            {/* Prikaz senderId umjesto imena ako ne možemo naći doktora/pacijenta */}\r\n                                            <strong>Od: {msg.senderType === 'DOKTOR' ? doctors.find(d => d.id === msg.senderId)?.lastName || `Doktor (${msg.senderId})` : 'Ja'}</strong> <br />\r\n                                            <strong>Naslov:</strong> {msg.subject} <br />\r\n                                            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                        <Button variant=\"info\" size=\"sm\" onClick={() => handleViewMessage(msg)}>Pogledaj poruku</Button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Nema pronađenih poruka.</p>\r\n                        )}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <h4>Sastavi novu poruku</h4>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Primalac (Doktor)</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"recipientId\"\r\n                                    value={newMessage.recipientId}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Odaberite doktora --</option>\r\n                                    {doctors.map(doctor => (\r\n                                        <option key={doctor.id} value={doctor.id}>{doctor.firstName} {doctor.lastName}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Naslov</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    value={newMessage.subject}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Sadržaj</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"content\"\r\n                                    value={newMessage.content}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSendMessage}>Pošalji poruku</Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'doctorSearch' && (\r\n                    <div>\r\n                        <h3>Pronađi doktora</h3>\r\n                        <p>Pretražite doktore po imenu ili specijalnosti kako biste pronašli pravu njegu za vas.</p>\r\n                        {/* Osnovni input za pretragu - može se proširiti */}\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control type=\"text\" placeholder=\"Pretraži po imenu ili specijalnosti...\" />\r\n                        </Form.Group>\r\n                        {doctors.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Ime</th>\r\n                                        <th>Specijalnost</th>\r\n                                        <th>Kontakt</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {doctors.map(doctor => (\r\n                                        <tr key={doctor.id}>\r\n                                            <td>{doctor.firstName} {doctor.lastName}</td>\r\n                                            <td>{doctor.specialty || 'Opšti praktičar'}</td>\r\n                                            <td>{doctor.email} | {doctor.phone}</td>\r\n                                            <td>\r\n                                                <Button variant=\"primary\" size=\"sm\" onClick={() => {\r\n                                                    setNewAppointment(prev => ({ ...prev, doctorId: doctor.id }));\r\n                                                    openAppointmentModal();\r\n                                                }}>Zakaži pregled</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih doktora.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'profileSettings' && (\r\n                    <div>\r\n                        <h3>Postavke profila</h3>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                                <Form.Label>Ime</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={patientProfile.firstName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                                <Form.Label>Prezime</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    value={patientProfile.lastName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={patientProfile.email || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formPhone\">\r\n                                <Form.Label>Telefon</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"phone\"\r\n                                    value={patientProfile.phone || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAddress\">\r\n                                <Form.Label>Adresa</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    value={patientProfile.address || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSaveProfile}>\r\n                                Sačuvaj profil\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Appointment Modal */}\r\n            <Modal show={showAppointmentModal} onHide={closeAppointmentModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{editingAppointment ? 'Uredi pregled' : 'Zakaži novi pregled'}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formDoctor\">\r\n                            <Form.Label>Odaberite doktora</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"doctorId\"\r\n                                value={newAppointment.doctorId}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">-- Odaberite doktora --</option>\r\n                                {doctors.map(doctor => (\r\n                                    <option key={doctor.id} value={doctor.id}>{doctor.firstName} {doctor.lastName}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formAppointmentDate\">\r\n                            <Form.Label>Datum</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                name=\"appointmentDate\"\r\n                                value={newAppointment.appointmentDate}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        {newAppointment.doctorId && newAppointment.appointmentDate && availableTimes.length > 0 && (\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAppointmentTime\">\r\n                                <Form.Label>Odaberite dostupno vrijeme</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"appointmentTime\"\r\n                                    value={newAppointment.appointmentTime}\r\n                                    onChange={handleNewAppointmentChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Odaberite vrijeme --</option>\r\n                                    {availableTimes.map(time => (\r\n                                        <option key={time} value={time}>{time}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        )}\r\n                         {newAppointment.doctorId && newAppointment.appointmentDate && availableTimes.length === 0 && (\r\n                            <Alert variant=\"info\">Nema dostupnih termina za ovog doktora na odabrani datum. Molimo odaberite drugi datum ili doktora.</Alert>\r\n                        )}\r\n                        <Form.Group className=\"mb-3\" controlId=\"formReason\">\r\n                            <Form.Label>Razlog za pregled</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"reason\"\r\n                                value={newAppointment.reason}\r\n                                onChange={handleNewAppointmentChange}\r\n                                placeholder=\"npr. Opšti pregled, specifični simptomi...\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeAppointmentModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleScheduleAppointment} disabled={!newAppointment.appointmentTime && !editingAppointment}>\r\n                        {editingAppointment ? 'Ažuriraj pregled' : 'Zakaži pregled'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Message Detail Modal */}\r\n            <Modal show={!!selectedMessage} onHide={closeMessageModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Poruka: {selectedMessage?.subject}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedMessage && (\r\n                        <>\r\n                            <p><strong>Od:</strong> {selectedMessage.senderType === 'DOKTOR' ? doctors.find(d => d.id === selectedMessage.senderId)?.lastName || `Doktor (${selectedMessage.senderId})` : 'Ja'}</p>\r\n                            <p><strong>Datum:</strong> {new Date(selectedMessage.timestamp).toLocaleString()}</p>\r\n                            <hr />\r\n                            <p>{selectedMessage.content}</p>\r\n\r\n                            {selectedMessage.replies && selectedMessage.replies.length > 0 && (\r\n                                <div className=\"mt-4\">\r\n                                    <h5>Odgovori:</h5>\r\n                                    {selectedMessage.replies.map((reply, index) => (\r\n                                        <div key={index} className=\"border p-2 mb-2 rounded bg-light\">\r\n                                            {/* Prikaz senderId umjesto imena ako ne možemo naći doktora/pacijenta */}\r\n                                            <strong>{reply.tipPosiljaoca === 'DOKTOR' ? doctors.find(d => d.id === reply.posiljaocID)?.lastName || `Doktor (${reply.posiljaocID})` : 'Ja'}:</strong> {reply.sadrzaj}\r\n                                            <br />\r\n                                            <small>{new Date(reply.datumVrijemeSlanja).toLocaleString()}</small>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            <Form.Group className=\"mt-4\">\r\n                                <Form.Label>Odgovor</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={2}\r\n                                    value={replyMessage.content}\r\n                                    onChange={handleReplyMessageChange}\r\n                                    placeholder=\"Upišite vaš odgovor ovdje...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" className=\"mt-2\" onClick={() => handleReply(selectedMessage.id)}>Pošalji odgovor</Button>\r\n                        </>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeMessageModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}