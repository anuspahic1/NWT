{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\DoctorProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nfunction DoctorProfilePage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    token\n  } = useAuth();\n  const [doctor, setDoctor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [availableTerms, setAvailableTerms] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [reason, setReason] = useState('');\n  const [bookingMessage, setBookingMessage] = useState('');\n  const [bookingMessageType, setBookingMessageType] = useState('success');\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  useEffect(() => {\n    const fetchDoctorDetails = async () => {\n      try {\n        const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\n        const data = response.data;\n        const transformedDoctor = {\n          doktorID: data.doktorID,\n          ime: data.ime,\n          prezime: data.prezime,\n          fullName: `${data.ime} ${data.prezime}`,\n          email: data.email,\n          telefon: data.telefon,\n          specijalizacije: Array.isArray(data.specijalizacije) ? data.specijalizacije.join(', ') : data.specijalizacije,\n          grad: data.grad,\n          radnoVrijeme: data.radnoVrijeme,\n          iskustvo: data.iskustvo,\n          ocjena: data.ocjena,\n          profileImageBase64: data.profileImageBase64 || `https://placehold.co/100x100/CCCCCC/000000?text=${data.ime.charAt(0)}${data.prezime.charAt(0)}`\n        };\n        setDoctor(transformedDoctor);\n      } catch (err) {\n        var _err$response;\n        console.error(\"Greška prilikom dohvaćanja detalja doktora:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        setError(\"Nije moguće učitati profil doktora. Molimo pokušajte ponovo.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (id) {\n      fetchDoctorDetails();\n    }\n  }, [id, token]);\n  useEffect(() => {\n    const fetchDoctorAvailability = async () => {\n      if (!selectedDate || !(doctor !== null && doctor !== void 0 && doctor.doktorID)) {\n        setAvailableTerms([]);\n        return;\n      }\n      try {\n        const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${doctor.doktorID}/datum/${selectedDate}`, authHeaders);\n        const available = response.data.filter(term => term.dostupnost).map(term => ({\n          terminID: term.terminID,\n          vrijeme: term.vrijeme\n        })).sort((a, b) => a.vrijeme.localeCompare(b.vrijeme));\n        setAvailableTerms(available);\n      } catch (err) {\n        var _err$response2;\n        console.error('Greška prilikom dohvaćanja dostupnosti doktora:', ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n        setAvailableTerms([]);\n        setBookingMessage('Greška prilikom dohvaćanja dostupnih termina.');\n        setBookingMessageType('danger');\n      }\n    };\n    if (doctor !== null && doctor !== void 0 && doctor.doktorID && selectedDate) {\n      fetchDoctorAvailability();\n    }\n  }, [doctor, selectedDate, token]);\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n    setSelectedTime('');\n  };\n  const handleTimeChange = e => {\n    setSelectedTime(e.target.value);\n  };\n  const handleReasonChange = e => {\n    setReason(e.target.value);\n  };\n  const handleBookAppointment = async e => {\n    e.preventDefault();\n    setBookingMessage('');\n    if (!token) {\n      setBookingMessage('Morate biti prijavljeni da biste zakazali pregled.');\n      setBookingMessageType('danger');\n      return;\n    }\n    if (!selectedDate || !selectedTime || !reason || !(doctor !== null && doctor !== void 0 && doctor.doktorID)) {\n      setBookingMessage('Molimo popunite sva polja za zakazivanje pregleda.');\n      setBookingMessageType('danger');\n      return;\n    }\n    const selectedTermin = availableTerms.find(term => term.vrijeme === selectedTime);\n    if (!selectedTermin) {\n      setBookingMessage('Odabrani termin nije validan ili dostupan.');\n      setBookingMessageType('danger');\n      return;\n    }\n    try {\n      var _user;\n      const pacijentId = (_user = user) === null || _user === void 0 ? void 0 : _user.pacijentId;\n      if (!pacijentId) {\n        setBookingMessage('Vaš pacijent ID nije pronađen. Molimo osigurajte da ste prijavljeni kao pacijent.');\n        setBookingMessageType('danger');\n        return;\n      }\n      const appointmentData = {\n        pacijentID: pacijentId,\n        doktorID: doctor.doktorID,\n        terminID: selectedTermin.terminID,\n        datumPregleda: selectedDate,\n        vrijemePregleda: selectedTime,\n        komentarPacijenta: reason,\n        status: 'zakazan'\n      };\n      await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\n      setBookingMessage('Pregled uspješno zakazan!');\n      setBookingMessageType('success');\n      setSelectedDate('');\n      setSelectedTime('');\n      setReason('');\n      setAvailableTerms([]);\n    } catch (err) {\n      var _err$response3, _err$response4, _err$response4$data;\n      console.error(\"Greška prilikom zakazivanja pregleda:\", ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err.message);\n      setBookingMessage(`Greška prilikom zakazivanja pregleda: ${((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message}`);\n      setBookingMessageType('danger');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje profila doktora...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/services\",\n        className: \"btn btn-primary\",\n        children: \"Nazad na listu doktora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this);\n  }\n  if (!doctor) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Doktor nije prona\\u0111en.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/services\",\n        className: \"btn btn-primary\",\n        children: \"Nazad na listu doktora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row g-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: doctor.profileImageBase64,\n            alt: doctor.fullName,\n            className: \"img-fluid rounded-circle shadow-sm mb-3\",\n            style: {\n              width: '150px',\n              height: '150px',\n              objectFit: 'cover',\n              border: '3px solid #dc3545'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-1\",\n            children: doctor.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: doctor.specijalizacije\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-warning me-1\",\n              children: \"\\u2605\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-bold\",\n              children: doctor.ocjena || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-muted ms-2\",\n              children: [\"(\", doctor.grad, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-danger mb-3\",\n            children: \"Informacije o doktoru\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 28\n            }, this), \" \", doctor.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Telefon:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 28\n            }, this), \" \", doctor.telefon]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Grad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 28\n            }, this), \" \", doctor.grad]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Radno Vrijeme:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 28\n            }, this), \" \", doctor.radnoVrijeme]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Godine Iskustva:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 28\n            }, this), \" \", doctor.iskustvo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-danger mb-3\",\n        children: \"Zaka\\u017Eite pregled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), bookingMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${bookingMessageType} mb-3`,\n        role: \"alert\",\n        children: bookingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBookAppointment,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"appointmentDate\",\n              className: \"form-label\",\n              children: \"Datum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              id: \"appointmentDate\",\n              value: selectedDate,\n              onChange: handleDateChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"appointmentTime\",\n              className: \"form-label\",\n              children: \"Vrijeme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              id: \"appointmentTime\",\n              value: selectedTime,\n              onChange: handleTimeChange,\n              required: true,\n              disabled: availableTerms.length === 0,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Odaberite vrijeme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this), availableTerms.map(term => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term.vrijeme,\n                children: term.vrijeme\n              }, term.terminID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), availableTerms.length === 0 && selectedDate && !error && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: \"Nema dostupnih termina za odabrani datum.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"reason\",\n            className: \"form-label\",\n            children: \"Razlog pregleda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"reason\",\n            rows: \"3\",\n            value: reason,\n            onChange: handleReasonChange,\n            placeholder: \"Kratak opis razloga pregleda...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-danger\",\n          children: \"Zaka\\u017Ei pregled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n}\n_s(DoctorProfilePage, \"FT3HnKr1HM366WWieDU/rEYS7dI=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = DoctorProfilePage;\nexport default DoctorProfilePage;\nvar _c;\n$RefreshReg$(_c, \"DoctorProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useParams","Link","axios","useAuth","jsxDEV","_jsxDEV","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","DoctorProfilePage","_s","id","token","doctor","setDoctor","loading","setLoading","error","setError","availableTerms","setAvailableTerms","selectedDate","setSelectedDate","selectedTime","setSelectedTime","reason","setReason","bookingMessage","setBookingMessage","bookingMessageType","setBookingMessageType","authHeaders","headers","fetchDoctorDetails","response","get","data","transformedDoctor","doktorID","ime","prezime","fullName","email","telefon","specijalizacije","Array","isArray","join","grad","radnoVrijeme","iskustvo","ocjena","profileImageBase64","charAt","err","_err$response","console","message","fetchDoctorAvailability","available","filter","term","dostupnost","map","terminID","vrijeme","sort","a","b","localeCompare","_err$response2","handleDateChange","e","target","value","handleTimeChange","handleReasonChange","handleBookAppointment","preventDefault","selectedTermin","find","_user","pacijentId","user","appointmentData","pacijentID","datumPregleda","vrijemePregleda","komentarPacijenta","status","post","_err$response3","_err$response4","_err$response4$data","className","style","minHeight","children","role","fileName","_jsxFileName","lineNumber","columnNumber","to","src","alt","width","height","objectFit","border","onSubmit","htmlFor","type","onChange","required","disabled","length","rows","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/DoctorProfilePage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\n\r\nfunction DoctorProfilePage() {\r\n    const { id } = useParams();\r\n    const { token } = useAuth();\r\n\r\n    const [doctor, setDoctor] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [availableTerms, setAvailableTerms] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState('');\r\n    const [selectedTime, setSelectedTime] = useState('');\r\n    const [reason, setReason] = useState('');\r\n    const [bookingMessage, setBookingMessage] = useState('');\r\n    const [bookingMessageType, setBookingMessageType] = useState('success');\r\n\r\n    const authHeaders = useMemo(() => ({\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }), [token]);\r\n\r\n    useEffect(() => {\r\n        const fetchDoctorDetails = async () => {\r\n            try {\r\n                const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\r\n                const data = response.data;\r\n\r\n                const transformedDoctor = {\r\n                    doktorID: data.doktorID,\r\n                    ime: data.ime,\r\n                    prezime: data.prezime,\r\n                    fullName: `${data.ime} ${data.prezime}`,\r\n                    email: data.email,\r\n                    telefon: data.telefon,\r\n                    specijalizacije: Array.isArray(data.specijalizacije) ? data.specijalizacije.join(', ') : data.specijalizacije,\r\n                    grad: data.grad,\r\n                    radnoVrijeme: data.radnoVrijeme,\r\n                    iskustvo: data.iskustvo,\r\n                    ocjena: data.ocjena,\r\n                    profileImageBase64: data.profileImageBase64 || `https://placehold.co/100x100/CCCCCC/000000?text=${data.ime.charAt(0)}${data.prezime.charAt(0)}`\r\n                };\r\n                setDoctor(transformedDoctor);\r\n            } catch (err) {\r\n                console.error(\"Greška prilikom dohvaćanja detalja doktora:\", err.response?.data || err.message);\r\n                setError(\"Nije moguće učitati profil doktora. Molimo pokušajte ponovo.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (id) {\r\n            fetchDoctorDetails();\r\n        }\r\n    }, [id, token]);\r\n\r\n    useEffect(() => {\r\n        const fetchDoctorAvailability = async () => {\r\n            if (!selectedDate || !doctor?.doktorID) {\r\n                setAvailableTerms([]);\r\n                return;\r\n            }\r\n            try {\r\n                const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${doctor.doktorID}/datum/${selectedDate}`, authHeaders);\r\n                const available = response.data\r\n                    .filter(term => term.dostupnost)\r\n                    .map(term => ({ terminID: term.terminID, vrijeme: term.vrijeme }))\r\n                    .sort((a, b) => a.vrijeme.localeCompare(b.vrijeme));\r\n                setAvailableTerms(available);\r\n            } catch (err) {\r\n                console.error('Greška prilikom dohvaćanja dostupnosti doktora:', err.response?.data || err.message);\r\n                setAvailableTerms([]);\r\n                setBookingMessage('Greška prilikom dohvaćanja dostupnih termina.');\r\n                setBookingMessageType('danger');\r\n            }\r\n        };\r\n\r\n        if (doctor?.doktorID && selectedDate) {\r\n            fetchDoctorAvailability();\r\n        }\r\n    }, [doctor, selectedDate, token]);\r\n\r\n    const handleDateChange = (e) => {\r\n        setSelectedDate(e.target.value);\r\n        setSelectedTime('');\r\n    };\r\n\r\n    const handleTimeChange = (e) => {\r\n        setSelectedTime(e.target.value);\r\n    };\r\n\r\n    const handleReasonChange = (e) => {\r\n        setReason(e.target.value);\r\n    };\r\n\r\n    const handleBookAppointment = async (e) => {\r\n        e.preventDefault();\r\n        setBookingMessage('');\r\n        if (!token) {\r\n            setBookingMessage('Morate biti prijavljeni da biste zakazali pregled.');\r\n            setBookingMessageType('danger');\r\n            return;\r\n        }\r\n        if (!selectedDate || !selectedTime || !reason || !doctor?.doktorID) {\r\n            setBookingMessage('Molimo popunite sva polja za zakazivanje pregleda.');\r\n            setBookingMessageType('danger');\r\n            return;\r\n        }\r\n        const selectedTermin = availableTerms.find(term => term.vrijeme === selectedTime);\r\n        if (!selectedTermin) {\r\n            setBookingMessage('Odabrani termin nije validan ili dostupan.');\r\n            setBookingMessageType('danger');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const pacijentId = user?.pacijentId;\r\n            if (!pacijentId) {\r\n                setBookingMessage('Vaš pacijent ID nije pronađen. Molimo osigurajte da ste prijavljeni kao pacijent.');\r\n                setBookingMessageType('danger');\r\n                return;\r\n            }\r\n\r\n            const appointmentData = {\r\n                pacijentID: pacijentId,\r\n                doktorID: doctor.doktorID,\r\n                terminID: selectedTermin.terminID,\r\n                datumPregleda: selectedDate,\r\n                vrijemePregleda: selectedTime,\r\n                komentarPacijenta: reason,\r\n                status: 'zakazan'\r\n            };\r\n            await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\r\n            setBookingMessage('Pregled uspješno zakazan!');\r\n            setBookingMessageType('success');\r\n            setSelectedDate('');\r\n            setSelectedTime('');\r\n            setReason('');\r\n            setAvailableTerms([]);\r\n        } catch (err) {\r\n            console.error(\"Greška prilikom zakazivanja pregleda:\", err.response?.data || err.message);\r\n            setBookingMessage(`Greška prilikom zakazivanja pregleda: ${err.response?.data?.message || err.message}`);\r\n            setBookingMessageType('danger');\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Učitavanje profila doktora...</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"container py-5 text-center\">\r\n                <p className=\"lead text-danger\">{error}</p>\r\n                <Link to=\"/services\" className=\"btn btn-primary\">Nazad na listu doktora</Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!doctor) {\r\n        return (\r\n            <div className=\"container py-5 text-center\">\r\n                <p className=\"lead\">Doktor nije pronađen.</p>\r\n                <Link to=\"/services\" className=\"btn btn-primary\">Nazad na listu doktora</Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container my-5\">\r\n            <div className=\"card shadow-lg p-4 mb-4\">\r\n                <div className=\"row g-4\">\r\n                    <div className=\"col-md-4 text-center\">\r\n                        <img\r\n                            src={doctor.profileImageBase64}\r\n                            alt={doctor.fullName}\r\n                            className=\"img-fluid rounded-circle shadow-sm mb-3\"\r\n                            style={{ width: '150px', height: '150px', objectFit: 'cover', border: '3px solid #dc3545' }}\r\n                        />\r\n                        <h3 className=\"mb-1\">{doctor.fullName}</h3>\r\n                        <p className=\"text-muted\">{doctor.specijalizacije}</p>\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                            <span className=\"text-warning me-1\">★</span>\r\n                            <span className=\"fw-bold\">{doctor.ocjena || 'N/A'}</span>\r\n                            <span className=\"text-muted ms-2\">({doctor.grad})</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <h4 className=\"text-danger mb-3\">Informacije o doktoru</h4>\r\n                        <p><strong>Email:</strong> {doctor.email}</p>\r\n                        <p><strong>Telefon:</strong> {doctor.telefon}</p>\r\n                        <p><strong>Grad:</strong> {doctor.grad}</p>\r\n                        <p><strong>Radno Vrijeme:</strong> {doctor.radnoVrijeme}</p>\r\n                        <p><strong>Godine Iskustva:</strong> {doctor.iskustvo}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card shadow-lg p-4\">\r\n                <h4 className=\"text-danger mb-3\">Zakažite pregled</h4>\r\n                {bookingMessage && (\r\n                    <div className={`alert alert-${bookingMessageType} mb-3`} role=\"alert\">\r\n                        {bookingMessage}\r\n                    </div>\r\n                )}\r\n                <form onSubmit={handleBookAppointment}>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"appointmentDate\" className=\"form-label\">Datum</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                                id=\"appointmentDate\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"appointmentTime\" className=\"form-label\">Vrijeme</label>\r\n                            <select\r\n                                className=\"form-select\"\r\n                                id=\"appointmentTime\"\r\n                                value={selectedTime}\r\n                                onChange={handleTimeChange}\r\n                                required\r\n                                disabled={availableTerms.length === 0}\r\n                            >\r\n                                <option value=\"\">Odaberite vrijeme</option>\r\n                                {availableTerms.map(term => (\r\n                                    <option key={term.terminID} value={term.vrijeme}>{term.vrijeme}</option>\r\n                                ))}\r\n                            </select>\r\n                            {availableTerms.length === 0 && selectedDate && !error && (\r\n                                <small className=\"text-muted\">Nema dostupnih termina za odabrani datum.</small>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"reason\" className=\"form-label\">Razlog pregleda</label>\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            id=\"reason\"\r\n                            rows=\"3\"\r\n                            value={reason}\r\n                            onChange={handleReasonChange}\r\n                            placeholder=\"Kratak opis razloga pregleda...\"\r\n                            required\r\n                        ></textarea>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-danger\">Zakaži pregled</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DoctorProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}