{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap'; // Dodani Alert i Spinner\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8081/api';\nfunction PatientDashboard() {\n  _s();\n  var _doctors$find6;\n  const {\n    token,\n    user\n  } = useAuth(); // Assuming 'user' object contains patient-specific info like ID\n\n  const [activeTab, setActiveTab] = useState('overview');\n  const [appointments, setAppointments] = useState([]);\n  const [medicalHistory, setMedicalHistory] = useState([]);\n  const [patientProfile, setPatientProfile] = useState({});\n  const [doctors, setDoctors] = useState([]); // To fetch doctors for appointment scheduling and search\n  const [availableTimes, setAvailableTimes] = useState([]); // For doctor availability\n  const [documents, setDocuments] = useState([]); // For patient documents\n  const [bills, setBills] = useState([]); // For billing information\n  const [messages, setMessages] = useState([]); // For secure messaging\n  const [newMessage, setNewMessage] = useState({\n    recipientId: '',\n    subject: '',\n    content: ''\n  });\n  const [replyMessage, setReplyMessage] = useState({\n    messageId: '',\n    content: ''\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null); // For viewing a single message\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [newAppointment, setNewAppointment] = useState({\n    doctorId: '',\n    appointmentDate: '',\n    appointmentTime: '',\n    reason: ''\n  });\n  const [editingAppointment, setEditingAppointment] = useState(null);\n  const [loading, setLoading] = useState(true); // Loading state\n\n  const authHeaders = {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n\n  // --- API Calls ---\n\n  const fetchPatientAppointments = async () => {\n    if (!user || !user.id) return;\n    try {\n      const response = await axios.get(`${API_URL}/patients/${user.id}/appointments`, authHeaders);\n      setAppointments(response.data);\n    } catch (error) {\n      console.error('Error fetching patient appointments:', error);\n      setAlertMessage('Failed to fetch appointments.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMedicalHistory = async () => {\n    if (!user || !user.id) return;\n    try {\n      const response = await axios.get(`${API_URL}/patients/${user.id}/medical-history`, authHeaders);\n      setMedicalHistory(response.data);\n    } catch (error) {\n      console.error('Error fetching medical history:', error);\n      setAlertMessage('Failed to fetch medical history.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchPatientProfile = async () => {\n    if (!user || !user.id) return;\n    try {\n      const response = await axios.get(`${API_URL}/patients/${user.id}`, authHeaders);\n      setPatientProfile(response.data);\n    } catch (error) {\n      console.error('Error fetching patient profile:', error);\n      setAlertMessage('Failed to fetch profile data.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/doctors`, authHeaders);\n      setDoctors(response.data);\n    } catch (error) {\n      console.error('Error fetching doctors:', error);\n      setAlertMessage('Failed to fetch doctors list.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctorAvailability = async (doctorId, date) => {\n    if (!doctorId || !date) {\n      setAvailableTimes([]);\n      return;\n    }\n    try {\n      // Assuming an API endpoint like /doctors/{id}/availability?date=YYYY-MM-DD\n      const response = await axios.get(`${API_URL}/doctors/${doctorId}/availability?date=${date}`, authHeaders);\n      setAvailableTimes(response.data); // e.g., ['09:00', '10:00', '11:30']\n    } catch (error) {\n      console.error('Error fetching doctor availability:', error);\n      setAlertMessage('Failed to fetch doctor availability.');\n      setAlertType('danger');\n      setShowAlert(true);\n      setAvailableTimes([]);\n    }\n  };\n  const fetchDocuments = async () => {\n    if (!user || !user.id) return;\n    try {\n      const response = await axios.get(`${API_URL}/patients/${user.id}/documents`, authHeaders);\n      setDocuments(response.data);\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n      setAlertMessage('Failed to fetch documents.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchBills = async () => {\n    if (!user || !user.id) return;\n    try {\n      const response = await axios.get(`${API_URL}/patients/${user.id}/bills`, authHeaders);\n      setBills(response.data);\n    } catch (error) {\n      console.error('Error fetching bills:', error);\n      setAlertMessage('Failed to fetch billing information.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMessages = async () => {\n    if (!user || !user.id) return;\n    try {\n      // Assuming /messages endpoint returns messages for the current user (patient)\n      const response = await axios.get(`${API_URL}/messages/patient/${user.id}`, authHeaders);\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n      setAlertMessage('Failed to fetch messages.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- useEffect Hooks ---\n  useEffect(() => {\n    const loadAllData = async () => {\n      if (token && user && user.id) {\n        setLoading(true);\n        await Promise.all([fetchPatientAppointments(), fetchMedicalHistory(), fetchPatientProfile(), fetchDoctors(), fetchDocuments(), fetchBills(), fetchMessages()]);\n        setLoading(false);\n      }\n    };\n    loadAllData();\n  }, [token, user]); // Re-run when token or user changes\n\n  // --- Appointment Scheduling/Cancellation ---\n\n  const openAppointmentModal = (appointment = null) => {\n    if (appointment) {\n      setEditingAppointment(appointment);\n      setNewAppointment({\n        doctorId: appointment.doctorId,\n        appointmentDate: appointment.appointmentDate,\n        appointmentTime: appointment.appointmentTime,\n        reason: appointment.reason\n      });\n      fetchDoctorAvailability(appointment.doctorId, appointment.appointmentDate);\n    } else {\n      setEditingAppointment(null);\n      setNewAppointment({\n        doctorId: '',\n        appointmentDate: '',\n        appointmentTime: '',\n        reason: ''\n      });\n      setAvailableTimes([]); // Clear availability for new appointment\n    }\n    setShowAppointmentModal(true);\n  };\n  const closeAppointmentModal = () => {\n    setShowAppointmentModal(false);\n    setEditingAppointment(null);\n    setNewAppointment({\n      doctorId: '',\n      appointmentDate: '',\n      appointmentTime: '',\n      reason: ''\n    });\n    setAvailableTimes([]);\n  };\n  const handleNewAppointmentChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewAppointment(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (name === 'doctorId' || name === 'appointmentDate') {\n      // If doctor or date changes, fetch new availability\n      const docId = name === 'doctorId' ? value : newAppointment.doctorId;\n      const appDate = name === 'appointmentDate' ? value : newAppointment.appointmentDate;\n      if (docId && appDate) {\n        await fetchDoctorAvailability(docId, appDate);\n      } else {\n        setAvailableTimes([]);\n      }\n    }\n  };\n  const handleScheduleAppointment = async () => {\n    if (!user || !user.id) {\n      setAlertMessage('Patient ID not available. Cannot schedule appointment.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const appointmentData = {\n        ...newAppointment,\n        patientId: user.id,\n        status: editingAppointment ? editingAppointment.status : 'PENDING' // Keep status if editing, else PENDING\n      };\n      let response;\n      if (editingAppointment) {\n        response = await axios.put(`${API_URL}/appointments/${editingAppointment.id}`, appointmentData, authHeaders);\n        setAlertMessage('Appointment updated successfully!');\n      } else {\n        response = await axios.post(`${API_URL}/appointments`, appointmentData, authHeaders);\n        setAlertMessage('Appointment scheduled successfully!');\n      }\n      setAlertType('success');\n      setShowAlert(true);\n      fetchPatientAppointments();\n      closeAppointmentModal();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error scheduling/updating appointment:', error);\n      setAlertMessage('Failed to schedule/update appointment. Please try again. ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleCancelAppointment = async appointmentId => {\n    if (window.confirm('Are you sure you want to cancel this appointment?')) {\n      try {\n        await axios.put(`${API_URL}/appointments/${appointmentId}/cancel`, {}, authHeaders);\n        setAlertMessage('Appointment cancelled successfully!');\n        setAlertType('success');\n        setShowAlert(true);\n        fetchPatientAppointments();\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        console.error('Error cancelling appointment:', error);\n        setAlertMessage('Failed to cancel appointment. Please try again. ' + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message));\n        setAlertType('danger');\n        setShowAlert(true);\n      }\n    }\n  };\n\n  // --- Profile Update ---\n  const handleProfileChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPatientProfile(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSaveProfile = async () => {\n    if (!user || !user.id) {\n      setAlertMessage('Patient ID not available. Cannot save profile.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      await axios.put(`${API_URL}/patients/${user.id}`, patientProfile, authHeaders);\n      setAlertMessage('Profile updated successfully!');\n      setAlertType('success');\n      setShowAlert(true);\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Error updating profile:', error);\n      setAlertMessage('Failed to update profile. Please try again. ' + (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- Document Upload ---\n  const handleDocumentUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('patientId', user.id); // Assuming backend needs patientId\n    formData.append('documentType', 'Patient Upload'); // Or get from a form input\n\n    try {\n      // Assuming API endpoint for document upload: /documents/upload\n      await axios.post(`${API_URL}/documents/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setAlertMessage('Document uploaded successfully!');\n      setAlertType('success');\n      setShowAlert(true);\n      fetchDocuments(); // Refresh document list\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Error uploading document:', error);\n      setAlertMessage('Failed to upload document. ' + (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- Secure Messaging ---\n  const handleNewMessageChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMessage(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleReplyMessageChange = e => {\n    setReplyMessage(prev => ({\n      ...prev,\n      content: e.target.value\n    }));\n  };\n  const handleSendMessage = async () => {\n    if (!user || !user.id) {\n      setAlertMessage('Patient ID not available. Cannot send message.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\n      setAlertMessage('Please fill all message fields.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const messageData = {\n        senderId: user.id,\n        // Patient is the sender\n        recipientId: newMessage.recipientId,\n        subject: newMessage.subject,\n        content: newMessage.content,\n        senderType: 'PATIENT' // Indicate sender type\n      };\n      await axios.post(`${API_URL}/messages/send`, messageData, authHeaders);\n      setAlertMessage('Message sent successfully!');\n      setAlertType('success');\n      setShowAlert(true);\n      setNewMessage({\n        recipientId: '',\n        subject: '',\n        content: ''\n      }); // Clear form\n      fetchMessages(); // Refresh messages\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Error sending message:', error);\n      setAlertMessage('Failed to send message. ' + (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleReply = async messageId => {\n    if (!user || !user.id) {\n      setAlertMessage('Patient ID not available. Cannot reply.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!replyMessage.content) {\n      setAlertMessage('Reply content cannot be empty.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      // Assuming an API endpoint for replies: /messages/{id}/reply\n      await axios.post(`${API_URL}/messages/${messageId}/reply`, {\n        senderId: user.id,\n        content: replyMessage.content,\n        senderType: 'PATIENT'\n      }, authHeaders);\n      setAlertMessage('Reply sent successfully!');\n      setAlertType('success');\n      setShowAlert(true);\n      setReplyMessage({\n        messageId: '',\n        content: ''\n      });\n      fetchMessages(); // Refresh messages to see the reply\n      setSelectedMessage(prev => ({\n        // Update the selected message to show the reply immediately\n        ...prev,\n        replies: [...(prev.replies || []), {\n          senderId: user.id,\n          senderType: 'PATIENT',\n          content: replyMessage.content,\n          timestamp: new Date().toISOString()\n        }]\n      }));\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      console.error('Error sending reply:', error);\n      setAlertMessage('Failed to send reply. ' + (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleViewMessage = message => {\n    setSelectedMessage(message);\n  };\n  const closeMessageModal = () => {\n    setSelectedMessage(null);\n    setReplyMessage({\n      messageId: '',\n      content: ''\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-2\",\n        children: \"Loading dashboard data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-white p-3\",\n      style: {\n        width: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-4\",\n        children: \"Patient Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('overview'),\n            children: \"Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('myAppointments'),\n            children: \"My Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('medicalHistory'),\n            children: \"Medical History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('documents'),\n            children: \"My Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('billing'),\n            children: \"Billing & Payments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('messages'),\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('doctorSearch'),\n            children: \"Find a Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('profileSettings'),\n            children: \"Profile Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 p-4 bg-light\",\n      children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: alertType,\n        onClose: () => setShowAlert(false),\n        dismissible: true,\n        className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n        style: {\n          zIndex: 1050\n        },\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: \"Patient Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 17\n      }, this), activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Welcome, \", patientProfile.firstName || (user ? user.firstName : 'Patient'), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is your patient overview. Here you can quickly see your upcoming appointments and recent activities.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: \"Upcoming Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-group list-group-flush\",\n                children: appointments.filter(app => app.status === 'PENDING' || app.status === 'CONFIRMED').length > 0 ? appointments.filter(app => app.status === 'PENDING' || app.status === 'CONFIRMED').map(app => {\n                  var _doctors$find, _doctors$find2;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"list-group-item d-flex justify-content-between align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [app.appointmentDate, \" at \", app.appointmentTime]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 551,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 552,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: [\"Reason: \", app.reason]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 553,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 554,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: [\"Doctor: \", (_doctors$find = doctors.find(doc => doc.id === app.doctorId)) === null || _doctors$find === void 0 ? void 0 : _doctors$find.firstName, \" \", (_doctors$find2 = doctors.find(doc => doc.id === app.doctorId)) === null || _doctors$find2 === void 0 ? void 0 : _doctors$find2.lastName]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 555,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge bg-${app.status === 'CONFIRMED' ? 'success' : 'warning'}`,\n                      children: app.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 53\n                    }, this)]\n                  }, app.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 49\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: \"No upcoming appointments.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 21\n      }, this), activeTab === 'myAppointments' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => openAppointmentModal(),\n          children: \"Schedule New Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 25\n        }, this), appointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Reason\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: appointments.map(app => {\n              var _doctors$find3, _doctors$find4;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(_doctors$find3 = doctors.find(doc => doc.id === app.doctorId)) === null || _doctors$find3 === void 0 ? void 0 : _doctors$find3.firstName, \" \", (_doctors$find4 = doctors.find(doc => doc.id === app.doctorId)) === null || _doctors$find4 === void 0 ? void 0 : _doctors$find4.lastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: app.appointmentDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: app.appointmentTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: app.reason\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge bg-${app.status === 'CONFIRMED' ? 'success' : app.status === 'PENDING' ? 'warning' : 'danger'}`,\n                    children: app.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: app.status === 'PENDING' || app.status === 'CONFIRMED' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"info\",\n                      size: \"sm\",\n                      className: \"me-2\",\n                      onClick: () => openAppointmentModal(app),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"danger\",\n                      size: \"sm\",\n                      onClick: () => handleCancelAppointment(app.id),\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 600,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"No actions available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 45\n                }, this)]\n              }, app.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No appointment history found. Schedule your first appointment!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 21\n      }, this), activeTab === 'medicalHistory' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My Medical History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 25\n        }, this), medicalHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: medicalHistory.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 41\n            }, this), \" \", record.date, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 78\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Diagnosis:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 41\n            }, this), \" \", record.diagnosis, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 88\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Treatment:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 41\n            }, this), \" \", record.treatment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 88\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Doctor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 41\n            }, this), \" \", record.doctorName]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No medical history records found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 21\n      }, this), activeTab === 'documents' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My Documents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formFile\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Upload New Document\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: handleDocumentUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 25\n        }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Document Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Upload Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.documentType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.uploadDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  href: `${API_URL}/documents/${doc.id}/download`,\n                  target: \"_blank\",\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 45\n              }, this)]\n            }, doc.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No documents found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 21\n      }, this), activeTab === 'billing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Billing & Payments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 25\n        }, this), bills.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Bill ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: bills.map(bill => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.billDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", bill.amount.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${bill.status === 'PAID' ? 'success' : 'danger'}`,\n                  children: bill.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.dueDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.status === 'UNPAID' && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  className: \"me-2\",\n                  children: \"Pay Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 45\n              }, this)]\n            }, bill.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No billing records found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 21\n      }, this), activeTab === 'messages' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => setNewMessage({\n            recipientId: '',\n            subject: '',\n            content: ''\n          }),\n          children: \"Compose New Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 25\n        }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: messages.map(msg => {\n            var _doctors$find5;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"From: \", msg.senderType === 'DOCTOR' ? (_doctors$find5 = doctors.find(d => d.id === msg.senderId)) === null || _doctors$find5 === void 0 ? void 0 : _doctors$find5.lastName : 'Me']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 45\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 158\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Subject:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 45\n                }, this), \" \", msg.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 85\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(msg.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                size: \"sm\",\n                onClick: () => handleViewMessage(msg),\n                children: \"View Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 41\n              }, this)]\n            }, msg.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Compose New Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Recipient (Doctor)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"recipientId\",\n              value: newMessage.recipientId,\n              onChange: handleNewMessageChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a Doctor --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 37\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.id,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 750,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"subject\",\n              value: newMessage.subject,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"content\",\n              value: newMessage.content,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSendMessage,\n            children: \"Send Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 21\n      }, this), activeTab === 'doctorSearch' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Find a Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Search for doctors by name or specialty to find the right care for you.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Search by name or specialty...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 25\n        }, this), doctors.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Specialty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Contact\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.specialty || 'General Practitioner'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.email, \" | \", doctor.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"sm\",\n                  onClick: () => {\n                    setNewAppointment(prev => ({\n                      ...prev,\n                      doctorId: doctor.id\n                    }));\n                    openAppointmentModal();\n                  },\n                  children: \"Schedule Appointment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 805,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 45\n              }, this)]\n            }, doctor.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No doctors found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 21\n      }, this), activeTab === 'profileSettings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Profile Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formFirstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              value: patientProfile.firstName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formLastName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              value: patientProfile.lastName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 843,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: patientProfile.email || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formPhone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"phone\",\n              value: patientProfile.phone || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAddress\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"address\",\n              value: patientProfile.address || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSaveProfile,\n            children: \"Save Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAppointmentModal,\n      onHide: closeAppointmentModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: editingAppointment ? 'Edit Appointment' : 'Schedule New Appointment'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDoctor\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"doctorId\",\n              value: newAppointment.doctorId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a Doctor --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 33\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.id,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 886,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAppointmentDate\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"appointmentDate\",\n              value: newAppointment.appointmentDate,\n              onChange: handleNewAppointmentChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 25\n          }, this), newAppointment.doctorId && newAppointment.appointmentDate && availableTimes.length > 0 && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAppointmentTime\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Available Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"appointmentTime\",\n              value: newAppointment.appointmentTime,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select Time --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 37\n              }, this), availableTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: time,\n                children: time\n              }, time, false, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 29\n          }, this), newAppointment.doctorId && newAppointment.appointmentDate && availableTimes.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"info\",\n            children: \"No available times for this doctor on selected date. Please choose another date or doctor.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formReason\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Reason for Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"reason\",\n              value: newAppointment.reason,\n              onChange: handleNewAppointmentChange,\n              placeholder: \"e.g., General check-up, specific symptoms...\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 929,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeAppointmentModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleScheduleAppointment,\n          disabled: !newAppointment.appointmentTime,\n          children: editingAppointment ? 'Update Appointment' : 'Schedule Appointment'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: !!selectedMessage,\n      onHide: closeMessageModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Message: \", selectedMessage === null || selectedMessage === void 0 ? void 0 : selectedMessage.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 32\n            }, this), \" \", selectedMessage.senderType === 'DOCTOR' ? (_doctors$find6 = doctors.find(d => d.id === selectedMessage.senderId)) === null || _doctors$find6 === void 0 ? void 0 : _doctors$find6.lastName : 'Me']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 962,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedMessage.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 964,\n            columnNumber: 29\n          }, this), selectedMessage.replies && selectedMessage.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Replies:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 37\n            }, this), selectedMessage.replies.map((reply, index) => {\n              var _doctors$find7;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border p-2 mb-2 rounded bg-light\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [reply.senderType === 'DOCTOR' ? (_doctors$find7 = doctors.find(d => d.id === reply.senderId)) === null || _doctors$find7 === void 0 ? void 0 : _doctors$find7.lastName : 'Me', \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 971,\n                  columnNumber: 45\n                }, this), \" \", reply.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 972,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(reply.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 973,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 980,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: replyMessage.content,\n              onChange: handleReplyMessageChange,\n              placeholder: \"Type your reply here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mt-2\",\n            onClick: () => handleReply(selectedMessage.id),\n            children: \"Send Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 989,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeMessageModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDashboard, \"HLfTWvAFfZljwG2D7IWfkcfYGDI=\", false, function () {\n  return [useAuth];\n});\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["axios","useAuth","React","useState","useEffect","Modal","Button","Form","Alert","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","PatientDashboard","_s","_doctors$find6","token","user","activeTab","setActiveTab","appointments","setAppointments","medicalHistory","setMedicalHistory","patientProfile","setPatientProfile","doctors","setDoctors","availableTimes","setAvailableTimes","documents","setDocuments","bills","setBills","messages","setMessages","newMessage","setNewMessage","recipientId","subject","content","replyMessage","setReplyMessage","messageId","selectedMessage","setSelectedMessage","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","showAppointmentModal","setShowAppointmentModal","newAppointment","setNewAppointment","doctorId","appointmentDate","appointmentTime","reason","editingAppointment","setEditingAppointment","loading","setLoading","authHeaders","headers","fetchPatientAppointments","id","response","get","data","error","console","fetchMedicalHistory","fetchPatientProfile","fetchDoctors","fetchDoctorAvailability","date","fetchDocuments","fetchBills","fetchMessages","loadAllData","Promise","all","openAppointmentModal","appointment","closeAppointmentModal","handleNewAppointmentChange","e","name","value","target","prev","docId","appDate","handleScheduleAppointment","appointmentData","patientId","status","put","post","_error$response","_error$response$data","message","handleCancelAppointment","appointmentId","window","confirm","_error$response2","_error$response2$data","handleProfileChange","handleSaveProfile","_error$response3","_error$response3$data","handleDocumentUpload","file","files","formData","FormData","append","_error$response4","_error$response4$data","handleNewMessageChange","handleReplyMessageChange","handleSendMessage","messageData","senderId","senderType","_error$response5","_error$response5$data","handleReply","replies","timestamp","Date","toISOString","_error$response6","_error$response6$data","handleViewMessage","closeMessageModal","className","style","minHeight","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","width","onClick","variant","onClose","dismissible","zIndex","firstName","filter","app","length","map","_doctors$find","_doctors$find2","find","doc","lastName","_doctors$find3","_doctors$find4","size","record","index","diagnosis","treatment","doctorName","Group","controlId","Label","Control","type","onChange","documentType","uploadDate","href","bill","billDate","amount","toFixed","dueDate","msg","_doctors$find5","d","toLocaleString","as","required","doctor","rows","placeholder","specialty","email","phone","address","show","onHide","Header","closeButton","Title","Body","time","Footer","disabled","reply","_doctors$find7","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/PatientDashboard.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap'; // Dodani Alert i Spinner\r\n\r\nconst API_URL = 'http://localhost:8081/api';\r\n\r\nfunction PatientDashboard() {\r\n    const { token, user } = useAuth(); // Assuming 'user' object contains patient-specific info like ID\r\n\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [medicalHistory, setMedicalHistory] = useState([]);\r\n    const [patientProfile, setPatientProfile] = useState({});\r\n    const [doctors, setDoctors] = useState([]); // To fetch doctors for appointment scheduling and search\r\n    const [availableTimes, setAvailableTimes] = useState([]); // For doctor availability\r\n    const [documents, setDocuments] = useState([]); // For patient documents\r\n    const [bills, setBills] = useState([]); // For billing information\r\n    const [messages, setMessages] = useState([]); // For secure messaging\r\n    const [newMessage, setNewMessage] = useState({ recipientId: '', subject: '', content: '' });\r\n    const [replyMessage, setReplyMessage] = useState({ messageId: '', content: '' });\r\n    const [selectedMessage, setSelectedMessage] = useState(null); // For viewing a single message\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('success');\r\n\r\n    const [showAppointmentModal, setShowAppointmentModal] = useState(false);\r\n    const [newAppointment, setNewAppointment] = useState({\r\n        doctorId: '',\r\n        appointmentDate: '',\r\n        appointmentTime: '',\r\n        reason: ''\r\n    });\r\n    const [editingAppointment, setEditingAppointment] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n\r\n    const authHeaders = {\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    };\r\n\r\n    // --- API Calls ---\r\n\r\n    const fetchPatientAppointments = async () => {\r\n        if (!user || !user.id) return;\r\n        try {\r\n            const response = await axios.get(`${API_URL}/patients/${user.id}/appointments`, authHeaders);\r\n            setAppointments(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching patient appointments:', error);\r\n            setAlertMessage('Failed to fetch appointments.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMedicalHistory = async () => {\r\n        if (!user || !user.id) return;\r\n        try {\r\n            const response = await axios.get(`${API_URL}/patients/${user.id}/medical-history`, authHeaders);\r\n            setMedicalHistory(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching medical history:', error);\r\n            setAlertMessage('Failed to fetch medical history.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchPatientProfile = async () => {\r\n        if (!user || !user.id) return;\r\n        try {\r\n            const response = await axios.get(`${API_URL}/patients/${user.id}`, authHeaders);\r\n            setPatientProfile(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching patient profile:', error);\r\n            setAlertMessage('Failed to fetch profile data.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctors = async () => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/doctors`, authHeaders);\r\n            setDoctors(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching doctors:', error);\r\n            setAlertMessage('Failed to fetch doctors list.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctorAvailability = async (doctorId, date) => {\r\n        if (!doctorId || !date) {\r\n            setAvailableTimes([]);\r\n            return;\r\n        }\r\n        try {\r\n            // Assuming an API endpoint like /doctors/{id}/availability?date=YYYY-MM-DD\r\n            const response = await axios.get(`${API_URL}/doctors/${doctorId}/availability?date=${date}`, authHeaders);\r\n            setAvailableTimes(response.data); // e.g., ['09:00', '10:00', '11:30']\r\n        } catch (error) {\r\n            console.error('Error fetching doctor availability:', error);\r\n            setAlertMessage('Failed to fetch doctor availability.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            setAvailableTimes([]);\r\n        }\r\n    };\r\n\r\n    const fetchDocuments = async () => {\r\n        if (!user || !user.id) return;\r\n        try {\r\n            const response = await axios.get(`${API_URL}/patients/${user.id}/documents`, authHeaders);\r\n            setDocuments(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching documents:', error);\r\n            setAlertMessage('Failed to fetch documents.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchBills = async () => {\r\n        if (!user || !user.id) return;\r\n        try {\r\n            const response = await axios.get(`${API_URL}/patients/${user.id}/bills`, authHeaders);\r\n            setBills(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching bills:', error);\r\n            setAlertMessage('Failed to fetch billing information.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async () => {\r\n        if (!user || !user.id) return;\r\n        try {\r\n            // Assuming /messages endpoint returns messages for the current user (patient)\r\n            const response = await axios.get(`${API_URL}/messages/patient/${user.id}`, authHeaders);\r\n            setMessages(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching messages:', error);\r\n            setAlertMessage('Failed to fetch messages.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n\r\n    // --- useEffect Hooks ---\r\n    useEffect(() => {\r\n        const loadAllData = async () => {\r\n            if (token && user && user.id) {\r\n                setLoading(true);\r\n                await Promise.all([\r\n                    fetchPatientAppointments(),\r\n                    fetchMedicalHistory(),\r\n                    fetchPatientProfile(),\r\n                    fetchDoctors(),\r\n                    fetchDocuments(),\r\n                    fetchBills(),\r\n                    fetchMessages()\r\n                ]);\r\n                setLoading(false);\r\n            }\r\n        };\r\n        loadAllData();\r\n    }, [token, user]); // Re-run when token or user changes\r\n\r\n\r\n    // --- Appointment Scheduling/Cancellation ---\r\n\r\n    const openAppointmentModal = (appointment = null) => {\r\n        if (appointment) {\r\n            setEditingAppointment(appointment);\r\n            setNewAppointment({\r\n                doctorId: appointment.doctorId,\r\n                appointmentDate: appointment.appointmentDate,\r\n                appointmentTime: appointment.appointmentTime,\r\n                reason: appointment.reason\r\n            });\r\n            fetchDoctorAvailability(appointment.doctorId, appointment.appointmentDate);\r\n        } else {\r\n            setEditingAppointment(null);\r\n            setNewAppointment({\r\n                doctorId: '',\r\n                appointmentDate: '',\r\n                appointmentTime: '',\r\n                reason: ''\r\n            });\r\n            setAvailableTimes([]); // Clear availability for new appointment\r\n        }\r\n        setShowAppointmentModal(true);\r\n    };\r\n\r\n    const closeAppointmentModal = () => {\r\n        setShowAppointmentModal(false);\r\n        setEditingAppointment(null);\r\n        setNewAppointment({\r\n            doctorId: '',\r\n            appointmentDate: '',\r\n            appointmentTime: '',\r\n            reason: ''\r\n        });\r\n        setAvailableTimes([]);\r\n    };\r\n\r\n    const handleNewAppointmentChange = async (e) => {\r\n        const { name, value } = e.target;\r\n        setNewAppointment(prev => ({ ...prev, [name]: value }));\r\n\r\n        if (name === 'doctorId' || name === 'appointmentDate') {\r\n            // If doctor or date changes, fetch new availability\r\n            const docId = name === 'doctorId' ? value : newAppointment.doctorId;\r\n            const appDate = name === 'appointmentDate' ? value : newAppointment.appointmentDate;\r\n            if (docId && appDate) {\r\n                await fetchDoctorAvailability(docId, appDate);\r\n            } else {\r\n                setAvailableTimes([]);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleScheduleAppointment = async () => {\r\n        if (!user || !user.id) {\r\n            setAlertMessage('Patient ID not available. Cannot schedule appointment.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const appointmentData = {\r\n                ...newAppointment,\r\n                patientId: user.id,\r\n                status: editingAppointment ? editingAppointment.status : 'PENDING' // Keep status if editing, else PENDING\r\n            };\r\n\r\n            let response;\r\n            if (editingAppointment) {\r\n                response = await axios.put(`${API_URL}/appointments/${editingAppointment.id}`, appointmentData, authHeaders);\r\n                setAlertMessage('Appointment updated successfully!');\r\n            } else {\r\n                response = await axios.post(`${API_URL}/appointments`, appointmentData, authHeaders);\r\n                setAlertMessage('Appointment scheduled successfully!');\r\n            }\r\n\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchPatientAppointments();\r\n            closeAppointmentModal();\r\n        } catch (error) {\r\n            console.error('Error scheduling/updating appointment:', error);\r\n            setAlertMessage('Failed to schedule/update appointment. Please try again. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleCancelAppointment = async (appointmentId) => {\r\n        if (window.confirm('Are you sure you want to cancel this appointment?')) {\r\n            try {\r\n                await axios.put(`${API_URL}/appointments/${appointmentId}/cancel`, {}, authHeaders);\r\n                setAlertMessage('Appointment cancelled successfully!');\r\n                setAlertType('success');\r\n                setShowAlert(true);\r\n                fetchPatientAppointments();\r\n            } catch (error) {\r\n                console.error('Error cancelling appointment:', error);\r\n                setAlertMessage('Failed to cancel appointment. Please try again. ' + (error.response?.data?.message || error.message));\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    // --- Profile Update ---\r\n    const handleProfileChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPatientProfile(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSaveProfile = async () => {\r\n        if (!user || !user.id) {\r\n            setAlertMessage('Patient ID not available. Cannot save profile.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await axios.put(`${API_URL}/patients/${user.id}`, patientProfile, authHeaders);\r\n            setAlertMessage('Profile updated successfully!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n        } catch (error) {\r\n            console.error('Error updating profile:', error);\r\n            setAlertMessage('Failed to update profile. Please try again. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- Document Upload ---\r\n    const handleDocumentUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('patientId', user.id); // Assuming backend needs patientId\r\n        formData.append('documentType', 'Patient Upload'); // Or get from a form input\r\n\r\n        try {\r\n            // Assuming API endpoint for document upload: /documents/upload\r\n            await axios.post(`${API_URL}/documents/upload`, formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            setAlertMessage('Document uploaded successfully!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchDocuments(); // Refresh document list\r\n        } catch (error) {\r\n            console.error('Error uploading document:', error);\r\n            setAlertMessage('Failed to upload document. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- Secure Messaging ---\r\n    const handleNewMessageChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewMessage(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleReplyMessageChange = (e) => {\r\n        setReplyMessage(prev => ({ ...prev, content: e.target.value }));\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!user || !user.id) {\r\n            setAlertMessage('Patient ID not available. Cannot send message.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\r\n            setAlertMessage('Please fill all message fields.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const messageData = {\r\n                senderId: user.id, // Patient is the sender\r\n                recipientId: newMessage.recipientId,\r\n                subject: newMessage.subject,\r\n                content: newMessage.content,\r\n                senderType: 'PATIENT', // Indicate sender type\r\n            };\r\n            await axios.post(`${API_URL}/messages/send`, messageData, authHeaders);\r\n            setAlertMessage('Message sent successfully!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setNewMessage({ recipientId: '', subject: '', content: '' }); // Clear form\r\n            fetchMessages(); // Refresh messages\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n            setAlertMessage('Failed to send message. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleReply = async (messageId) => {\r\n        if (!user || !user.id) {\r\n            setAlertMessage('Patient ID not available. Cannot reply.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!replyMessage.content) {\r\n            setAlertMessage('Reply content cannot be empty.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        try {\r\n            // Assuming an API endpoint for replies: /messages/{id}/reply\r\n            await axios.post(`${API_URL}/messages/${messageId}/reply`, {\r\n                senderId: user.id,\r\n                content: replyMessage.content,\r\n                senderType: 'PATIENT',\r\n            }, authHeaders);\r\n            setAlertMessage('Reply sent successfully!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setReplyMessage({ messageId: '', content: '' });\r\n            fetchMessages(); // Refresh messages to see the reply\r\n            setSelectedMessage(prev => ({ // Update the selected message to show the reply immediately\r\n                ...prev,\r\n                replies: [...(prev.replies || []), {\r\n                    senderId: user.id,\r\n                    senderType: 'PATIENT',\r\n                    content: replyMessage.content,\r\n                    timestamp: new Date().toISOString()\r\n                }]\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error sending reply:', error);\r\n            setAlertMessage('Failed to send reply. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleViewMessage = (message) => {\r\n        setSelectedMessage(message);\r\n    };\r\n\r\n    const closeMessageModal = () => {\r\n        setSelectedMessage(null);\r\n        setReplyMessage({ messageId: '', content: '' });\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </Spinner>\r\n                <p className=\"ms-2\">Loading dashboard data...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ minHeight: '100vh' }}>\r\n            {/* Sidebar */}\r\n            <div className=\"bg-dark text-white p-3\" style={{ width: '250px' }}>\r\n                <h4 className=\"mb-4\">Patient Dashboard</h4>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('overview')}\r\n                        >\r\n                            Overview\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('myAppointments')}\r\n                        >\r\n                            My Appointments\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('medicalHistory')}\r\n                        >\r\n                            Medical History\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('documents')}\r\n                        >\r\n                            My Documents\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('billing')}\r\n                        >\r\n                            Billing & Payments\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('messages')}\r\n                        >\r\n                            Messages\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('doctorSearch')}\r\n                        >\r\n                            Find a Doctor\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('profileSettings')}\r\n                        >\r\n                            Profile Settings\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            {/* Main Content Area */}\r\n            <div className=\"flex-grow-1 p-4 bg-light\">\r\n                {showAlert && (\r\n                    <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n                        {alertMessage}\r\n                    </Alert>\r\n                )}\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <h2 className=\"mb-0\">Patient Dashboard</h2>\r\n                </div>\r\n\r\n                {/* Content based on activeTab */}\r\n                {activeTab === 'overview' && (\r\n                    <div>\r\n                        <h3>Welcome, {patientProfile.firstName || (user ? user.firstName : 'Patient')}!</h3>\r\n                        <p>This is your patient overview. Here you can quickly see your upcoming appointments and recent activities.</p>\r\n                        <div className=\"row mt-4\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        Upcoming Appointments\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        {appointments.filter(app => app.status === 'PENDING' || app.status === 'CONFIRMED').length > 0 ? (\r\n                                            appointments.filter(app => app.status === 'PENDING' || app.status === 'CONFIRMED').map(app => (\r\n                                                <li key={app.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                    <div>\r\n                                                        <strong>{app.appointmentDate} at {app.appointmentTime}</strong>\r\n                                                        <br />\r\n                                                        <small>Reason: {app.reason}</small>\r\n                                                        <br />\r\n                                                        <small>Doctor: {doctors.find(doc => doc.id === app.doctorId)?.firstName} {doctors.find(doc => doc.id === app.doctorId)?.lastName}</small>\r\n                                                    </div>\r\n                                                    <span className={`badge bg-${app.status === 'CONFIRMED' ? 'success' : 'warning'}`}>{app.status}</span>\r\n                                                </li>\r\n                                            ))\r\n                                        ) : (\r\n                                            <li className=\"list-group-item\">No upcoming appointments.</li>\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'myAppointments' && (\r\n                    <div>\r\n                        <h3>My Appointments</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => openAppointmentModal()}>\r\n                            Schedule New Appointment\r\n                        </Button>\r\n                        {appointments.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Doctor</th>\r\n                                        <th>Date</th>\r\n                                        <th>Time</th>\r\n                                        <th>Reason</th>\r\n                                        <th>Status</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {appointments.map(app => (\r\n                                        <tr key={app.id}>\r\n                                            <td>{doctors.find(doc => doc.id === app.doctorId)?.firstName} {doctors.find(doc => doc.id === app.doctorId)?.lastName}</td>\r\n                                            <td>{app.appointmentDate}</td>\r\n                                            <td>{app.appointmentTime}</td>\r\n                                            <td>{app.reason}</td>\r\n                                            <td><span className={`badge bg-${app.status === 'CONFIRMED' ? 'success' : app.status === 'PENDING' ? 'warning' : 'danger'}`}>{app.status}</span></td>\r\n                                            <td>\r\n                                                {app.status === 'PENDING' || app.status === 'CONFIRMED' ? (\r\n                                                    <>\r\n                                                        <Button variant=\"info\" size=\"sm\" className=\"me-2\" onClick={() => openAppointmentModal(app)}>Edit</Button>\r\n                                                        <Button variant=\"danger\" size=\"sm\" onClick={() => handleCancelAppointment(app.id)}>Cancel</Button>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <small>No actions available</small>\r\n                                                )}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No appointment history found. Schedule your first appointment!</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'medicalHistory' && (\r\n                    <div>\r\n                        <h3>My Medical History</h3>\r\n                        {medicalHistory.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {medicalHistory.map((record, index) => (\r\n                                    <li key={index} className=\"list-group-item\">\r\n                                        <strong>Date:</strong> {record.date} <br />\r\n                                        <strong>Diagnosis:</strong> {record.diagnosis} <br />\r\n                                        <strong>Treatment:</strong> {record.treatment} <br />\r\n                                        <strong>Doctor:</strong> {record.doctorName}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>No medical history records found.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'documents' && (\r\n                    <div>\r\n                        <h3>My Documents</h3>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Upload New Document</Form.Label>\r\n                            <Form.Control type=\"file\" onChange={handleDocumentUpload} />\r\n                        </Form.Group>\r\n\r\n                        {documents.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Document Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Upload Date</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {documents.map(doc => (\r\n                                        <tr key={doc.id}>\r\n                                            <td>{doc.fileName}</td>\r\n                                            <td>{doc.documentType}</td>\r\n                                            <td>{doc.uploadDate}</td>\r\n                                            <td>\r\n                                                <Button variant=\"success\" size=\"sm\" href={`${API_URL}/documents/${doc.id}/download`} target=\"_blank\">Download</Button>\r\n                                                {/* Add delete option if needed */}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No documents found.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'billing' && (\r\n                    <div>\r\n                        <h3>Billing & Payments</h3>\r\n                        {bills.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Bill ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Amount</th>\r\n                                        <th>Status</th>\r\n                                        <th>Due Date</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {bills.map(bill => (\r\n                                        <tr key={bill.id}>\r\n                                            <td>{bill.id}</td>\r\n                                            <td>{bill.billDate}</td>\r\n                                            <td>${bill.amount.toFixed(2)}</td>\r\n                                            <td><span className={`badge bg-${bill.status === 'PAID' ? 'success' : 'danger'}`}>{bill.status}</span></td>\r\n                                            <td>{bill.dueDate}</td>\r\n                                            <td>\r\n                                                {bill.status === 'UNPAID' && (\r\n                                                    <Button variant=\"success\" size=\"sm\" className=\"me-2\">Pay Now</Button>\r\n                                                )}\r\n                                                <Button variant=\"info\" size=\"sm\">View Details</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No billing records found.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'messages' && (\r\n                    <div>\r\n                        <h3>My Messages</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => setNewMessage({ recipientId: '', subject: '', content: '' })}>Compose New Message</Button>\r\n\r\n                        {messages.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {messages.map(msg => (\r\n                                    <li key={msg.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            <strong>From: {msg.senderType === 'DOCTOR' ? doctors.find(d => d.id === msg.senderId)?.lastName : 'Me'}</strong> <br />\r\n                                            <strong>Subject:</strong> {msg.subject} <br />\r\n                                            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                        <Button variant=\"info\" size=\"sm\" onClick={() => handleViewMessage(msg)}>View Message</Button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>No messages found.</p>\r\n                        )}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <h4>Compose New Message</h4>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Recipient (Doctor)</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"recipientId\"\r\n                                    value={newMessage.recipientId}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Select a Doctor --</option>\r\n                                    {doctors.map(doctor => (\r\n                                        <option key={doctor.id} value={doctor.id}>{doctor.firstName} {doctor.lastName}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Subject</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    value={newMessage.subject}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Content</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"content\"\r\n                                    value={newMessage.content}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSendMessage}>Send Message</Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'doctorSearch' && (\r\n                    <div>\r\n                        <h3>Find a Doctor</h3>\r\n                        <p>Search for doctors by name or specialty to find the right care for you.</p>\r\n                        {/* Basic search input - can be expanded */}\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control type=\"text\" placeholder=\"Search by name or specialty...\" />\r\n                        </Form.Group>\r\n                        {doctors.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Specialty</th>\r\n                                        <th>Contact</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {doctors.map(doctor => (\r\n                                        <tr key={doctor.id}>\r\n                                            <td>{doctor.firstName} {doctor.lastName}</td>\r\n                                            <td>{doctor.specialty || 'General Practitioner'}</td>\r\n                                            <td>{doctor.email} | {doctor.phone}</td>\r\n                                            <td>\r\n                                                <Button variant=\"primary\" size=\"sm\" onClick={() => {\r\n                                                    setNewAppointment(prev => ({ ...prev, doctorId: doctor.id }));\r\n                                                    openAppointmentModal();\r\n                                                }}>Schedule Appointment</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No doctors found.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'profileSettings' && (\r\n                    <div>\r\n                        <h3>Profile Settings</h3>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                                <Form.Label>First Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={patientProfile.firstName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                                <Form.Label>Last Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    value={patientProfile.lastName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={patientProfile.email || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formPhone\">\r\n                                <Form.Label>Phone</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"phone\"\r\n                                    value={patientProfile.phone || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAddress\">\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    value={patientProfile.address || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSaveProfile}>\r\n                                Save Profile\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Appointment Modal */}\r\n            <Modal show={showAppointmentModal} onHide={closeAppointmentModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{editingAppointment ? 'Edit Appointment' : 'Schedule New Appointment'}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formDoctor\">\r\n                            <Form.Label>Select Doctor</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"doctorId\"\r\n                                value={newAppointment.doctorId}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">-- Select a Doctor --</option>\r\n                                {doctors.map(doctor => (\r\n                                    <option key={doctor.id} value={doctor.id}>{doctor.firstName} {doctor.lastName}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formAppointmentDate\">\r\n                            <Form.Label>Date</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                name=\"appointmentDate\"\r\n                                value={newAppointment.appointmentDate}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        {newAppointment.doctorId && newAppointment.appointmentDate && availableTimes.length > 0 && (\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAppointmentTime\">\r\n                                <Form.Label>Select Available Time</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"appointmentTime\"\r\n                                    value={newAppointment.appointmentTime}\r\n                                    onChange={handleNewAppointmentChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Select Time --</option>\r\n                                    {availableTimes.map(time => (\r\n                                        <option key={time} value={time}>{time}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        )}\r\n                         {newAppointment.doctorId && newAppointment.appointmentDate && availableTimes.length === 0 && (\r\n                            <Alert variant=\"info\">No available times for this doctor on selected date. Please choose another date or doctor.</Alert>\r\n                        )}\r\n                        <Form.Group className=\"mb-3\" controlId=\"formReason\">\r\n                            <Form.Label>Reason for Appointment</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"reason\"\r\n                                value={newAppointment.reason}\r\n                                onChange={handleNewAppointmentChange}\r\n                                placeholder=\"e.g., General check-up, specific symptoms...\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeAppointmentModal}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleScheduleAppointment} disabled={!newAppointment.appointmentTime}>\r\n                        {editingAppointment ? 'Update Appointment' : 'Schedule Appointment'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Message Detail Modal */}\r\n            <Modal show={!!selectedMessage} onHide={closeMessageModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Message: {selectedMessage?.subject}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedMessage && (\r\n                        <>\r\n                            <p><strong>From:</strong> {selectedMessage.senderType === 'DOCTOR' ? doctors.find(d => d.id === selectedMessage.senderId)?.lastName : 'Me'}</p>\r\n                            <p><strong>Date:</strong> {new Date(selectedMessage.timestamp).toLocaleString()}</p>\r\n                            <hr />\r\n                            <p>{selectedMessage.content}</p>\r\n\r\n                            {selectedMessage.replies && selectedMessage.replies.length > 0 && (\r\n                                <div className=\"mt-4\">\r\n                                    <h5>Replies:</h5>\r\n                                    {selectedMessage.replies.map((reply, index) => (\r\n                                        <div key={index} className=\"border p-2 mb-2 rounded bg-light\">\r\n                                            <strong>{reply.senderType === 'DOCTOR' ? doctors.find(d => d.id === reply.senderId)?.lastName : 'Me'}:</strong> {reply.content}\r\n                                            <br />\r\n                                            <small>{new Date(reply.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            <Form.Group className=\"mt-4\">\r\n                                <Form.Label>Reply</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={2}\r\n                                    value={replyMessage.content}\r\n                                    onChange={handleReplyMessageChange}\r\n                                    placeholder=\"Type your reply here...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" className=\"mt-2\" onClick={() => handleReply(selectedMessage.id)}>Send Reply</Button>\r\n                        </>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeMessageModal}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}