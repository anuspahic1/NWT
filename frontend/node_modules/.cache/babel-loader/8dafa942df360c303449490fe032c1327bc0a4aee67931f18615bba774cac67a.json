{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\DoctorDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\n// API prefiks za notifikacije unutar ObavijestiDokumenti servisa\nconst OBAVIJESTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija/api/obavijesti`;\nfunction DoctorDashboard() {\n  _s();\n  const [activeTab, setActiveTab] = useState('overview');\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [examinations, setExaminations] = useState([]);\n  const [terms, setTerms] = useState([]);\n  const [activityLog, setActivityLog] = useState([]);\n  const [currentDoctorProfile, setCurrentDoctorProfile] = useState(null);\n  const [isEditingProfile, setIsEditingProfile] = useState(false);\n  const [editIme, setEditIme] = useState('');\n  const [editPrezime, setEditPrezime] = useState('');\n  const [editEmail, setEditEmail] = useState('');\n  const [editTelefon, setEditTelefon] = useState('');\n  const [editSpecijalizacije, setEditSpecijalizacije] = useState('');\n  const [editGrad, setEditGrad] = useState('');\n  const [editRadnoVrijeme, setEditRadnoVrijeme] = useState('');\n  const [editIskustvo, setEditIskustvo] = useState('');\n  const [editOcjena, setEditOcjena] = useState('');\n  const [profileImageFile, setProfileImageFile] = useState(null);\n  const [profileImagePreview, setProfileImagePreview] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState({\n    recipientId: '',\n    subject: '',\n    content: ''\n  });\n  const [replyMessage, setReplyMessage] = useState({\n    messageId: '',\n    content: ''\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null);\n\n  // Novo stanje za notifikacije\n  const [notifications, setNotifications] = useState([]);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\n  const [examinationFilterStatus, setExaminationFilterStatus] = useState('All');\n  const [myPatientsCurrentPage, setMyPatientsCurrentPage] = useState(1);\n  const [myExaminationsCurrentPage, setMyExaminationsCurrentPage] = useState(1);\n  const [notificationsCurrentPage, setNotificationsCurrentPage] = useState(1); // Dodano za paginaciju obavijesti\n  const itemsPerPage = 5;\n  const [showPatientDetailModal, setShowPatientDetailModal] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  // Stanja medicinske historije\n  const [medicalHistoryEntries, setMedicalHistoryEntries] = useState([]);\n  const [newMedicalHistoryEntry, setNewMedicalHistoryEntry] = useState({\n    diagnosis: '',\n    treatment: '',\n    notes: ''\n  });\n  const [newTermDate, setNewTermDate] = useState('');\n  const [newTermTime, setNewTermTime] = useState('');\n  const [selectedTermStatus, setSelectedTermStatus] = useState('DOSTUPAN');\n  const {\n    token,\n    user,\n    loading: authLoading\n  } = useAuth();\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n\n  // Funkcija za prikazivanje obavijesti\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n\n  // Mapa za prevođenje statusa pregleda i termina na bosanski jezik\n  const statusMap = {\n    'zakazan': 'Zakazan',\n    'obavljen': 'Obavljen',\n    'otkazan': 'Otkazan',\n    'u_toku': 'U toku',\n    // Dodano za konzistenciju ako se koristi\n    'DOSTUPAN': 'Dostupan',\n    'ZAKAZAN': 'Zakazan',\n    // Za termine\n    'OTKAZAN': 'Otkazan',\n    // Za termine\n    'NEDOSTUPAN': 'Nedostupan',\n    // Za termine\n    'POSLANO': 'Poslano',\n    // Za notifikacije\n    'PROCITANO': 'Pročitano',\n    // Za notifikacije\n    '': 'Nepoznat',\n    // Default ili prazno\n    null: 'Nepoznat' // Za null vrijednosti\n  };\n\n  // Funkcija za dobivanje prevedenog statusa\n  const getTranslatedStatus = status => {\n    return statusMap[status] || status; // Vraća originalni status ako prevod ne postoji\n  };\n  const fetchDoctors = async () => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      setDoctors(response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: Number(doc.userId),\n        name: `${doc.ime} ${doc.prezime}`,\n        ime: doc.ime,\n        prezime: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        grad: doc.grad,\n        email: doc.email,\n        telefon: doc.telefon,\n        radnoVrijeme: doc.radnoVrijeme,\n        iskustvo: doc.iskustvo,\n        ocjena: doc.ocjena,\n        profileImageBase64: doc.profileImageBase64\n      })));\n    } catch (error) {\n      var _error$response;\n      console.error(\"Greška pri dohvaćanju svih doktora:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      showNotification(\"Greška pri dohvaćanju doktora.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\n      setPatients(response.data.map(pat => ({\n        id: pat.pacijentID,\n        userId: Number(pat.userId),\n        name: `${pat.ime} ${pat.prezime}`,\n        ime: pat.ime,\n        prezime: pat.prezime,\n        email: pat.email,\n        phone: pat.telefon\n      })));\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Greška pri dohvaćanju svih pacijenata:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      showNotification(\"Greška pri dohvaćanju pacijenata.\", \"danger\");\n    }\n  };\n  const fetchTerms = async () => {\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      console.warn(\"Nije moguće dohvatiti termine: doktorId nedostaje ili autentifikacija nije spremna.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${user.doktorId}`, authHeaders);\n      console.log(\"Raw podaci o terminima primljeni sa backend-a (FETCH):\", response.data);\n      setTerms(response.data.map(term => {\n        console.log(`Mapiranje ID termina: ${term.terminID}, status: ${term.statusTermina}, datum: ${term.datum}, vrijeme: ${term.vrijeme}`);\n        return {\n          id: term.terminID,\n          doktorId: term.doktorID,\n          datum: term.datum,\n          vrijeme: term.vrijeme,\n          statusTermina: term.statusTermina\n        };\n      }));\n      showNotification(\"Doktorovi termini uspješno dohvaćeni!\", \"success\");\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Greška pri dohvaćanju doktorovih termina:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      showNotification(\"Greška pri dohvaćanju doktorovih termina.\", \"danger\");\n    }\n  };\n  const fetchExaminations = async () => {\n    if (!token) return;\n    try {\n      // Filtrirajte preglede samo za trenutno prijavljenog doktora\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/doktor/${user.doktorId}`, authHeaders);\n      setExaminations(response.data.map(exam => ({\n        id: exam.pregledID,\n        pacijentId: exam.pacijentID,\n        doktorId: exam.doktorID,\n        patientName: exam.pacijentIme || 'N/A',\n        doctorName: exam.doktorIme || 'N/A',\n        date: exam.datumPregleda,\n        time: exam.vrijemePregleda,\n        status: exam.status,\n        komentarPacijenta: exam.komentarPacijenta || '',\n        ocjenaDoktora: exam.ocjenaDoktora || null,\n        terminID: exam.terminID\n      })));\n    } catch (error) {\n      var _error$response4;\n      console.error(\"Greška pri dohvaćanju svih pregleda:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      showNotification(\"Greška pri dohvaćanju pregleda.\", \"danger\");\n    }\n  };\n  const fetchActivityLog = async () => {\n    if (!token) return;\n    try {\n      console.warn(\"Endpoint Dnevnika aktivnosti nije definiran, preskačem dohvaćanje dnevnika aktivnosti.\");\n      setActivityLog([]);\n    } catch (error) {\n      var _error$response5;\n      console.error(\"Greška pri dohvaćanju dnevnika aktivnosti:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      showNotification(\"Greška pri dohvaćanju dnevnika aktivnosti.\", \"danger\");\n    }\n  };\n  const fetchPatientMedicalHistory = async patientId => {\n    if (!token || !patientId) return;\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${patientId}`, authHeaders);\n      setMedicalHistoryEntries(response.data.map(record => ({\n        id: record.zapisID,\n        patientId: record.pacijentID,\n        doctorId: record.doktorID,\n        doctorName: record.doktorIme,\n        date: record.datumZapisivanja,\n        diagnosis: record.dijagnoza,\n        treatment: record.lijecenje,\n        notes: record.napomene\n      })));\n    } catch (error) {\n      var _error$response6;\n      console.error(\"Greška pri dohvaćanju medicinske historije pacijenta:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      setMedicalHistoryEntries([]);\n      showNotification(\"Greška pri dohvaćanju medicinske historije pacijenta.\", \"danger\");\n    }\n  };\n  const handleAddMedicalHistoryEntry = async () => {\n    if (!token || !selectedPatient || !user || !user.doktorId) {\n      showNotification(\"Nedostaju podaci za dodavanje unosa medicinske historije.\", \"danger\");\n      return;\n    }\n    if (!newMedicalHistoryEntry.diagnosis || !newMedicalHistoryEntry.treatment) {\n      showNotification(\"Dijagnoza i liječenje su obavezni za medicinsku historiju.\", \"warning\");\n      return;\n    }\n    try {\n      const payload = {\n        pacijentID: selectedPatient.id,\n        doktorID: user.doktorId,\n        datumZapisivanja: new Date().toISOString().split('T')[0],\n        dijagnoza: newMedicalHistoryEntry.diagnosis,\n        lijecenje: newMedicalHistoryEntry.treatment,\n        napomene: newMedicalHistoryEntry.notes\n      };\n      await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija`, payload, authHeaders);\n      showNotification(\"Unos medicinske historije uspješno dodan!\", \"success\");\n      setNewMedicalHistoryEntry({\n        diagnosis: '',\n        treatment: '',\n        notes: ''\n      });\n      fetchPatientMedicalHistory(selectedPatient.id);\n    } catch (error) {\n      var _error$response7, _error$response8, _error$response8$data;\n      console.error(\"Greška pri dodavanju unosa medicinske historije:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      showNotification(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Greška pri dodavanju unosa medicinske historije.', 'danger');\n    }\n  };\n  const openPatientDetailModal = async patient => {\n    setSelectedPatient(patient);\n    await fetchPatientMedicalHistory(patient.id);\n    setShowPatientDetailModal(true);\n  };\n  const closePatientDetailModal = () => {\n    setShowPatientDetailModal(false);\n    setSelectedPatient(null);\n    setMedicalHistoryEntries([]);\n    setNewMedicalHistoryEntry({\n      diagnosis: '',\n      treatment: '',\n      notes: ''\n    });\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setProfileImageFile(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setProfileImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setProfileImageFile(null);\n      setProfileImagePreview(null);\n    }\n  };\n  const fetchCurrentDoctorProfile = async () => {\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      console.warn(\"Nije moguće dohvatiti trenutni profil doktora: doktorId nedostaje ili autentifikacija nije spremna.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, authHeaders);\n      const profileData = response.data;\n      setCurrentDoctorProfile(profileData);\n      setEditIme(profileData.ime || '');\n      setEditPrezime(profileData.prezime || '');\n      setEditEmail(profileData.email || '');\n      setEditTelefon(profileData.telefon || '');\n      setEditSpecijalizacije(Array.isArray(profileData.specijalizacije) ? profileData.specijalizacije.join(', ') : '');\n      setEditGrad(profileData.grad || '');\n      setEditRadnoVrijeme(profileData.radnoVrijeme || '');\n      setEditIskustvo(profileData.iskustvo || '');\n      setEditOcjena(profileData.ocjena || '');\n      setProfileImagePreview(profileData.profileImageBase64 || null);\n    } catch (error) {\n      var _error$response9;\n      console.error(\"Greška pri dohvaćanju profila doktora:\", ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n      showNotification(\"Greška pri dohvaćanju profila doktora.\", \"danger\");\n    }\n  };\n  const handleUpdateDoctorProfile = async e => {\n    e.preventDefault();\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      showNotification(\"Niste autorizirani ili ID doktora nedostaje.\", \"danger\");\n      return;\n    }\n    const updatedProfile = {\n      doktorID: user.doktorId,\n      userId: currentDoctorProfile.userId,\n      ime: editIme,\n      prezime: editPrezime,\n      email: editEmail,\n      telefon: editTelefon,\n      specijalizacije: editSpecijalizacije.split(',').map(s => s.trim()).filter(s => s !== ''),\n      grad: editGrad,\n      radnoVrijeme: editRadnoVrijeme,\n      iskustvo: parseInt(editIskustvo, 10),\n      ocjena: parseFloat(editOcjena) || 0.0,\n      profileImageBase64: profileImagePreview\n    };\n    try {\n      const response = await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, updatedProfile, authHeaders);\n      setCurrentDoctorProfile(response.data);\n      setIsEditingProfile(false);\n      showNotification(\"Profil uspješno ažuriran!\");\n      fetchDoctors();\n    } catch (error) {\n      var _error$response0, _error$response1, _error$response1$data;\n      console.error(\"Greška pri ažuriranju profila:\", ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error.message);\n      showNotification(((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || 'Greška pri ažuriranju profila.', 'danger');\n    }\n  };\n  const fetchDocuments = async () => {\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      console.warn(\"Nije moguće dohvatiti dokumente: doktorId nedostaje ili autentifikacija nije spremna.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/doktor/${user.doktorId}`, authHeaders);\n      console.log(\"Raw podaci o dokumentima iz odgovora:\", response.data);\n      const transformedDocuments = response.data.filter(doc => doc.dokumentacijaID !== null && doc.dokumentacijaID !== undefined).map(doc => {\n        const id = Number(doc.dokumentacijaID);\n        if (isNaN(id)) {\n          console.warn(`Dokument sa numeričkim dokumentacijaID pronađen: ${doc.dokumentacijaID}. Ovaj dokument možda neće biti moguće preuzeti, ali će biti prikazan.`);\n        }\n        return {\n          id: id,\n          fileName: doc.nazivDokumenta,\n          documentType: doc.tipDokumenta,\n          uploadDate: doc.datumKreiranja,\n          pristup: doc.pristup,\n          pacijentIme: doc.pacijentIme\n        };\n      });\n      console.log(\"Transformirani dokumenti za stanje (nakon laganog filtriranja):\", transformedDocuments);\n      setDocuments(transformedDocuments);\n      showNotification(\"Dokumenti uspješno dohvaćeni!\", \"success\");\n    } catch (error) {\n      var _error$response10;\n      console.error('Greška pri dohvaćanju dokumenata za doktora:', ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message);\n      showNotification('Nije uspjelo dohvaćanje dokumenata.', \"danger\");\n      setDocuments([]);\n    }\n  };\n  const handleDocumentUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!user || user.doktorId === null || user.doktorId === undefined) {\n      showNotification(\"ID doktora nije dostupan za upload dokumenta.\", \"danger\");\n      return;\n    }\n    console.log(\"Pokušavam uploadati dokument sa ID-om doktora:\", user.doktorId);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('doktorID', user.doktorId);\n    formData.append('tipDokumenta', 'Doctor Upload');\n    formData.append('pristup', 'PRIVATNA');\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      showNotification('Dokument uspješno uploadan!', 'success');\n      setTimeout(() => {\n        fetchDocuments();\n      }, 500);\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response12$dat;\n      console.error('Greška pri uploadu dokumenta:', ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message);\n      showNotification('Upload dokumenta nije uspio. ' + (((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.message) || error.message), \"danger\");\n    }\n  };\n  const handleDownloadDocument = async (docId, fileName) => {\n    const numericDocId = Number(docId);\n    if (docId === null || docId === undefined || isNaN(numericDocId)) {\n      console.error('Pokušaj preuzimanja dokumenta sa nevažećim ID-om:', docId);\n      showNotification('Greška: ID dokumenta je nevažeći. Preuzimanje nije moguće.', 'danger');\n      return;\n    }\n    const downloadUrl = `${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${numericDocId}`;\n    console.log(\"Pokušavam preuzeti dokument sa URL-a:\", downloadUrl);\n    try {\n      const response = await axios.get(downloadUrl, {\n        ...authHeaders,\n        responseType: 'blob'\n      });\n      const blob = new Blob([response.data], {\n        type: response.headers['content-type']\n      });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', fileName);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      showNotification('Dokument uspješno preuzet!', 'success');\n    } catch (error) {\n      var _error$response13, _error$response14, _error$response14$dat;\n      console.error('Greška pri preuzimanju dokumenta:', ((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) || error.message);\n      showNotification('Nije uspjelo preuzimanje dokumenta. ' + (((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : (_error$response14$dat = _error$response14.data) === null || _error$response14$dat === void 0 ? void 0 : _error$response14$dat.message) || error.message), 'danger');\n    }\n  };\n  const fetchMessages = async () => {\n    if (!token || !user || user.userId === null || user.userId === undefined) {\n      console.warn(\"Nije moguće dohvatiti poruke: user.userId nedostaje ili autentifikacija nije spremna.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=DOKTOR`, authHeaders);\n      const transformedMessages = response.data.map(msg => ({\n        id: msg.porukaID,\n        senderId: Number(msg.senderId),\n        senderType: msg.senderType,\n        senderIme: msg.senderIme,\n        receiverId: Number(msg.receiverId),\n        receiverType: msg.receiverType,\n        receiverIme: msg.receiverIme,\n        subject: msg.subject,\n        content: msg.content,\n        timestamp: msg.timestamp,\n        replies: msg.replies || []\n      }));\n      setMessages(transformedMessages);\n      showNotification(\"Poruke uspješno dohvaćene!\", \"success\");\n    } catch (error) {\n      var _error$response15;\n      console.error('Greška pri dohvaćanju poruka za doktora:', ((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.data) || error.message);\n      showNotification('Nije uspjelo dohvaćanje poruka.', \"danger\");\n    }\n  };\n  const handleNewMessageChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMessage(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSendMessage = async () => {\n    if (!user || user.userId === null || user.userId === undefined) {\n      showNotification('Vaš ID korisnika nije dostupan. Nije moguće poslati poruku.', 'danger');\n      return;\n    }\n    if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\n      showNotification('Molimo popunite sva polja poruke.', 'warning');\n      return;\n    }\n    try {\n      const messageData = {\n        senderId: user.userId,\n        senderType: 'DOKTOR',\n        receiverId: Number(newMessage.recipientId),\n        receiverType: 'PACIJENT',\n        subject: newMessage.subject,\n        content: newMessage.content\n      };\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\n      showNotification('Poruka uspješno poslana!', 'success');\n      setNewMessage({\n        recipientId: '',\n        subject: '',\n        content: ''\n      });\n      fetchMessages();\n    } catch (error) {\n      var _error$response16, _error$response17, _error$response17$dat;\n      console.error('Greška pri slanju poruke:', ((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : _error$response16.data) || error.message);\n      showNotification('Nije uspjelo slanje poruke. ' + (((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : (_error$response17$dat = _error$response17.data) === null || _error$response17$dat === void 0 ? void 0 : _error$response17$dat.message) || error.message), \"danger\");\n    }\n  };\n  const handleReplyMessageChange = e => {\n    setReplyMessage(prev => ({\n      ...prev,\n      content: e.target.value\n    }));\n  };\n  const handleReply = async messageId => {\n    if (!user || user.userId === null || user.userId === undefined) {\n      showNotification('Vaš ID korisnika nije dostupan. Nije moguće odgovoriti.', 'danger');\n      return;\n    }\n    if (!replyMessage.content) {\n      showNotification('Sadržaj odgovora ne može biti prazan.', 'warning');\n      return;\n    }\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\n        senderId: user.userId,\n        senderIme: `${user.ime || ''} ${user.prezime || ''}`.trim(),\n        senderType: 'DOKTOR',\n        content: replyMessage.content,\n        timestamp: new Date().toISOString()\n      }, authHeaders);\n      showNotification('Odgovor uspješno poslan!', 'success');\n      setReplyMessage({\n        messageId: '',\n        content: ''\n      });\n      fetchMessages();\n      setSelectedMessage(prev => {\n        if (!prev) return null;\n        return {\n          ...prev,\n          replies: [...(prev.replies || []), {\n            senderId: user.userId,\n            senderIme: `${user.ime || ''} ${user.prezime || ''}`.trim(),\n            senderType: 'DOKTOR',\n            content: replyMessage.content,\n            timestamp: new Date().toISOString()\n          }]\n        };\n      });\n    } catch (error) {\n      var _error$response18, _error$response19, _error$response19$dat;\n      console.error('Greška pri slanju odgovora:', ((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : _error$response18.data) || error.message);\n      showNotification('Nije uspjelo slanje odgovora. ' + (((_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : (_error$response19$dat = _error$response19.data) === null || _error$response19$dat === void 0 ? void 0 : _error$response19$dat.message) || error.message), \"danger\");\n    }\n  };\n  const handleViewMessage = message => {\n    setSelectedMessage(message);\n  };\n  const closeMessageModal = () => {\n    setSelectedMessage(null);\n    setReplyMessage({\n      messageId: '',\n      content: ''\n    });\n  };\n  const handleCreateTerm = async e => {\n    e.preventDefault();\n    if (!user || user.doktorId === null || user.doktorId === undefined) {\n      showNotification(\"ID doktora nije dostupan. Nije moguće kreirati termin.\", \"danger\");\n      return;\n    }\n    if (!newTermDate || !newTermTime) {\n      showNotification(\"Molimo odaberite i datum i vrijeme za novi termin.\", \"warning\");\n      return;\n    }\n    try {\n      const termData = {\n        doktorID: user.doktorId,\n        datum: newTermDate,\n        vrijeme: newTermTime + ':00',\n        // Dodaj sekunde za HH:MM:SS format\n        statusTermina: selectedTermStatus\n      };\n      console.log(\"Slanje podataka za novi termin (KREIRANJE):\", termData);\n      await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, termData, authHeaders);\n      showNotification(\"Termin uspješno kreiran!\", \"success\");\n      setNewTermDate('');\n      setNewTermTime('');\n      setSelectedTermStatus('DOSTUPAN');\n      fetchTerms();\n    } catch (error) {\n      var _error$response20, _error$response21, _error$response21$dat;\n      console.error(\"Greška pri kreiranju termina:\", ((_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : _error$response20.data) || error.message);\n      showNotification(`Nije uspjelo kreiranje termina: ${((_error$response21 = error.response) === null || _error$response21 === void 0 ? void 0 : (_error$response21$dat = _error$response21.data) === null || _error$response21$dat === void 0 ? void 0 : _error$response21$dat.message) || error.message}`, \"danger\");\n    }\n  };\n  const handleDeleteTerm = async termId => {\n    if (!token) return;\n    try {\n      await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${termId}`, authHeaders);\n      showNotification(\"Termin uspješno obrisan!\", \"success\");\n      fetchTerms();\n    } catch (error) {\n      var _error$response22, _error$response23, _error$response23$dat;\n      console.error(\"Greška pri brisanju termina:\", ((_error$response22 = error.response) === null || _error$response22 === void 0 ? void 0 : _error$response22.data) || error.message);\n      showNotification(`Nije uspjelo brisanje termina: ${((_error$response23 = error.response) === null || _error$response23 === void 0 ? void 0 : (_error$response23$dat = _error$response23.data) === null || _error$response23$dat === void 0 ? void 0 : _error$response23$dat.message) || error.message}`, \"danger\");\n    }\n  };\n  const handleUpdateTermStatus = async (termId, targetStatus) => {\n    if (!token) return;\n    const termToUpdate = terms.find(term => term.id === termId);\n    if (!termToUpdate) {\n      showNotification('Termin nije pronađen za ažuriranje.', 'danger');\n      return;\n    }\n    console.log(`DEBUG (Frontend): Originalni termin iz stanja za ID ${termId}:`, termToUpdate);\n    console.log(`DEBUG (Frontend): Originalni datum termina iz stanja: ${termToUpdate.datum}`);\n    console.log(`DEBUG (Frontend): Originalno vrijeme termina iz stanja: ${termToUpdate.vrijeme}`);\n    console.log(`DEBUG (Frontend): Ciljani status za ažuriranje: ${targetStatus}`);\n    try {\n      const payload = {\n        terminID: termToUpdate.id,\n        doktorID: termToUpdate.doktorId,\n        datum: typeof termToUpdate.datum === 'string' ? termToUpdate.datum : termToUpdate.datum.toISOString().split('T')[0],\n        vrijeme: termToUpdate.vrijeme.includes(':') && termToUpdate.vrijeme.split(':').length === 2 ? termToUpdate.vrijeme + ':00' : termToUpdate.vrijeme,\n        // Ensure HH:MM:SS format\n        statusTermina: targetStatus\n      };\n      console.log(\"Slanje payloada za ažuriranje termina (AŽURIRANJE - sa frontenda):\", payload);\n      const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${termId}`, payload, authHeaders);\n      console.log(\"Odgovor backend-a za ažuriranje:\", response.data);\n      showNotification(`Status termina ažuriran na ${getTranslatedStatus(targetStatus).toLowerCase()}!`, 'success');\n      fetchTerms();\n    } catch (error) {\n      var _error$response24, _error$response25, _error$response25$dat;\n      console.error(\"Greška pri ažuriranju statusa termina:\", ((_error$response24 = error.response) === null || _error$response24 === void 0 ? void 0 : _error$response24.data) || error.message);\n      showNotification(`Nije uspjelo ažuriranje statusa termina: ${((_error$response25 = error.response) === null || _error$response25 === void 0 ? void 0 : (_error$response25$dat = _error$response25.data) === null || _error$response25$dat === void 0 ? void 0 : _error$response25$dat.message) || error.message}`, \"danger\");\n    }\n  };\n\n  // Nova funkcija za dohvaćanje obavijesti\n  const fetchNotifications = async () => {\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      console.warn(\"Nije moguće dohvatiti obavijesti: doktorId nedostaje ili autentifikacija nije spremna.\");\n      setNotifications([]); // Osiguraj praznu listu ako podaci nisu dostupni\n      return;\n    }\n    try {\n      // Pretpostavljeni endpoint za dohvaćanje obavijesti za doktora\n      const response = await axios.get(`${OBAVIJESTI_API_PREFIX}/notifikacije/doktor/${user.doktorId}`, authHeaders);\n      console.log(\"Raw podaci o notifikacijama primljeni sa backend-a:\", response.data);\n      setNotifications(response.data.map(notif => ({\n        id: notif.notifikacijaID || notif.id,\n        // Koristite notifikacijaID sa backend-a\n        korisnikID: notif.korisnikID,\n        tip: notif.uloga,\n        // Uloga 'DOKTOR' ili 'PACIJENT' može se koristiti kao tip obavijesti\n        sadrzaj: notif.sadrzaj,\n        datum: notif.datumSlanja || notif.datum,\n        // Koristite datumSlanja sa backend-a\n        procitana: notif.status === 'PROCITANO' // Pretvara STATUS u boolean procitana\n      })).sort((a, b) => new Date(b.datum) - new Date(a.datum))); // Sortiraj od najnovije\n\n      showNotification(\"Obavijesti uspješno dohvaćene!\", \"success\");\n    } catch (error) {\n      var _error$response26;\n      console.error(\"Greška pri dohvaćanju obavijesti:\", ((_error$response26 = error.response) === null || _error$response26 === void 0 ? void 0 : _error$response26.data) || error.message);\n      showNotification(\"Greška pri dohvaćanju obavijesti. Prikazujem demo podatke.\", \"danger\");\n      // Demo podaci ako je došlo do greške (za testiranje frontenda)\n      setNotifications([{\n        id: 1,\n        korisnikID: user.doktorId,\n        tip: 'NOVI_PREGLED',\n        sadrzaj: 'Novi pregled zakazan za Pacijenta A (2025-06-25 u 10:00).',\n        datum: '2025-06-20T10:30:00',\n        procitana: false\n      }, {\n        id: 2,\n        korisnikID: user.doktorId,\n        tip: 'OPSTA_OBAVIJEST',\n        sadrzaj: 'Sistem će biti nedostupan zbog održavanja od 02:00 do 03:00 ujutro.',\n        datum: '2025-06-19T18:00:00',\n        procitana: false\n      }, {\n        id: 3,\n        korisnikID: user.doktorId,\n        tip: 'OTKAZANI_PREGLED',\n        sadrzaj: 'Pregled za Pacijenta B (2025-06-22 u 14:00) je otkazan.',\n        datum: '2025-06-18T09:15:00',\n        procitana: true\n      }, {\n        id: 4,\n        korisnikID: user.doktorId,\n        tip: 'NOVI_PREGLED',\n        sadrzaj: 'Novi pregled zakazan za Pacijenta C (2025-06-28 u 09:30).',\n        datum: '2025-06-20T11:00:00',\n        procitana: false\n      }].filter(n => n.korisnikID === user.doktorId).sort((a, b) => new Date(b.datum) - new Date(a.datum)));\n    }\n  };\n\n  // Funkcija za označavanje obavijesti kao pročitane\n  const handleMarkNotificationAsRead = async notificationId => {\n    if (!token) return;\n    try {\n      // Pretpostavljeni endpoint za ažuriranje statusa obavijesti\n      await axios.put(`${OBAVIJESTI_API_PREFIX}/notifikacije/${notificationId}/procitana`, null, authHeaders);\n      setNotifications(prevNotifications => prevNotifications.map(notif => notif.id === notificationId ? {\n        ...notif,\n        procitana: true\n      } : notif));\n      showNotification(\"Obavijest označena kao pročitana!\", \"success\");\n    } catch (error) {\n      var _error$response27;\n      console.error(\"Greška pri označavanju obavijesti kao pročitane:\", ((_error$response27 = error.response) === null || _error$response27 === void 0 ? void 0 : _error$response27.data) || error.message);\n      showNotification(\"Nije uspjelo označavanje obavijesti kao pročitane.\", \"danger\");\n      // Lokalno ažuriranje za demo svrhe ako backend ne radi\n      setNotifications(prevNotifications => prevNotifications.map(notif => notif.id === notificationId ? {\n        ...notif,\n        procitana: true\n      } : notif));\n    }\n  };\n  useEffect(() => {\n    console.log(\"DoctorDashboard useEffect: token=\", token, \"user=\", user, \"authLoading=\", authLoading);\n    if (!authLoading && token && user && user.doktorId) {\n      console.log(\"DoctorDashboard useEffect: Pokrećem dohvaćanje podataka za doktorId:\", user.doktorId);\n      fetchDoctors();\n      fetchPatients();\n      fetchTerms();\n      fetchExaminations();\n      fetchActivityLog();\n      fetchCurrentDoctorProfile();\n      fetchDocuments();\n      fetchMessages();\n      fetchNotifications(); // Dohvati obavijesti\n    } else if (!authLoading) {\n      console.log(\"DoctorDashboard useEffect: Dohvaćanje podataka preskočeno jer uvjet nije ispunjen.\", {\n        token,\n        user,\n        doktorId: user === null || user === void 0 ? void 0 : user.doktorId,\n        authLoading\n      });\n    }\n  }, [token, user, authLoading]);\n  console.log(\"DoctorDashboard provjera renderiranja: token=\", token, \"user=\", user, \"user.doktorId=\", user === null || user === void 0 ? void 0 : user.doktorId, \"authLoading=\", authLoading);\n  if (authLoading) {\n    console.log(\"DoctorDashboard: Još uvijek se učitava autentifikacija...\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3\",\n        children: \"U\\u010Ditavanje autentifikacije...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 13\n    }, this);\n  }\n  if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n    console.log(\"DoctorDashboard: Nije autoriziran kao doktor ili nepotpuni podaci. Uvjeti:\", {\n      token: !!token,\n      user: !!user,\n      doktorIdDefined: (user === null || user === void 0 ? void 0 : user.doktorId) !== null && (user === null || user === void 0 ? void 0 : user.doktorId) !== undefined\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3\",\n        children: \"Niste autorizirani kao doktor ili nepotpuni podaci.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 13\n    }, this);\n  }\n  const currentDoctorId = user.doktorId;\n  const currentDoctorUserId = user.userId;\n  console.log(\"DoctorDashboard: Trenutni ID doktora za filtriranje (nakon početnih provjera):\", currentDoctorId, \"Trenutni ID korisnika:\", currentDoctorUserId);\n  const doctorsExaminations = examinations.filter(examination => examination.doktorId === currentDoctorId);\n  const patientIdsWithExaminations = new Set(doctorsExaminations.map(exam => exam.pacijentId));\n  const myPatients = patients.filter(patient => patientIdsWithExaminations.has(patient.id));\n  const handleUpdateExaminationStatus = async (id, newStatus) => {\n    try {\n      const existingExamination = examinations.find(exam => exam.id === id);\n      if (!existingExamination) {\n        showNotification('Pregled nije pronađen za ažuriranje statusa.', 'danger');\n        return;\n      }\n      console.log(\"Postojeći objekt pregleda prije ažuriranja:\", existingExamination);\n      const terminIdToSend = existingExamination.terminID;\n      console.log(\"ID termina za slanje:\", terminIdToSend);\n      if (terminIdToSend === null || terminIdToSend === undefined) {\n        showNotification('Greška: ID termina nedostaje za ovaj pregled. Molimo osigurajte da svi pregledi imaju važeći termin.', 'danger');\n        return;\n      }\n      const ratingToSend = newStatus === 'obavljen' ? existingExamination.ocjenaDoktora || 5.0 : existingExamination.ocjenaDoktora;\n\n      // POBOLJŠANO FORMATIRANJE VREMENA:\n      let formattedTime = null;\n      if (existingExamination.time) {\n        // Pokušaj parsirati vrijeme i formatirati ga u HH:MM:SS\n        try {\n          const dateObj = new Date(`2000-01-01T${existingExamination.time}`); // Datum je fiktivan, bitno je samo vrijeme\n          if (!isNaN(dateObj)) {\n            // Provjeri je li parsiranje uspješno\n            formattedTime = dateObj.toTimeString().split(' ')[0]; // Dobij HH:MM:SS\n          } else {\n            // Ako Date objekt ne može parsirati, pokušaj ručno dodati sekunde\n            const parts = existingExamination.time.split('.'); // Ukloni milisekunde ako postoje\n            let timeWithoutMs = parts[0];\n            if (timeWithoutMs.length === 5) {\n              // Ako je HH:MM, dodaj :00\n              formattedTime = timeWithoutMs + ':00';\n            } else {\n              formattedTime = timeWithoutMs; // Očekuje se HH:MM:SS ako je duže\n            }\n          }\n        } catch (parseError) {\n          // Fallback ako Date objekat ne može parsirati\n          console.warn(\"Greška pri parsiranju vremena sa Date objektom, pokušavam ručni fallback:\", parseError);\n          const parts = existingExamination.time.split('.'); // Ukloni milisekunde ako postoje\n          let timeWithoutMs = parts[0];\n          if (timeWithoutMs.length === 5) {\n            // Ako je HH:MM, dodaj :00\n            formattedTime = timeWithoutMs + ':00';\n          } else {\n            formattedTime = timeWithoutMs; // Očekuje se HH:MM:SS ako je duže\n          }\n        }\n      }\n      if (!formattedTime) {\n        console.error(\"Vrijeme pregleda nije uspjelo biti formatirano. Originalno vrijeme:\", existingExamination.time);\n        showNotification('Greška pri formatiranju vremena pregleda.', 'danger');\n        return; // Prekini funkciju ako vrijeme nije ispravno formatirano\n      }\n      console.log(\"Formatirano vrijeme za slanje:\", formattedTime);\n      const examinationPayload = {\n        pregledID: existingExamination.id,\n        pacijentID: existingExamination.pacijentId,\n        doktorID: existingExamination.doktorId,\n        datumPregleda: existingExamination.date,\n        // Ovo je već string \"YYYY-MM-DD\"\n        vrijemePregleda: formattedTime,\n        // Koristi formatirano vrijeme\n        status: newStatus,\n        komentarPacijenta: existingExamination.komentarPacijenta,\n        ocjenaDoktora: ratingToSend,\n        terminID: terminIdToSend\n      };\n      console.log(\"Payload koji se šalje backendu za ažuriranje pregleda:\", examinationPayload);\n      const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, examinationPayload, authHeaders);\n      const updatedExam = {\n        id: response.data.pregledID,\n        pacijentId: response.data.pacijentID,\n        doktorId: response.data.doktorID,\n        patientName: response.data.pacijentIme || 'N/A',\n        doctorName: response.data.doktorIme || 'N/A',\n        date: response.data.datumPregleda,\n        time: response.data.vrijemePregleda,\n        status: response.data.status,\n        komentarPacijenta: response.data.komentarPacijenta || '',\n        ocjenaDoktora: response.data.ocjenaDoktora || null,\n        terminID: response.data.terminID\n      };\n      setExaminations(examinations.map(exam => exam.id === id ? updatedExam : exam));\n      fetchActivityLog();\n      showNotification(`Status pregleda ažuriran na ${getTranslatedStatus(newStatus).toLowerCase()}!`, 'info');\n      // Nakon uspješnog ažuriranja, ponovo dohvatite termine kako bi se njihov status ažurirao u prikazu\n      fetchTerms();\n    } catch (error) {\n      var _error$response28, _error$response29, _error$response29$dat;\n      console.error(\"Greška pri ažuriranju statusa pregleda:\", ((_error$response28 = error.response) === null || _error$response28 === void 0 ? void 0 : _error$response28.data) || error.message);\n      showNotification(((_error$response29 = error.response) === null || _error$response29 === void 0 ? void 0 : (_error$response29$dat = _error$response29.data) === null || _error$response29$dat === void 0 ? void 0 : _error$response29$dat.message) || 'Greška pri ažuriranju statusa pregleda.', \"danger\");\n    }\n  };\n  const filteredMyPatients = myPatients.filter(patient => patient.name && patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email && patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastMyPatient = myPatientsCurrentPage * itemsPerPage;\n  const indexOfFirstMyPatient = indexOfLastMyPatient - itemsPerPage;\n  const currentMyPatients = filteredMyPatients.slice(indexOfFirstMyPatient, indexOfLastMyPatient);\n  const totalMyPatientPages = Math.ceil(filteredMyPatients.length / itemsPerPage);\n  const filteredMyExaminations = doctorsExaminations.filter(examination => {\n    const matchesSearch = examination.patientName && examination.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || examination.status && examination.status.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || examination.date && new Date(examination.date).toLocaleDateString().includes(examinationSearchTerm);\n    const matchesFilterStatus = examinationFilterStatus === 'All' || examination.status === examinationFilterStatus;\n    return matchesSearch && matchesFilterStatus;\n  });\n  const indexOfLastMyExaminations = myExaminationsCurrentPage * itemsPerPage;\n  const indexOfFirstMyExaminations = indexOfLastMyExaminations - itemsPerPage;\n  const currentMyExaminations = filteredMyExaminations.slice(indexOfFirstMyExaminations, indexOfLastMyExaminations);\n  const totalMyExaminationsPages = Math.ceil(filteredMyExaminations.length / itemsPerPage);\n  const Pagination = ({\n    itemsPerPage,\n    totalItems,\n    currentPage,\n    paginate\n  }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center mt-4\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === number ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 29\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Funkcija za renderiranje sadržaja taba\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Pregled Doktora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-info mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Ukupno pacijenata pod skrbi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: myPatients.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 929,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 928,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-warning mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Pregledi na \\u010Dekanju\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 935,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: doctorsExaminations.filter(exam => exam.status === 'zakazan').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 937,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 936,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 933,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Brze akcije\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 943,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2 flex-wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-info\",\n                onClick: () => setActiveTab('my-examinations'),\n                children: \"Moji pregledi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 945,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-success\",\n                onClick: () => setActiveTab('my-patients'),\n                children: \"Moji pacijenti\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => setActiveTab('documents'),\n                children: \"Dokumenti\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 947,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary\",\n                onClick: () => setActiveTab('messages'),\n                children: \"Poruke\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 948,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-danger\",\n                onClick: () => setActiveTab('manage-terms'),\n                children: \"Upravljanje terminima\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-dark\",\n                onClick: () => setActiveTab('notifications'),\n                children: \"Obavijesti\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 950,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 942,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Nedavne aktivnosti\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: activityLog.length > 0 ? activityLog.filter(log => log.doktorId === currentDoctorId).slice(-5).reverse().map(log => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item d-flex justify-content-between align-items-center\",\n                children: [log.action, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"badge bg-light text-dark\",\n                  children: new Date(log.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 962,\n                  columnNumber: 49\n                }, this)]\n              }, log.id || Math.random(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 960,\n                columnNumber: 45\n              }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item text-center text-muted\",\n                children: \"Nema nedavnih aktivnosti.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 21\n        }, this);\n      case 'my-examinations':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Upravljanje mojim pregledima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25 me-2\",\n              placeholder: \"Pretra\\u017Eite preglede (ime pacijenta, status, datum)...\",\n              value: examinationSearchTerm,\n              onChange: e => setExaminationSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              className: \"w-auto\",\n              value: examinationFilterStatus,\n              onChange: e => setExaminationFilterStatus(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"All\",\n                children: \"Filtriraj po statusu (Svi)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 989,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"zakazan\",\n                children: \"Zakazan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"obavljen\",\n                children: \"Obavljen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 991,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"otkazan\",\n                children: \"Otkazan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 992,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 976,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 999,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Pacijent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1000,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Datum\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1001,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Vrijeme\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1002,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1003,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Akcije\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1004,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 998,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentMyExaminations.length > 0 ? currentMyExaminations.map(examination => {\n                  const patient = patients.find(p => p.id === examination.pacijentId);\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: examination.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1013,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: patient ? patient.name : 'N/A'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1014,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: new Date(examination.date).toLocaleDateString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1015,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: examination.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1016,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `badge ${examination.status === 'zakazan' ? 'bg-warning text-dark' : examination.status === 'obavljen' ? 'bg-success' : examination.status === 'otkazan' ? 'bg-danger' : 'bg-secondary'}`,\n                        children: getTranslatedStatus(examination.status)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1018,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1017,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [examination.status === 'zakazan' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-success btn-sm me-2\",\n                          onClick: () => handleUpdateExaminationStatus(examination.id, 'obavljen'),\n                          children: \"Ozna\\u010Di kao Obavljen\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1030,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-danger btn-sm\",\n                          onClick: () => handleUpdateExaminationStatus(examination.id, 'otkazan'),\n                          children: \"Otka\\u017Ei\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1036,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true), examination.status === 'obavljen' && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-muted\",\n                        children: \"Obavljen\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1045,\n                        columnNumber: 61\n                      }, this), examination.status === 'otkazan' && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-muted\",\n                        children: \"Otkazan\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1048,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1027,\n                      columnNumber: 53\n                    }, this)]\n                  }, examination.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1012,\n                    columnNumber: 49\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: \"text-center\",\n                    children: \"Nije prona\\u0111en nijedan pregled.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1056,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1055,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 995,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredMyExaminations.length,\n            currentPage: myExaminationsCurrentPage,\n            paginate: setMyExaminationsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 21\n        }, this);\n      case 'my-patients':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Moji pacijenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Pretra\\u017Eite pacijente...\",\n              value: patientSearchTerm,\n              onChange: e => setPatientSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1075,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1074,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1087,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Ime\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1088,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1089,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Telefon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1090,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Akcije\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1091,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1086,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentMyPatients.length > 0 ? currentMyPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1098,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1099,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1100,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1101,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-primary btn-sm me-2\",\n                      onClick: () => openPatientDetailModal(patient),\n                      children: \"Detalji / Medicinska historija\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1103,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1102,\n                    columnNumber: 49\n                  }, this)]\n                }, patient.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1097,\n                  columnNumber: 45\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"Nije prona\\u0111en nijedan pacijent.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1114,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1113,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1094,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredMyPatients.length,\n            currentPage: myPatientsCurrentPage,\n            paginate: setMyPatientsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1072,\n          columnNumber: 21\n        }, this);\n      case 'documents':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Moji dokumenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Upload novog dokumenta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              onChange: handleDocumentUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1132,\n            columnNumber: 25\n          }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Naziv dokumenta\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1141,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Tip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1142,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Datum uploada\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1143,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pristup\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1144,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Akcije\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1145,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1140,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: doc.fileName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1151,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: doc.documentType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1152,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(doc.uploadDate).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1153,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`,\n                    children: doc.pristup === 'JAVNA' ? 'Javno' : 'Privatno'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1155,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1154,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    size: \"sm\",\n                    onClick: () => handleDownloadDocument(doc.id, doc.fileName),\n                    children: \"Preuzmi\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1160,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1159,\n                  columnNumber: 45\n                }, this)]\n              }, doc.id || `doc-${Math.random()}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1148,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nije prona\\u0111en nijedan dokument.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1167,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 21\n        }, this);\n      case 'messages':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Moje poruke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mb-3\",\n            onClick: () => setNewMessage({\n              recipientId: '',\n              subject: '',\n              content: ''\n            }),\n            children: \"Napi\\u0161i novu poruku\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1175,\n            columnNumber: 25\n          }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: messages.map(msg => {\n              var _patients$find;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item d-flex justify-content-between align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"Od: \", msg.senderId === currentDoctorUserId ? 'Ja' : ((_patients$find = patients.find(p => p.userId === msg.senderId)) === null || _patients$find === void 0 ? void 0 : _patients$find.name) || `Pacijent (${msg.senderId})`]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1182,\n                    columnNumber: 45\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1182,\n                    columnNumber: 200\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Naslov:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1183,\n                    columnNumber: 45\n                  }, this), \" \", msg.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1183,\n                    columnNumber: 84\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: new Date(msg.timestamp).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1184,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1181,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  onClick: () => handleViewMessage(msg),\n                  children: \"Pregledaj poruku\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1186,\n                  columnNumber: 41\n                }, this)]\n              }, msg.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1180,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1178,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nema prona\\u0111enih poruka.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Napi\\u0161i novu poruku\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Primalac (Pacijent)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1199,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                name: \"recipientId\",\n                value: newMessage.recipientId,\n                onChange: handleNewMessageChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- Odaberite pacijenta --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1207,\n                  columnNumber: 37\n                }, this), myPatients.map(patient => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: patient.userId,\n                  children: patient.name\n                }, patient.userId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1209,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1200,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1198,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Naslov\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1214,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"subject\",\n                value: newMessage.subject,\n                onChange: handleNewMessageChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1215,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Sadr\\u017Eaj\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1224,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                name: \"content\",\n                value: newMessage.content,\n                onChange: handleNewMessageChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleSendMessage,\n              children: \"Po\\u0161alji poruku\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1234,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1173,\n          columnNumber: 21\n        }, this);\n      case 'manage-terms':\n        const doctorsTerms = terms.filter(term => term.doktorId === currentDoctorId);\n        const sortedTerms = doctorsTerms.sort((a, b) => {\n          const dateComparison = a.datum.localeCompare(b.datum);\n          if (dateComparison !== 0) {\n            return dateComparison;\n          }\n          return a.vrijeme.localeCompare(b.vrijeme);\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Upravljanje mojim terminima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Kreiraj novi termin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1252,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleCreateTerm,\n            className: \"mb-5 p-3 border rounded shadow-sm bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"newTermDate\",\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Datum\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1256,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  value: newTermDate,\n                  onChange: e => setNewTermDate(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1257,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1255,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"newTermTime\",\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Vrijeme\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1265,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"time\",\n                  value: newTermTime,\n                  onChange: e => setNewTermTime(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1266,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1264,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"newTermStatus\",\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Dostupnost\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1274,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  value: selectedTermStatus,\n                  onChange: e => setSelectedTermStatus(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"DOSTUPAN\",\n                    children: \"Dostupan\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1280,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ZAKAZAN\",\n                    children: \"Zakazan\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1281,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"OTKAZAN\",\n                    children: \"Otkazan\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1282,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1275,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1273,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1254,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              children: \"Kreiraj termin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1286,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1253,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Moji postoje\\u0107i termini\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1289,\n            columnNumber: 25\n          }, this), sortedTerms.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1295,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Datum\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1296,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Vrijeme\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1297,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1298,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Akcije\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1299,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1294,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1293,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: sortedTerms.map(term => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1305,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.datum\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1306,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.vrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1307,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge bg-${term.statusTermina === 'DOSTUPAN' ? 'success' : term.statusTermina === 'ZAKAZAN' ? 'warning text-dark' : 'danger'}`,\n                      children: getTranslatedStatus(term.statusTermina)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1309,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1308,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [term.statusTermina === 'DOSTUPAN' && /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"warning\",\n                      size: \"sm\",\n                      onClick: () => handleUpdateTermStatus(term.id, 'ZAKAZAN'),\n                      className: \"me-2\",\n                      children: \"Ozna\\u010Di kao Zakazan\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1319,\n                      columnNumber: 57\n                    }, this), term.statusTermina === 'ZAKAZAN' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"danger\",\n                        size: \"sm\",\n                        onClick: () => handleUpdateTermStatus(term.id, 'OTKAZAN'),\n                        className: \"me-2\",\n                        children: \"Ozna\\u010Di kao Otkazan\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1330,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"success\",\n                        size: \"sm\",\n                        onClick: () => handleUpdateTermStatus(term.id, 'DOSTUPAN'),\n                        className: \"me-2\",\n                        children: \"Ozna\\u010Di kao Dostupan\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1338,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true), term.statusTermina === 'OTKAZAN' && /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"success\",\n                      size: \"sm\",\n                      onClick: () => handleUpdateTermStatus(term.id, 'DOSTUPAN'),\n                      className: \"me-2\",\n                      children: \"Ozna\\u010Di kao Dostupan\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1349,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"danger\",\n                      size: \"sm\",\n                      onClick: () => handleDeleteTerm(term.id),\n                      children: \"Obri\\u0161i\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1359,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1317,\n                    columnNumber: 49\n                  }, this)]\n                }, term.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1304,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1302,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1292,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nema prona\\u0111enih termina za va\\u0161 profil. Molimo kreirajte nove.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1367,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 21\n        }, this);\n      case 'notifications':\n        // Novi tab za obavijesti\n        const sortedNotifications = notifications.sort((a, b) => new Date(b.datum) - new Date(a.datum));\n        const currentNotifications = sortedNotifications.slice((notificationsCurrentPage - 1) * itemsPerPage, notificationsCurrentPage * itemsPerPage);\n        const totalNotificationPages = Math.ceil(sortedNotifications.length / itemsPerPage);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Moje obavijesti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1381,\n            columnNumber: 25\n          }, this), notifications.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: currentNotifications.map(notif => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `list-group-item d-flex justify-content-between align-items-center ${notif.procitana ? 'text-muted bg-light' : 'bg-white'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge me-2 ${notif.tip === 'NOVI_PREGLED' ? 'bg-primary' : notif.tip === 'OTKAZANI_PREGLED' ? 'bg-danger' : notif.tip === 'OPSTA_OBAVIJEST' ? 'bg-info text-dark' : 'bg-secondary' // Default boja ako tip nije definisan\n                  }`,\n                  children: [notif.tip.replace(/_/g, ' '), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1388,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: notif.sadrzaj\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1396,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1397,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(notif.datum).toLocaleString('bs-BA')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1398,\n                  columnNumber: 45\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1386,\n                columnNumber: 41\n              }, this), !notif.procitana && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                size: \"sm\",\n                onClick: () => handleMarkNotificationAsRead(notif.id),\n                children: \"Ozna\\u010Di kao Pro\\u010Ditano\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1401,\n                columnNumber: 45\n              }, this), notif.procitana && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-success small\",\n                children: getTranslatedStatus('PROCITANO')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1410,\n                columnNumber: 45\n              }, this)]\n            }, notif.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1385,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1383,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nema prona\\u0111enih obavijesti.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1416,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: notifications.length,\n            currentPage: notificationsCurrentPage,\n            paginate: setNotificationsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1418,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1380,\n          columnNumber: 21\n        }, this);\n      case 'settings':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container my-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Postavke profila doktora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1429,\n            columnNumber: 25\n          }, this), !currentDoctorProfile ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"U\\u010Ditavanje profila doktora...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1431,\n            columnNumber: 29\n          }, this) : isEditingProfile ? /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleUpdateDoctorProfile,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Ime\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1437,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editIme,\n                  onChange: e => setEditIme(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1438,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1436,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Prezime\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1441,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editPrezime,\n                  onChange: e => setEditPrezime(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1442,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1440,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1435,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1447,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  value: editEmail,\n                  onChange: e => setEditEmail(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1448,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1446,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Telefon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1451,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editTelefon,\n                  onChange: e => setEditTelefon(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1452,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1450,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1445,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Specijalnosti (odvojene zarezom)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1456,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: editSpecijalizacije,\n                onChange: e => setEditSpecijalizacije(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1457,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1455,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Grad\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1461,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editGrad,\n                  onChange: e => setEditGrad(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1462,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1460,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Radno vrijeme\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1465,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editRadnoVrijeme,\n                  onChange: e => setEditRadnoVrijeme(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1466,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1464,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1459,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Iskustvo (godina)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1470,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: editIskustvo,\n                onChange: e => setEditIskustvo(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1471,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1469,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Profilna slika\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1474,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleImageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1475,\n                columnNumber: 41\n              }, this), profileImagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: profileImagePreview,\n                  alt: \"Pregled profilne slike\",\n                  style: {\n                    maxWidth: '100px',\n                    maxHeight: '100px',\n                    borderRadius: '50%',\n                    objectFit: 'cover'\n                  },\n                  className: \"border border-secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1482,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1481,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1473,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-end\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                className: \"me-2\",\n                onClick: () => setIsEditingProfile(false),\n                children: \"Poni\\u0161ti\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1492,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Sa\\u010Duvaj izmjene\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1493,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1491,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1434,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: currentDoctorProfile.profileImageBase64 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: currentDoctorProfile.profileImageBase64,\n                alt: \"Profil doktora\",\n                style: {\n                  width: '100px',\n                  height: '100px',\n                  borderRadius: '50%',\n                  objectFit: 'cover'\n                },\n                className: \"mb-3 border border-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1500,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://placehold.co/100x100/CCCCCC/000000?text=Nema+slike\",\n                alt: \"Nema profilne slike\",\n                style: {\n                  width: '100px',\n                  height: '100px',\n                  borderRadius: '50%',\n                  objectFit: 'cover'\n                },\n                className: \"mb-3 border border-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1507,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1498,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Ime:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1515,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.ime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1515,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Prezime:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1516,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.prezime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1516,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1517,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1517,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Telefon:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1518,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.telefon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1518,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Specijalnosti:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1519,\n                columnNumber: 40\n              }, this), \" \", Array.isArray(currentDoctorProfile.specijalizacije) ? currentDoctorProfile.specijalizacije.join(', ') : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1519,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Grad:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1520,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.grad]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1520,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Radno vrijeme:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1521,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.radnoVrijeme]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1521,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Iskustvo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1522,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.iskustvo, \" godina\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1522,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Ocjena:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1523,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.ocjena]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1523,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => setIsEditingProfile(true),\n              children: \"Uredi profil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1524,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1497,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1428,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Odaberite karticu iz bo\\u010Dnog menija.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1531,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-white p-4\",\n      style: {\n        width: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-4\",\n        children: \"Doktorski panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1538,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('overview'),\n            children: \"Pregled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1541,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1540,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-examinations' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('my-examinations'),\n            children: \"Moji pregledi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1549,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1548,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-patients' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('my-patients'),\n            children: \"Moji pacijenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1557,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1556,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'manage-terms' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('manage-terms'),\n            children: \"Upravljanje terminima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1565,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1564,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('documents'),\n            children: \"Dokumenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1573,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1572,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('messages'),\n            children: \"Poruke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1581,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1580,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'notifications' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('notifications'),\n            children: \"Obavijesti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1589,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1588,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'settings' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('settings'),\n            children: \"Postavke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1597,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1596,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1539,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1537,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 p-4 bg-light\",\n      children: [showAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${alertType} alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3`,\n        role: \"alert\",\n        style: {\n          zIndex: 1050\n        },\n        children: [alertMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-close\",\n          onClick: () => setShowAlert(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1611,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1609,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: \"Doktorska nadzorna plo\\u010Da\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1616,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1615,\n        columnNumber: 17\n      }, this), renderContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1607,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showPatientDetailModal,\n      onHide: closePatientDetailModal,\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Detalji pacijenta: \", selectedPatient === null || selectedPatient === void 0 ? void 0 : selectedPatient.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1624,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1623,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedPatient && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1629,\n              columnNumber: 32\n            }, this), \" \", selectedPatient.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1629,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Telefon:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1630,\n              columnNumber: 32\n            }, this), \" \", selectedPatient.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1630,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1631,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Historija pregleda za \", selectedPatient.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1632,\n            columnNumber: 29\n          }, this), doctorsExaminations.filter(exam => exam.pacijentId === selectedPatient.id).length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group mb-3\",\n            children: doctorsExaminations.filter(exam => exam.pacijentId === selectedPatient.id).sort((a, b) => new Date(b.date) - new Date(a.date)).map(exam => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Datum:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1640,\n                columnNumber: 49\n              }, this), \" \", new Date(exam.date).toLocaleDateString(), \", \", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Vrijeme:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1641,\n                columnNumber: 49\n              }, this), \" \", exam.time, \", \", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1642,\n                columnNumber: 49\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `badge ${exam.status === 'zakazan' ? 'bg-warning text-dark' : exam.status === 'obavljen' ? 'bg-success' : exam.status === 'otkazan' ? 'bg-danger' : 'bg-secondary'}`,\n                children: getTranslatedStatus(exam.status)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1642,\n                columnNumber: 74\n              }, this)]\n            }, exam.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1639,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1634,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nema prona\\u0111ene historije pregleda za ovog pacijenta.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1652,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1654,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Unosi medicinske historije za \", selectedPatient.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1655,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Dijagnoza\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1657,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"diagnosis\",\n              value: newMedicalHistoryEntry.diagnosis,\n              onChange: e => setNewMedicalHistoryEntry(prev => ({\n                ...prev,\n                diagnosis: e.target.value\n              })),\n              placeholder: \"Unesite dijagnozu...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1658,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1656,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Lije\\u010Denje\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1667,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"treatment\",\n              value: newMedicalHistoryEntry.treatment,\n              onChange: e => setNewMedicalHistoryEntry(prev => ({\n                ...prev,\n                treatment: e.target.value\n              })),\n              placeholder: \"Unesite detalje lije\\u010Denja...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1668,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1666,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Bilje\\u0161ke\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1678,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"notes\",\n              value: newMedicalHistoryEntry.notes,\n              onChange: e => setNewMedicalHistoryEntry(prev => ({\n                ...prev,\n                notes: e.target.value\n              })),\n              placeholder: \"Dodatne bilje\\u0161ke...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1679,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1677,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleAddMedicalHistoryEntry,\n            children: \"Dodaj unos medicinske historije\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1688,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mt-4\",\n            children: \"Postoje\\u0107i zapisi medicinske historije:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1690,\n            columnNumber: 29\n          }, this), medicalHistoryEntries.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: medicalHistoryEntries.map(record => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Datum:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1695,\n                columnNumber: 45\n              }, this), \" \", new Date(record.date).toLocaleDateString(), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1695,\n                columnNumber: 114\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Dijagnoza:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1696,\n                columnNumber: 45\n              }, this), \" \", record.diagnosis, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1696,\n                columnNumber: 92\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Lije\\u010Denje:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1697,\n                columnNumber: 45\n              }, this), \" \", record.treatment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1697,\n                columnNumber: 92\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Bilje\\u0161ke:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1698,\n                columnNumber: 45\n              }, this), \" \", record.notes || 'N/A']\n            }, record.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1694,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1692,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nema zapisa medicinske historije za ovog pacijenta.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1703,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1628,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1626,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closePatientDetailModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1709,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1708,\n        columnNumber: 17\n      }, this)]\n    }, (selectedPatient === null || selectedPatient === void 0 ? void 0 : selectedPatient.id) || 'patient-modal', true, {\n      fileName: _jsxFileName,\n      lineNumber: 1622,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1536,\n    columnNumber: 9\n  }, this);\n}\n_s(DoctorDashboard, \"4rbJn483NsXDi2RoQLbGAsU7pCc=\", false, function () {\n  return [useAuth];\n});\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["axios","useAuth","React","useState","useEffect","useMemo","Modal","Button","Form","Alert","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","OBAVIJESTI_DOKUMENTI_API_PREFIX","OBAVIJESTI_API_PREFIX","DoctorDashboard","_s","activeTab","setActiveTab","doctors","setDoctors","patients","setPatients","examinations","setExaminations","terms","setTerms","activityLog","setActivityLog","currentDoctorProfile","setCurrentDoctorProfile","isEditingProfile","setIsEditingProfile","editIme","setEditIme","editPrezime","setEditPrezime","editEmail","setEditEmail","editTelefon","setEditTelefon","editSpecijalizacije","setEditSpecijalizacije","editGrad","setEditGrad","editRadnoVrijeme","setEditRadnoVrijeme","editIskustvo","setEditIskustvo","editOcjena","setEditOcjena","profileImageFile","setProfileImageFile","profileImagePreview","setProfileImagePreview","documents","setDocuments","messages","setMessages","newMessage","setNewMessage","recipientId","subject","content","replyMessage","setReplyMessage","messageId","selectedMessage","setSelectedMessage","notifications","setNotifications","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","patientSearchTerm","setPatientSearchTerm","examinationSearchTerm","setExaminationSearchTerm","examinationFilterStatus","setExaminationFilterStatus","myPatientsCurrentPage","setMyPatientsCurrentPage","myExaminationsCurrentPage","setMyExaminationsCurrentPage","notificationsCurrentPage","setNotificationsCurrentPage","itemsPerPage","showPatientDetailModal","setShowPatientDetailModal","selectedPatient","setSelectedPatient","medicalHistoryEntries","setMedicalHistoryEntries","newMedicalHistoryEntry","setNewMedicalHistoryEntry","diagnosis","treatment","notes","newTermDate","setNewTermDate","newTermTime","setNewTermTime","selectedTermStatus","setSelectedTermStatus","token","user","loading","authLoading","authHeaders","headers","showNotification","message","type","setTimeout","statusMap","null","getTranslatedStatus","status","fetchDoctors","response","get","data","map","doc","id","doktorID","userId","Number","name","ime","prezime","specialty","Array","isArray","specijalizacije","length","join","grad","email","telefon","radnoVrijeme","iskustvo","ocjena","profileImageBase64","error","_error$response","console","fetchPatients","pat","pacijentID","phone","_error$response2","fetchTerms","doktorId","undefined","warn","log","term","terminID","statusTermina","datum","vrijeme","_error$response3","fetchExaminations","exam","pregledID","pacijentId","patientName","pacijentIme","doctorName","doktorIme","date","datumPregleda","time","vrijemePregleda","komentarPacijenta","ocjenaDoktora","_error$response4","fetchActivityLog","_error$response5","fetchPatientMedicalHistory","patientId","record","zapisID","doctorId","datumZapisivanja","dijagnoza","lijecenje","napomene","_error$response6","handleAddMedicalHistoryEntry","payload","Date","toISOString","split","post","_error$response7","_error$response8","_error$response8$data","openPatientDetailModal","patient","closePatientDetailModal","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","fetchCurrentDoctorProfile","profileData","_error$response9","handleUpdateDoctorProfile","preventDefault","updatedProfile","s","trim","filter","parseInt","parseFloat","put","_error$response0","_error$response1","_error$response1$data","fetchDocuments","transformedDocuments","dokumentacijaID","isNaN","fileName","nazivDokumenta","documentType","tipDokumenta","uploadDate","datumKreiranja","pristup","_error$response10","handleDocumentUpload","formData","FormData","append","_error$response11","_error$response12","_error$response12$dat","handleDownloadDocument","docId","numericDocId","downloadUrl","responseType","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL","_error$response13","_error$response14","_error$response14$dat","fetchMessages","transformedMessages","msg","porukaID","senderId","senderType","senderIme","receiverId","receiverType","receiverIme","timestamp","replies","_error$response15","handleNewMessageChange","value","prev","handleSendMessage","messageData","_error$response16","_error$response17","_error$response17$dat","handleReplyMessageChange","handleReply","_error$response18","_error$response19","_error$response19$dat","handleViewMessage","closeMessageModal","handleCreateTerm","termData","_error$response20","_error$response21","_error$response21$dat","handleDeleteTerm","termId","delete","_error$response22","_error$response23","_error$response23$dat","handleUpdateTermStatus","targetStatus","termToUpdate","find","includes","toLowerCase","_error$response24","_error$response25","_error$response25$dat","fetchNotifications","notif","notifikacijaID","korisnikID","tip","uloga","sadrzaj","datumSlanja","procitana","sort","a","b","_error$response26","n","handleMarkNotificationAsRead","notificationId","prevNotifications","_error$response27","className","style","minHeight","children","role","_jsxFileName","lineNumber","columnNumber","doktorIdDefined","currentDoctorId","currentDoctorUserId","doctorsExaminations","examination","patientIdsWithExaminations","Set","myPatients","has","handleUpdateExaminationStatus","newStatus","existingExamination","terminIdToSend","ratingToSend","formattedTime","dateObj","toTimeString","parts","timeWithoutMs","parseError","examinationPayload","updatedExam","_error$response28","_error$response29","_error$response29$dat","filteredMyPatients","indexOfLastMyPatient","indexOfFirstMyPatient","currentMyPatients","slice","totalMyPatientPages","Math","ceil","filteredMyExaminations","matchesSearch","toLocaleDateString","matchesFilterStatus","indexOfLastMyExaminations","indexOfFirstMyExaminations","currentMyExaminations","totalMyExaminationsPages","Pagination","totalItems","currentPage","paginate","pageNumbers","i","push","number","onClick","renderContent","reverse","action","toLocaleString","random","placeholder","onChange","Select","p","colSpan","Group","controlId","Label","Control","variant","size","_patients$find","as","required","rows","doctorsTerms","sortedTerms","dateComparison","localeCompare","onSubmit","sortedNotifications","currentNotifications","totalNotificationPages","replace","accept","src","alt","maxWidth","maxHeight","borderRadius","objectFit","width","height","zIndex","show","onHide","Header","closeButton","Title","Body","Footer","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/DoctorDashboard.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\r\n// API prefiks za notifikacije unutar ObavijestiDokumenti servisa\r\nconst OBAVIJESTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija/api/obavijesti`;\r\n\r\nfunction DoctorDashboard() {\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [patients, setPatients] = useState([]);\r\n    const [examinations, setExaminations] = useState([]);\r\n    const [terms, setTerms] = useState([]);\r\n    const [activityLog, setActivityLog] = useState([]);\r\n\r\n    const [currentDoctorProfile, setCurrentDoctorProfile] = useState(null);\r\n    const [isEditingProfile, setIsEditingProfile] = useState(false);\r\n\r\n    const [editIme, setEditIme] = useState('');\r\n    const [editPrezime, setEditPrezime] = useState('');\r\n    const [editEmail, setEditEmail] = useState('');\r\n    const [editTelefon, setEditTelefon] = useState('');\r\n    const [editSpecijalizacije, setEditSpecijalizacije] = useState('');\r\n    const [editGrad, setEditGrad] = useState('');\r\n    const [editRadnoVrijeme, setEditRadnoVrijeme] = useState('');\r\n    const [editIskustvo, setEditIskustvo] = useState('');\r\n    const [editOcjena, setEditOcjena] = useState('');\r\n    const [profileImageFile, setProfileImageFile] = useState(null);\r\n    const [profileImagePreview, setProfileImagePreview] = useState(null);\r\n\r\n    const [documents, setDocuments] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState({ recipientId: '', subject: '', content: '' });\r\n    const [replyMessage, setReplyMessage] = useState({ messageId: '', content: '' });\r\n    const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n    // Novo stanje za notifikacije\r\n    const [notifications, setNotifications] = useState([]);\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('success');\r\n\r\n    const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n    const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\r\n    const [examinationFilterStatus, setExaminationFilterStatus] = useState('All');\r\n\r\n    const [myPatientsCurrentPage, setMyPatientsCurrentPage] = useState(1);\r\n    const [myExaminationsCurrentPage, setMyExaminationsCurrentPage] = useState(1);\r\n    const [notificationsCurrentPage, setNotificationsCurrentPage] = useState(1); // Dodano za paginaciju obavijesti\r\n    const itemsPerPage = 5;\r\n\r\n    const [showPatientDetailModal, setShowPatientDetailModal] = useState(false);\r\n    const [selectedPatient, setSelectedPatient] = useState(null);\r\n    // Stanja medicinske historije\r\n    const [medicalHistoryEntries, setMedicalHistoryEntries] = useState([]);\r\n    const [newMedicalHistoryEntry, setNewMedicalHistoryEntry] = useState({\r\n        diagnosis: '',\r\n        treatment: '',\r\n        notes: ''\r\n    });\r\n\r\n    const [newTermDate, setNewTermDate] = useState('');\r\n    const [newTermTime, setNewTermTime] = useState('');\r\n    const [selectedTermStatus, setSelectedTermStatus] = useState('DOSTUPAN');\r\n\r\n    const { token, user, loading: authLoading } = useAuth();\r\n\r\n    const authHeaders = useMemo(() => ({\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }), [token]);\r\n\r\n    // Funkcija za prikazivanje obavijesti\r\n    const showNotification = (message, type = 'success') => {\r\n        setAlertMessage(message);\r\n        setAlertType(type);\r\n        setShowAlert(true);\r\n        setTimeout(() => {\r\n            setShowAlert(false);\r\n            setAlertMessage('');\r\n        }, 3000);\r\n    };\r\n\r\n    // Mapa za prevođenje statusa pregleda i termina na bosanski jezik\r\n    const statusMap = {\r\n        'zakazan': 'Zakazan',\r\n        'obavljen': 'Obavljen',\r\n        'otkazan': 'Otkazan',\r\n        'u_toku': 'U toku', // Dodano za konzistenciju ako se koristi\r\n        'DOSTUPAN': 'Dostupan',\r\n        'ZAKAZAN': 'Zakazan', // Za termine\r\n        'OTKAZAN': 'Otkazan', // Za termine\r\n        'NEDOSTUPAN': 'Nedostupan', // Za termine\r\n        'POSLANO': 'Poslano', // Za notifikacije\r\n        'PROCITANO': 'Pročitano', // Za notifikacije\r\n        '': 'Nepoznat', // Default ili prazno\r\n        null: 'Nepoznat' // Za null vrijednosti\r\n    };\r\n\r\n    // Funkcija za dobivanje prevedenog statusa\r\n    const getTranslatedStatus = (status) => {\r\n        return statusMap[status] || status; // Vraća originalni status ako prevod ne postoji\r\n    };\r\n\r\n    const fetchDoctors = async () => {\r\n        if (!token) return;\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n            setDoctors(response.data.map(doc => ({\r\n                id: doc.doktorID,\r\n                userId: Number(doc.userId),\r\n                name: `${doc.ime} ${doc.prezime}`,\r\n                ime: doc.ime,\r\n                prezime: doc.prezime,\r\n                specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                           ? doc.specijalizacije.join(', ')\r\n                           : 'N/A',\r\n                grad: doc.grad,\r\n                email: doc.email,\r\n                telefon: doc.telefon,\r\n                radnoVrijeme: doc.radnoVrijeme,\r\n                iskustvo: doc.iskustvo,\r\n                ocjena: doc.ocjena,\r\n                profileImageBase64: doc.profileImageBase64,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Greška pri dohvaćanju svih doktora:\", error.response?.data || error.message);\r\n            showNotification(\"Greška pri dohvaćanju doktora.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchPatients = async () => {\r\n        if (!token) return;\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\r\n            setPatients(response.data.map(pat => ({\r\n                id: pat.pacijentID,\r\n                userId: Number(pat.userId),\r\n                name: `${pat.ime} ${pat.prezime}`,\r\n                ime: pat.ime,\r\n                prezime: pat.prezime,\r\n                email: pat.email,\r\n                phone: pat.telefon,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Greška pri dohvaćanju svih pacijenata:\", error.response?.data || error.message);\r\n            showNotification(\"Greška pri dohvaćanju pacijenata.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchTerms = async () => {\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            console.warn(\"Nije moguće dohvatiti termine: doktorId nedostaje ili autentifikacija nije spremna.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${user.doktorId}`, authHeaders);\r\n            console.log(\"Raw podaci o terminima primljeni sa backend-a (FETCH):\", response.data);\r\n            setTerms(response.data.map(term => {\r\n                console.log(`Mapiranje ID termina: ${term.terminID}, status: ${term.statusTermina}, datum: ${term.datum}, vrijeme: ${term.vrijeme}`);\r\n                return {\r\n                    id: term.terminID,\r\n                    doktorId: term.doktorID,\r\n                    datum: term.datum,\r\n                    vrijeme: term.vrijeme,\r\n                    statusTermina: term.statusTermina,\r\n                };\r\n            }));\r\n            showNotification(\"Doktorovi termini uspješno dohvaćeni!\", \"success\");\r\n        } catch (error) {\r\n            console.error(\"Greška pri dohvaćanju doktorovih termina:\", error.response?.data || error.message);\r\n            showNotification(\"Greška pri dohvaćanju doktorovih termina.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchExaminations = async () => {\r\n        if (!token) return;\r\n        try {\r\n            // Filtrirajte preglede samo za trenutno prijavljenog doktora\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/doktor/${user.doktorId}`, authHeaders);\r\n            setExaminations(response.data.map(exam => ({\r\n                id: exam.pregledID,\r\n                pacijentId: exam.pacijentID,\r\n                doktorId: exam.doktorID,\r\n                patientName: exam.pacijentIme || 'N/A',\r\n                doctorName: exam.doktorIme || 'N/A',\r\n                date: exam.datumPregleda,\r\n                time: exam.vrijemePregleda,\r\n                status: exam.status,\r\n                komentarPacijenta: exam.komentarPacijenta || '',\r\n                ocjenaDoktora: exam.ocjenaDoktora || null,\r\n                terminID: exam.terminID,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Greška pri dohvaćanju svih pregleda:\", error.response?.data || error.message);\r\n            showNotification(\"Greška pri dohvaćanju pregleda.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchActivityLog = async () => {\r\n        if (!token) return;\r\n        try {\r\n            console.warn(\"Endpoint Dnevnika aktivnosti nije definiran, preskačem dohvaćanje dnevnika aktivnosti.\");\r\n            setActivityLog([]);\r\n        } catch (error) {\r\n            console.error(\"Greška pri dohvaćanju dnevnika aktivnosti:\", error.response?.data || error.message);\r\n            showNotification(\"Greška pri dohvaćanju dnevnika aktivnosti.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchPatientMedicalHistory = async (patientId) => {\r\n        if (!token || !patientId) return;\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${patientId}`, authHeaders);\r\n            setMedicalHistoryEntries(response.data.map(record => ({\r\n                id: record.zapisID,\r\n                patientId: record.pacijentID,\r\n                doctorId: record.doktorID,\r\n                doctorName: record.doktorIme,\r\n                date: record.datumZapisivanja,\r\n                diagnosis: record.dijagnoza,\r\n                treatment: record.lijecenje,\r\n                notes: record.napomene\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Greška pri dohvaćanju medicinske historije pacijenta:\", error.response?.data || error.message);\r\n            setMedicalHistoryEntries([]);\r\n            showNotification(\"Greška pri dohvaćanju medicinske historije pacijenta.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleAddMedicalHistoryEntry = async () => {\r\n        if (!token || !selectedPatient || !user || !user.doktorId) {\r\n            showNotification(\"Nedostaju podaci za dodavanje unosa medicinske historije.\", \"danger\");\r\n            return;\r\n        }\r\n        if (!newMedicalHistoryEntry.diagnosis || !newMedicalHistoryEntry.treatment) {\r\n            showNotification(\"Dijagnoza i liječenje su obavezni za medicinsku historiju.\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const payload = {\r\n                pacijentID: selectedPatient.id,\r\n                doktorID: user.doktorId,\r\n                datumZapisivanja: new Date().toISOString().split('T')[0],\r\n                dijagnoza: newMedicalHistoryEntry.diagnosis,\r\n                lijecenje: newMedicalHistoryEntry.treatment,\r\n                napomene: newMedicalHistoryEntry.notes\r\n            };\r\n            await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija`, payload, authHeaders);\r\n            showNotification(\"Unos medicinske historije uspješno dodan!\", \"success\");\r\n            setNewMedicalHistoryEntry({ diagnosis: '', treatment: '', notes: '' });\r\n            fetchPatientMedicalHistory(selectedPatient.id);\r\n        } catch (error) {\r\n            console.error(\"Greška pri dodavanju unosa medicinske historije:\", error.response?.data || error.message);\r\n            showNotification(error.response?.data?.message || 'Greška pri dodavanju unosa medicinske historije.', 'danger');\r\n        }\r\n    };\r\n\r\n    const openPatientDetailModal = async (patient) => {\r\n        setSelectedPatient(patient);\r\n        await fetchPatientMedicalHistory(patient.id);\r\n        setShowPatientDetailModal(true);\r\n    };\r\n\r\n    const closePatientDetailModal = () => {\r\n        setShowPatientDetailModal(false);\r\n        setSelectedPatient(null);\r\n        setMedicalHistoryEntries([]);\r\n        setNewMedicalHistoryEntry({ diagnosis: '', treatment: '', notes: '' });\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            setProfileImageFile(file);\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setProfileImagePreview(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        } else {\r\n            setProfileImageFile(null);\r\n            setProfileImagePreview(null);\r\n        }\r\n    };\r\n\r\n    const fetchCurrentDoctorProfile = async () => {\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            console.warn(\"Nije moguće dohvatiti trenutni profil doktora: doktorId nedostaje ili autentifikacija nije spremna.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, authHeaders);\r\n            const profileData = response.data;\r\n            setCurrentDoctorProfile(profileData);\r\n            setEditIme(profileData.ime || '');\r\n            setEditPrezime(profileData.prezime || '');\r\n            setEditEmail(profileData.email || '');\r\n            setEditTelefon(profileData.telefon || '');\r\n            setEditSpecijalizacije(Array.isArray(profileData.specijalizacije) ? profileData.specijalizacije.join(', ') : '');\r\n            setEditGrad(profileData.grad || '');\r\n            setEditRadnoVrijeme(profileData.radnoVrijeme || '');\r\n            setEditIskustvo(profileData.iskustvo || '');\r\n            setEditOcjena(profileData.ocjena || '');\r\n            setProfileImagePreview(profileData.profileImageBase64 || null);\r\n        } catch (error) {\r\n            console.error(\"Greška pri dohvaćanju profila doktora:\", error.response?.data || error.message);\r\n            showNotification(\"Greška pri dohvaćanju profila doktora.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleUpdateDoctorProfile = async (e) => {\r\n        e.preventDefault();\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            showNotification(\"Niste autorizirani ili ID doktora nedostaje.\", \"danger\");\r\n            return;\r\n        }\r\n\r\n        const updatedProfile = {\r\n            doktorID: user.doktorId,\r\n            userId: currentDoctorProfile.userId,\r\n            ime: editIme,\r\n            prezime: editPrezime,\r\n            email: editEmail,\r\n            telefon: editTelefon,\r\n            specijalizacije: editSpecijalizacije.split(',').map(s => s.trim()).filter(s => s !== ''),\r\n            grad: editGrad,\r\n            radnoVrijeme: editRadnoVrijeme,\r\n            iskustvo: parseInt(editIskustvo, 10),\r\n            ocjena: parseFloat(editOcjena) || 0.0,\r\n            profileImageBase64: profileImagePreview,\r\n        };\r\n\r\n        try {\r\n            const response = await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, updatedProfile, authHeaders);\r\n            setCurrentDoctorProfile(response.data);\r\n            setIsEditingProfile(false);\r\n            showNotification(\"Profil uspješno ažuriran!\");\r\n            fetchDoctors();\r\n        } catch (error) {\r\n            console.error(\"Greška pri ažuriranju profila:\", error.response?.data || error.message);\r\n            showNotification(error.response?.data?.message || 'Greška pri ažuriranju profila.', 'danger');\r\n        }\r\n    };\r\n\r\n    const fetchDocuments = async () => {\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            console.warn(\"Nije moguće dohvatiti dokumente: doktorId nedostaje ili autentifikacija nije spremna.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/doktor/${user.doktorId}`, authHeaders);\r\n            console.log(\"Raw podaci o dokumentima iz odgovora:\", response.data);\r\n\r\n            const transformedDocuments = response.data\r\n                .filter(doc => doc.dokumentacijaID !== null && doc.dokumentacijaID !== undefined)\r\n                .map(doc => {\r\n                    const id = Number(doc.dokumentacijaID);\r\n                    if (isNaN(id)) {\r\n                        console.warn(`Dokument sa numeričkim dokumentacijaID pronađen: ${doc.dokumentacijaID}. Ovaj dokument možda neće biti moguće preuzeti, ali će biti prikazan.`);\r\n                    }\r\n                    return {\r\n                        id: id,\r\n                        fileName: doc.nazivDokumenta,\r\n                        documentType: doc.tipDokumenta,\r\n                        uploadDate: doc.datumKreiranja,\r\n                        pristup: doc.pristup,\r\n                        pacijentIme: doc.pacijentIme\r\n                    };\r\n                });\r\n\r\n            console.log(\"Transformirani dokumenti za stanje (nakon laganog filtriranja):\", transformedDocuments);\r\n            setDocuments(transformedDocuments);\r\n            showNotification(\"Dokumenti uspješno dohvaćeni!\", \"success\");\r\n        } catch (error) {\r\n            console.error('Greška pri dohvaćanju dokumenata za doktora:', error.response?.data || error.message);\r\n            showNotification('Nije uspjelo dohvaćanje dokumenata.', \"danger\");\r\n            setDocuments([]);\r\n        }\r\n    };\r\n\r\n    const handleDocumentUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n\r\n        if (!user || user.doktorId === null || user.doktorId === undefined) {\r\n            showNotification(\"ID doktora nije dostupan za upload dokumenta.\", \"danger\");\r\n            return;\r\n        }\r\n\r\n        console.log(\"Pokušavam uploadati dokument sa ID-om doktora:\", user.doktorId);\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('doktorID', user.doktorId);\r\n        formData.append('tipDokumenta', 'Doctor Upload');\r\n        formData.append('pristup', 'PRIVATNA');\r\n\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            showNotification('Dokument uspješno uploadan!', 'success');\r\n            setTimeout(() => {\r\n                fetchDocuments();\r\n            }, 500);\r\n        } catch (error) {\r\n            console.error('Greška pri uploadu dokumenta:', error.response?.data || error.message);\r\n            showNotification('Upload dokumenta nije uspio. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleDownloadDocument = async (docId, fileName) => {\r\n        const numericDocId = Number(docId);\r\n\r\n        if (docId === null || docId === undefined || isNaN(numericDocId)) {\r\n            console.error('Pokušaj preuzimanja dokumenta sa nevažećim ID-om:', docId);\r\n            showNotification('Greška: ID dokumenta je nevažeći. Preuzimanje nije moguće.', 'danger');\r\n            return;\r\n        }\r\n\r\n        const downloadUrl = `${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${numericDocId}`;\r\n        console.log(\"Pokušavam preuzeti dokument sa URL-a:\", downloadUrl);\r\n\r\n        try {\r\n            const response = await axios.get(downloadUrl, {\r\n                ...authHeaders,\r\n                responseType: 'blob',\r\n            });\r\n\r\n            const blob = new Blob([response.data], { type: response.headers['content-type'] });\r\n            const url = window.URL.createObjectURL(blob);\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', fileName);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            link.remove();\r\n            window.URL.revokeObjectURL(url);\r\n\r\n            showNotification('Dokument uspješno preuzet!', 'success');\r\n        } catch (error) {\r\n            console.error('Greška pri preuzimanju dokumenta:', error.response?.data || error.message);\r\n            showNotification('Nije uspjelo preuzimanje dokumenta. ' + (error.response?.data?.message || error.message), 'danger');\r\n        }\r\n    };\r\n\r\n\r\n    const fetchMessages = async () => {\r\n        if (!token || !user || user.userId === null || user.userId === undefined) {\r\n            console.warn(\"Nije moguće dohvatiti poruke: user.userId nedostaje ili autentifikacija nije spremna.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=DOKTOR`, authHeaders);\r\n            const transformedMessages = response.data.map(msg => ({\r\n                id: msg.porukaID,\r\n                senderId: Number(msg.senderId),\r\n                senderType: msg.senderType,\r\n                senderIme: msg.senderIme,\r\n                receiverId: Number(msg.receiverId),\r\n                receiverType: msg.receiverType,\r\n                receiverIme: msg.receiverIme,\r\n                subject: msg.subject,\r\n                content: msg.content,\r\n                timestamp: msg.timestamp,\r\n                replies: msg.replies || []\r\n            }));\r\n            setMessages(transformedMessages);\r\n            showNotification(\"Poruke uspješno dohvaćene!\", \"success\");\r\n        } catch (error) {\r\n            console.error('Greška pri dohvaćanju poruka za doktora:', error.response?.data || error.message);\r\n            showNotification('Nije uspjelo dohvaćanje poruka.', \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleNewMessageChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewMessage(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!user || user.userId === null || user.userId === undefined) {\r\n            showNotification('Vaš ID korisnika nije dostupan. Nije moguće poslati poruku.', 'danger');\r\n            return;\r\n        }\r\n        if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\r\n            showNotification('Molimo popunite sva polja poruke.', 'warning');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const messageData = {\r\n                senderId: user.userId,\r\n                senderType: 'DOKTOR',\r\n                receiverId: Number(newMessage.recipientId),\r\n                receiverType: 'PACIJENT',\r\n                subject: newMessage.subject,\r\n                content: newMessage.content\r\n            };\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\r\n            showNotification('Poruka uspješno poslana!', 'success');\r\n            setNewMessage({ recipientId: '', subject: '', content: '' });\r\n            fetchMessages();\r\n        } catch (error) {\r\n            console.error('Greška pri slanju poruke:', error.response?.data || error.message);\r\n            showNotification('Nije uspjelo slanje poruke. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleReplyMessageChange = (e) => {\r\n        setReplyMessage(prev => ({ ...prev, content: e.target.value }));\r\n    };\r\n\r\n    const handleReply = async (messageId) => {\r\n        if (!user || user.userId === null || user.userId === undefined) {\r\n            showNotification('Vaš ID korisnika nije dostupan. Nije moguće odgovoriti.', 'danger');\r\n            return;\r\n        }\r\n        if (!replyMessage.content) {\r\n            showNotification('Sadržaj odgovora ne može biti prazan.', 'warning');\r\n            return;\r\n        }\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\r\n                senderId: user.userId,\r\n                senderIme: `${user.ime || ''} ${user.prezime || ''}`.trim(),\r\n                senderType: 'DOKTOR',\r\n                content: replyMessage.content,\r\n                timestamp: new Date().toISOString()\r\n            }, authHeaders);\r\n            showNotification('Odgovor uspješno poslan!', 'success');\r\n            setReplyMessage({ messageId: '', content: '' });\r\n            fetchMessages();\r\n            setSelectedMessage(prev => {\r\n                if (!prev) return null;\r\n                return {\r\n                    ...prev,\r\n                    replies: [...(prev.replies || []), {\r\n                        senderId: user.userId,\r\n                        senderIme: `${user.ime || ''} ${user.prezime || ''}`.trim(),\r\n                        senderType: 'DOKTOR',\r\n                        content: replyMessage.content,\r\n                        timestamp: new Date().toISOString()\r\n                    }]\r\n                };\r\n            });\r\n        } catch (error) {\r\n            console.error('Greška pri slanju odgovora:', error.response?.data || error.message);\r\n            showNotification('Nije uspjelo slanje odgovora. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleViewMessage = (message) => {\r\n        setSelectedMessage(message);\r\n    };\r\n\r\n    const closeMessageModal = () => {\r\n        setSelectedMessage(null);\r\n        setReplyMessage({ messageId: '', content: '' });\r\n    };\r\n\r\n    const handleCreateTerm = async (e) => {\r\n        e.preventDefault();\r\n        if (!user || user.doktorId === null || user.doktorId === undefined) {\r\n            showNotification(\"ID doktora nije dostupan. Nije moguće kreirati termin.\", \"danger\");\r\n            return;\r\n        }\r\n        if (!newTermDate || !newTermTime) {\r\n            showNotification(\"Molimo odaberite i datum i vrijeme za novi termin.\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const termData = {\r\n                doktorID: user.doktorId,\r\n                datum: newTermDate,\r\n                vrijeme: newTermTime + ':00', // Dodaj sekunde za HH:MM:SS format\r\n                statusTermina: selectedTermStatus\r\n            };\r\n            console.log(\"Slanje podataka za novi termin (KREIRANJE):\", termData);\r\n\r\n            await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, termData, authHeaders);\r\n            showNotification(\"Termin uspješno kreiran!\", \"success\");\r\n            setNewTermDate('');\r\n            setNewTermTime('');\r\n            setSelectedTermStatus('DOSTUPAN');\r\n            fetchTerms();\r\n        } catch (error) {\r\n            console.error(\"Greška pri kreiranju termina:\", error.response?.data || error.message);\r\n            showNotification(`Nije uspjelo kreiranje termina: ${error.response?.data?.message || error.message}`, \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleDeleteTerm = async (termId) => {\r\n        if (!token) return;\r\n        try {\r\n            await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${termId}`, authHeaders);\r\n            showNotification(\"Termin uspješno obrisan!\", \"success\");\r\n            fetchTerms();\r\n        } catch (error) {\r\n            console.error(\"Greška pri brisanju termina:\", error.response?.data || error.message);\r\n            showNotification(`Nije uspjelo brisanje termina: ${error.response?.data?.message || error.message}`, \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleUpdateTermStatus = async (termId, targetStatus) => {\r\n        if (!token) return;\r\n\r\n        const termToUpdate = terms.find(term => term.id === termId);\r\n        if (!termToUpdate) {\r\n            showNotification('Termin nije pronađen za ažuriranje.', 'danger');\r\n            return;\r\n        }\r\n        console.log(`DEBUG (Frontend): Originalni termin iz stanja za ID ${termId}:`, termToUpdate);\r\n        console.log(`DEBUG (Frontend): Originalni datum termina iz stanja: ${termToUpdate.datum}`);\r\n        console.log(`DEBUG (Frontend): Originalno vrijeme termina iz stanja: ${termToUpdate.vrijeme}`);\r\n        console.log(`DEBUG (Frontend): Ciljani status za ažuriranje: ${targetStatus}`);\r\n\r\n\r\n        try {\r\n            const payload = {\r\n                terminID: termToUpdate.id,\r\n                doktorID: termToUpdate.doktorId,\r\n                datum: typeof termToUpdate.datum === 'string' ? termToUpdate.datum : termToUpdate.datum.toISOString().split('T')[0],\r\n                vrijeme: termToUpdate.vrijeme.includes(':') && termToUpdate.vrijeme.split(':').length === 2 ? termToUpdate.vrijeme + ':00' : termToUpdate.vrijeme, // Ensure HH:MM:SS format\r\n                statusTermina: targetStatus\r\n            };\r\n            console.log(\"Slanje payloada za ažuriranje termina (AŽURIRANJE - sa frontenda):\", payload);\r\n\r\n            const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${termId}`, payload, authHeaders);\r\n            console.log(\"Odgovor backend-a za ažuriranje:\", response.data);\r\n            showNotification(`Status termina ažuriran na ${getTranslatedStatus(targetStatus).toLowerCase()}!`, 'success');\r\n            fetchTerms();\r\n        } catch (error) {\r\n            console.error(\"Greška pri ažuriranju statusa termina:\", error.response?.data || error.message);\r\n            showNotification(`Nije uspjelo ažuriranje statusa termina: ${error.response?.data?.message || error.message}`, \"danger\");\r\n        }\r\n    };\r\n\r\n    // Nova funkcija za dohvaćanje obavijesti\r\n    const fetchNotifications = async () => {\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            console.warn(\"Nije moguće dohvatiti obavijesti: doktorId nedostaje ili autentifikacija nije spremna.\");\r\n            setNotifications([]); // Osiguraj praznu listu ako podaci nisu dostupni\r\n            return;\r\n        }\r\n        try {\r\n            // Pretpostavljeni endpoint za dohvaćanje obavijesti za doktora\r\n            const response = await axios.get(`${OBAVIJESTI_API_PREFIX}/notifikacije/doktor/${user.doktorId}`, authHeaders);\r\n            console.log(\"Raw podaci o notifikacijama primljeni sa backend-a:\", response.data);\r\n\r\n            setNotifications(response.data.map(notif => ({\r\n                id: notif.notifikacijaID || notif.id, // Koristite notifikacijaID sa backend-a\r\n                korisnikID: notif.korisnikID,\r\n                tip: notif.uloga, // Uloga 'DOKTOR' ili 'PACIJENT' može se koristiti kao tip obavijesti\r\n                sadrzaj: notif.sadrzaj,\r\n                datum: notif.datumSlanja || notif.datum, // Koristite datumSlanja sa backend-a\r\n                procitana: notif.status === 'PROCITANO' // Pretvara STATUS u boolean procitana\r\n            })).sort((a, b) => new Date(b.datum) - new Date(a.datum))); // Sortiraj od najnovije\r\n\r\n            showNotification(\"Obavijesti uspješno dohvaćene!\", \"success\");\r\n        } catch (error) {\r\n            console.error(\"Greška pri dohvaćanju obavijesti:\", error.response?.data || error.message);\r\n            showNotification(\"Greška pri dohvaćanju obavijesti. Prikazujem demo podatke.\", \"danger\");\r\n            // Demo podaci ako je došlo do greške (za testiranje frontenda)\r\n            setNotifications([\r\n                { id: 1, korisnikID: user.doktorId, tip: 'NOVI_PREGLED', sadrzaj: 'Novi pregled zakazan za Pacijenta A (2025-06-25 u 10:00).', datum: '2025-06-20T10:30:00', procitana: false },\r\n                { id: 2, korisnikID: user.doktorId, tip: 'OPSTA_OBAVIJEST', sadrzaj: 'Sistem će biti nedostupan zbog održavanja od 02:00 do 03:00 ujutro.', datum: '2025-06-19T18:00:00', procitana: false },\r\n                { id: 3, korisnikID: user.doktorId, tip: 'OTKAZANI_PREGLED', sadrzaj: 'Pregled za Pacijenta B (2025-06-22 u 14:00) je otkazan.', datum: '2025-06-18T09:15:00', procitana: true },\r\n                { id: 4, korisnikID: user.doktorId, tip: 'NOVI_PREGLED', sadrzaj: 'Novi pregled zakazan za Pacijenta C (2025-06-28 u 09:30).', datum: '2025-06-20T11:00:00', procitana: false },\r\n            ].filter(n => n.korisnikID === user.doktorId).sort((a,b) => new Date(b.datum) - new Date(a.datum)));\r\n        }\r\n    };\r\n\r\n    // Funkcija za označavanje obavijesti kao pročitane\r\n    const handleMarkNotificationAsRead = async (notificationId) => {\r\n        if (!token) return;\r\n        try {\r\n            // Pretpostavljeni endpoint za ažuriranje statusa obavijesti\r\n            await axios.put(`${OBAVIJESTI_API_PREFIX}/notifikacije/${notificationId}/procitana`, null, authHeaders);\r\n            setNotifications(prevNotifications =>\r\n                prevNotifications.map(notif =>\r\n                    notif.id === notificationId ? { ...notif, procitana: true } : notif\r\n                )\r\n            );\r\n            showNotification(\"Obavijest označena kao pročitana!\", \"success\");\r\n        } catch (error) {\r\n            console.error(\"Greška pri označavanju obavijesti kao pročitane:\", error.response?.data || error.message);\r\n            showNotification(\"Nije uspjelo označavanje obavijesti kao pročitane.\", \"danger\");\r\n            // Lokalno ažuriranje za demo svrhe ako backend ne radi\r\n            setNotifications(prevNotifications =>\r\n                prevNotifications.map(notif =>\r\n                    notif.id === notificationId ? { ...notif, procitana: true } : notif\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"DoctorDashboard useEffect: token=\", token, \"user=\", user, \"authLoading=\", authLoading);\r\n        if (!authLoading && token && user && user.doktorId) {\r\n            console.log(\"DoctorDashboard useEffect: Pokrećem dohvaćanje podataka za doktorId:\", user.doktorId);\r\n            fetchDoctors();\r\n            fetchPatients();\r\n            fetchTerms();\r\n            fetchExaminations();\r\n            fetchActivityLog();\r\n            fetchCurrentDoctorProfile();\r\n            fetchDocuments();\r\n            fetchMessages();\r\n            fetchNotifications(); // Dohvati obavijesti\r\n        } else if (!authLoading) {\r\n            console.log(\"DoctorDashboard useEffect: Dohvaćanje podataka preskočeno jer uvjet nije ispunjen.\", { token, user, doktorId: user?.doktorId, authLoading });\r\n        }\r\n    }, [token, user, authLoading]);\r\n\r\n    console.log(\"DoctorDashboard provjera renderiranja: token=\", token, \"user=\", user, \"user.doktorId=\", user?.doktorId, \"authLoading=\", authLoading);\r\n    if (authLoading) {\r\n        console.log(\"DoctorDashboard: Još uvijek se učitava autentifikacija...\");\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Učitavanje...</span>\r\n                </div>\r\n                <p className=\"ms-3\">Učitavanje autentifikacije...</p>\r\n            </div>\r\n        );\r\n    }\r\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n        console.log(\"DoctorDashboard: Nije autoriziran kao doktor ili nepotpuni podaci. Uvjeti:\", { token: !!token, user: !!user, doktorIdDefined: user?.doktorId !== null && user?.doktorId !== undefined });\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Učitavanje...</span>\r\n                </div>\r\n                <p className=\"ms-3\">Niste autorizirani kao doktor ili nepotpuni podaci.</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const currentDoctorId = user.doktorId;\r\n    const currentDoctorUserId = user.userId;\r\n    console.log(\"DoctorDashboard: Trenutni ID doktora za filtriranje (nakon početnih provjera):\", currentDoctorId, \"Trenutni ID korisnika:\", currentDoctorUserId);\r\n\r\n\r\n    const doctorsExaminations = examinations.filter(\r\n        (examination) => examination.doktorId === currentDoctorId\r\n    );\r\n\r\n    const patientIdsWithExaminations = new Set(\r\n        doctorsExaminations.map((exam) => exam.pacijentId)\r\n    );\r\n    const myPatients = patients.filter((patient) =>\r\n        patientIdsWithExaminations.has(patient.id)\r\n    );\r\n\r\n    const handleUpdateExaminationStatus = async (id, newStatus) => {\r\n        try {\r\n            const existingExamination = examinations.find(exam => exam.id === id);\r\n            if (!existingExamination) {\r\n                showNotification('Pregled nije pronađen za ažuriranje statusa.', 'danger');\r\n                return;\r\n            }\r\n\r\n            console.log(\"Postojeći objekt pregleda prije ažuriranja:\", existingExamination);\r\n            const terminIdToSend = existingExamination.terminID;\r\n            console.log(\"ID termina za slanje:\", terminIdToSend);\r\n\r\n            if (terminIdToSend === null || terminIdToSend === undefined) {\r\n                showNotification('Greška: ID termina nedostaje za ovaj pregled. Molimo osigurajte da svi pregledi imaju važeći termin.', 'danger');\r\n                return;\r\n            }\r\n\r\n            const ratingToSend = newStatus === 'obavljen' ? (existingExamination.ocjenaDoktora || 5.0) : existingExamination.ocjenaDoktora;\r\n\r\n            // POBOLJŠANO FORMATIRANJE VREMENA:\r\n            let formattedTime = null;\r\n            if (existingExamination.time) {\r\n                // Pokušaj parsirati vrijeme i formatirati ga u HH:MM:SS\r\n                try {\r\n                    const dateObj = new Date(`2000-01-01T${existingExamination.time}`); // Datum je fiktivan, bitno je samo vrijeme\r\n                    if (!isNaN(dateObj)) { // Provjeri je li parsiranje uspješno\r\n                        formattedTime = dateObj.toTimeString().split(' ')[0]; // Dobij HH:MM:SS\r\n                    } else {\r\n                        // Ako Date objekt ne može parsirati, pokušaj ručno dodati sekunde\r\n                        const parts = existingExamination.time.split('.'); // Ukloni milisekunde ako postoje\r\n                        let timeWithoutMs = parts[0];\r\n                        if (timeWithoutMs.length === 5) { // Ako je HH:MM, dodaj :00\r\n                            formattedTime = timeWithoutMs + ':00';\r\n                        } else {\r\n                            formattedTime = timeWithoutMs; // Očekuje se HH:MM:SS ako je duže\r\n                        }\r\n                    }\r\n                } catch (parseError) {\r\n                    // Fallback ako Date objekat ne može parsirati\r\n                    console.warn(\"Greška pri parsiranju vremena sa Date objektom, pokušavam ručni fallback:\", parseError);\r\n                    const parts = existingExamination.time.split('.'); // Ukloni milisekunde ako postoje\r\n                    let timeWithoutMs = parts[0];\r\n                    if (timeWithoutMs.length === 5) { // Ako je HH:MM, dodaj :00\r\n                        formattedTime = timeWithoutMs + ':00';\r\n                    } else {\r\n                        formattedTime = timeWithoutMs; // Očekuje se HH:MM:SS ako je duže\r\n                    }\r\n                }\r\n            }\r\n            if (!formattedTime) {\r\n                console.error(\"Vrijeme pregleda nije uspjelo biti formatirano. Originalno vrijeme:\", existingExamination.time);\r\n                showNotification('Greška pri formatiranju vremena pregleda.', 'danger');\r\n                return; // Prekini funkciju ako vrijeme nije ispravno formatirano\r\n            }\r\n\r\n            console.log(\"Formatirano vrijeme za slanje:\", formattedTime);\r\n\r\n\r\n            const examinationPayload = {\r\n                pregledID: existingExamination.id,\r\n                pacijentID: existingExamination.pacijentId,\r\n                doktorID: existingExamination.doktorId,\r\n                datumPregleda: existingExamination.date, // Ovo je već string \"YYYY-MM-DD\"\r\n                vrijemePregleda: formattedTime, // Koristi formatirano vrijeme\r\n                status: newStatus,\r\n                komentarPacijenta: existingExamination.komentarPacijenta,\r\n                ocjenaDoktora: ratingToSend,\r\n                terminID: terminIdToSend,\r\n            };\r\n            console.log(\"Payload koji se šalje backendu za ažuriranje pregleda:\", examinationPayload);\r\n\r\n            const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, examinationPayload, authHeaders);\r\n            const updatedExam = {\r\n                id: response.data.pregledID,\r\n                pacijentId: response.data.pacijentID,\r\n                doktorId: response.data.doktorID,\r\n                patientName: response.data.pacijentIme || 'N/A',\r\n                doctorName: response.data.doktorIme || 'N/A',\r\n                date: response.data.datumPregleda,\r\n                time: response.data.vrijemePregleda,\r\n                status: response.data.status,\r\n                komentarPacijenta: response.data.komentarPacijenta || '',\r\n                ocjenaDoktora: response.data.ocjenaDoktora || null,\r\n                terminID: response.data.terminID,\r\n            };\r\n            setExaminations(examinations.map(exam => (exam.id === id ? updatedExam : exam)));\r\n            fetchActivityLog();\r\n            showNotification(`Status pregleda ažuriran na ${getTranslatedStatus(newStatus).toLowerCase()}!`, 'info');\r\n            // Nakon uspješnog ažuriranja, ponovo dohvatite termine kako bi se njihov status ažurirao u prikazu\r\n            fetchTerms();\r\n        } catch (error) {\r\n            console.error(\"Greška pri ažuriranju statusa pregleda:\", error.response?.data || error.message);\r\n            showNotification(error.response?.data?.message || 'Greška pri ažuriranju statusa pregleda.', \"danger\");\r\n        }\r\n    };\r\n\r\n    const filteredMyPatients = myPatients.filter(patient =>\r\n        (patient.name && patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase())) ||\r\n        (patient.email && patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase())) ||\r\n        (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n    );\r\n\r\n    const indexOfLastMyPatient = myPatientsCurrentPage * itemsPerPage;\r\n    const indexOfFirstMyPatient = indexOfLastMyPatient - itemsPerPage;\r\n    const currentMyPatients = filteredMyPatients.slice(indexOfFirstMyPatient, indexOfLastMyPatient);\r\n    const totalMyPatientPages = Math.ceil(filteredMyPatients.length / itemsPerPage);\r\n\r\n    const filteredMyExaminations = doctorsExaminations.filter(examination => {\r\n        const matchesSearch = (examination.patientName && examination.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n            (examination.status && examination.status.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n            (examination.date && new Date(examination.date).toLocaleDateString().includes(examinationSearchTerm));\r\n\r\n        const matchesFilterStatus = examinationFilterStatus === 'All' || examination.status === examinationFilterStatus;\r\n\r\n        return matchesSearch && matchesFilterStatus;\r\n    });\r\n\r\n    const indexOfLastMyExaminations = myExaminationsCurrentPage * itemsPerPage;\r\n    const indexOfFirstMyExaminations = indexOfLastMyExaminations - itemsPerPage;\r\n    const currentMyExaminations = filteredMyExaminations.slice(indexOfFirstMyExaminations, indexOfLastMyExaminations);\r\n    const totalMyExaminationsPages = Math.ceil(filteredMyExaminations.length / itemsPerPage);\r\n\r\n\r\n    const Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        return (\r\n            <nav>\r\n                <ul className=\"pagination justify-content-center mt-4\">\r\n                    {pageNumbers.map(number => (\r\n                        <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n                            <button onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n        );\r\n    };\r\n\r\n    // Funkcija za renderiranje sadržaja taba\r\n    const renderContent = () => {\r\n        switch (activeTab) {\r\n            case 'overview':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Pregled Doktora</h4>\r\n                        <div className=\"row g-4\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card text-white bg-info mb-3\">\r\n                                    <div className=\"card-header\">Ukupno pacijenata pod skrbi</div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title display-4\">{myPatients.length}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card text-white bg-warning mb-3\">\r\n                                    <div className=\"card-header\">Pregledi na čekanju</div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title display-4\">{doctorsExaminations.filter(exam => exam.status === 'zakazan').length}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <h5>Brze akcije</h5>\r\n                            <div className=\"d-flex gap-2 flex-wrap\">\r\n                                <button className=\"btn btn-outline-info\" onClick={() => setActiveTab('my-examinations')}>Moji pregledi</button>\r\n                                <button className=\"btn btn-outline-success\" onClick={() => setActiveTab('my-patients')}>Moji pacijenti</button>\r\n                                <button className=\"btn btn-outline-primary\" onClick={() => setActiveTab('documents')}>Dokumenti</button>\r\n                                <button className=\"btn btn-outline-secondary\" onClick={() => setActiveTab('messages')}>Poruke</button>\r\n                                <button className=\"btn btn-outline-danger\" onClick={() => setActiveTab('manage-terms')}>Upravljanje terminima</button>\r\n                                <button className=\"btn btn-outline-dark\" onClick={() => setActiveTab('notifications')}>Obavijesti</button> {/* Novi tab */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <h5>Nedavne aktivnosti</h5>\r\n                            <ul className=\"list-group\">\r\n                                {activityLog.length > 0 ? (\r\n                                    activityLog\r\n                                        .filter(log => log.doktorId === currentDoctorId)\r\n                                        .slice(-5).reverse().map(log => (\r\n                                            <li key={log.id || Math.random()} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                {log.action}\r\n                                                <span className=\"badge bg-light text-dark\">{new Date(log.timestamp).toLocaleString()}</span>\r\n                                            </li>\r\n                                        ))\r\n                                ) : (\r\n                                    <li className=\"list-group-item text-center text-muted\">Nema nedavnih aktivnosti.</li>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'my-examinations':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Upravljanje mojim pregledima</h4>\r\n                        <div className=\"d-flex justify-content-between mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control w-25 me-2\"\r\n                                placeholder=\"Pretražite preglede (ime pacijenta, status, datum)...\"\r\n                                value={examinationSearchTerm}\r\n                                onChange={(e) => setExaminationSearchTerm(e.target.value)}\r\n                            />\r\n                            <Form.Select\r\n                                className=\"w-auto\"\r\n                                value={examinationFilterStatus}\r\n                                onChange={(e) => setExaminationFilterStatus(e.target.value)}\r\n                            >\r\n                                <option value=\"All\">Filtriraj po statusu (Svi)</option>\r\n                                <option value=\"zakazan\">Zakazan</option>\r\n                                <option value=\"obavljen\">Obavljen</option>\r\n                                <option value=\"otkazan\">Otkazan</option>\r\n                            </Form.Select>\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Pacijent</th>\r\n                                        <th>Datum</th>\r\n                                        <th>Vrijeme</th>\r\n                                        <th>Status</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentMyExaminations.length > 0 ? (\r\n                                        currentMyExaminations.map(examination => {\r\n                                            const patient = patients.find(p => p.id === examination.pacijentId);\r\n                                            return (\r\n                                                <tr key={examination.id}>\r\n                                                    <td>{examination.id}</td>\r\n                                                    <td>{patient ? patient.name : 'N/A'}</td>\r\n                                                    <td>{new Date(examination.date).toLocaleDateString()}</td>\r\n                                                    <td>{examination.time}</td>\r\n                                                    <td>\r\n                                                        <span className={`badge ${\r\n                                                            examination.status === 'zakazan' ? 'bg-warning text-dark' :\r\n                                                            examination.status === 'obavljen' ? 'bg-success' :\r\n                                                            examination.status === 'otkazan' ? 'bg-danger' :\r\n                                                            'bg-secondary'\r\n                                                        }`}>\r\n                                                            {getTranslatedStatus(examination.status)}\r\n                                                        </span>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {examination.status === 'zakazan' && (\r\n                                                            <>\r\n                                                                <button\r\n                                                                    className=\"btn btn-success btn-sm me-2\"\r\n                                                                    onClick={() => handleUpdateExaminationStatus(examination.id, 'obavljen')}\r\n                                                                >\r\n                                                                    Označi kao Obavljen\r\n                                                                </button>\r\n                                                                <button\r\n                                                                    className=\"btn btn-danger btn-sm\"\r\n                                                                    onClick={() => handleUpdateExaminationStatus(examination.id, 'otkazan')}\r\n                                                                >\r\n                                                                    Otkaži\r\n                                                                </button>\r\n                                                            </>\r\n                                                        )}\r\n                                                        {examination.status === 'obavljen' && (\r\n                                                            <span className=\"text-muted\">Obavljen</span>\r\n                                                        )}\r\n                                                        {examination.status === 'otkazan' && (\r\n                                                            <span className=\"text-muted\">Otkazan</span>\r\n                                                        )}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td colSpan=\"6\" className=\"text-center\">Nije pronađen nijedan pregled.</td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={filteredMyExaminations.length}\r\n                            currentPage={myExaminationsCurrentPage}\r\n                            paginate={setMyExaminationsCurrentPage}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 'my-patients':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Moji pacijenti</h4>\r\n                        <div className=\"d-flex justify-content-between mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control w-25\"\r\n                                placeholder=\"Pretražite pacijente...\"\r\n                                value={patientSearchTerm}\r\n                                onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Ime</th>\r\n                                        <th>Email</th>\r\n                                        <th>Telefon</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentMyPatients.length > 0 ? (\r\n                                        currentMyPatients.map(patient => (\r\n                                            <tr key={patient.id}>\r\n                                                <td>{patient.id}</td>\r\n                                                <td>{patient.name}</td>\r\n                                                <td>{patient.email}</td>\r\n                                                <td>{patient.phone}</td>\r\n                                                <td>\r\n                                                    <button\r\n                                                        className=\"btn btn-primary btn-sm me-2\"\r\n                                                        onClick={() => openPatientDetailModal(patient)}\r\n                                                    >\r\n                                                        Detalji / Medicinska historija\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td colSpan=\"5\" className=\"text-center\">Nije pronađen nijedan pacijent.</td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={filteredMyPatients.length}\r\n                            currentPage={myPatientsCurrentPage}\r\n                            paginate={setMyPatientsCurrentPage}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 'documents':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Moji dokumenti</h4>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Upload novog dokumenta</Form.Label>\r\n                            <Form.Control type=\"file\" onChange={handleDocumentUpload} />\r\n                        </Form.Group>\r\n\r\n                        {documents.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Naziv dokumenta</th>\r\n                                        <th>Tip</th>\r\n                                        <th>Datum uploada</th>\r\n                                        <th>Pristup</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {documents.map(doc => (\r\n                                        <tr key={doc.id || `doc-${Math.random()}`}>\r\n                                            <td>{doc.fileName}</td>\r\n                                            <td>{doc.documentType}</td>\r\n                                            <td>{new Date(doc.uploadDate).toLocaleDateString()}</td>\r\n                                            <td>\r\n                                                <span className={`badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`}>\r\n                                                    {doc.pristup === 'JAVNA' ? 'Javno' : 'Privatno'}\r\n                                                </span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <Button variant=\"success\" size=\"sm\" onClick={() => handleDownloadDocument(doc.id, doc.fileName)}>Preuzmi</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nije pronađen nijedan dokument.</p>\r\n                        )}\r\n                    </div>\r\n                );\r\n            case 'messages':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Moje poruke</h4>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => setNewMessage({ recipientId: '', subject: '', content: '' })}>Napiši novu poruku</Button>\r\n\r\n                        {messages.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {messages.map(msg => (\r\n                                    <li key={msg.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            <strong>Od: {msg.senderId === currentDoctorUserId ? 'Ja' : (patients.find(p => p.userId === msg.senderId)?.name || `Pacijent (${msg.senderId})`)}</strong> <br />\r\n                                            <strong>Naslov:</strong> {msg.subject} <br />\r\n                                            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                        <Button variant=\"info\" size=\"sm\" onClick={() => handleViewMessage(msg)}>Pregledaj poruku</Button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Nema pronađenih poruka.</p>\r\n                        )}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <h4>Napiši novu poruku</h4>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Primalac (Pacijent)</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"recipientId\"\r\n                                    value={newMessage.recipientId}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Odaberite pacijenta --</option>\r\n                                    {myPatients.map(patient => (\r\n                                        <option key={patient.userId} value={patient.userId}>{patient.name}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Naslov</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    value={newMessage.subject}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Sadržaj</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"content\"\r\n                                    value={newMessage.content}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSendMessage}>Pošalji poruku</Button>\r\n                        </Form>\r\n                    </div>\r\n                );\r\n            case 'manage-terms':\r\n                const doctorsTerms = terms.filter(term => term.doktorId === currentDoctorId);\r\n                const sortedTerms = doctorsTerms.sort((a, b) => {\r\n                    const dateComparison = a.datum.localeCompare(b.datum);\r\n                    if (dateComparison !== 0) {\r\n                        return dateComparison;\r\n                    }\r\n                    return a.vrijeme.localeCompare(b.vrijeme);\r\n                });\r\n\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Upravljanje mojim terminima</h4>\r\n\r\n                        <h5>Kreiraj novi termin</h5>\r\n                        <Form onSubmit={handleCreateTerm} className=\"mb-5 p-3 border rounded shadow-sm bg-white\">\r\n                            <div className=\"row mb-3\">\r\n                                <Form.Group controlId=\"newTermDate\" className=\"col-md-4\">\r\n                                    <Form.Label>Datum</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"date\"\r\n                                        value={newTermDate}\r\n                                        onChange={(e) => setNewTermDate(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"newTermTime\" className=\"col-md-4\">\r\n                                    <Form.Label>Vrijeme</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"time\"\r\n                                        value={newTermTime}\r\n                                        onChange={(e) => setNewTermTime(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"newTermStatus\" className=\"col-md-4\">\r\n                                    <Form.Label>Dostupnost</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        value={selectedTermStatus}\r\n                                        onChange={(e) => setSelectedTermStatus(e.target.value)}\r\n                                    >\r\n                                        <option value=\"DOSTUPAN\">Dostupan</option>\r\n                                        <option value=\"ZAKAZAN\">Zakazan</option>\r\n                                        <option value=\"OTKAZAN\">Otkazan</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </div>\r\n                            <Button variant=\"success\" type=\"submit\">Kreiraj termin</Button>\r\n                        </Form>\r\n\r\n                        <h5>Moji postojeći termini</h5>\r\n                        {sortedTerms.length > 0 ? (\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-striped table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th>Datum</th>\r\n                                            <th>Vrijeme</th>\r\n                                            <th>Status</th>\r\n                                            <th>Akcije</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {sortedTerms.map(term => (\r\n                                            <tr key={term.id}>\r\n                                                <td>{term.id}</td>\r\n                                                <td>{term.datum}</td>\r\n                                                <td>{term.vrijeme}</td>\r\n                                                <td>\r\n                                                    <span className={`badge bg-${\r\n                                                        term.statusTermina === 'DOSTUPAN' ? 'success' :\r\n                                                        term.statusTermina === 'ZAKAZAN' ? 'warning text-dark' :\r\n                                                        'danger'\r\n                                                    }`}>\r\n                                                        {getTranslatedStatus(term.statusTermina)}\r\n                                                    </span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {term.statusTermina === 'DOSTUPAN' && (\r\n                                                        <Button\r\n                                                            variant=\"warning\"\r\n                                                            size=\"sm\"\r\n                                                            onClick={() => handleUpdateTermStatus(term.id, 'ZAKAZAN')}\r\n                                                            className=\"me-2\"\r\n                                                        >\r\n                                                            Označi kao Zakazan\r\n                                                        </Button>\r\n                                                    )}\r\n                                                    {term.statusTermina === 'ZAKAZAN' && (\r\n                                                        <>\r\n                                                            <Button\r\n                                                                variant=\"danger\"\r\n                                                                size=\"sm\"\r\n                                                                onClick={() => handleUpdateTermStatus(term.id, 'OTKAZAN')}\r\n                                                                className=\"me-2\"\r\n                                                            >\r\n                                                                Označi kao Otkazan\r\n                                                            </Button>\r\n                                                            <Button\r\n                                                                variant=\"success\"\r\n                                                                size=\"sm\"\r\n                                                                onClick={() => handleUpdateTermStatus(term.id, 'DOSTUPAN')}\r\n                                                                className=\"me-2\"\r\n                                                            >\r\n                                                                Označi kao Dostupan\r\n                                                            </Button>\r\n                                                        </>\r\n                                                    )}\r\n                                                    {term.statusTermina === 'OTKAZAN' && (\r\n                                                        <Button\r\n                                                            variant=\"success\"\r\n                                                            size=\"sm\"\r\n                                                            onClick={() => handleUpdateTermStatus(term.id, 'DOSTUPAN')}\r\n                                                            className=\"me-2\"\r\n                                                        >\r\n                                                            Označi kao Dostupan\r\n                                                        </Button>\r\n                                                    )}\r\n\r\n                                                    <Button variant=\"danger\" size=\"sm\" onClick={() => handleDeleteTerm(term.id)}>Obriši</Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        ) : (\r\n                            <p>Nema pronađenih termina za vaš profil. Molimo kreirajte nove.</p>\r\n                        )}\r\n                    </div>\r\n                );\r\n            case 'notifications': // Novi tab za obavijesti\r\n                const sortedNotifications = notifications.sort((a, b) => new Date(b.datum) - new Date(a.datum));\r\n                const currentNotifications = sortedNotifications.slice(\r\n                    (notificationsCurrentPage - 1) * itemsPerPage,\r\n                    notificationsCurrentPage * itemsPerPage\r\n                );\r\n                const totalNotificationPages = Math.ceil(sortedNotifications.length / itemsPerPage);\r\n\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Moje obavijesti</h4>\r\n                        {notifications.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {currentNotifications.map(notif => (\r\n                                    <li key={notif.id} className={`list-group-item d-flex justify-content-between align-items-center ${notif.procitana ? 'text-muted bg-light' : 'bg-white'}`}>\r\n                                        <div>\r\n                                            {/* Boja na osnovu tipa obavijesti (može se proširiti) */}\r\n                                            <span className={`badge me-2 ${\r\n                                                notif.tip === 'NOVI_PREGLED' ? 'bg-primary' :\r\n                                                notif.tip === 'OTKAZANI_PREGLED' ? 'bg-danger' :\r\n                                                notif.tip === 'OPSTA_OBAVIJEST' ? 'bg-info text-dark' :\r\n                                                'bg-secondary' // Default boja ako tip nije definisan\r\n                                            }`}>\r\n                                                {notif.tip.replace(/_/g, ' ')} {/* Zamijeni underscore sa razmakom */}\r\n                                            </span>\r\n                                            <strong>{notif.sadrzaj}</strong>\r\n                                            <br />\r\n                                            <small>{new Date(notif.datum).toLocaleString('bs-BA')}</small> {/* Formatiranje datuma za BiH */}\r\n                                        </div>\r\n                                        {!notif.procitana && (\r\n                                            <Button\r\n                                                variant=\"outline-secondary\"\r\n                                                size=\"sm\"\r\n                                                onClick={() => handleMarkNotificationAsRead(notif.id)}\r\n                                            >\r\n                                                Označi kao Pročitano\r\n                                            </Button>\r\n                                        )}\r\n                                        {notif.procitana && (\r\n                                            <span className=\"text-success small\">{getTranslatedStatus('PROCITANO')}</span>\r\n                                        )}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Nema pronađenih obavijesti.</p>\r\n                        )}\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={notifications.length}\r\n                            currentPage={notificationsCurrentPage}\r\n                            paginate={setNotificationsCurrentPage}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 'settings':\r\n                return (\r\n                    <div className=\"container my-4\">\r\n                        <h4 className=\"mb-4\">Postavke profila doktora</h4>\r\n                        {!currentDoctorProfile ? (\r\n                            <p>Učitavanje profila doktora...</p>\r\n                        ) : (\r\n                            isEditingProfile ? (\r\n                                <Form onSubmit={handleUpdateDoctorProfile}>\r\n                                    <div className=\"row mb-3\">\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Ime</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editIme} onChange={(e) => setEditIme(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Prezime</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editPrezime} onChange={(e) => setEditPrezime(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control type=\"email\" value={editEmail} onChange={(e) => setEditEmail(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Telefon</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editTelefon} onChange={(e) => setEditTelefon(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Specijalnosti (odvojene zarezom)</Form.Label>\r\n                                        <Form.Control type=\"text\" value={editSpecijalizacije} onChange={(e) => setEditSpecijalizacije(e.target.value)} />\r\n                                    </Form.Group>\r\n                                    <div className=\"row mb-3\">\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Grad</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editGrad} onChange={(e) => setEditGrad(e.target.value)} />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Radno vrijeme</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editRadnoVrijeme} onChange={(e) => setEditRadnoVrijeme(e.target.value)} />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Iskustvo (godina)</Form.Label>\r\n                                        <Form.Control type=\"number\" value={editIskustvo} onChange={(e) => setEditIskustvo(e.target.value)} />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Profilna slika</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"file\"\r\n                                            accept=\"image/*\"\r\n                                            onChange={handleImageChange}\r\n                                        />\r\n                                        {profileImagePreview && (\r\n                                            <div className=\"mt-2\">\r\n                                                <img\r\n                                                    src={profileImagePreview}\r\n                                                    alt=\"Pregled profilne slike\"\r\n                                                    style={{ maxWidth: '100px', maxHeight: '100px', borderRadius: '50%', objectFit: 'cover' }}\r\n                                                    className=\"border border-secondary\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </Form.Group>\r\n                                    <div className=\"d-flex justify-content-end\">\r\n                                        <Button variant=\"secondary\" className=\"me-2\" onClick={() => setIsEditingProfile(false)}>Poništi</Button>\r\n                                        <Button variant=\"primary\" type=\"submit\">Sačuvaj izmjene</Button>\r\n                                    </div>\r\n                                </Form>\r\n                            ) : (\r\n                                <div>\r\n                                    <p>\r\n                                        {currentDoctorProfile.profileImageBase64 ? (\r\n                                            <img\r\n                                                src={currentDoctorProfile.profileImageBase64}\r\n                                                alt=\"Profil doktora\"\r\n                                                style={{ width: '100px', height: '100px', borderRadius: '50%', objectFit: 'cover' }}\r\n                                                className=\"mb-3 border border-secondary\"\r\n                                            />\r\n                                        ) : (\r\n                                            <img\r\n                                                src=\"https://placehold.co/100x100/CCCCCC/000000?text=Nema+slike\"\r\n                                                alt=\"Nema profilne slike\"\r\n                                                style={{ width: '100px', height: '100px', borderRadius: '50%', objectFit: 'cover' }}\r\n                                                className=\"mb-3 border border-secondary\"\r\n                                            />\r\n                                        )}\r\n                                    </p>\r\n                                    <p><strong>Ime:</strong> {currentDoctorProfile.ime}</p>\r\n                                    <p><strong>Prezime:</strong> {currentDoctorProfile.prezime}</p>\r\n                                    <p><strong>Email:</strong> {currentDoctorProfile.email}</p>\r\n                                    <p><strong>Telefon:</strong> {currentDoctorProfile.telefon}</p>\r\n                                    <p><strong>Specijalnosti:</strong> {Array.isArray(currentDoctorProfile.specijalizacije) ? currentDoctorProfile.specijalizacije.join(', ') : 'N/A'}</p>\r\n                                    <p><strong>Grad:</strong> {currentDoctorProfile.grad}</p>\r\n                                    <p><strong>Radno vrijeme:</strong> {currentDoctorProfile.radnoVrijeme}</p>\r\n                                    <p><strong>Iskustvo:</strong> {currentDoctorProfile.iskustvo} godina</p>\r\n                                    <p><strong>Ocjena:</strong> {currentDoctorProfile.ocjena}</p>\r\n                                    <Button variant=\"primary\" onClick={() => setIsEditingProfile(true)}>Uredi profil</Button>\r\n                                </div>\r\n                            )\r\n                        )}\r\n                    </div>\r\n                );\r\n            default:\r\n                return <div>Odaberite karticu iz bočnog menija.</div>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ minHeight: '100vh' }}>\r\n            <div className=\"bg-dark text-white p-4\" style={{ width: '250px' }}>\r\n                <h3 className=\"mb-4\">Doktorski panel</h3>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('overview')}\r\n                        >\r\n                            Pregled\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-examinations' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('my-examinations')}\r\n                        >\r\n                            Moji pregledi\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-patients' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('my-patients')}\r\n                        >\r\n                            Moji pacijenti\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'manage-terms' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('manage-terms')}\r\n                        >\r\n                            Upravljanje terminima\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('documents')}\r\n                        >\r\n                            Dokumenti\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('messages')}\r\n                        >\r\n                            Poruke\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'notifications' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('notifications')}\r\n                        >\r\n                            Obavijesti\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'settings' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('settings')}\r\n                        >\r\n                            Postavke\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"flex-grow-1 p-4 bg-light\">\r\n                {showAlert && (\r\n                    <div className={`alert alert-${alertType} alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3`} role=\"alert\" style={{ zIndex: 1050 }}>\r\n                        {alertMessage}\r\n                        <button type=\"button\" className=\"btn-close\" onClick={() => setShowAlert(false)}></button>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <h2 className=\"mb-0\">Doktorska nadzorna ploča</h2>\r\n                </div>\r\n\r\n                {renderContent()}\r\n            </div>\r\n\r\n            <Modal show={showPatientDetailModal} onHide={closePatientDetailModal} size=\"lg\" key={selectedPatient?.id || 'patient-modal'}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Detalji pacijenta: {selectedPatient?.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedPatient && (\r\n                        <div>\r\n                            <p><strong>Email:</strong> {selectedPatient.email}</p>\r\n                            <p><strong>Telefon:</strong> {selectedPatient.phone}</p>\r\n                            <hr />\r\n                            <h5>Historija pregleda za {selectedPatient.name}</h5>\r\n                            {doctorsExaminations.filter(exam => exam.pacijentId === selectedPatient.id).length > 0 ? (\r\n                                <ul className=\"list-group mb-3\">\r\n                                    {doctorsExaminations\r\n                                        .filter(exam => exam.pacijentId === selectedPatient.id)\r\n                                        .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n                                        .map(exam => (\r\n                                            <li key={exam.id} className=\"list-group-item\">\r\n                                                <strong>Datum:</strong> {new Date(exam.date).toLocaleDateString()}, {' '}\r\n                                                <strong>Vrijeme:</strong> {exam.time}, {' '}\r\n                                                <strong>Status:</strong> <span className={`badge ${\r\n                                                    exam.status === 'zakazan' ? 'bg-warning text-dark' :\r\n                                                    exam.status === 'obavljen' ? 'bg-success' :\r\n                                                    exam.status === 'otkazan' ? 'bg-danger' :\r\n                                                    'bg-secondary'\r\n                                                }`}>{getTranslatedStatus(exam.status)}</span>\r\n                                            </li>\r\n                                        ))}\r\n                                </ul>\r\n                            ) : (\r\n                                <p>Nema pronađene historije pregleda za ovog pacijenta.</p>\r\n                            )}\r\n                            <hr />\r\n                            <h5>Unosi medicinske historije za {selectedPatient.name}</h5>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Dijagnoza</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"diagnosis\"\r\n                                    value={newMedicalHistoryEntry.diagnosis}\r\n                                    onChange={(e) => setNewMedicalHistoryEntry(prev => ({ ...prev, diagnosis: e.target.value }))}\r\n                                    placeholder=\"Unesite dijagnozu...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Liječenje</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"treatment\"\r\n                                    value={newMedicalHistoryEntry.treatment}\r\n                                    onChange={(e) => setNewMedicalHistoryEntry(prev => ({ ...prev, treatment: e.target.value }))}\r\n                                    placeholder=\"Unesite detalje liječenja...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Bilješke</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"notes\"\r\n                                    value={newMedicalHistoryEntry.notes}\r\n                                    onChange={(e) => setNewMedicalHistoryEntry(prev => ({ ...prev, notes: e.target.value }))}\r\n                                    placeholder=\"Dodatne bilješke...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleAddMedicalHistoryEntry}>Dodaj unos medicinske historije</Button>\r\n\r\n                            <h6 className=\"mt-4\">Postojeći zapisi medicinske historije:</h6>\r\n                            {medicalHistoryEntries.length > 0 ? (\r\n                                <ul className=\"list-group\">\r\n                                    {medicalHistoryEntries.map(record => (\r\n                                        <li key={record.id} className=\"list-group-item\">\r\n                                            <strong>Datum:</strong> {new Date(record.date).toLocaleDateString()} <br />\r\n                                            <strong>Dijagnoza:</strong> {record.diagnosis} <br />\r\n                                            <strong>Liječenje:</strong> {record.treatment} <br />\r\n                                            <strong>Bilješke:</strong> {record.notes || 'N/A'}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            ) : (\r\n                                <p>Nema zapisa medicinske historije za ovog pacijenta.</p>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closePatientDetailModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}