{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\DoctorProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nfunction DoctorProfilePage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    token,\n    user,\n    loading: authLoading\n  } = useAuth();\n  const navigate = useNavigate();\n  const [doctor, setDoctor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [availableTerms, setAvailableTerms] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [reason, setReason] = useState('');\n  const [bookingMessage, setBookingMessage] = useState('');\n  const [bookingMessageType, setBookingMessageType] = useState('success');\n  const memoizedAuthHeaders = useMemo(() => {\n    return token ? {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    } : {};\n  }, [token]);\n\n  // Funkcija za dohvaćanje detalja doktora, umotana u useCallback za optimizaciju\n  const fetchDoctorDetails = useCallback(async () => {\n    console.log(\"[DEBUG] fetchDoctorDetails: Pokrenuto dohvaćanje detalja doktora za ID:\", id);\n    setLoading(true); // Počinjemo učitavanje\n    setError(null); // Resetujemo prethodne greške\n    try {\n      const apiUrl = `${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`;\n      console.log(\"[DEBUG] fetchDoctorDetails: Pozivam API:\", apiUrl);\n\n      // Za dohvaćanje profila doktora, obično se ne šalje token\n      // ako je profil javan. Međutim, ako Gateway zahtijeva auth za sve\n      // onda bi trebalo dodati memoizedAuthHeaders.\n      // Za sada, pretpostavljamo da je javno dostupno ili da gateway to automatski handla.\n      const response = await axios.get(apiUrl);\n      const data = response.data;\n      console.log(\"[DEBUG] fetchDoctorDetails: Sirovi API odgovor (data):\", data);\n      const transformedDoctor = {\n        doktorID: data.doktorID,\n        ime: data.ime,\n        prezime: data.prezime,\n        fullName: `${data.ime} ${data.prezime}`,\n        email: data.email,\n        telefon: data.telefon,\n        specijalizacije: Array.isArray(data.specijalizacije) ? data.specijalizacije.join(', ') : data.specijalizacije,\n        grad: data.grad,\n        radnoVrijeme: data.radnoVrijeme,\n        iskustvo: data.iskustvo,\n        ocjena: data.ocjena,\n        // Ovo je ključna linija koja se treba osvježiti\n        profileImageBase64: data.profileImageBase64 || `https://placehold.co/100x100/CCCCCC/000000?text=${data.ime.charAt(0)}${data.prezime.charAt(0)}`\n      };\n      console.log(\"[DEBUG] fetchDoctorDetails: Transformirani podaci doktora (ocjena):\", transformedDoctor.ocjena);\n      setDoctor(transformedDoctor);\n      console.log(\"[DEBUG] fetchDoctorDetails: Stanje doktora uspješno ažurirano.\");\n    } catch (err) {\n      var _err$response;\n      console.error(\"Greška prilikom dohvaćanja detalja doktora:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      setError(\"Nije moguće učitati profil doktora. Molimo pokušajte ponovo.\");\n      console.log(\"[DEBUG] fetchDoctorDetails: Došlo je do greške prilikom dohvaćanja.\");\n    } finally {\n      setLoading(false); // Završavamo učitavanje\n      console.log(\"[DEBUG] fetchDoctorDetails: Loading stanje postavljeno na false.\");\n    }\n  }, [id]); // id je dependency\n\n  useEffect(() => {\n    if (id) {\n      console.log(\"[DEBUG] useEffect (inicijalno dohvaćanje): ID je prisutan, pozivam fetchDoctorDetails.\");\n      fetchDoctorDetails(); // Pozovi pri montiranju komponente ili kada se ID promijeni\n    }\n  }, [id, fetchDoctorDetails]); // fetchDoctorDetails je dependency jer je useCallback\n\n  // Ostatak koda ostaje isti...\n\n  useEffect(() => {\n    const fetchDoctorAvailability = async () => {\n      if (!selectedDate || !(doctor !== null && doctor !== void 0 && doctor.doktorID) || !token) {\n        setAvailableTerms([]);\n        return;\n      }\n      try {\n        // Ovdje šaljemo authHeaders jer je ovo zaštićena ruta\n        const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${doctor.doktorID}/datum/${selectedDate}`, memoizedAuthHeaders);\n        const termsData = Array.isArray(response.data) ? response.data : [];\n        const available = termsData.filter(term => term.dostupnost).map(term => ({\n          terminID: term.terminID,\n          vrijeme: term.vrijeme\n        })).sort((a, b) => a.vrijeme.localeCompare(b.vrijeme));\n        setAvailableTerms(available);\n      } catch (err) {\n        var _err$response2;\n        console.error('Greška pri dohvaćanju dostupnosti doktora:', ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n        setAvailableTerms([]);\n        setBookingMessage('Greška pri dohvaćanju dostupnih termina.');\n        setBookingMessageType('danger');\n      }\n    };\n    if (doctor !== null && doctor !== void 0 && doctor.doktorID && selectedDate) {\n      fetchDoctorAvailability();\n    }\n  }, [doctor, selectedDate, token, memoizedAuthHeaders]);\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n    setSelectedTime('');\n  };\n  const handleTimeChange = e => {\n    setSelectedTime(e.target.value);\n  };\n  const handleReasonChange = e => {\n    setReason(e.target.value);\n  };\n  const handleBookAppointment = async e => {\n    e.preventDefault();\n    setBookingMessage('');\n    if (!user || !token) {\n      setBookingMessage('Morate biti prijavljeni da biste zakazali pregled.');\n      setBookingMessageType('danger');\n      return;\n    }\n    if (!user.roles || !user.roles.includes('ROLE_PACIJENT')) {\n      setBookingMessage('Samo pacijenti mogu zakazivati preglede.');\n      setBookingMessageType('danger');\n      return;\n    }\n    if (!selectedDate || !selectedTime || !reason || !(doctor !== null && doctor !== void 0 && doctor.doktorID)) {\n      setBookingMessage('Molimo popunite sva polja da biste zakazali pregled.');\n      setBookingMessageType('danger');\n      return;\n    }\n    const selectedTermin = availableTerms.find(term => term.vrijeme === selectedTime);\n    if (!selectedTermin) {\n      setBookingMessage('Odabrani termin nije važeći ili dostupan.');\n      setBookingMessageType('danger');\n      return;\n    }\n    try {\n      const pacijentId = user === null || user === void 0 ? void 0 : user.pacijentId;\n      if (!pacijentId) {\n        setBookingMessage('Vaš ID pacijenta nije pronađen. Molimo osigurajte da ste prijavljeni kao pacijent i da je vaš profil pacijenta kreiran.');\n        setBookingMessageType('danger');\n        return;\n      }\n      const appointmentData = {\n        pacijentID: pacijentId,\n        doktorID: doctor.doktorID,\n        terminID: selectedTermin.terminID,\n        datumPregleda: selectedDate,\n        vrijemePregleda: selectedTime + ':00',\n        // Osigurajte HH:MM:SS format za backend\n        komentarPacijenta: reason,\n        status: 'zakazan'\n      };\n      await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, memoizedAuthHeaders);\n      setBookingMessage('Pregled uspješno zakazan!');\n      setBookingMessageType('success');\n      setSelectedDate('');\n      setSelectedTime('');\n      setReason('');\n      setAvailableTerms([]);\n    } catch (err) {\n      var _err$response3, _err$response4, _err$response4$data;\n      console.error(\"Greška pri zakazivanju pregleda:\", ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err.message);\n      setBookingMessage(`Greška pri zakazivanju pregleda: ${((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message}`);\n      setBookingMessageType('danger');\n    }\n  };\n  if (authLoading || loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/service\",\n        className: \"btn btn-primary\",\n        children: \"Nazad na listu doktora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this);\n  }\n  if (!doctor) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Doktor nije prona\\u0111en.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/service\",\n        className: \"btn btn-primary\",\n        children: \"Nazad na listu doktora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this);\n  }\n  const renderBookingSection = () => {\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info text-center\",\n        role: \"alert\",\n        children: [\"Molimo \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"alert-link\",\n          children: \"prijavite se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 28\n        }, this), \" ili \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/sign-up\",\n          className: \"alert-link\",\n          children: \"registrujte se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 93\n        }, this), \" da biste zakazali pregled.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this);\n    } else if (!user.roles || !user.roles.includes('ROLE_PACIJENT')) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning text-center\",\n        role: \"alert\",\n        children: \"Samo pacijenti mogu zakazivati preglede.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBookAppointment,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"appointmentDate\",\n              className: \"form-label\",\n              children: \"Datum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              id: \"appointmentDate\",\n              value: selectedDate,\n              onChange: handleDateChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"appointmentTime\",\n              className: \"form-label\",\n              children: \"Vrijeme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              id: \"appointmentTime\",\n              value: selectedTime,\n              onChange: handleTimeChange,\n              required: true,\n              disabled: availableTerms.length === 0,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Odaberite vrijeme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this), availableTerms.map(term =>\n              /*#__PURE__*/\n              // Prikazujemo samo HH:MM format, ali šaljemo HH:MM:SS backendu\n              _jsxDEV(\"option\", {\n                value: term.vrijeme,\n                children: term.vrijeme.substring(0, 5)\n              }, term.terminID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), availableTerms.length === 0 && selectedDate && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: \"Nema dostupnih termina za odabrani datum.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"reason\",\n            className: \"form-label\",\n            children: \"Razlog za pregled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"reason\",\n            rows: \"3\",\n            value: reason,\n            onChange: handleReasonChange,\n            placeholder: \"Kratak opis razloga za pregled...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-danger\",\n          children: \"Zaka\\u017Ei pregled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row g-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: doctor.profileImageBase64,\n            alt: doctor.fullName,\n            className: \"img-fluid rounded-circle shadow-sm mb-3\",\n            style: {\n              width: '150px',\n              height: '150px',\n              objectFit: 'cover',\n              border: '3px solid #dc3545'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-1\",\n            children: doctor.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: doctor.specijalizacije\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-warning me-1\",\n              children: \"\\u2605\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-bold\",\n              children: doctor.ocjena ? doctor.ocjena.toFixed(1) : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-muted ms-2\",\n              children: [\"(\", doctor.grad, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-secondary btn-sm ms-3\",\n              onClick: fetchDoctorDetails // Pozovi funkciju za dohvaćanje detalja doktora\n              ,\n              disabled: loading // Onemogući dugme dok se učitava\n              ,\n              children: loading ? 'Osvježavanje...' : 'Osvježi ocjenu'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-danger mb-3\",\n            children: \"Informacije o doktoru\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 28\n            }, this), \" \", doctor.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Telefon:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 28\n            }, this), \" \", doctor.telefon]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Grad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 28\n            }, this), \" \", doctor.grad]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Radno vrijeme:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 28\n            }, this), \" \", doctor.radnoVrijeme]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Godine iskustva:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 28\n            }, this), \" \", doctor.iskustvo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-danger mb-3\",\n        children: \"Zaka\\u017Eite pregled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this), bookingMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${bookingMessageType} mb-3`,\n        role: \"alert\",\n        children: bookingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }, this), renderBookingSection()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 9\n  }, this);\n}\n_s(DoctorProfilePage, \"rIY32RcWT/vsjeZrUda1XvtMpVs=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = DoctorProfilePage;\nexport default DoctorProfilePage;\nvar _c;\n$RefreshReg$(_c, \"DoctorProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","useParams","Link","useNavigate","axios","useAuth","jsxDEV","_jsxDEV","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","DoctorProfilePage","_s","id","token","user","loading","authLoading","navigate","doctor","setDoctor","setLoading","error","setError","availableTerms","setAvailableTerms","selectedDate","setSelectedDate","selectedTime","setSelectedTime","reason","setReason","bookingMessage","setBookingMessage","bookingMessageType","setBookingMessageType","memoizedAuthHeaders","headers","fetchDoctorDetails","console","log","apiUrl","response","get","data","transformedDoctor","doktorID","ime","prezime","fullName","email","telefon","specijalizacije","Array","isArray","join","grad","radnoVrijeme","iskustvo","ocjena","profileImageBase64","charAt","err","_err$response","message","fetchDoctorAvailability","termsData","available","filter","term","dostupnost","map","terminID","vrijeme","sort","a","b","localeCompare","_err$response2","handleDateChange","e","target","value","handleTimeChange","handleReasonChange","handleBookAppointment","preventDefault","roles","includes","selectedTermin","find","pacijentId","appointmentData","pacijentID","datumPregleda","vrijemePregleda","komentarPacijenta","status","post","_err$response3","_err$response4","_err$response4$data","className","style","minHeight","children","role","fileName","_jsxFileName","lineNumber","columnNumber","to","renderBookingSection","onSubmit","htmlFor","type","onChange","required","disabled","length","substring","rows","placeholder","src","alt","width","height","objectFit","border","toFixed","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/DoctorProfilePage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\n\r\nfunction DoctorProfilePage() {\r\n    const { id } = useParams();\r\n    const { token, user, loading: authLoading } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const [doctor, setDoctor] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [availableTerms, setAvailableTerms] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState('');\r\n    const [selectedTime, setSelectedTime] = useState('');\r\n    const [reason, setReason] = useState('');\r\n    const [bookingMessage, setBookingMessage] = useState('');\r\n    const [bookingMessageType, setBookingMessageType] = useState('success');\r\n\r\n    const memoizedAuthHeaders = useMemo(() => {\r\n        return token ? { headers: { 'Authorization': `Bearer ${token}` } } : {};\r\n    }, [token]);\r\n\r\n    // Funkcija za dohvaćanje detalja doktora, umotana u useCallback za optimizaciju\r\n    const fetchDoctorDetails = useCallback(async () => {\r\n        console.log(\"[DEBUG] fetchDoctorDetails: Pokrenuto dohvaćanje detalja doktora za ID:\", id);\r\n        setLoading(true); // Počinjemo učitavanje\r\n        setError(null);   // Resetujemo prethodne greške\r\n        try {\r\n            const apiUrl = `${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`;\r\n            console.log(\"[DEBUG] fetchDoctorDetails: Pozivam API:\", apiUrl);\r\n\r\n            // Za dohvaćanje profila doktora, obično se ne šalje token\r\n            // ako je profil javan. Međutim, ako Gateway zahtijeva auth za sve\r\n            // onda bi trebalo dodati memoizedAuthHeaders.\r\n            // Za sada, pretpostavljamo da je javno dostupno ili da gateway to automatski handla.\r\n            const response = await axios.get(apiUrl);\r\n            const data = response.data;\r\n\r\n            console.log(\"[DEBUG] fetchDoctorDetails: Sirovi API odgovor (data):\", data);\r\n\r\n            const transformedDoctor = {\r\n                doktorID: data.doktorID,\r\n                ime: data.ime,\r\n                prezime: data.prezime,\r\n                fullName: `${data.ime} ${data.prezime}`,\r\n                email: data.email,\r\n                telefon: data.telefon,\r\n                specijalizacije: Array.isArray(data.specijalizacije) ? data.specijalizacije.join(', ') : data.specijalizacije,\r\n                grad: data.grad,\r\n                radnoVrijeme: data.radnoVrijeme,\r\n                iskustvo: data.iskustvo,\r\n                ocjena: data.ocjena, // Ovo je ključna linija koja se treba osvježiti\r\n                profileImageBase64: data.profileImageBase64 || `https://placehold.co/100x100/CCCCCC/000000?text=${data.ime.charAt(0)}${data.prezime.charAt(0)}`\r\n            };\r\n            console.log(\"[DEBUG] fetchDoctorDetails: Transformirani podaci doktora (ocjena):\", transformedDoctor.ocjena);\r\n            setDoctor(transformedDoctor);\r\n            console.log(\"[DEBUG] fetchDoctorDetails: Stanje doktora uspješno ažurirano.\");\r\n        } catch (err) {\r\n            console.error(\"Greška prilikom dohvaćanja detalja doktora:\", err.response?.data || err.message);\r\n            setError(\"Nije moguće učitati profil doktora. Molimo pokušajte ponovo.\");\r\n            console.log(\"[DEBUG] fetchDoctorDetails: Došlo je do greške prilikom dohvaćanja.\");\r\n        } finally {\r\n            setLoading(false); // Završavamo učitavanje\r\n            console.log(\"[DEBUG] fetchDoctorDetails: Loading stanje postavljeno na false.\");\r\n        }\r\n    }, [id]); // id je dependency\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            console.log(\"[DEBUG] useEffect (inicijalno dohvaćanje): ID je prisutan, pozivam fetchDoctorDetails.\");\r\n            fetchDoctorDetails(); // Pozovi pri montiranju komponente ili kada se ID promijeni\r\n        }\r\n    }, [id, fetchDoctorDetails]); // fetchDoctorDetails je dependency jer je useCallback\r\n\r\n    // Ostatak koda ostaje isti...\r\n\r\n    useEffect(() => {\r\n        const fetchDoctorAvailability = async () => {\r\n            if (!selectedDate || !doctor?.doktorID || !token) {\r\n                setAvailableTerms([]);\r\n                return;\r\n            }\r\n            try {\r\n                // Ovdje šaljemo authHeaders jer je ovo zaštićena ruta\r\n                const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${doctor.doktorID}/datum/${selectedDate}`, memoizedAuthHeaders);\r\n                const termsData = Array.isArray(response.data) ? response.data : [];\r\n                const available = termsData\r\n                    .filter(term => term.dostupnost)\r\n                    .map(term => ({ terminID: term.terminID, vrijeme: term.vrijeme }))\r\n                    .sort((a, b) => a.vrijeme.localeCompare(b.vrijeme));\r\n                setAvailableTerms(available);\r\n            } catch (err) {\r\n                console.error('Greška pri dohvaćanju dostupnosti doktora:', err.response?.data || err.message);\r\n                setAvailableTerms([]);\r\n                setBookingMessage('Greška pri dohvaćanju dostupnih termina.');\r\n                setBookingMessageType('danger');\r\n            }\r\n        };\r\n\r\n        if (doctor?.doktorID && selectedDate) {\r\n            fetchDoctorAvailability();\r\n        }\r\n    }, [doctor, selectedDate, token, memoizedAuthHeaders]);\r\n\r\n    const handleDateChange = (e) => {\r\n        setSelectedDate(e.target.value);\r\n        setSelectedTime('');\r\n    };\r\n\r\n    const handleTimeChange = (e) => {\r\n        setSelectedTime(e.target.value);\r\n    };\r\n\r\n    const handleReasonChange = (e) => {\r\n        setReason(e.target.value);\r\n    };\r\n\r\n    const handleBookAppointment = async (e) => {\r\n        e.preventDefault();\r\n        setBookingMessage('');\r\n\r\n        if (!user || !token) {\r\n            setBookingMessage('Morate biti prijavljeni da biste zakazali pregled.');\r\n            setBookingMessageType('danger');\r\n            return;\r\n        }\r\n\r\n        if (!user.roles || !user.roles.includes('ROLE_PACIJENT')) {\r\n            setBookingMessage('Samo pacijenti mogu zakazivati preglede.');\r\n            setBookingMessageType('danger');\r\n            return;\r\n        }\r\n\r\n        if (!selectedDate || !selectedTime || !reason || !doctor?.doktorID) {\r\n            setBookingMessage('Molimo popunite sva polja da biste zakazali pregled.');\r\n            setBookingMessageType('danger');\r\n            return;\r\n        }\r\n        const selectedTermin = availableTerms.find(term => term.vrijeme === selectedTime);\r\n        if (!selectedTermin) {\r\n            setBookingMessage('Odabrani termin nije važeći ili dostupan.');\r\n            setBookingMessageType('danger');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const pacijentId = user?.pacijentId;\r\n            if (!pacijentId) {\r\n                setBookingMessage('Vaš ID pacijenta nije pronađen. Molimo osigurajte da ste prijavljeni kao pacijent i da je vaš profil pacijenta kreiran.');\r\n                setBookingMessageType('danger');\r\n                return;\r\n            }\r\n\r\n            const appointmentData = {\r\n                pacijentID: pacijentId,\r\n                doktorID: doctor.doktorID,\r\n                terminID: selectedTermin.terminID,\r\n                datumPregleda: selectedDate,\r\n                vrijemePregleda: selectedTime + ':00', // Osigurajte HH:MM:SS format za backend\r\n                komentarPacijenta: reason,\r\n                status: 'zakazan'\r\n            };\r\n            await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, memoizedAuthHeaders);\r\n            setBookingMessage('Pregled uspješno zakazan!');\r\n            setBookingMessageType('success');\r\n            setSelectedDate('');\r\n            setSelectedTime('');\r\n            setReason('');\r\n            setAvailableTerms([]);\r\n        } catch (err) {\r\n            console.error(\"Greška pri zakazivanju pregleda:\", err.response?.data || err.message);\r\n            setBookingMessage(`Greška pri zakazivanju pregleda: ${err.response?.data?.message || err.message}`);\r\n            setBookingMessageType('danger');\r\n        }\r\n    };\r\n\r\n    if (authLoading || loading) {\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Učitavanje...</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"container py-5 text-center\">\r\n                <p className=\"lead text-danger\">{error}</p>\r\n                <Link to=\"/service\" className=\"btn btn-primary\">Nazad na listu doktora</Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!doctor) {\r\n        return (\r\n            <div className=\"container py-5 text-center\">\r\n                <p className=\"lead\">Doktor nije pronađen.</p>\r\n                <Link to=\"/service\" className=\"btn btn-primary\">Nazad na listu doktora</Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderBookingSection = () => {\r\n        if (!user) {\r\n            return (\r\n                <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                    Molimo <Link to=\"/login\" className=\"alert-link\">prijavite se</Link> ili <Link to=\"/sign-up\" className=\"alert-link\">registrujte se</Link> da biste zakazali pregled.\r\n                </div>\r\n            );\r\n        } else if (!user.roles || !user.roles.includes('ROLE_PACIJENT')) {\r\n            return (\r\n                <div className=\"alert alert-warning text-center\" role=\"alert\">\r\n                    Samo pacijenti mogu zakazivati preglede.\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <form onSubmit={handleBookAppointment}>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"appointmentDate\" className=\"form-label\">Datum</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                                id=\"appointmentDate\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"appointmentTime\" className=\"form-label\">Vrijeme</label>\r\n                            <select\r\n                                className=\"form-select\"\r\n                                id=\"appointmentTime\"\r\n                                value={selectedTime}\r\n                                onChange={handleTimeChange}\r\n                                required\r\n                                disabled={availableTerms.length === 0}\r\n                            >\r\n                                <option value=\"\">Odaberite vrijeme</option>\r\n                                {availableTerms.map(term => (\r\n                                    // Prikazujemo samo HH:MM format, ali šaljemo HH:MM:SS backendu\r\n                                    <option key={term.terminID} value={term.vrijeme}>{term.vrijeme.substring(0,5)}</option>\r\n                                ))}\r\n                            </select>\r\n                            {availableTerms.length === 0 && selectedDate && (\r\n                                <small className=\"text-muted\">Nema dostupnih termina za odabrani datum.</small>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"reason\" className=\"form-label\">Razlog za pregled</label>\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            id=\"reason\"\r\n                            rows=\"3\"\r\n                            value={reason}\r\n                            onChange={handleReasonChange}\r\n                            placeholder=\"Kratak opis razloga za pregled...\"\r\n                            required\r\n                        ></textarea>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-danger\">Zakaži pregled</button>\r\n                </form>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container my-5\">\r\n            <div className=\"card shadow-lg p-4 mb-4\">\r\n                <div className=\"row g-4\">\r\n                    <div className=\"col-md-4 text-center\">\r\n                        <img\r\n                            src={doctor.profileImageBase64}\r\n                            alt={doctor.fullName}\r\n                            className=\"img-fluid rounded-circle shadow-sm mb-3\"\r\n                            style={{ width: '150px', height: '150px', objectFit: 'cover', border: '3px solid #dc3545' }}\r\n                        />\r\n                        <h3 className=\"mb-1\">{doctor.fullName}</h3>\r\n                        <p className=\"text-muted\">{doctor.specijalizacije}</p>\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                            <span className=\"text-warning me-1\">★</span>\r\n                            <span className=\"fw-bold\">{doctor.ocjena ? doctor.ocjena.toFixed(1) : 'N/A'}</span> {/* Formatiraj ocjenu na jednu decimalu */}\r\n                            <span className=\"text-muted ms-2\">({doctor.grad})</span>\r\n                            {/* Dugme za osvježavanje ocjene */}\r\n                            <button\r\n                                className=\"btn btn-outline-secondary btn-sm ms-3\"\r\n                                onClick={fetchDoctorDetails} // Pozovi funkciju za dohvaćanje detalja doktora\r\n                                disabled={loading} // Onemogući dugme dok se učitava\r\n                            >\r\n                                {loading ? 'Osvježavanje...' : 'Osvježi ocjenu'}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <h4 className=\"text-danger mb-3\">Informacije o doktoru</h4>\r\n                        <p><strong>Email:</strong> {doctor.email}</p>\r\n                        <p><strong>Telefon:</strong> {doctor.telefon}</p>\r\n                        <p><strong>Grad:</strong> {doctor.grad}</p>\r\n                        <p><strong>Radno vrijeme:</strong> {doctor.radnoVrijeme}</p>\r\n                        <p><strong>Godine iskustva:</strong> {doctor.iskustvo}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card shadow-lg p-4\">\r\n                <h4 className=\"text-danger mb-3\">Zakažite pregled</h4>\r\n                {bookingMessage && (\r\n                    <div className={`alert alert-${bookingMessageType} mb-3`} role=\"alert\">\r\n                        {bookingMessage}\r\n                    </div>\r\n                )}\r\n                {renderBookingSection()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DoctorProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}