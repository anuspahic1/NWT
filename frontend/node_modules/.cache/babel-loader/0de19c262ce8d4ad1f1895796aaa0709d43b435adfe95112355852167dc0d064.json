{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\nfunction AdminDashboard() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    token,\n    loading: authLoading\n  } = useAuth();\n  const [loadingInitial, setLoadingInitial] = useState(true);\n  const [activeTab, setActiveTab] = useState(() => {\n    const savedTab = localStorage.getItem('adminActiveTab');\n    return savedTab || 'overview';\n  });\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [examinations, setExaminations] = useState([]);\n  const [terms, setTerms] = useState([]);\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\n  const [editingDoctor, setEditingDoctor] = useState(null);\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n  const [showTermModal, setShowTermModal] = useState(false);\n  const [editingTerm, setEditingTerm] = useState(null);\n  const [showExaminationModal, setShowExaminationModal] = useState(false);\n  const [editingExamination, setEditingExamination] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n  const [termSearchTerm, setTermSearchTerm] = useState('');\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\n  const [termsCurrentPage, setTermsCurrentPage] = useState(1);\n  const examinationsCurrentPage = useRef(1);\n  const itemsPerPage = 5;\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: doc.userId,\n        name: `${doc.ime} ${doc.prezime}`,\n        ime: doc.ime,\n        prezime: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        specijalizacije: doc.specijalizacije,\n        city: doc.grad || 'N/A',\n        grad: doc.grad,\n        email: doc.email || 'N/A',\n        telefon: doc.telefon || 'N/A',\n        radnoVrijeme: doc.radnoVrijeme || '',\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : '',\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 0.0\n      }));\n      setDoctors(transformedDoctors);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error fetching doctors:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      showNotification(\"Error fetching doctors from server.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`);\n      const transformedPatients = response.data.map(pat => ({\n        id: pat.pacijentID,\n        userId: pat.userId,\n        name: `${pat.ime} ${pat.prezime}`,\n        ime: pat.ime,\n        prezime: pat.prezime,\n        email: pat.email || 'N/A',\n        phone: pat.telefon || 'N/A',\n        telefon: pat.telefon\n      }));\n      setPatients(transformedPatients);\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Error fetching patients:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      showNotification(\"Error fetching patients from server.\", \"danger\");\n    }\n  };\n  const fetchTerms = async () => {\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`);\n      const transformedTerms = response.data.map(term => ({\n        id: term.terminID,\n        doktorID: term.doktorID,\n        datum: term.datum,\n        // Datum je već string \"YYYY-MM-DD\"\n        vrijeme: term.vrijeme,\n        // Vrijeme je već string \"HH:mm:ss\"\n        statusTermina: term.statusTermina\n      }));\n      setTerms(transformedTerms);\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Error fetching terms:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      showNotification(\"Error fetching terms from server.\", \"danger\");\n    }\n  };\n  const fetchExaminations = async () => {\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`);\n      const transformedExaminations = response.data.map(app => ({\n        id: app.pregledID,\n        pacijentID: app.pacijentID,\n        doktorID: app.doktorID,\n        patientName: app.pacijentIme || 'N/A',\n        doctorName: app.doktorIme || 'N/A',\n        datumPregleda: app.datumPregleda,\n        // Datum je već string \"YYYY-MM-DD\"\n        vrijemePregleda: app.vrijemePregleda,\n        // Vrijeme je već string \"HH:mm:ss\"\n        status: app.status,\n        komentarPacijenta: app.komentarPacijenta || '',\n        ocjenaDoktora: app.ocjenaDoktora || null,\n        terminID: app.terminID !== null && app.terminID !== undefined ? app.terminID : 'N/A'\n      }));\n      setExaminations(transformedExaminations);\n    } catch (error) {\n      var _error$response4;\n      console.error(\"Error fetching examinations:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      showNotification(\"Error fetching examinations from server.\", \"danger\");\n    }\n  };\n  useEffect(() => {\n    console.log(\"AdminDashboard useEffect: token=\", token, \"authLoading=\", authLoading);\n    if (!authLoading) {\n      if (token) {\n        console.log(\"AdminDashboard useEffect: Autentifikacija završena, token dostupan. Pokrećem dohvat podataka.\");\n        const initializeDashboard = async () => {\n          try {\n            await Promise.all([fetchDoctors(), fetchPatients(), fetchTerms(), fetchExaminations()]);\n            showNotification(\"Dashboard data loaded successfully!\", \"success\");\n          } catch (error) {\n            console.error(\"Error during initial data fetch:\", error);\n            showNotification(\"Error loading initial data. Please try again.\", \"danger\");\n          } finally {\n            setLoadingInitial(false);\n          }\n        };\n        initializeDashboard();\n      } else {\n        console.warn(\"AdminDashboard useEffect: Token not available after auth loading finished. User not logged in/authorized.\");\n        setLoadingInitial(false);\n      }\n    }\n  }, [token, authLoading]);\n  useEffect(() => {\n    localStorage.setItem('adminActiveTab', activeTab);\n  }, [activeTab]);\n  const handleAddDoctor = async newDoctorData => {\n    try {\n      const registerPayload = {\n        email: newDoctorData.email,\n        password: newDoctorData.password,\n        fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\n        telefon: newDoctorData.telefon,\n        roles: [\"ROLE_DOKTOR\"],\n        grad: newDoctorData.grad,\n        specijalizacije: newDoctorData.specijalizacije,\n        radnoVrijeme: newDoctorData.radnoVrijeme,\n        iskustvo: newDoctorData.iskustvo,\n        ocjena: newDoctorData.ocjena || 0.0\n      };\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      console.log(\"Auth Service Register Response Data:\", authResponse.data);\n      return {\n        success: true,\n        message: 'New doctor successfully registered!'\n      };\n    } catch (error) {\n      console.error(\"Error adding doctor, full error object:\", error);\n      let errorMessage = 'Error adding doctor. Please check your input.';\n      if (error.response) {\n        console.log(\"Error.response:\", error.response);\n        console.log(\"Error.response.data:\", error.response.data);\n        if (typeof error.response.data === 'string') {\n          errorMessage = error.response.data;\n        } else if (error.response.data.message) {\n          errorMessage = error.response.data.message;\n        } else if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\n        }\n      } else if (error.message) {\n        errorMessage = error.message; // Fixed: complete this line\n      } else {\n        errorMessage = \"An unexpected client-side error occurred.\";\n      }\n      if (errorMessage.toLowerCase().includes(\"email already exists\") || errorMessage.toLowerCase().includes(\"email već postoji\")) {\n        errorMessage = \"User with this email already exists.\";\n      } else if (errorMessage.toLowerCase().includes(\"password\") && errorMessage.toLowerCase().includes(\"size\")) {\n        errorMessage = \"Password must be at least 6 characters long.\";\n      } else if (errorMessage.toLowerCase().includes(\"bad request\") && errorMessage.toLowerCase().includes(\"validation failed\")) {\n        errorMessage = \"Validation error. Please check the entered data.\";\n      }\n      console.log(\"Final error message to display for doctor add:\", errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const handleUpdateDoctor = async updatedDoctor => {\n    try {\n      if (!updatedDoctor.id) {\n        return {\n          success: false,\n          message: 'Doctor ID is missing for update.'\n        };\n      }\n      const doctorUpdatePayload = {\n        ime: updatedDoctor.ime,\n        prezime: updatedDoctor.prezime,\n        email: updatedDoctor.email,\n        telefon: updatedDoctor.telefon,\n        grad: updatedDoctor.grad,\n        specijalizacije: updatedDoctor.specijalizacije,\n        radnoVrijeme: updatedDoctor.radnoVrijeme || '',\n        iskustvo: updatedDoctor.iskustvo !== null && updatedDoctor.iskustvo !== undefined ? updatedDoctor.iskustvo : 0,\n        ocjena: updatedDoctor.ocjena || 0.0\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, doctorUpdatePayload);\n      const userUpdatePayload = {\n        email: updatedDoctor.email,\n        fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\n        telefon: updatedDoctor.telefon\n      };\n      if (updatedDoctor.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload);\n      } else {\n        console.warn(\"No userId found for user update in Auth service.\");\n      }\n      return {\n        success: true,\n        message: 'Doctor successfully updated!'\n      };\n    } catch (error) {\n      console.error(\"Error updating doctor, full error object:\", error);\n      let errorMessage = 'Error updating doctor. Please check your input.';\n      if (error.response) {\n        if (typeof error.response.data === 'string') {\n          errorMessage = error.response.data;\n        } else if (error.response.data.message) {\n          errorMessage = error.response.data.message;\n        } else if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\n        }\n      } else if (error.message) {\n        errorMessage = error.message; // Fixed: complete this line\n      } else {\n        errorMessage = \"An unexpected client-side error occurred.\";\n      }\n      console.log(\"Final error message to display for doctor update:\", errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(() => () => {});\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\n  const [confirmTitle, setConfirmTitle] = useState(\"Confirmation\");\n  const showCustomConfirm = (message, action, title = \"Confirmation\") => {\n    setConfirmMessage(message);\n    setConfirmAction(() => action);\n    setConfirmTitle(title);\n    setShowConfirmModal(true);\n  };\n  const handleConfirmAction = () => {\n    confirmAction();\n    setShowConfirmModal(false);\n  };\n  const handleDeleteDoctor = async id => {\n    showCustomConfirm('Are you sure you want to delete this doctor? This action will also delete the user account.', async () => {\n      try {\n        const doctorToDelete = doctors.find(doc => doc.id === id);\n        if (!doctorToDelete || !doctorToDelete.userId) {\n          showNotification('User ID not found for deleting doctor.', 'danger');\n          return;\n        }\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`);\n        await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`);\n        fetchDoctors();\n        showNotification('Doctor successfully deleted!', 'danger');\n      } catch (error) {\n        var _error$response5, _error$response6, _error$response6$data;\n        console.error(\"Error deleting doctor:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n        showNotification(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Error deleting doctor.', \"danger\");\n      }\n    }, \"Confirm Doctor Deletion\");\n  };\n  const openDoctorModal = (doctor = null) => {\n    setEditingDoctor(doctor);\n    setShowDoctorModal(true);\n  };\n  const filteredDoctors = doctors.filter(doctor => doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()));\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\n  const handleAddPatient = async newPatient => {\n    try {\n      const registerPayload = {\n        email: newPatient.email,\n        password: newPatient.password,\n        fullName: `${newPatient.ime} ${newPatient.prezime}`,\n        telefon: newPatient.telefon,\n        roles: [\"ROLE_PACIJENT\"],\n        grad: null,\n        specijalizacije: null,\n        ocjena: null,\n        iskustvo: null,\n        radnoVrijeme: null\n      };\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      return {\n        success: true,\n        message: 'New patient successfully registered!'\n      };\n    } catch (error) {\n      console.error(\"Error adding patient, full error object:\", error);\n      let errorMessage = 'Error adding patient. Please check your input.';\n      if (error.response) {\n        if (Array.isArray(error.response.data.errors) && error.response.data.errors.length > 0) {\n          const passwordError = error.response.data.errors.find(err => err.field === 'password');\n          if (passwordError) {\n            errorMessage = `Password: ${passwordError.defaultMessage || 'Invalid password.'}`;\n          } else {\n            errorMessage = error.response.data.errors.map(err => err.defaultMessage || err.field).join('; ');\n          }\n        } else if (typeof error.response.data === 'string') {\n          errorMessage = error.response.data;\n        } else if (error.response.data.message) {\n          errorMessage = error.response.data.message;\n        } else if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\n        }\n      } else if (error.message) {\n        errorMessage = error.message; // Fixed: complete this line\n      } else {\n        errorMessage = \"An unexpected client-side error occurred.\";\n      }\n      if (errorMessage.toLowerCase().includes(\"email already exists\") || errorMessage.toLowerCase().includes(\"email već postoji\")) {\n        errorMessage = \"User with this email already exists.\";\n      } else if (errorMessage.toLowerCase().includes(\"password\") && errorMessage.toLowerCase().includes(\"size\")) {\n        errorMessage = \"Password must be at least 6 characters long.\";\n      } else if (errorMessage.toLowerCase().includes(\"bad request\") && errorMessage.toLowerCase().includes(\"validation failed\")) {\n        errorMessage = \"Validation error. Please check the entered data.\";\n      }\n      console.log(\"Final error message to display for patient add:\", errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const handleUpdatePatient = async updatedPatient => {\n    try {\n      const patientUpdatePayload = {\n        ime: updatedPatient.ime,\n        prezime: updatedPatient.prezime,\n        email: updatedPatient.email,\n        telefon: updatedPatient.telefon\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, patientUpdatePayload);\n      const userUpdatePayload = {\n        email: updatedPatient.email,\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\n        telefon: updatedPatient.telefon\n      };\n      if (updatedPatient.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload);\n      } else {\n        console.warn(\"No userId found for user update in Auth service.\");\n      }\n      return {\n        success: true,\n        message: 'Patient successfully updated!'\n      };\n    } catch (error) {\n      console.error(\"Error updating patient, full error object:\", error);\n      let errorMessage = 'Error updating patient. Please check your input.';\n      if (error.response) {\n        if (typeof error.response.data === 'string') {\n          errorMessage = error.response.data;\n        } else if (error.response.data.message) {\n          errorMessage = error.response.data.message;\n        } else if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\n        }\n      } else if (error.message) {\n        errorMessage = error.message; // Fixed: complete this line\n      } else {\n        errorMessage = \"An unexpected client-side error occurred.\";\n      }\n      console.log(\"Final error message to display for patient update:\", errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const handleDeletePatient = async id => {\n    showCustomConfirm('Are you sure you want to delete this patient? This action will also delete the user account.', async () => {\n      try {\n        const patientToDelete = patients.find(pat => pat.id === id);\n        if (!patientToDelete || !patientToDelete.userId) {\n          showNotification('User ID not found for deleting patient.', 'danger');\n          return;\n        }\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`);\n        await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`);\n        fetchPatients();\n        showNotification('Patient successfully deleted!', 'success');\n      } catch (error) {\n        var _error$response7, _error$response8, _error$response8$data;\n        console.error(\"Error deleting patient:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n        showNotification(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Error deleting patient.', \"danger\");\n      }\n    }, \"Confirm Patient Deletion\");\n  };\n  const openPatientModal = (patient = null) => {\n    setEditingPatient(patient);\n    setShowPatientModal(true);\n  };\n  const filteredPatients = patients.filter(patient => patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\n  const handleAddTerm = async newTermData => {\n    try {\n      // Provjera da li doktorID postoji\n      if (!newTermData.doktorID) {\n        return {\n          success: false,\n          message: 'Doctor ID is required to add a term.'\n        };\n      }\n\n      // Priprema payloada sa validnim statusom termina\n      const termPayload = {\n        doktorID: newTermData.doktorID,\n        datum: newTermData.datum,\n        vrijeme: newTermData.vrijeme,\n        statusTermina: newTermData.statusTermina || (newTermData.dostupnost ? 'DOSTUPAN' : 'ZAKAZAN')\n      };\n\n      // Slanje zahtjeva sa Authorization headerom\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, termPayload, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      showNotification(\"New term successfully added!\", \"success\");\n      fetchTerms(); // osvježi termine\n      return {\n        success: true,\n        message: 'New term successfully added!'\n      };\n    } catch (error) {\n      console.error(\"Error adding term, full error object:\", error);\n      let errorMessage = 'Error adding term. Please check your input.';\n      if (error.response) {\n        if (typeof error.response.data === 'string') {\n          errorMessage = error.response.data;\n        } else if (error.response.data.message) {\n          errorMessage = error.response.data.message;\n        } else if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\n        }\n      } else if (error.message) {\n        errorMessage = error.message;\n      } else {\n        errorMessage = \"An unexpected client-side error occurred.\";\n      }\n      showNotification(errorMessage, \"danger\");\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const handleUpdateTerm = async updatedTerm => {\n    try {\n      if (!updatedTerm.id || !updatedTerm.doktorID) {\n        return {\n          success: false,\n          message: 'Term ID and Doctor ID are required for update.'\n        };\n      }\n      const termPayload = {\n        doktorID: updatedTerm.doktorID,\n        datum: updatedTerm.datum,\n        vrijeme: updatedTerm.vrijeme,\n        statusTermina: updatedTerm.statusTermina || (updatedTerm.dostupnost ? 'DOSTUPAN' : 'ZAKAZAN')\n      };\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${updatedTerm.id}`, termPayload, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      showNotification(\"Term successfully updated!\", \"success\");\n      fetchTerms();\n      return {\n        success: true,\n        message: 'Term successfully updated!'\n      };\n    } catch (error) {\n      console.error(\"Error updating term, full error object:\", error);\n      let errorMessage = 'Error updating term. Please check your input.';\n      if (error.response) {\n        if (typeof error.response.data === 'string') {\n          errorMessage = error.response.data;\n        } else if (error.response.data.message) {\n          errorMessage = error.response.data.message;\n        } else if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\n        }\n      } else if (error.message) {\n        errorMessage = error.message;\n      } else {\n        errorMessage = \"An unexpected client-side error occurred.\";\n      }\n      showNotification(errorMessage, \"danger\");\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const handleDeleteTerm = async id => {\n    showCustomConfirm('Are you sure you want to delete this term?', async () => {\n      try {\n        await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${id}`);\n        showNotification('Term successfully deleted!', 'success');\n        fetchTerms();\n      } catch (error) {\n        var _error$response9, _error$response0, _error$response0$data;\n        console.error(\"Error deleting term:\", ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n        showNotification(((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || 'Error deleting term.', \"danger\");\n      }\n    }, \"Confirm Term Deletion\");\n  };\n  const openTermModal = (term = null) => {\n    if (term) {\n      setEditingTerm({\n        ...term,\n        datum: term.datum,\n        // Datum je već string\n        vrijeme: term.vrijeme ? term.vrijeme.substring(0, 5) : '',\n        // Vrijeme je string, skratimo na HH:mm\n        statusTermina: term.statusTermina\n      });\n    } else {\n      setEditingTerm(null);\n    }\n    setShowTermModal(true);\n  };\n  const filteredTerms = terms.filter(term => term.doktorID != null && term.doktorID.toString().toLowerCase().includes(termSearchTerm.toLowerCase()) || term.datum && term.datum.toLowerCase().includes(termSearchTerm.toLowerCase()) || term.vrijeme && term.vrijeme.toLowerCase().includes(termSearchTerm.toLowerCase()) || term.statusTermina && term.statusTermina.toLowerCase().includes(termSearchTerm.toLowerCase())).sort((a, b) => {\n    // Sortiranje po datumu i vremenu\n    const dateComparison = a.datum.localeCompare(b.datum);\n    if (dateComparison !== 0) {\n      return dateComparison;\n    }\n    return a.vrijeme.localeCompare(b.vrijeme);\n  });\n  const indexOfLastTerm = termsCurrentPage * itemsPerPage;\n  const indexOfFirstTerm = indexOfLastTerm - itemsPerPage;\n  const currentTerms = filteredTerms.slice(indexOfFirstTerm, indexOfLastTerm);\n  const totalTermPages = Math.ceil(filteredTerms.length / itemsPerPage);\n  const handleUpdateExamination = async updatedExamination => {\n    try {\n      if (!updatedExamination.id) {\n        return {\n          success: false,\n          message: 'Examination ID is missing for update.'\n        };\n      }\n      const payload = {\n        pacijentID: updatedExamination.pacijentID,\n        doktorID: updatedExamination.doktorID,\n        terminID: updatedExamination.terminID,\n        datumPregleda: updatedExamination.datumPregleda,\n        vrijemePregleda: updatedExamination.vrijemePregleda,\n        status: updatedExamination.status,\n        komentarPacijenta: updatedExamination.komentarPacijenta,\n        ocjenaDoktora: updatedExamination.ocjenaDoktora\n      };\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${updatedExamination.id}`, payload);\n      return {\n        success: true,\n        message: 'Examination successfully updated!'\n      };\n    } catch (error) {\n      console.error(\"Error updating examination, full error object:\", error);\n      let errorMessage = 'Error updating examination. Please check your input.';\n      if (error.response) {\n        if (typeof error.response.data === 'string') {\n          errorMessage = error.response.data;\n        } else if (error.response.data.message) {\n          errorMessage = error.response.data.message;\n        } else if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\n        }\n      } else if (error.message) {\n        errorMessage = error.message;\n      } else {\n        errorMessage = \"An unexpected client-side error occurred.\";\n      }\n      console.log(\"Final error message to display for examination update:\", errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const handleDeleteExamination = async id => {\n    showCustomConfirm('Are you sure you want to delete this examination?', async () => {\n      try {\n        await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`);\n        showNotification('Examination successfully deleted!', 'success');\n        fetchExaminations();\n      } catch (error) {\n        var _error$response1, _error$response10, _error$response10$dat;\n        console.error(\"Error deleting examination:\", ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data) || error.message);\n        showNotification(((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.message) || 'Error deleting examination.', \"danger\");\n      }\n    }, \"Confirm Examination Deletion\");\n  };\n  const openExaminationModal = examination => {\n    setEditingExamination({\n      ...examination,\n      pacijentID: examination.pacijentID,\n      doktorID: examination.doktorID,\n      terminID: examination.terminID,\n      datumPregleda: examination.datumPregleda,\n      vrijemePregleda: examination.vrijemePregleda\n    });\n    setShowExaminationModal(true);\n  };\n  const filteredExaminations = examinations.filter(exam => exam.patientName && exam.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.doctorName && exam.doctorName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.status && exam.status.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.datumPregleda && exam.datumPregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.vrijemePregleda && exam.vrijemePregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()));\n  const indexOfLastExamination = examinationsCurrentPage.current * itemsPerPage;\n  const indexOfFirstExamination = indexOfLastExamination - itemsPerPage;\n  const currentExaminations = filteredExaminations.slice(indexOfFirstExamination, indexOfLastExamination);\n  const totalExaminationPages = Math.ceil(filteredExaminations.length / itemsPerPage);\n  const addDoctorFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Password',\n    type: 'password',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: true\n  }, {\n    name: 'grad',\n    label: 'City',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specialty',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Working Hours',\n    type: 'text'\n  }, {\n    name: 'iskustvo',\n    label: 'Years of Experience',\n    type: 'number'\n  }];\n  const editDoctorFields = [{\n    name: 'id',\n    label: 'Doctor ID',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: true\n  },\n  // FIXED: type 'true' to 'text'\n  {\n    name: 'grad',\n    label: 'City',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specialty',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Working Hours',\n    type: 'text'\n  }, {\n    name: 'iskustvo',\n    label: 'Years of Experience',\n    type: 'number'\n  }, {\n    name: 'ocjena',\n    label: 'Rating',\n    type: 'number',\n    readOnly: true\n  }];\n  const addPatientFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Password',\n    type: 'password',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: true\n  }];\n  const editPatientFields = [{\n    name: 'id',\n    label: 'Patient ID',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: true\n  }];\n  const addTermFields = [{\n    name: 'doktorID',\n    label: 'Doctor ID',\n    type: 'number',\n    required: true\n  }, {\n    name: 'datum',\n    label: 'Date',\n    type: 'date',\n    required: true\n  }, {\n    name: 'vrijeme',\n    label: 'Time (HH:mm)',\n    type: 'time',\n    required: true\n  }, {\n    name: 'statusTermina',\n    label: 'Status',\n    type: 'select',\n    options: ['DOSTUPAN', 'ZAKAZAN', 'OTKAZAN'],\n    required: true\n  }];\n  const editTermFields = [{\n    name: 'id',\n    label: 'Term ID',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'doktorID',\n    label: 'Doctor ID',\n    type: 'number',\n    required: true\n  }, {\n    name: 'datum',\n    label: 'Date',\n    type: 'date',\n    required: true\n  }, {\n    name: 'vrijeme',\n    label: 'Time (HH:mm)',\n    type: 'time',\n    required: true\n  }, {\n    name: 'statusTermina',\n    label: 'Status',\n    type: 'select',\n    options: ['DOSTUPAN', 'ZAKAZAN', 'OTKAZAN'],\n    required: true\n  }];\n  const editExaminationFields = [{\n    name: 'id',\n    label: 'Examination ID',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'pacijentID',\n    label: 'Patient ID',\n    type: 'number',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'terminID',\n    label: 'Term ID',\n    type: 'number',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'doktorID',\n    label: 'Doctor ID',\n    type: 'number',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'datumPregleda',\n    label: 'Examination Date',\n    type: 'date',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'vrijemePregleda',\n    label: 'Examination Time',\n    type: 'time',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'status',\n    label: 'Status',\n    type: 'select',\n    options: ['zakazan', 'obavljen', 'otkazan'],\n    required: true\n  }, {\n    name: 'komentarPacijenta',\n    label: 'Patient Comment',\n    type: 'textarea'\n  }, {\n    name: 'ocjenaDoktora',\n    label: 'Doctor Rating',\n    type: 'number'\n  }];\n  const toLocalISOString = dateString => {\n    if (!dateString) return '';\n    if (dateString.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n      return dateString;\n    }\n    const d = new Date(dateString);\n    d.setMinutes(d.getMinutes() - d.getTimezoneOffset());\n    return d.toISOString().slice(0, 10);\n  };\n  const DataModal = ({\n    show,\n    onClose,\n    data,\n    onSave,\n    fields,\n    title,\n    idPrefix,\n    onSuccess\n  }) => {\n    _s();\n    const prevTerminIDRef = useRef(null);\n    const [shouldFetchTermDetails, setShouldFetchTermDetails] = useState(false);\n    const [formData, setFormData] = useState({});\n    const [localValidationErrors, setLocalValidationErrors] = useState({});\n    const [apiErrorMessage, setApiErrorMessage] = useState('');\n    useEffect(() => {\n      const newFormData = {};\n      fields.forEach(field => {\n        if (data === null || data[field.name] === undefined || data[field.name] === null) {\n          if (field.name === 'specijalizacije') {\n            newFormData[field.name] = '';\n          } else if (field.type === 'number') {\n            newFormData[field.name] = null;\n          } else if (field.name === 'statusTermina') {\n            newFormData[field.name] = 'DOSTUPAN';\n          } else {\n            newFormData[field.name] = '';\n          }\n        } else {\n          let value = data[field.name];\n          if (field.type === 'date' && typeof value === 'string') {\n            value = toLocalISOString(value);\n          } else if (field.type === 'time' && typeof value === 'string' && value.length >= 5) {\n            value = value.substring(0, 5);\n          } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\n            value = value[0] || '';\n          }\n          newFormData[field.name] = value;\n        }\n      });\n      setFormData(newFormData);\n      prevTerminIDRef.current = idPrefix === 'examination' && data && typeof data.terminID === 'number' && data.terminID > 0 ? data.terminID : null;\n      setShouldFetchTermDetails(false);\n      setLocalValidationErrors({});\n      setApiErrorMessage('');\n    }, [data, fields, idPrefix]);\n    const handleTerminIDBlur = () => {\n      if (idPrefix === 'examination') {\n        const currentTerminID = formData.terminID;\n        const isNumericAndValidTerminID = typeof currentTerminID === 'number' && currentTerminID > 0;\n        if (isNumericAndValidTerminID && currentTerminID !== prevTerminIDRef.current) {\n          setShouldFetchTermDetails(true);\n        } else if (!isNumericAndValidTerminID && prevTerminIDRef.current !== null) {\n          setFormData(prev => ({\n            ...prev,\n            doktorID: null,\n            datumPregleda: '',\n            vrijemePregleda: ''\n          }));\n          prevTerminIDRef.current = null;\n          setShouldFetchTermDetails(false);\n        } else if (currentTerminID === null || currentTerminID === 0 || currentTerminID === '') {\n          if (formData.doktorID !== null || formData.datumPregleda !== '' || formData.vrijemePregleda !== '') {\n            setFormData(prev => ({\n              ...prev,\n              doktorID: null,\n              datumPregleda: '',\n              vrijemePregleda: ''\n            }));\n          }\n          prevTerminIDRef.current = null;\n          setShouldFetchTermDetails(false);\n        }\n      }\n    };\n    useEffect(() => {\n      if (shouldFetchTermDetails && idPrefix === 'examination') {\n        const terminIDToFetch = formData.terminID;\n        if (!(typeof terminIDToFetch === 'number' && terminIDToFetch > 0)) {\n          setShouldFetchTermDetails(false);\n          return;\n        }\n        const fetchTermDetails = async () => {\n          try {\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${terminIDToFetch}`);\n            const fetchedTerm = response.data;\n            setFormData(prev => {\n              const newState = {\n                ...prev,\n                doktorID: fetchedTerm.doktorID,\n                datumPregleda: toLocalISOString(fetchedTerm.datum),\n                vrijemePregleda: fetchedTerm.vrijeme.substring(0, 5)\n              };\n              return newState;\n            });\n            prevTerminIDRef.current = terminIDToFetch;\n          } catch (error) {\n            setApiErrorMessage('Error fetching term details. Check Term ID.');\n            setFormData(prev => ({\n              ...prev,\n              doktorID: null,\n              datumPregleda: '',\n              vrijemePregleda: ''\n            }));\n            prevTerminIDRef.current = null;\n          } finally {\n            setShouldFetchTermDetails(false);\n          }\n        };\n        fetchTermDetails();\n      }\n    }, [shouldFetchTermDetails, idPrefix, TERMINI_PREGLEDI_API_PREFIX, formData.terminID]);\n    const handleChange = e => {\n      const {\n        name,\n        value,\n        type,\n        checked\n      } = e.target;\n      setLocalValidationErrors(prev => {\n        const newState = {\n          ...prev\n        };\n        delete newState[name];\n        return newState;\n      });\n      setApiErrorMessage('');\n      setFormData(prev => {\n        let newValue = value;\n        if (name === 'specijalizacije') {\n          newValue = value;\n        } else if (type === 'number') {\n          newValue = value === '' ? null : Number(value);\n          if (isNaN(newValue)) {\n            newValue = null;\n          }\n        } else if (type === 'checkbox') {\n          newValue = checked;\n        } else if (type === 'date') {\n          newValue = value;\n        }\n        const newState = {\n          ...prev,\n          [name]: newValue\n        };\n        return newState;\n      });\n    };\n    const handleSubmit = async e => {\n      e.preventDefault();\n      setLocalValidationErrors({});\n      setApiErrorMessage('');\n      const finalFormData = {\n        ...formData\n      };\n      if (idPrefix === 'doctor' && typeof finalFormData.specijalizacije === 'string') {\n        finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\n      } else if (idPrefix === 'doctor' && finalFormData.specijalizacije === null) {\n        finalFormData.specijalizacije = [];\n      }\n      let currentValidationErrors = {};\n      fields.forEach(field => {\n        if (field.required) {\n          if (field.type === 'text' || field.type === 'textarea' || field.type === 'date' || field.type === 'time' || field.type === 'select') {\n            if (!finalFormData[field.name] || finalFormData[field.name].toString().trim() === '') {\n              currentValidationErrors[field.name] = `${field.label} is a required field.`;\n            }\n          } else if (field.type === 'number') {\n            if (finalFormData[field.name] === null || finalFormData[field.name] === undefined || typeof finalFormData[field.name] !== 'number') {\n              currentValidationErrors[field.name] = `${field.label} is a required field and must be a valid number.`;\n            } else if (field.name === 'iskustvo' && finalFormData[field.name] < 0) {\n              currentValidationErrors[field.name] = `Years of experience cannot be negative.`;\n            } else if (field.name === 'ocjena' && (finalFormData[field.name] < 0 || finalFormData[field.name] > 5)) {\n              currentValidationErrors[field.name] = `Rating must be between 0 and 5.`;\n            }\n          } else if (field.type === 'email') {\n            if (!finalFormData[field.name] || !/\\S+@\\S+\\.\\S+/.test(finalFormData[field.name])) {\n              currentValidationErrors[field.name] = `Email address must be valid.`;\n            }\n          } else if (field.name === 'password') {\n            if (!finalFormData[field.name] || finalFormData[field.name].toString().length < 6) {\n              currentValidationErrors[field.name] = `Password must be at least 6 characters long.`;\n            }\n          }\n        }\n        if (field.type === 'email' && finalFormData[field.name] && finalFormData[field.name].trim() !== '' && !/\\S+@\\S+\\.\\S+/.test(finalFormData[field.name])) {\n          currentValidationErrors[field.name] = `Email address must be valid.`;\n        }\n      });\n      setLocalValidationErrors(currentValidationErrors);\n      if (Object.keys(currentValidationErrors).length > 0) {\n        setApiErrorMessage('Please correct the errors in the form.');\n        return;\n      }\n      fields.forEach(field => {\n        if (field.type === 'number' && (finalFormData[field.name] === null || finalFormData[field.name] === undefined || finalFormData[field.name] === '')) {\n          if (field.name === 'iskustvo' || field.name === 'ocjena') {\n            finalFormData[field.name] = 0;\n          } else {\n            finalFormData[field.name] = null;\n          }\n        }\n      });\n      if (idPrefix === 'term' && finalFormData.vrijeme) {\n        if (finalFormData.vrijeme.length === 5) {\n          finalFormData.vrijeme += ':00';\n        }\n      } else if (idPrefix === 'examination' && finalFormData.vrijemePregleda) {\n        if (finalFormData.vrijemePregleda.length === 5) {\n          finalFormData.vrijemePregleda += ':00';\n        }\n      }\n      const result = await onSave(finalFormData);\n      if (!result.success) {\n        setApiErrorMessage(result.message);\n      } else {\n        showNotification(result.message, 'success');\n        onClose();\n        if (onSuccess) onSuccess();\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: onClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [apiErrorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            className: \"mb-3\",\n            children: apiErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1042,\n            columnNumber: 15\n          }, this), fields.map(field => /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: `${idPrefix}-${field.name}`,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 17\n            }, this), field.type === 'select' ? /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: field.name,\n              value: formData[field.name] === null ? '' : formData[field.name],\n              onChange: handleChange,\n              required: field.required,\n              isInvalid: !!localValidationErrors[field.name],\n              readOnly: field.readOnly,\n              disabled: field.readOnly,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: [\"Select \", field.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 21\n              }, this), field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 19\n            }, this) : field.type === 'textarea' ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required,\n              isInvalid: !!localValidationErrors[field.name],\n              readOnly: field.readOnly,\n              disabled: field.readOnly\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 19\n            }, this) : field.type === 'checkbox' ? /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              name: field.name,\n              checked: formData[field.name] || false,\n              onChange: handleChange,\n              label: field.label,\n              readOnly: field.readOnly,\n              disabled: field.readOnly\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: field.type || 'text',\n              name: field.name,\n              value: formData[field.name] === null || formData[field.name] === undefined || formData[field.name] === 'N/A' ? '' : formData[field.name],\n              onChange: handleChange,\n              required: field.required,\n              readOnly: field.readOnly || idPrefix === 'examination' && (field.name === 'doktorID' || field.name === 'datumPregleda' || field.name === 'vrijemePregleda'),\n              disabled: field.readOnly || idPrefix === 'examination' && (field.name === 'doktorID' || field.name === 'datumPregleda' || field.name === 'vrijemePregleda'),\n              onBlur: field.name === 'terminID' && idPrefix === 'examination' ? handleTerminIDBlur : undefined,\n              isInvalid: !!localValidationErrors[field.name]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1087,\n              columnNumber: 19\n            }, this), localValidationErrors[field.name] && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: localValidationErrors[field.name]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 19\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1047,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 7\n    }, this);\n  };\n  _s(DataModal, \"zYZfI8mrUO60NfGPteFRA7QHC1s=\");\n  const Pagination = ({\n    itemsPerPage,\n    totalItems,\n    currentPage,\n    paginate\n  }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center mt-4\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === number ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 15\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1134,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1131,\n      columnNumber: 7\n    }, this);\n  };\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Dashboard Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-primary mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Doctors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1154,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: doctors.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1156,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1155,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-success mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Patients\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1162,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: patients.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1164,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1163,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1161,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-info mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Available Terms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1170,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: terms.filter(t => t.statusTermina === 'DOSTUPAN').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1172,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1171,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1169,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-warning mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Pending Examinations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1178,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: examinations.filter(exam => exam.status === 'zakazan').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1180,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1179,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1177,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Quick Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2 flex-wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => openDoctorModal(),\n                children: \"Add New Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-success\",\n                onClick: () => openPatientModal(),\n                children: \"Add New Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-info\",\n                onClick: () => openTermModal(),\n                children: \"Add New Term\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1190,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1149,\n          columnNumber: 11\n        }, this);\n      case 'doctors':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Doctor Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openDoctorModal(),\n              children: \"Add New Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search doctors...\",\n              value: doctorSearchTerm,\n              onChange: e => setDoctorSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1213,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1214,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Specialty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1215,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"City\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1216,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1217,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1218,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Working Hours\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1219,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Experience\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1220,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1221,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1222,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1212,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentDoctors.length > 0 ? currentDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1229,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1230,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.specialty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1231,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.city\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1232,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1233,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.telefon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1234,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.radnoVrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1235,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.iskustvo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1236,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.ocjena\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1237,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openDoctorModal(doctor),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1239,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteDoctor(doctor.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1240,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1238,\n                    columnNumber: 25\n                  }, this)]\n                }, doctor.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1228,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"10\",\n                    className: \"text-center\",\n                    children: \"No doctors found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1246,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1245,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredDoctors.length,\n            currentPage: doctorsCurrentPage,\n            paginate: setDoctorsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 11\n        }, this);\n      case 'patients':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Patient Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openPatientModal(),\n              children: \"Add New Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search patients...\",\n              value: patientSearchTerm,\n              onChange: e => setPatientSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1278,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1279,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1280,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1281,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1282,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1277,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1276,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentPatients.length > 0 ? currentPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1289,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1290,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1291,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.telefon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1292,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openPatientModal(patient),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1294,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeletePatient(patient.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1295,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1293,\n                    columnNumber: 25\n                  }, this)]\n                }, patient.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1288,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"No patients found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1301,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1300,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1285,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1275,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredPatients.length,\n            currentPage: patientsCurrentPage,\n            paginate: setPatientsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 11\n        }, this);\n      case 'terms':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Term Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openTermModal(),\n              children: \"Add New Term\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search terms...\",\n              value: termSearchTerm,\n              onChange: e => setTermSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1333,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1334,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1335,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1336,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1337,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1338,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1332,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1331,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentTerms.length > 0 ? currentTerms.map(term => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1345,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.doktorID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1346,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.datum\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1347,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.vrijeme ? term.vrijeme.substring(0, 5) : 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1348,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.statusTermina\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1349,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openTermModal(term),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1351,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteTerm(term.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1352,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1350,\n                    columnNumber: 25\n                  }, this)]\n                }, term.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1344,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: \"text-center\",\n                    children: \"No terms found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1358,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1357,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1341,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredTerms.length,\n            currentPage: termsCurrentPage,\n            paginate: setTermsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1317,\n          columnNumber: 11\n        }, this);\n      case 'examinations':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Examination Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search examinations...\",\n              value: examinationSearchTerm,\n              onChange: e => setExaminationSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1377,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1389,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Patient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1390,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1391,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Term ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1392,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1393,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1394,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1395,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Patient Comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1396,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1397,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1398,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1388,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1387,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentExaminations.length > 0 ? currentExaminations.map(examination => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1405,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.patientName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1406,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.doctorName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1407,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.terminID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1408,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.datumPregleda\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1409,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.vrijemePregleda ? examination.vrijemePregleda.substring(0, 5) : 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1410,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select\",\n                      value: examination.status,\n                      onChange: e => handleUpdateExamination({\n                        ...examination,\n                        status: e.target.value,\n                        datumPregleda: examination.datumPregleda,\n                        vrijemePregleda: examination.vrijemePregleda\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"zakazan\",\n                        children: \"Scheduled\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1424,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"obavljen\",\n                        children: \"Completed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1425,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"otkazan\",\n                        children: \"Cancelled\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1426,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1412,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1411,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.komentarPacijenta\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1429,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.ocjenaDoktora\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1430,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openExaminationModal(examination),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1432,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteExamination(examination.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1433,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1431,\n                    columnNumber: 25\n                  }, this)]\n                }, examination.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1404,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"10\",\n                    className: \"text-center\",\n                    children: \"No examinations found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1439,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1438,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1401,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1386,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredExaminations.length,\n            currentPage: examinationsCurrentPage.current,\n            paginate: page => {\n              examinationsCurrentPage.current = page;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1445,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1374,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a tab to display content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1454,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  if (authLoading || loadingInitial) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading administrator panel...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1462,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3\",\n        children: \"Loading administrator panel...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1464,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1460,\n      columnNumber: 7\n    }, this);\n  }\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-danger\",\n          children: \"Access Denied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead\",\n          children: \"You are not authorized to access this page. Please log in as an administrator.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1474,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1472,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1471,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alertType,\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n      style: {\n        zIndex: 1050\n      },\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1483,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showConfirmModal,\n      onHide: () => setShowConfirmModal(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: confirmTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1490,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: confirmMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowConfirmModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleConfirmAction,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1499,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1495,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1488,\n      columnNumber: 7\n    }, this), showDoctorModal && /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showDoctorModal,\n      onClose: () => {\n        setShowDoctorModal(false);\n        setEditingDoctor(null);\n      },\n      data: editingDoctor,\n      onSave: editingDoctor ? handleUpdateDoctor : handleAddDoctor,\n      title: editingDoctor ? 'Edit Doctor' : 'Add New Doctor',\n      idPrefix: \"doctor\",\n      fields: editingDoctor ? editDoctorFields : addDoctorFields,\n      onSuccess: () => fetchDoctors()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1506,\n      columnNumber: 9\n    }, this), showPatientModal && /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showPatientModal,\n      onClose: () => {\n        setShowPatientModal(false);\n        setEditingPatient(null);\n      },\n      data: editingPatient,\n      onSave: editingPatient ? handleUpdatePatient : handleAddPatient,\n      title: editingPatient ? 'Edit Patient' : 'Add New Patient',\n      idPrefix: \"patient\",\n      fields: editingPatient ? editPatientFields : addPatientFields,\n      onSuccess: () => fetchPatients()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1519,\n      columnNumber: 9\n    }, this), showTermModal && /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showTermModal,\n      onClose: () => {\n        setShowTermModal(false);\n        setEditingTerm(null);\n      },\n      data: editingTerm,\n      onSave: editingTerm ? handleUpdateTerm : handleAddTerm,\n      title: editingTerm ? 'Edit Term' : 'Add New Term',\n      idPrefix: \"term\",\n      fields: editingTerm ? editTermFields : addTermFields,\n      onSuccess: () => fetchTerms()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1532,\n      columnNumber: 9\n    }, this), showExaminationModal && /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showExaminationModal,\n      onClose: () => {\n        setShowExaminationModal(false);\n        setEditingExamination(null);\n      },\n      data: editingExamination,\n      onSave: handleUpdateExamination,\n      title: 'Edit Examination',\n      idPrefix: \"examination\",\n      fields: editExaminationFields,\n      onSuccess: () => fetchExaminations()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1545,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\",\n        style: {\n          minHeight: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky pt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'overview' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('overview'),\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1562,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1561,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'doctors' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('doctors'),\n                children: \"Doctors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1567,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1566,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'patients' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('patients'),\n                children: \"Patients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1572,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1571,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'terms' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('terms'),\n                children: \"Terms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1577,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1576,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'examinations' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('examinations'),\n                children: \"Examinations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1582,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1581,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1560,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1590,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1557,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1481,\n    columnNumber: 5\n  }, this);\n}\n_s2(AdminDashboard, \"zlnKe5ORTewohEo9d8sCrls6yuU=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","axios","useAuth","Modal","Button","Form","Alert","jsxDEV","_jsxDEV","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","AUTH_API_PREFIX","AdminDashboard","_s2","_s","$RefreshSig$","token","loading","authLoading","loadingInitial","setLoadingInitial","activeTab","setActiveTab","savedTab","localStorage","getItem","doctors","setDoctors","patients","setPatients","examinations","setExaminations","terms","setTerms","showDoctorModal","setShowDoctorModal","editingDoctor","setEditingDoctor","showPatientModal","setShowPatientModal","editingPatient","setEditingPatient","showTermModal","setShowTermModal","editingTerm","setEditingTerm","showExaminationModal","setShowExaminationModal","editingExamination","setEditingExamination","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","doctorSearchTerm","setDoctorSearchTerm","patientSearchTerm","setPatientSearchTerm","termSearchTerm","setTermSearchTerm","examinationSearchTerm","setExaminationSearchTerm","doctorsCurrentPage","setDoctorsCurrentPage","patientsCurrentPage","setPatientsCurrentPage","termsCurrentPage","setTermsCurrentPage","examinationsCurrentPage","itemsPerPage","showNotification","message","type","setTimeout","fetchDoctors","response","get","transformedDoctors","data","map","doc","id","doktorID","userId","name","ime","prezime","specialty","Array","isArray","specijalizacije","length","join","city","grad","email","telefon","radnoVrijeme","iskustvo","undefined","ocjena","error","_error$response","console","fetchPatients","transformedPatients","pat","pacijentID","phone","_error$response2","fetchTerms","transformedTerms","term","terminID","datum","vrijeme","statusTermina","_error$response3","fetchExaminations","transformedExaminations","app","pregledID","patientName","pacijentIme","doctorName","doktorIme","datumPregleda","vrijemePregleda","status","komentarPacijenta","ocjenaDoktora","_error$response4","log","initializeDashboard","Promise","all","warn","setItem","handleAddDoctor","newDoctorData","registerPayload","password","fullName","roles","authResponse","post","success","errorMessage","JSON","stringify","toLowerCase","includes","handleUpdateDoctor","updatedDoctor","doctorUpdatePayload","put","userUpdatePayload","showConfirmModal","setShowConfirmModal","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","confirmTitle","setConfirmTitle","showCustomConfirm","action","title","handleConfirmAction","handleDeleteDoctor","doctorToDelete","find","delete","_error$response5","_error$response6","_error$response6$data","openDoctorModal","doctor","filteredDoctors","filter","indexOfLastDoctor","indexOfFirstDoctor","currentDoctors","slice","totalDoctorPages","Math","ceil","handleAddPatient","newPatient","errors","passwordError","err","field","defaultMessage","handleUpdatePatient","updatedPatient","patientUpdatePayload","handleDeletePatient","patientToDelete","_error$response7","_error$response8","_error$response8$data","openPatientModal","patient","filteredPatients","indexOfLastPatient","indexOfFirstPatient","currentPatients","totalPatientPages","handleAddTerm","newTermData","termPayload","dostupnost","headers","Authorization","handleUpdateTerm","updatedTerm","handleDeleteTerm","_error$response9","_error$response0","_error$response0$data","openTermModal","substring","filteredTerms","toString","sort","a","b","dateComparison","localeCompare","indexOfLastTerm","indexOfFirstTerm","currentTerms","totalTermPages","handleUpdateExamination","updatedExamination","payload","handleDeleteExamination","_error$response1","_error$response10","_error$response10$dat","openExaminationModal","examination","filteredExaminations","exam","indexOfLastExamination","current","indexOfFirstExamination","currentExaminations","totalExaminationPages","addDoctorFields","label","required","options","editDoctorFields","readOnly","addPatientFields","editPatientFields","addTermFields","editTermFields","editExaminationFields","toLocalISOString","dateString","match","d","Date","setMinutes","getMinutes","getTimezoneOffset","toISOString","DataModal","show","onClose","onSave","fields","idPrefix","onSuccess","prevTerminIDRef","shouldFetchTermDetails","setShouldFetchTermDetails","formData","setFormData","localValidationErrors","setLocalValidationErrors","apiErrorMessage","setApiErrorMessage","newFormData","forEach","value","handleTerminIDBlur","currentTerminID","isNumericAndValidTerminID","prev","terminIDToFetch","fetchTermDetails","fetchedTerm","newState","handleChange","e","checked","target","newValue","Number","isNaN","handleSubmit","preventDefault","finalFormData","currentValidationErrors","trim","test","Object","keys","result","onHide","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Body","variant","className","Group","controlId","Label","Select","onChange","isInvalid","disabled","option","Control","as","rows","Check","onBlur","Feedback","Footer","onClick","Pagination","totalItems","currentPage","paginate","pageNumbers","i","push","number","renderContent","t","placeholder","colSpan","page","style","minHeight","role","dismissible","zIndex","href","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\r\n\r\nfunction AdminDashboard() {\r\n  const { token, loading: authLoading } = useAuth();\r\n  const [loadingInitial, setLoadingInitial] = useState(true);\r\n\r\n  const [activeTab, setActiveTab] = useState(() => {\r\n    const savedTab = localStorage.getItem('adminActiveTab');\r\n    return savedTab || 'overview';\r\n  });\r\n\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [examinations, setExaminations] = useState([]);\r\n  const [terms, setTerms] = useState([]);\r\n\r\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\r\n  const [editingDoctor, setEditingDoctor] = useState(null);\r\n  const [showPatientModal, setShowPatientModal] = useState(false);\r\n  const [editingPatient, setEditingPatient] = useState(null);\r\n  const [showTermModal, setShowTermModal] = useState(false);\r\n  const [editingTerm, setEditingTerm] = useState(null);\r\n  const [showExaminationModal, setShowExaminationModal] = useState(false);\r\n  const [editingExamination, setEditingExamination] = useState(null);\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [alertType, setAlertType] = useState('success');\r\n\r\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\r\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n  const [termSearchTerm, setTermSearchTerm] = useState('');\r\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\r\n\r\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\r\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\r\n  const [termsCurrentPage, setTermsCurrentPage] = useState(1);\r\n  const examinationsCurrentPage = useRef(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const showNotification = (message, type = 'success') => {\r\n    setAlertMessage(message);\r\n    setAlertType(type);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n      setAlertMessage('');\r\n    }, 3000);\r\n  };\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`);\r\n      const transformedDoctors = response.data.map(doc => ({\r\n        id: doc.doktorID,\r\n        userId: doc.userId,\r\n        name: `${doc.ime} ${doc.prezime}`,\r\n        ime: doc.ime,\r\n        prezime: doc.prezime,\r\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                   ? doc.specijalizacije.join(', ')\r\n                   : 'N/A',\r\n        specijalizacije: doc.specijalizacije,\r\n        city: doc.grad || 'N/A',\r\n        grad: doc.grad,\r\n        email: doc.email || 'N/A',\r\n        telefon: doc.telefon || 'N/A',\r\n        radnoVrijeme: doc.radnoVrijeme || '',\r\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : '',\r\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 0.0,\r\n      }));\r\n      setDoctors(transformedDoctors);\r\n    } catch (error) {\r\n      console.error(\"Error fetching doctors:\", error.response?.data || error.message);\r\n      showNotification(\"Error fetching doctors from server.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`);\r\n      const transformedPatients = response.data.map(pat => ({\r\n        id: pat.pacijentID,\r\n        userId: pat.userId,\r\n        name: `${pat.ime} ${pat.prezime}`,\r\n        ime: pat.ime,\r\n        prezime: pat.prezime,\r\n        email: pat.email || 'N/A',\r\n        phone: pat.telefon || 'N/A',\r\n        telefon: pat.telefon,\r\n      }));\r\n      setPatients(transformedPatients);\r\n    } catch (error) {\r\n      console.error(\"Error fetching patients:\", error.response?.data || error.message);\r\n      showNotification(\"Error fetching patients from server.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchTerms = async () => {\r\n    try {\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`);\r\n      const transformedTerms = response.data.map(term => ({\r\n        id: term.terminID,\r\n        doktorID: term.doktorID,\r\n        datum: term.datum, // Datum je već string \"YYYY-MM-DD\"\r\n        vrijeme: term.vrijeme, // Vrijeme je već string \"HH:mm:ss\"\r\n        statusTermina: term.statusTermina,\r\n      }));\r\n      setTerms(transformedTerms);\r\n    } catch (error) {\r\n      console.error(\"Error fetching terms:\", error.response?.data || error.message);\r\n      showNotification(\"Error fetching terms from server.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchExaminations = async () => {\r\n    try {\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`);\r\n      const transformedExaminations = response.data.map(app => ({\r\n        id: app.pregledID,\r\n        pacijentID: app.pacijentID,\r\n        doktorID: app.doktorID,\r\n        patientName: app.pacijentIme || 'N/A',\r\n        doctorName: app.doktorIme || 'N/A',\r\n        datumPregleda: app.datumPregleda, // Datum je već string \"YYYY-MM-DD\"\r\n        vrijemePregleda: app.vrijemePregleda, // Vrijeme je već string \"HH:mm:ss\"\r\n        status: app.status,\r\n        komentarPacijenta: app.komentarPacijenta || '',\r\n        ocjenaDoktora: app.ocjenaDoktora || null,\r\n        terminID: app.terminID !== null && app.terminID !== undefined ? app.terminID : 'N/A',\r\n      }));\r\n      setExaminations(transformedExaminations);\r\n    } catch (error) {\r\n      console.error(\"Error fetching examinations:\", error.response?.data || error.message);\r\n      showNotification(\"Error fetching examinations from server.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"AdminDashboard useEffect: token=\", token, \"authLoading=\", authLoading);\r\n\r\n    if (!authLoading) {\r\n      if (token) {\r\n        console.log(\"AdminDashboard useEffect: Autentifikacija završena, token dostupan. Pokrećem dohvat podataka.\");\r\n        const initializeDashboard = async () => {\r\n          try {\r\n            await Promise.all([\r\n              fetchDoctors(),\r\n              fetchPatients(),\r\n              fetchTerms(),\r\n              fetchExaminations()\r\n            ]);\r\n            showNotification(\"Dashboard data loaded successfully!\", \"success\");\r\n          } catch (error) {\r\n            console.error(\"Error during initial data fetch:\", error);\r\n            showNotification(\"Error loading initial data. Please try again.\", \"danger\");\r\n          } finally {\r\n            setLoadingInitial(false);\r\n          }\r\n        };\r\n        initializeDashboard();\r\n      } else {\r\n        console.warn(\"AdminDashboard useEffect: Token not available after auth loading finished. User not logged in/authorized.\");\r\n        setLoadingInitial(false);\r\n      }\r\n    }\r\n  }, [token, authLoading]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('adminActiveTab', activeTab);\r\n  }, [activeTab]);\r\n\r\n\r\n  const handleAddDoctor = async (newDoctorData) => {\r\n        try {\r\n          const registerPayload = {\r\n            email: newDoctorData.email,\r\n            password: newDoctorData.password,\r\n            fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\r\n            telefon: newDoctorData.telefon,\r\n            roles: [\"ROLE_DOKTOR\"],\r\n            grad: newDoctorData.grad,\r\n            specijalizacije: newDoctorData.specijalizacije,\r\n            radnoVrijeme: newDoctorData.radnoVrijeme,\r\n            iskustvo: newDoctorData.iskustvo,\r\n            ocjena: newDoctorData.ocjena || 0.0,\r\n          };\r\n\r\n          const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n          console.log(\"Auth Service Register Response Data:\", authResponse.data);\r\n\r\n          return { success: true, message: 'New doctor successfully registered!' };\r\n        } catch (error) {\r\n          console.error(\"Error adding doctor, full error object:\", error);\r\n          let errorMessage = 'Error adding doctor. Please check your input.';\r\n\r\n          if (error.response) {\r\n              console.log(\"Error.response:\", error.response);\r\n              console.log(\"Error.response.data:\", error.response.data);\r\n\r\n              if (typeof error.response.data === 'string') {\r\n                  errorMessage = error.response.data;\r\n              } else if (error.response.data.message) {\r\n                  errorMessage = error.response.data.message;\r\n              } else if (error.response.data.error) {\r\n                  errorMessage = error.response.data.error;\r\n              } else {\r\n                  errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\r\n              }\r\n          } else if (error.message) {\r\n              errorMessage = error.message; // Fixed: complete this line\r\n          } else {\r\n              errorMessage = \"An unexpected client-side error occurred.\";\r\n          }\r\n\r\n          if (errorMessage.toLowerCase().includes(\"email already exists\") || errorMessage.toLowerCase().includes(\"email već postoji\")) {\r\n              errorMessage = \"User with this email already exists.\";\r\n          } else if (errorMessage.toLowerCase().includes(\"password\") && errorMessage.toLowerCase().includes(\"size\")) {\r\n              errorMessage = \"Password must be at least 6 characters long.\";\r\n          } else if (errorMessage.toLowerCase().includes(\"bad request\") && errorMessage.toLowerCase().includes(\"validation failed\")) {\r\n              errorMessage = \"Validation error. Please check the entered data.\";\r\n          }\r\n\r\n          console.log(\"Final error message to display for doctor add:\", errorMessage);\r\n          return { success: false, message: errorMessage };\r\n        }\r\n      };\r\n\r\n       const handleUpdateDoctor = async (updatedDoctor) => {\r\n           try {\r\n             if (!updatedDoctor.id) {\r\n                 return { success: false, message: 'Doctor ID is missing for update.' };\r\n             }\r\n\r\n             const doctorUpdatePayload = {\r\n               ime: updatedDoctor.ime,\r\n               prezime: updatedDoctor.prezime,\r\n               email: updatedDoctor.email,\r\n               telefon: updatedDoctor.telefon,\r\n               grad: updatedDoctor.grad,\r\n               specijalizacije: updatedDoctor.specijalizacije,\r\n               radnoVrijeme: updatedDoctor.radnoVrijeme || '',\r\n               iskustvo: updatedDoctor.iskustvo !== null && updatedDoctor.iskustvo !== undefined ? updatedDoctor.iskustvo : 0,\r\n               ocjena: updatedDoctor.ocjena || 0.0,\r\n             };\r\n             await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, doctorUpdatePayload);\r\n\r\n             const userUpdatePayload = {\r\n               email: updatedDoctor.email,\r\n               fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\r\n               telefon: updatedDoctor.telefon,\r\n             };\r\n             if (updatedDoctor.userId) {\r\n                 await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload);\r\n             } else {\r\n                 console.warn(\"No userId found for user update in Auth service.\");\r\n             }\r\n\r\n             return { success: true, message: 'Doctor successfully updated!' };\r\n           } catch (error) {\r\n             console.error(\"Error updating doctor, full error object:\", error);\r\n             let errorMessage = 'Error updating doctor. Please check your input.';\r\n             if (error.response) {\r\n                 if (typeof error.response.data === 'string') {\r\n                     errorMessage = error.response.data;\r\n                 } else if (error.response.data.message) {\r\n                     errorMessage = error.response.data.message;\r\n                 } else if (error.response.data.error) {\r\n                     errorMessage = error.response.data.error;\r\n                 } else {\r\n                     errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\r\n                 }\r\n             } else if (error.message) {\r\n                 errorMessage = error.message; // Fixed: complete this line\r\n             } else {\r\n                 errorMessage = \"An unexpected client-side error occurred.\";\r\n             }\r\n             console.log(\"Final error message to display for doctor update:\", errorMessage);\r\n             return { success: false, message: errorMessage };\r\n           }\r\n         };\r\n\r\n         const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n         const [confirmAction, setConfirmAction] = useState(() => () => {});\r\n         const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n         const [confirmTitle, setConfirmTitle] = useState(\"Confirmation\");\r\n\r\n         const showCustomConfirm = (message, action, title = \"Confirmation\") => {\r\n           setConfirmMessage(message);\r\n           setConfirmAction(() => action);\r\n           setConfirmTitle(title);\r\n           setShowConfirmModal(true);\r\n         };\r\n\r\n         const handleConfirmAction = () => {\r\n           confirmAction();\r\n           setShowConfirmModal(false);\r\n         };\r\n\r\n         const handleDeleteDoctor = async (id) => {\r\n           showCustomConfirm(\r\n             'Are you sure you want to delete this doctor? This action will also delete the user account.',\r\n             async () => {\r\n               try {\r\n                 const doctorToDelete = doctors.find(doc => doc.id === id);\r\n                 if (!doctorToDelete || !doctorToDelete.userId) {\r\n                   showNotification('User ID not found for deleting doctor.', 'danger');\r\n                   return;\r\n                 }\r\n\r\n                 await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`);\r\n                 await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`);\r\n\r\n                 fetchDoctors();\r\n                 showNotification('Doctor successfully deleted!', 'danger');\r\n               } catch (error) {\r\n                 console.error(\"Error deleting doctor:\", error.response?.data || error.message);\r\n                 showNotification(error.response?.data?.message || 'Error deleting doctor.', \"danger\");\r\n               }\r\n             },\r\n             \"Confirm Doctor Deletion\"\r\n           );\r\n         };\r\n\r\n         const openDoctorModal = (doctor = null) => {\r\n           setEditingDoctor(doctor);\r\n           setShowDoctorModal(true);\r\n         };\r\n\r\n         const filteredDoctors = doctors.filter(doctor =>\r\n           doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           (doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n           (doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n           (doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()))\r\n         );\r\n         const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\r\n         const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\r\n         const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\r\n         const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\r\n\r\n         const handleAddPatient = async (newPatient) => {\r\n           try {\r\n             const registerPayload = {\r\n               email: newPatient.email,\r\n               password: newPatient.password,\r\n               fullName: `${newPatient.ime} ${newPatient.prezime}`,\r\n               telefon: newPatient.telefon,\r\n               roles: [\"ROLE_PACIJENT\"],\r\n               grad: null,\r\n               specijalizacije: null,\r\n               ocjena: null,\r\n               iskustvo: null,\r\n               radnoVrijeme: null,\r\n             };\r\n             const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n\r\n             return { success: true, message: 'New patient successfully registered!' };\r\n\r\n           } catch (error) {\r\n             console.error(\"Error adding patient, full error object:\", error);\r\n             let errorMessage = 'Error adding patient. Please check your input.';\r\n\r\n             if (error.response) {\r\n                if (Array.isArray(error.response.data.errors) && error.response.data.errors.length > 0) {\r\n                    const passwordError = error.response.data.errors.find(err => err.field === 'password');\r\n                    if (passwordError) {\r\n                        errorMessage = `Password: ${passwordError.defaultMessage || 'Invalid password.'}`;\r\n                    } else {\r\n                        errorMessage = error.response.data.errors.map(err => err.defaultMessage || err.field).join('; ');\r\n                    }\r\n                } else if (typeof error.response.data === 'string') {\r\n                    errorMessage = error.response.data;\r\n                } else if (error.response.data.message) {\r\n                    errorMessage = error.response.data.message;\r\n                } else if (error.response.data.error) {\r\n                    errorMessage = error.response.data.error;\r\n                } else {\r\n                    errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\r\n                }\r\n             } else if (error.message) {\r\n                errorMessage = error.message; // Fixed: complete this line\r\n             } else {\r\n                errorMessage = \"An unexpected client-side error occurred.\";\r\n             }\r\n\r\n             if (errorMessage.toLowerCase().includes(\"email already exists\") || errorMessage.toLowerCase().includes(\"email već postoji\")) {\r\n                 errorMessage = \"User with this email already exists.\";\r\n             } else if (errorMessage.toLowerCase().includes(\"password\") && errorMessage.toLowerCase().includes(\"size\")) {\r\n                 errorMessage = \"Password must be at least 6 characters long.\";\r\n             } else if (errorMessage.toLowerCase().includes(\"bad request\") && errorMessage.toLowerCase().includes(\"validation failed\")) {\r\n                 errorMessage = \"Validation error. Please check the entered data.\";\r\n             }\r\n\r\n             console.log(\"Final error message to display for patient add:\", errorMessage);\r\n             return { success: false, message: errorMessage };\r\n           }\r\n         };\r\n\r\n  const handleUpdatePatient = async (updatedPatient) => {\r\n    try {\r\n      const patientUpdatePayload = {\r\n        ime: updatedPatient.ime,\r\n        prezime: updatedPatient.prezime,\r\n        email: updatedPatient.email,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, patientUpdatePayload);\r\n\r\n      const userUpdatePayload = {\r\n        email: updatedPatient.email,\r\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      if (updatedPatient.userId) {\r\n          await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload);\r\n      } else {\r\n          console.warn(\"No userId found for user update in Auth service.\");\r\n      }\r\n\r\n      return { success: true, message: 'Patient successfully updated!' };\r\n    } catch (error) {\r\n      console.error(\"Error updating patient, full error object:\", error);\r\n      let errorMessage = 'Error updating patient. Please check your input.';\r\n      if (error.response) {\r\n          if (typeof error.response.data === 'string') {\r\n              errorMessage = error.response.data;\r\n          } else if (error.response.data.message) {\r\n              errorMessage = error.response.data.message;\r\n          } else if (error.response.data.error) {\r\n              errorMessage = error.response.data.error;\r\n          } else {\r\n              errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\r\n          }\r\n      } else if (error.message) {\r\n          errorMessage = error.message; // Fixed: complete this line\r\n      } else {\r\n          errorMessage = \"An unexpected client-side error occurred.\";\r\n      }\r\n      console.log(\"Final error message to display for patient update:\", errorMessage);\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  const handleDeletePatient = async (id) => {\r\n    showCustomConfirm(\r\n      'Are you sure you want to delete this patient? This action will also delete the user account.',\r\n      async () => {\r\n        try {\r\n          const patientToDelete = patients.find(pat => pat.id === id);\r\n          if (!patientToDelete || !patientToDelete.userId) {\r\n            showNotification('User ID not found for deleting patient.', 'danger');\r\n            return;\r\n          }\r\n\r\n          await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`);\r\n          await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`);\r\n\r\n          fetchPatients();\r\n          showNotification('Patient successfully deleted!', 'success');\r\n        } catch (error) {\r\n          console.error(\"Error deleting patient:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Error deleting patient.', \"danger\");\r\n        }\r\n      },\r\n      \"Confirm Patient Deletion\"\r\n    );\r\n  };\r\n\r\n  const openPatientModal = (patient = null) => {\r\n    setEditingPatient(patient);\r\n    setShowPatientModal(true);\r\n  };\r\n\r\n  const filteredPatients = patients.filter(patient =>\r\n    patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\r\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\r\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\r\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\r\n\r\n  const handleAddTerm = async (newTermData) => {\r\n    try {\r\n      // Provjera da li doktorID postoji\r\n      if (!newTermData.doktorID) {\r\n        return { success: false, message: 'Doctor ID is required to add a term.' };\r\n      }\r\n\r\n      // Priprema payloada sa validnim statusom termina\r\n      const termPayload = {\r\n        doktorID: newTermData.doktorID,\r\n        datum: newTermData.datum,\r\n        vrijeme: newTermData.vrijeme,\r\n        statusTermina: newTermData.statusTermina || (newTermData.dostupnost ? 'DOSTUPAN' : 'ZAKAZAN')\r\n      };\r\n\r\n      // Slanje zahtjeva sa Authorization headerom\r\n      const response = await axios.post(\r\n        `${TERMINI_PREGLEDI_API_PREFIX}/api/termini`,\r\n        termPayload,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        }\r\n      );\r\n\r\n      showNotification(\"New term successfully added!\", \"success\");\r\n      fetchTerms(); // osvježi termine\r\n      return { success: true, message: 'New term successfully added!' };\r\n\r\n    } catch (error) {\r\n      console.error(\"Error adding term, full error object:\", error);\r\n      let errorMessage = 'Error adding term. Please check your input.';\r\n\r\n      if (error.response) {\r\n        if (typeof error.response.data === 'string') {\r\n          errorMessage = error.response.data;\r\n        } else if (error.response.data.message) {\r\n          errorMessage = error.response.data.message;\r\n        } else if (error.response.data.error) {\r\n          errorMessage = error.response.data.error;\r\n        } else {\r\n          errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\r\n        }\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      } else {\r\n        errorMessage = \"An unexpected client-side error occurred.\";\r\n      }\r\n\r\n      showNotification(errorMessage, \"danger\");\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n\r\n  const handleUpdateTerm = async (updatedTerm) => {\r\n    try {\r\n      if (!updatedTerm.id || !updatedTerm.doktorID) {\r\n        return { success: false, message: 'Term ID and Doctor ID are required for update.' };\r\n      }\r\n\r\n      const termPayload = {\r\n        doktorID: updatedTerm.doktorID,\r\n        datum: updatedTerm.datum,\r\n        vrijeme: updatedTerm.vrijeme,\r\n        statusTermina: updatedTerm.statusTermina || (updatedTerm.dostupnost ? 'DOSTUPAN' : 'ZAKAZAN')\r\n      };\r\n\r\n      await axios.put(\r\n        `${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${updatedTerm.id}`,\r\n        termPayload,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        }\r\n      );\r\n\r\n      showNotification(\"Term successfully updated!\", \"success\");\r\n      fetchTerms();\r\n      return { success: true, message: 'Term successfully updated!' };\r\n\r\n    } catch (error) {\r\n      console.error(\"Error updating term, full error object:\", error);\r\n      let errorMessage = 'Error updating term. Please check your input.';\r\n\r\n      if (error.response) {\r\n        if (typeof error.response.data === 'string') {\r\n          errorMessage = error.response.data;\r\n        } else if (error.response.data.message) {\r\n          errorMessage = error.response.data.message;\r\n        } else if (error.response.data.error) {\r\n          errorMessage = error.response.data.error;\r\n        } else {\r\n          errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\r\n        }\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      } else {\r\n        errorMessage = \"An unexpected client-side error occurred.\";\r\n      }\r\n\r\n      showNotification(errorMessage, \"danger\");\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n\r\n  const handleDeleteTerm = async (id) => {\r\n    showCustomConfirm(\r\n      'Are you sure you want to delete this term?',\r\n      async () => {\r\n        try {\r\n          await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${id}`);\r\n          showNotification('Term successfully deleted!', 'success');\r\n          fetchTerms();\r\n        } catch (error) {\r\n          console.error(\"Error deleting term:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Error deleting term.', \"danger\");\r\n        }\r\n      },\r\n      \"Confirm Term Deletion\"\r\n    );\r\n  };\r\n\r\n  const openTermModal = (term = null) => {\r\n    if (term) {\r\n        setEditingTerm({\r\n          ...term,\r\n          datum: term.datum, // Datum je već string\r\n          vrijeme: term.vrijeme ? term.vrijeme.substring(0, 5) : '', // Vrijeme je string, skratimo na HH:mm\r\n          statusTermina: term.statusTermina,\r\n        });\r\n    } else {\r\n        setEditingTerm(null);\r\n    }\r\n    setShowTermModal(true);\r\n  };\r\n\r\n  const filteredTerms = terms.filter(term =>\r\n    (term.doktorID != null && term.doktorID.toString().toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.datum && term.datum.toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.vrijeme && term.vrijeme.toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.statusTermina && term.statusTermina.toLowerCase().includes(termSearchTerm.toLowerCase()))\r\n  ).sort((a, b) => { // Sortiranje po datumu i vremenu\r\n        const dateComparison = a.datum.localeCompare(b.datum);\r\n        if (dateComparison !== 0) {\r\n            return dateComparison;\r\n        }\r\n        return a.vrijeme.localeCompare(b.vrijeme);\r\n    });\r\n\r\n  const indexOfLastTerm = termsCurrentPage * itemsPerPage;\r\n  const indexOfFirstTerm = indexOfLastTerm - itemsPerPage;\r\n  const currentTerms = filteredTerms.slice(indexOfFirstTerm, indexOfLastTerm);\r\n  const totalTermPages = Math.ceil(filteredTerms.length / itemsPerPage);\r\n\r\n  const handleUpdateExamination = async (updatedExamination) => {\r\n    try {\r\n      if (!updatedExamination.id) {\r\n        return { success: false, message: 'Examination ID is missing for update.' };\r\n      }\r\n      const payload = {\r\n        pacijentID: updatedExamination.pacijentID,\r\n        doktorID: updatedExamination.doktorID,\r\n        terminID: updatedExamination.terminID,\r\n        datumPregleda: updatedExamination.datumPregleda,\r\n        vrijemePregleda: updatedExamination.vrijemePregleda,\r\n        status: updatedExamination.status,\r\n        komentarPacijenta: updatedExamination.komentarPacijenta,\r\n        ocjenaDoktora: updatedExamination.ocjenaDoktora\r\n      };\r\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${updatedExamination.id}`, payload);\r\n      return { success: true, message: 'Examination successfully updated!' };\r\n    } catch (error) {\r\n      console.error(\"Error updating examination, full error object:\", error);\r\n      let errorMessage = 'Error updating examination. Please check your input.';\r\n      if (error.response) {\r\n          if (typeof error.response.data === 'string') {\r\n              errorMessage = error.response.data;\r\n          } else if (error.response.data.message) {\r\n              errorMessage = error.response.data.message;\r\n          } else if (error.response.data.error) {\r\n              errorMessage = error.response.data.error;\r\n          } else {\r\n              errorMessage = \"Unknown backend error: \" + JSON.stringify(error.response.data);\r\n          }\r\n      } else if (error.message) {\r\n          errorMessage = error.message;\r\n      } else {\r\n          errorMessage = \"An unexpected client-side error occurred.\";\r\n      }\r\n      console.log(\"Final error message to display for examination update:\", errorMessage);\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  const handleDeleteExamination = async (id) => {\r\n    showCustomConfirm(\r\n      'Are you sure you want to delete this examination?',\r\n      async () => {\r\n        try {\r\n          await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`);\r\n          showNotification('Examination successfully deleted!', 'success');\r\n          fetchExaminations();\r\n        } catch (error) {\r\n          console.error(\"Error deleting examination:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Error deleting examination.', \"danger\");\r\n        }\r\n      },\r\n      \"Confirm Examination Deletion\"\r\n    );\r\n  };\r\n\r\n  const openExaminationModal = (examination) => {\r\n    setEditingExamination({\r\n        ...examination,\r\n        pacijentID: examination.pacijentID,\r\n        doktorID: examination.doktorID,\r\n        terminID: examination.terminID,\r\n        datumPregleda: examination.datumPregleda,\r\n        vrijemePregleda: examination.vrijemePregleda\r\n    });\r\n    setShowExaminationModal(true);\r\n  };\r\n\r\n  const filteredExaminations = examinations.filter(exam =>\r\n    (exam.patientName && exam.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.doctorName && exam.doctorName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.status && exam.status.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.datumPregleda && exam.datumPregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.vrijemePregleda && exam.vrijemePregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastExamination = examinationsCurrentPage.current * itemsPerPage;\r\n  const indexOfFirstExamination = indexOfLastExamination - itemsPerPage;\r\n  const currentExaminations = filteredExaminations.slice(indexOfFirstExamination, indexOfLastExamination);\r\n  const totalExaminationPages = Math.ceil(filteredExaminations.length / itemsPerPage);\r\n\r\n  const addDoctorFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: true },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Working Hours', type: 'text' },\r\n      { name: 'iskustvo', label: 'Years of Experience', type: 'number' },\r\n  ];\r\n\r\n  const editDoctorFields = [\r\n      { name: 'id', label: 'Doctor ID', type: 'text', readOnly: true },\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: true }, // FIXED: type 'true' to 'text'\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Working Hours', type: 'text' },\r\n      { name: 'iskustvo', label: 'Years of Experience', type: 'number' },\r\n      { name: 'ocjena', label: 'Rating', type: 'number', readOnly: true },\r\n  ];\r\n\r\n  const addPatientFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: true },\r\n  ];\r\n\r\n  const editPatientFields = [\r\n      { name: 'id', label: 'Patient ID', type: 'text', readOnly: true },\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: true },\r\n  ];\r\n\r\n  const addTermFields = [\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true },\r\n      { name: 'datum', label: 'Date', type: 'date', required: true },\r\n      { name: 'vrijeme', label: 'Time (HH:mm)', type: 'time', required: true },\r\n      { name: 'statusTermina', label: 'Status', type: 'select', options: ['DOSTUPAN', 'ZAKAZAN', 'OTKAZAN'], required: true },\r\n  ];\r\n\r\n  const editTermFields = [\r\n      { name: 'id', label: 'Term ID', type: 'text', readOnly: true },\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true },\r\n      { name: 'datum', label: 'Date', type: 'date', required: true },\r\n      { name: 'vrijeme', label: 'Time (HH:mm)', type: 'time', required: true },\r\n      { name: 'statusTermina', label: 'Status', type: 'select', options: ['DOSTUPAN', 'ZAKAZAN', 'OTKAZAN'], required: true },\r\n  ];\r\n\r\n  const editExaminationFields = [\r\n      { name: 'id', label: 'Examination ID', type: 'text', readOnly: true },\r\n      { name: 'pacijentID', label: 'Patient ID', type: 'number', required: true, readOnly: true },\r\n      { name: 'terminID', label: 'Term ID', type: 'number', required: true, readOnly: true },\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true, readOnly: true },\r\n      { name: 'datumPregleda', label: 'Examination Date', type: 'date', required: true, readOnly: true },\r\n      { name: 'vrijemePregleda', label: 'Examination Time', type: 'time', required: true, readOnly: true },\r\n      { name: 'status', label: 'Status', type: 'select', options: ['zakazan', 'obavljen', 'otkazan'], required: true },\r\n      { name: 'komentarPacijenta', label: 'Patient Comment', type: 'textarea' },\r\n      { name: 'ocjenaDoktora', label: 'Doctor Rating', type: 'number' },\r\n  ];\r\n\r\n  const toLocalISOString = (dateString) => {\r\n      if (!dateString) return '';\r\n      if (dateString.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\r\n          return dateString;\r\n      }\r\n      const d = new Date(dateString);\r\n      d.setMinutes(d.getMinutes() - d.getTimezoneOffset());\r\n      return d.toISOString().slice(0, 10);\r\n  };\r\n\r\n  const DataModal = ({ show, onClose, data, onSave, fields, title, idPrefix, onSuccess }) => {\r\n    const prevTerminIDRef = useRef(null);\r\n    const [shouldFetchTermDetails, setShouldFetchTermDetails] = useState(false);\r\n    const [formData, setFormData] = useState({});\r\n\r\n    const [localValidationErrors, setLocalValidationErrors] = useState({});\r\n    const [apiErrorMessage, setApiErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const newFormData = {};\r\n        fields.forEach(field => {\r\n            if (data === null || data[field.name] === undefined || data[field.name] === null) {\r\n                if (field.name === 'specijalizacije') {\r\n                    newFormData[field.name] = '';\r\n                } else if (field.type === 'number') {\r\n                    newFormData[field.name] = null;\r\n                } else if (field.name === 'statusTermina') {\r\n                    newFormData[field.name] = 'DOSTUPAN';\r\n                } else {\r\n                    newFormData[field.name] = '';\r\n                }\r\n            } else {\r\n                let value = data[field.name];\r\n                if (field.type === 'date' && typeof value === 'string') {\r\n                    value = toLocalISOString(value);\r\n                } else if (field.type === 'time' && typeof value === 'string' && value.length >= 5) {\r\n                    value = value.substring(0, 5);\r\n                } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\r\n                    value = value[0] || '';\r\n                }\r\n                newFormData[field.name] = value;\r\n            }\r\n        });\r\n        setFormData(newFormData);\r\n        prevTerminIDRef.current = (idPrefix === 'examination' && data && typeof data.terminID === 'number' && data.terminID > 0) ? data.terminID : null;\r\n        setShouldFetchTermDetails(false);\r\n        setLocalValidationErrors({});\r\n        setApiErrorMessage('');\r\n    }, [data, fields, idPrefix]);\r\n\r\n    const handleTerminIDBlur = () => {\r\n        if (idPrefix === 'examination') {\r\n            const currentTerminID = formData.terminID;\r\n            const isNumericAndValidTerminID = typeof currentTerminID === 'number' && currentTerminID > 0;\r\n\r\n            if (isNumericAndValidTerminID && currentTerminID !== prevTerminIDRef.current) {\r\n                setShouldFetchTermDetails(true);\r\n            } else if (!isNumericAndValidTerminID && prevTerminIDRef.current !== null) {\r\n                setFormData(prev => ({\r\n                    ...prev,\r\n                    doktorID: null,\r\n                    datumPregleda: '',\r\n                    vrijemePregleda: '',\r\n                }));\r\n                prevTerminIDRef.current = null;\r\n                setShouldFetchTermDetails(false);\r\n            } else if (currentTerminID === null || currentTerminID === 0 || currentTerminID === '') {\r\n                if (formData.doktorID !== null || formData.datumPregleda !== '' || formData.vrijemePregleda !== '') {\r\n                    setFormData(prev => ({\r\n                        ...prev,\r\n                        doktorID: null,\r\n                        datumPregleda: '',\r\n                        vrijemePregleda: '',\r\n                    }));\r\n                }\r\n                prevTerminIDRef.current = null;\r\n                setShouldFetchTermDetails(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (shouldFetchTermDetails && idPrefix === 'examination') {\r\n            const terminIDToFetch = formData.terminID;\r\n            if (!(typeof terminIDToFetch === 'number' && terminIDToFetch > 0)) {\r\n                setShouldFetchTermDetails(false);\r\n                return;\r\n            }\r\n\r\n            const fetchTermDetails = async () => {\r\n                try {\r\n                    const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${terminIDToFetch}`);\r\n                    const fetchedTerm = response.data;\r\n\r\n                    setFormData(prev => {\r\n                        const newState = {\r\n                            ...prev,\r\n                            doktorID: fetchedTerm.doktorID,\r\n                            datumPregleda: toLocalISOString(fetchedTerm.datum),\r\n                            vrijemePregleda: fetchedTerm.vrijeme.substring(0, 5),\r\n                        };\r\n                        return newState;\r\n                    });\r\n                    prevTerminIDRef.current = terminIDToFetch;\r\n                } catch (error) {\r\n                    setApiErrorMessage('Error fetching term details. Check Term ID.');\r\n                    setFormData(prev => ({\r\n                        ...prev,\r\n                        doktorID: null,\r\n                        datumPregleda: '',\r\n                        vrijemePregleda: '',\r\n                    }));\r\n                    prevTerminIDRef.current = null;\r\n                } finally {\r\n                    setShouldFetchTermDetails(false);\r\n                }\r\n            };\r\n            fetchTermDetails();\r\n        }\r\n    }, [shouldFetchTermDetails, idPrefix, TERMINI_PREGLEDI_API_PREFIX, formData.terminID]);\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value, type, checked } = e.target;\r\n\r\n      setLocalValidationErrors(prev => {\r\n          const newState = { ...prev };\r\n          delete newState[name];\r\n          return newState;\r\n      });\r\n      setApiErrorMessage('');\r\n\r\n      setFormData(prev => {\r\n        let newValue = value;\r\n\r\n        if (name === 'specijalizacije') {\r\n            newValue = value;\r\n        } else if (type === 'number') {\r\n            newValue = value === '' ? null : Number(value);\r\n            if (isNaN(newValue)) {\r\n                newValue = null;\r\n            }\r\n        } else if (type === 'checkbox') {\r\n            newValue = checked;\r\n        } else if (type === 'date') {\r\n            newValue = value;\r\n        }\r\n        const newState = { ...prev, [name]: newValue };\r\n        return newState;\r\n      });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      setLocalValidationErrors({});\r\n      setApiErrorMessage('');\r\n\r\n      const finalFormData = { ...formData };\r\n\r\n      if (idPrefix === 'doctor' && typeof finalFormData.specijalizacije === 'string') {\r\n          finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\r\n      } else if (idPrefix === 'doctor' && finalFormData.specijalizacije === null) {\r\n          finalFormData.specijalizacije = [];\r\n      }\r\n\r\n      let currentValidationErrors = {};\r\n      fields.forEach(field => {\r\n        if (field.required) {\r\n          if (field.type === 'text' || field.type === 'textarea' || field.type === 'date' || field.type === 'time' || field.type === 'select') {\r\n            if (!finalFormData[field.name] || finalFormData[field.name].toString().trim() === '') {\r\n              currentValidationErrors[field.name] = `${field.label} is a required field.`;\r\n            }\r\n          } else if (field.type === 'number') {\r\n            if (finalFormData[field.name] === null || finalFormData[field.name] === undefined || typeof finalFormData[field.name] !== 'number') {\r\n                currentValidationErrors[field.name] = `${field.label} is a required field and must be a valid number.`;\r\n            } else if (field.name === 'iskustvo' && finalFormData[field.name] < 0) {\r\n                 currentValidationErrors[field.name] = `Years of experience cannot be negative.`;\r\n            } else if (field.name === 'ocjena' && (finalFormData[field.name] < 0 || finalFormData[field.name] > 5)) {\r\n                 currentValidationErrors[field.name] = `Rating must be between 0 and 5.`;\r\n            }\r\n          } else if (field.type === 'email') {\r\n              if (!finalFormData[field.name] || !/\\S+@\\S+\\.\\S+/.test(finalFormData[field.name])) {\r\n                  currentValidationErrors[field.name] = `Email address must be valid.`;\r\n              }\r\n          } else if (field.name === 'password') {\r\n             if (!finalFormData[field.name] || finalFormData[field.name].toString().length < 6) {\r\n                 currentValidationErrors[field.name] = `Password must be at least 6 characters long.`;\r\n             }\r\n          }\r\n        }\r\n        if (field.type === 'email' && finalFormData[field.name] && finalFormData[field.name].trim() !== '' && !/\\S+@\\S+\\.\\S+/.test(finalFormData[field.name])) {\r\n            currentValidationErrors[field.name] = `Email address must be valid.`;\r\n        }\r\n      });\r\n\r\n      setLocalValidationErrors(currentValidationErrors);\r\n\r\n      if (Object.keys(currentValidationErrors).length > 0) {\r\n        setApiErrorMessage('Please correct the errors in the form.');\r\n        return;\r\n      }\r\n\r\n      fields.forEach(field => {\r\n          if (field.type === 'number' && (finalFormData[field.name] === null || finalFormData[field.name] === undefined || finalFormData[field.name] === '')) {\r\n              if (field.name === 'iskustvo' || field.name === 'ocjena') {\r\n                  finalFormData[field.name] = 0;\r\n              } else {\r\n                  finalFormData[field.name] = null;\r\n              }\r\n          }\r\n      });\r\n\r\n      if (idPrefix === 'term' && finalFormData.vrijeme) {\r\n          if (finalFormData.vrijeme.length === 5) {\r\n              finalFormData.vrijeme += ':00';\r\n          }\r\n      } else if (idPrefix === 'examination' && finalFormData.vrijemePregleda) {\r\n          if (finalFormData.vrijemePregleda.length === 5) {\r\n              finalFormData.vrijemePregleda += ':00';\r\n          }\r\n      }\r\n\r\n      const result = await onSave(finalFormData);\r\n      if (!result.success) {\r\n          setApiErrorMessage(result.message);\r\n      } else {\r\n           showNotification(result.message, 'success');\r\n           onClose();\r\n           if (onSuccess) onSuccess();\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Modal show={show} onHide={onClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body>\r\n            {apiErrorMessage && (\r\n              <Alert variant=\"danger\" className=\"mb-3\">\r\n                {apiErrorMessage}\r\n              </Alert>\r\n            )}\r\n            {fields.map(field => (\r\n              <Form.Group className=\"mb-3\" controlId={`${idPrefix}-${field.name}`} key={field.name}>\r\n                <Form.Label>{field.label}</Form.Label>\r\n                {field.type === 'select' ? (\r\n                  <Form.Select\r\n                    name={field.name}\r\n                    value={formData[field.name] === null ? '' : formData[field.name]}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                    isInvalid={!!localValidationErrors[field.name]}\r\n                    readOnly={field.readOnly}\r\n                    disabled={field.readOnly}\r\n                  >\r\n                    <option value=\"\">Select {field.label}</option>\r\n                    {field.options.map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                ) : field.type === 'textarea' ? (\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    name={field.name}\r\n                    value={formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                    isInvalid={!!localValidationErrors[field.name]}\r\n                    readOnly={field.readOnly}\r\n                    disabled={field.readOnly}\r\n                  />\r\n                ) : field.type === 'checkbox' ? (\r\n                    <Form.Check\r\n                        type=\"checkbox\"\r\n                        name={field.name}\r\n                        checked={formData[field.name] || false}\r\n                        onChange={handleChange}\r\n                        label={field.label}\r\n                        readOnly={field.readOnly}\r\n                        disabled={field.readOnly}\r\n                    />\r\n                ) : (\r\n                  <Form.Control\r\n                    type={field.type || 'text'}\r\n                    name={field.name}\r\n                    value={\r\n                        (formData[field.name] === null || formData[field.name] === undefined || formData[field.name] === 'N/A')\r\n                        ? ''\r\n                        : formData[field.name]\r\n                    }\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                    readOnly={field.readOnly || (idPrefix === 'examination' && (field.name === 'doktorID' || field.name === 'datumPregleda' || field.name === 'vrijemePregleda'))}\r\n                    disabled={field.readOnly || (idPrefix === 'examination' && (field.name === 'doktorID' || field.name === 'datumPregleda' || field.name === 'vrijemePregleda'))}\r\n                    onBlur={field.name === 'terminID' && idPrefix === 'examination' ? handleTerminIDBlur : undefined}\r\n                    isInvalid={!!localValidationErrors[field.name]}\r\n                  />\r\n                )}\r\n                {localValidationErrors[field.name] && (\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {localValidationErrors[field.name]}\r\n                  </Form.Control.Feedback>\r\n                )}\r\n              </Form.Group>\r\n            ))}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination justify-content-center mt-4\">\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n              <button onClick={() => paginate(number)} className=\"page-link\">\r\n                {number}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (activeTab) {\r\n      case 'overview':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Dashboard Overview</h4>\r\n            <div className=\"row g-4\">\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-primary mb-3\">\r\n                  <div className=\"card-header\">Total Doctors</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{doctors.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-success mb-3\">\r\n                  <div className=\"card-header\">Total Patients</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{patients.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-info mb-3\">\r\n                  <div className=\"card-header\">Available Terms</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{terms.filter(t => t.statusTermina === 'DOSTUPAN').length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-warning mb-3\">\r\n                  <div className=\"card-header\">Pending Examinations</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{examinations.filter(exam => exam.status === 'zakazan').length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h5>Quick Actions</h5>\r\n              <div className=\"d-flex gap-2 flex-wrap\">\r\n                <button className=\"btn btn-outline-primary\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n                <button className=\"btn btn-outline-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n                <button className=\"btn btn-outline-info\" onClick={() => openTermModal()}>Add New Term</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'doctors':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Doctor Management</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search doctors...\"\r\n                value={doctorSearchTerm}\r\n                onChange={(e) => setDoctorSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Specialty</th>\r\n                    <th>City</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Working Hours</th>\r\n                    <th>Experience</th>\r\n                    <th>Rating</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentDoctors.length > 0 ? (\r\n                    currentDoctors.map(doctor => (\r\n                      <tr key={doctor.id}>\r\n                        <td>{doctor.id}</td>\r\n                        <td>{doctor.name}</td>\r\n                        <td>{doctor.specialty}</td>\r\n                        <td>{doctor.city}</td>\r\n                        <td>{doctor.email}</td>\r\n                        <td>{doctor.telefon}</td>\r\n                        <td>{doctor.radnoVrijeme}</td>\r\n                        <td>{doctor.iskustvo}</td>\r\n                        <td>{doctor.ocjena}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openDoctorModal(doctor)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteDoctor(doctor.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"10\" className=\"text-center\">No doctors found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredDoctors.length}\r\n              currentPage={doctorsCurrentPage}\r\n              paginate={setDoctorsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'patients':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Patient Management</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search patients...\"\r\n                value={patientSearchTerm}\r\n                onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentPatients.length > 0 ? (\r\n                    currentPatients.map(patient => (\r\n                      <tr key={patient.id}>\r\n                        <td>{patient.id}</td>\r\n                        <td>{patient.name}</td>\r\n                        <td>{patient.email}</td>\r\n                        <td>{patient.telefon}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openPatientModal(patient)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeletePatient(patient.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"text-center\">No patients found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredPatients.length}\r\n              currentPage={patientsCurrentPage}\r\n              paginate={setPatientsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'terms':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Term Management</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openTermModal()}>Add New Term</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search terms...\"\r\n                value={termSearchTerm}\r\n                onChange={(e) => setTermSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Doctor ID</th>\r\n                    <th>Date</th>\r\n                    <th>Time</th>\r\n                    <th>Status</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentTerms.length > 0 ? (\r\n                    currentTerms.map(term => (\r\n                      <tr key={term.id}>\r\n                        <td>{term.id}</td>\r\n                        <td>{term.doktorID}</td>\r\n                        <td>{term.datum}</td>\r\n                        <td>{term.vrijeme ? term.vrijeme.substring(0, 5) : 'N/A'}</td>\r\n                        <td>{term.statusTermina}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openTermModal(term)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteTerm(term.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"6\" className=\"text-center\">No terms found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredTerms.length}\r\n              currentPage={termsCurrentPage}\r\n              paginate={setTermsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'examinations':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Examination Management</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search examinations...\"\r\n                value={examinationSearchTerm}\r\n                onChange={(e) => setExaminationSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Patient</th>\r\n                    <th>Doctor</th>\r\n                    <th>Term ID</th>\r\n                    <th>Date</th>\r\n                    <th>Time</th>\r\n                    <th>Status</th>\r\n                    <th>Patient Comment</th>\r\n                    <th>Doctor Rating</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentExaminations.length > 0 ? (\r\n                    currentExaminations.map(examination => (\r\n                      <tr key={examination.id}>\r\n                        <td>{examination.id}</td>\r\n                        <td>{examination.patientName}</td>\r\n                        <td>{examination.doctorName}</td>\r\n                        <td>{examination.terminID}</td>\r\n                        <td>{examination.datumPregleda}</td>\r\n                        <td>{examination.vrijemePregleda ? examination.vrijemePregleda.substring(0, 5) : 'N/A'}</td>\r\n                        <td>\r\n                          <select\r\n                            className=\"form-select\"\r\n                            value={examination.status}\r\n                            onChange={(e) => handleUpdateExamination(\r\n                                {\r\n                                  ...examination,\r\n                                  status: e.target.value,\r\n                                  datumPregleda: examination.datumPregleda,\r\n                                  vrijemePregleda: examination.vrijemePregleda\r\n                                }\r\n                            )}\r\n                          >\r\n                            <option value=\"zakazan\">Scheduled</option>\r\n                            <option value=\"obavljen\">Completed</option>\r\n                            <option value=\"otkazan\">Cancelled</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>{examination.komentarPacijenta}</td>\r\n                        <td>{examination.ocjenaDoktora}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openExaminationModal(examination)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteExamination(examination.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"10\" className=\"text-center\">No examinations found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredExaminations.length}\r\n              currentPage={examinationsCurrentPage.current}\r\n              paginate={(page) => { examinationsCurrentPage.current = page; }}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return <p>Select a tab to display content.</p>;\r\n    }\r\n  };\r\n\r\n  if (authLoading || loadingInitial) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading administrator panel...</span>\r\n        </div>\r\n        <p className=\"ms-3\">Loading administrator panel...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!token) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-danger\">Access Denied</h2>\r\n          <p className=\"lead\">You are not authorized to access this page. Please log in as an administrator.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {showAlert && (\r\n        <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      <Modal show={showConfirmModal} onHide={() => setShowConfirmModal(false)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{confirmTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {confirmMessage}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowConfirmModal(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleConfirmAction}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {showDoctorModal && (\r\n        <DataModal\r\n          show={showDoctorModal}\r\n          onClose={() => {setShowDoctorModal(false); setEditingDoctor(null);}}\r\n          data={editingDoctor}\r\n          onSave={editingDoctor ? handleUpdateDoctor : handleAddDoctor}\r\n          title={editingDoctor ? 'Edit Doctor' : 'Add New Doctor'}\r\n          idPrefix=\"doctor\"\r\n          fields={editingDoctor ? editDoctorFields : addDoctorFields}\r\n          onSuccess={() => fetchDoctors()}\r\n        />\r\n      )}\r\n\r\n      {showPatientModal && (\r\n        <DataModal\r\n          show={showPatientModal}\r\n          onClose={() => {setShowPatientModal(false); setEditingPatient(null);}}\r\n          data={editingPatient}\r\n          onSave={editingPatient ? handleUpdatePatient : handleAddPatient}\r\n          title={editingPatient ? 'Edit Patient' : 'Add New Patient'}\r\n          idPrefix=\"patient\"\r\n          fields={editingPatient ? editPatientFields : addPatientFields}\r\n          onSuccess={() => fetchPatients()}\r\n        />\r\n      )}\r\n\r\n      {showTermModal && (\r\n        <DataModal\r\n          show={showTermModal}\r\n          onClose={() => {setShowTermModal(false); setEditingTerm(null);}}\r\n          data={editingTerm}\r\n          onSave={editingTerm ? handleUpdateTerm : handleAddTerm}\r\n          title={editingTerm ? 'Edit Term' : 'Add New Term'}\r\n          idPrefix=\"term\"\r\n          fields={editingTerm ? editTermFields : addTermFields}\r\n          onSuccess={() => fetchTerms()}\r\n        />\r\n      )}\r\n\r\n      {showExaminationModal && (\r\n        <DataModal\r\n          show={showExaminationModal}\r\n          onClose={() => {setShowExaminationModal(false); setEditingExamination(null);}}\r\n          data={editingExamination}\r\n          onSave={handleUpdateExamination}\r\n          title={'Edit Examination'}\r\n          idPrefix=\"examination\"\r\n          fields={editExaminationFields}\r\n          onSuccess={() => fetchExaminations()}\r\n        />\r\n      )}\r\n\r\n      <div className=\"row\">\r\n        <nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" style={{ minHeight: '100vh' }}>\r\n          <div className=\"position-sticky pt-3\">\r\n            <ul className=\"nav flex-column\">\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'overview' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('overview')}>\r\n                  Overview\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'doctors' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('doctors')}>\r\n                  Doctors\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'patients' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('patients')}>\r\n                  Patients\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'terms' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('terms')}>\r\n                  Terms\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'examinations' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('examinations')}>\r\n                  Examinations\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\">\r\n          {renderContent()}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}