{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/termini-pregledi`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`; // Base URL for Auth Service endpoints\n\nfunction AdminDashboard() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    token\n  } = useAuth();\n  const authHeaders = {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  const [activeTab, setActiveTab] = useState('overview');\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\n  const [editingDoctor, setEditingDoctor] = useState(null);\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\n  const [appointmentsCurrentPage, setAppointmentsCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: doc.userId,\n        // Uključi userId za Auth service operacije\n        name: `${doc.ime} ${doc.prezime}`,\n        ime: doc.ime,\n        // Zadrži pojedinačne dijelove imena za ažuriranje\n        prezime: doc.prezime,\n        // Zadrži pojedinačne dijelove imena za ažuriranje\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        specijalizacije: doc.specijalizacije,\n        // Zadrži originalnu listu za ažuriranje\n        city: doc.grad || 'N/A',\n        grad: doc.grad,\n        // Zadrži original za ažuriranje\n        email: doc.email || 'N/A',\n        telefon: doc.telefon || 'N/A',\n        radnoVrijeme: doc.radnoVrijeme || 'N/A',\n        iskustvo: doc.iskustvo || 0,\n        ocjena: doc.ocjena || 0.0\n      }));\n      setDoctors(transformedDoctors);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja doktora:\", error);\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti`, authHeaders);\n      const transformedPatients = response.data.map(pat => ({\n        id: pat.pacijentID,\n        userId: pat.userId,\n        // Uključi userId za Auth service operacije\n        name: `${pat.ime} ${pat.prezime}`,\n        ime: pat.ime,\n        // Zadrži pojedinačne dijelove imena za ažuriranje\n        prezime: pat.prezime,\n        // Zadrži pojedinačne dijelove imena za ažuriranje\n        email: pat.email || 'N/A',\n        phone: pat.telefon || 'N/A',\n        telefon: pat.telefon // Zadrži original za ažuriranje\n      }));\n      setPatients(transformedPatients);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", error);\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\n    }\n  };\n  const fetchAppointments = async () => {\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\n      const transformedAppointments = response.data.map(app => ({\n        id: app.terminID,\n        patientName: app.pacijentIme || 'N/A',\n        doctorName: app.doktorIme || 'N/A',\n        date: app.datum,\n        time: app.vrijeme,\n        status: app.status\n      }));\n      setAppointments(transformedAppointments);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja termina:\", error);\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\n    }\n  };\n  useEffect(() => {\n    if (!token) {\n      console.warn(\"Nema tokena, preskačem dohvaćanje podataka.\");\n      return;\n    }\n    fetchDoctors();\n    fetchPatients();\n    fetchAppointments();\n  }, [token]);\n  const handleAddDoctor = async newDoctorData => {\n    try {\n      const registerPayload = {\n        email: newDoctorData.email,\n        password: newDoctorData.password,\n        fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\n        telefon: newDoctorData.telefon,\n        roles: [\"ROLE_DOKTOR\"],\n        grad: newDoctorData.grad,\n        specijalizacije: newDoctorData.specijalizacije\n      };\n      await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      fetchDoctors();\n      setShowDoctorModal(false);\n      showNotification('Novi doktor uspješno registrovan i dodan!');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Greška prilikom dodavanja doktora (registracije):\", error);\n      showNotification(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Greška prilikom dodavanja doktora.', 'danger');\n    }\n  };\n  const handleUpdateDoctor = async updatedDoctor => {\n    try {\n      // 1. Ažuriraj profil doktora u Korisnici-Doktori servisu\n      // Kreiraj payload samo sa poljima koja su relevantna za Doktor entitet\n      const doctorUpdatePayload = {\n        ime: updatedDoctor.ime,\n        prezime: updatedDoctor.prezime,\n        email: updatedDoctor.email,\n        telefon: updatedDoctor.telefon,\n        grad: updatedDoctor.grad,\n        specijalizacije: updatedDoctor.specijalizacije,\n        radnoVrijeme: updatedDoctor.radnoVrijeme,\n        iskustvo: updatedDoctor.iskustvo,\n        ocjena: updatedDoctor.ocjena\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\n\n      // 2. Ažuriraj osnovne korisničke podatke u Auth servisu\n      // Kreiraj payload samo sa poljima koja su relevantna za User entitet\n      const userUpdatePayload = {\n        email: updatedDoctor.email,\n        fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\n        telefon: updatedDoctor.telefon\n        // Uloge se ne ažuriraju ovdje, to rješava UserSyncController\n      };\n      // Pošalji Auth-u samo ako userId postoji\n      if (updatedDoctor.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchDoctors();\n      setShowDoctorModal(false);\n      setEditingDoctor(null);\n      showNotification('Doktor uspješno ažuriran!');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Greška prilikom ažuriranja doktora:\", error);\n      showNotification(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Greška prilikom ažuriranja doktora.', 'danger');\n    }\n  };\n  const handleDeleteDoctor = async id => {\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.');\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const doctorToDelete = doctors.find(doc => doc.id === id);\n      if (!doctorToDelete || !doctorToDelete.userId) {\n        showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\n        return;\n      }\n\n      // 1. Obriši profil doktora iz Korisnici-Doktori servisa\n      await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/doktori/${id}`, authHeaders);\n\n      // 2. Obriši korisnika iz Auth servisa\n      await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\n      fetchDoctors();\n      showNotification('Doktor uspješno obrisan!', 'danger');\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"Greška prilikom brisanja doktora:\", error);\n      showNotification(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Greška prilikom brisanja doktora.', 'danger');\n    }\n  };\n  const openDoctorModal = (doctor = null) => {\n    setEditingDoctor(doctor);\n    setShowDoctorModal(true);\n  };\n  const filteredDoctors = doctors.filter(doctor => doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()));\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\n  const handleAddPatient = async newPatient => {\n    try {\n      const registerPayload = {\n        email: newPatient.email,\n        password: newPatient.password,\n        fullName: `${newPatient.ime} ${newPatient.prezime}`,\n        telefon: newPatient.telefon,\n        roles: [\"ROLE_PACIJENT\"],\n        grad: null,\n        specijalizacije: null\n      };\n      await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      fetchPatients();\n      setShowPatientModal(false);\n      showNotification('Novi pacijent uspješno registrovan i dodan!');\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error(\"Greška prilikom dodavanja pacijenta (registracije):\", error);\n      showNotification(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Greška prilikom dodavanja pacijenta.', 'danger');\n    }\n  };\n  const handleUpdatePatient = async updatedPatient => {\n    try {\n      // 1. Ažuriraj profil pacijenta u Korisnici-Doktori servisu\n      const patientUpdatePayload = {\n        ime: updatedPatient.ime,\n        prezime: updatedPatient.prezime,\n        email: updatedPatient.email,\n        telefon: updatedPatient.telefon\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\n\n      // 2. Ažuriraj osnovne korisničke podatke u Auth servisu\n      const userUpdatePayload = {\n        email: updatedPatient.email,\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\n        telefon: updatedPatient.telefon\n      };\n      if (updatedPatient.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchPatients();\n      setShowPatientModal(false);\n      setEditingPatient(null);\n      showNotification('Pacijent uspješno ažuriran!');\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", error);\n      showNotification(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Greška prilikom ažuriranja pacijenta.', 'danger');\n    }\n  };\n  const handleDeletePatient = async id => {\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.');\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const patientToDelete = patients.find(pat => pat.id === id);\n      if (!patientToDelete || !patientToDelete.userId) {\n        showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\n        return;\n      }\n\n      // 1. Obriši profil pacijenta iz Korisnici-Doktori servisa\n      await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti/${id}`, authHeaders);\n\n      // 2. Obriši korisnika iz Auth servisa\n      await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\n      fetchPatients();\n      showNotification('Pacijent uspješno obrisan!', 'danger');\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      console.error(\"Greška prilikom brisanja pacijenta:\", error);\n      showNotification(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Greška prilikom brisanja pacijenta.', 'danger');\n    }\n  };\n  const openPatientModal = (patient = null) => {\n    setEditingPatient(patient);\n    setShowPatientModal(true);\n  };\n  const filteredPatients = patients.filter(patient => patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\n  const handleUpdateAppointmentStatus = async (id, newStatus) => {\n    try {\n      const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}/status`, {\n        status: newStatus\n      }, authHeaders);\n      fetchAppointments();\n      showNotification(`Status termina ažuriran na ${newStatus}!`, 'info');\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      console.error(\"Greška prilikom ažuriranja statusa termina:\", error);\n      showNotification(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Greška prilikom ažuriranja statusa termina.', 'danger');\n    }\n  };\n  const indexOfLastAppointment = appointmentsCurrentPage * itemsPerPage;\n  const indexOfFirstAppointment = indexOfLastAppointment - itemsPerPage;\n  const currentAppointments = appointments.slice(indexOfFirstAppointment, indexOfLastAppointment);\n  const totalAppointmentPages = Math.ceil(appointments.length / itemsPerPage);\n  const DataModal = ({\n    show,\n    onClose,\n    data,\n    onSave,\n    fields,\n    title,\n    idPrefix\n  }) => {\n    _s();\n    const [formData, setFormData] = useState(data || {});\n    useEffect(() => {\n      if (data) {\n        // Kada se modal otvara za uređivanje, osiguravamo da je specijalizacije uvijek niz\n        setFormData({\n          ...data,\n          specijalizacije: Array.isArray(data.specijalizacije) ? data.specijalizacije // Ako je već niz, koristi ga takvog\n          : data.specijalizacije ? [data.specijalizacije] : [] // Ako je string, pretvori ga u niz, inače prazan niz\n        });\n      } else {\n        const initialData = {};\n        fields.forEach(field => {\n          if (field.name === 'specijalizacije') {\n            initialData[field.name] = []; // Uvijek niz za nove podatke\n          } else {\n            initialData[field.name] = '';\n          }\n        });\n        setFormData(initialData);\n      }\n    }, [data, fields]);\n    const handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      if (name === 'specijalizacije') {\n        // Kada se izabere specijalizacija, pohrani je kao niz s jednim elementom\n        setFormData(prev => ({\n          ...prev,\n          [name]: [value]\n        }));\n      } else {\n        setFormData(prev => ({\n          ...prev,\n          [name]: value\n        }));\n      }\n    };\n    const handleSubmit = e => {\n      e.preventDefault();\n      onSave(formData);\n    };\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: onClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: fields.map(field => /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: `${idPrefix}-${field.name}`,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), field.type === 'select' ? /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: field.name\n              // Ako je formData[field.name] niz, uzmi prvi element za prikaz u selectu.\n              // Inače, koristi vrijednost direktno ili prazan string.\n              ,\n              value: Array.isArray(formData[field.name]) && formData[field.name].length > 0 ? formData[field.name][0] : formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: [\"Select \", field.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 21\n              }, this), field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 19\n            }, this) : field.type === 'textarea' ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: field.type || 'text',\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 19\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this);\n  };\n  _s(DataModal, \"JPolC2XS0g7tYnXkmRHL767uIww=\");\n  const Pagination = ({\n    itemsPerPage,\n    totalItems,\n    currentPage,\n    paginate\n  }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center mt-4\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === number ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this);\n  };\n  const renderContent = () => {\n    const addDoctorFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'password',\n      label: 'Password',\n      type: 'password',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }, {\n      name: 'grad',\n      label: 'City',\n      type: 'select',\n      required: true,\n      options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla']\n    }, {\n      name: 'specijalizacije',\n      label: 'Specialty',\n      type: 'select',\n      required: true,\n      options: ['Kardiolog', 'Pedijatar', 'Dermatolog', 'Neurolog', 'Ortoped', 'Hirurg', 'Opća praksa']\n    }, {\n      name: 'radnoVrijeme',\n      label: 'Work Hours',\n      type: 'text',\n      required: false\n    }, {\n      name: 'iskustvo',\n      label: 'Experience (years)',\n      type: 'number',\n      required: false\n    }, {\n      name: 'ocjena',\n      label: 'Rating (0.0-5.0)',\n      type: 'number',\n      required: false\n    }];\n    const editDoctorFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }, {\n      name: 'grad',\n      label: 'City',\n      type: 'select',\n      required: true,\n      options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla']\n    }, {\n      name: 'specijalizacije',\n      label: 'Specialty',\n      type: 'select',\n      required: true,\n      options: ['Kardiolog', 'Pedijatar', 'Dermatolog', 'Neurolog', 'Ortoped', 'Hirurg', 'Opća praksa']\n    }, {\n      name: 'radnoVrijeme',\n      label: 'Work Hours',\n      type: 'text',\n      required: false\n    }, {\n      name: 'iskustvo',\n      label: 'Experience (years)',\n      type: 'number',\n      required: false\n    }, {\n      name: 'ocjena',\n      label: 'Rating (0.0-5.0)',\n      type: 'number',\n      required: false\n    }];\n    const addPatientFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'password',\n      label: 'Password',\n      type: 'password',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }];\n    const editPatientFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }];\n    switch (activeTab) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Dashboard Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-primary mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Doctors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: doctors.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-success mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Patients\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: patients.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-warning mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Pending Appointments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: appointments.filter(app => app.status === 'Pending').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Quick Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => openDoctorModal(),\n                children: \"Add New Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-success\",\n                onClick: () => openPatientModal(),\n                children: \"Add New Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-info\",\n                onClick: () => setActiveTab('appointments'),\n                children: \"View Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this);\n      case 'doctors':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Doctors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openDoctorModal(),\n              children: \"Add New Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search doctors...\",\n              value: doctorSearchTerm,\n              onChange: e => setDoctorSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Specialty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"City\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 571,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentDoctors.length > 0 ? currentDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 580,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 581,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.specialty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.city\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openDoctorModal(doctor),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 586,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteDoctor(doctor.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 587,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 585,\n                    columnNumber: 25\n                  }, this)]\n                }, doctor.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: \"text-center\",\n                    children: \"No doctors found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredDoctors.length,\n            currentPage: doctorsCurrentPage,\n            paginate: setDoctorsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n            show: showDoctorModal,\n            onClose: () => setShowDoctorModal(false),\n            data: editingDoctor,\n            onSave: editingDoctor ? handleUpdateDoctor : handleAddDoctor,\n            title: editingDoctor ? 'Edit Doctor' : 'Add New Doctor',\n            idPrefix: \"doctor\",\n            fields: editingDoctor ? editDoctorFields : addDoctorFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this);\n      case 'patients':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openPatientModal(),\n              children: \"Add New Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search patients...\",\n              value: patientSearchTerm,\n              onChange: e => setPatientSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 638,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentPatients.length > 0 ? currentPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 645,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 646,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 647,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openPatientModal(patient),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 650,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeletePatient(patient.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 651,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 25\n                  }, this)]\n                }, patient.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"No patients found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredPatients.length,\n            currentPage: patientsCurrentPage,\n            paginate: setPatientsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n            show: showPatientModal,\n            onClose: () => setShowPatientModal(false),\n            data: editingPatient,\n            onSave: editingPatient ? handleUpdatePatient : handleAddPatient,\n            title: editingPatient ? 'Edit Patient' : 'Add New Patient',\n            idPrefix: \"patient\",\n            fields: editingPatient ? editPatientFields : addPatientFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 11\n        }, this);\n      case 'appointments':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Patient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 689,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 690,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 692,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 693,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentAppointments.length > 0 ? currentAppointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 701,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.patientName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.doctorName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 703,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 705,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select\",\n                      value: appointment.status,\n                      onChange: e => handleUpdateAppointmentStatus(appointment.id, e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Pending\",\n                        children: \"Pending\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 712,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Confirmed\",\n                        children: \"Confirmed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 713,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Completed\",\n                        children: \"Completed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 714,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Cancelled\",\n                        children: \"Cancelled\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 715,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 707,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 706,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => showNotification('Brisanje termina nije implementirano.', 'warning'),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 719,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 718,\n                    columnNumber: 25\n                  }, this)]\n                }, appointment.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"7\",\n                    className: \"text-center\",\n                    children: \"No appointments found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 725,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: appointments.length,\n            currentPage: appointmentsCurrentPage,\n            paginate: setAppointmentsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a tab to view content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alertType,\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n      style: {\n        zIndex: 1050\n      },\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\",\n        style: {\n          minHeight: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky pt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'overview' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('overview'),\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'doctors' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('doctors'),\n                children: \"Doctors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'patients' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('patients'),\n                children: \"Patients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'appointments' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('appointments'),\n                children: \"Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 745,\n    columnNumber: 5\n  }, this);\n}\n_s2(AdminDashboard, \"nKJwdaJnksGmHhA4v2lyTftoMVo=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","Modal","Button","Form","Alert","jsxDEV","_jsxDEV","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","AUTH_API_PREFIX","AdminDashboard","_s2","_s","$RefreshSig$","token","authHeaders","headers","activeTab","setActiveTab","doctors","setDoctors","patients","setPatients","appointments","setAppointments","showDoctorModal","setShowDoctorModal","editingDoctor","setEditingDoctor","showPatientModal","setShowPatientModal","editingPatient","setEditingPatient","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","doctorSearchTerm","setDoctorSearchTerm","patientSearchTerm","setPatientSearchTerm","doctorsCurrentPage","setDoctorsCurrentPage","patientsCurrentPage","setPatientsCurrentPage","appointmentsCurrentPage","setAppointmentsCurrentPage","itemsPerPage","showNotification","message","type","setTimeout","fetchDoctors","response","get","transformedDoctors","data","map","doc","id","doktorID","userId","name","ime","prezime","specialty","Array","isArray","specijalizacije","length","join","city","grad","email","telefon","radnoVrijeme","iskustvo","ocjena","error","console","fetchPatients","transformedPatients","pat","pacijentID","phone","fetchAppointments","transformedAppointments","app","terminID","patientName","pacijentIme","doctorName","doktorIme","date","datum","time","vrijeme","status","warn","handleAddDoctor","newDoctorData","registerPayload","password","fullName","roles","post","_error$response","_error$response$data","handleUpdateDoctor","updatedDoctor","doctorUpdatePayload","put","userUpdatePayload","_error$response2","_error$response2$data","handleDeleteDoctor","confirmed","window","confirm","doctorToDelete","find","delete","_error$response3","_error$response3$data","openDoctorModal","doctor","filteredDoctors","filter","toLowerCase","includes","indexOfLastDoctor","indexOfFirstDoctor","currentDoctors","slice","totalDoctorPages","Math","ceil","handleAddPatient","newPatient","_error$response4","_error$response4$data","handleUpdatePatient","updatedPatient","patientUpdatePayload","_error$response5","_error$response5$data","handleDeletePatient","patientToDelete","_error$response6","_error$response6$data","openPatientModal","patient","filteredPatients","indexOfLastPatient","indexOfFirstPatient","currentPatients","totalPatientPages","handleUpdateAppointmentStatus","newStatus","_error$response7","_error$response7$data","indexOfLastAppointment","indexOfFirstAppointment","currentAppointments","totalAppointmentPages","DataModal","show","onClose","onSave","fields","title","idPrefix","formData","setFormData","initialData","forEach","field","handleChange","e","value","target","prev","handleSubmit","preventDefault","onHide","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Body","Group","className","controlId","Label","label","Select","onChange","required","options","option","Control","as","rows","Footer","variant","onClick","Pagination","totalItems","currentPage","paginate","pageNumbers","i","push","number","renderContent","addDoctorFields","editDoctorFields","addPatientFields","editPatientFields","placeholder","colSpan","appointment","dismissible","style","zIndex","minHeight","href","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/termini-pregledi`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`; // Base URL for Auth Service endpoints\r\n\r\nfunction AdminDashboard() {\r\n  const { token } = useAuth();\r\n\r\n  const authHeaders = {\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  };\r\n\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\r\n  const [editingDoctor, setEditingDoctor] = useState(null);\r\n  const [showPatientModal, setShowPatientModal] = useState(false);\r\n  const [editingPatient, setEditingPatient] = useState(null);\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [alertType, setAlertType] = useState('success');\r\n\r\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\r\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n\r\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\r\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\r\n  const [appointmentsCurrentPage, setAppointmentsCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const showNotification = (message, type = 'success') => {\r\n    setAlertMessage(message);\r\n    setAlertType(type);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n      setAlertMessage('');\r\n    }, 3000);\r\n  };\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/doktori`, authHeaders);\r\n      const transformedDoctors = response.data.map(doc => ({\r\n        id: doc.doktorID,\r\n        userId: doc.userId, // Uključi userId za Auth service operacije\r\n        name: `${doc.ime} ${doc.prezime}`,\r\n        ime: doc.ime, // Zadrži pojedinačne dijelove imena za ažuriranje\r\n        prezime: doc.prezime, // Zadrži pojedinačne dijelove imena za ažuriranje\r\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                   ? doc.specijalizacije.join(', ')\r\n                   : 'N/A',\r\n        specijalizacije: doc.specijalizacije, // Zadrži originalnu listu za ažuriranje\r\n        city: doc.grad || 'N/A',\r\n        grad: doc.grad, // Zadrži original za ažuriranje\r\n        email: doc.email || 'N/A',\r\n        telefon: doc.telefon || 'N/A',\r\n        radnoVrijeme: doc.radnoVrijeme || 'N/A',\r\n        iskustvo: doc.iskustvo || 0,\r\n        ocjena: doc.ocjena || 0.0,\r\n      }));\r\n      setDoctors(transformedDoctors);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja doktora:\", error);\r\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti`, authHeaders);\r\n      const transformedPatients = response.data.map(pat => ({\r\n        id: pat.pacijentID,\r\n        userId: pat.userId, // Uključi userId za Auth service operacije\r\n        name: `${pat.ime} ${pat.prezime}`,\r\n        ime: pat.ime, // Zadrži pojedinačne dijelove imena za ažuriranje\r\n        prezime: pat.prezime, // Zadrži pojedinačne dijelove imena za ažuriranje\r\n        email: pat.email || 'N/A',\r\n        phone: pat.telefon || 'N/A',\r\n        telefon: pat.telefon, // Zadrži original za ažuriranje\r\n      }));\r\n      setPatients(transformedPatients);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", error);\r\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchAppointments = async () => {\r\n    try {\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\r\n      const transformedAppointments = response.data.map(app => ({\r\n        id: app.terminID,\r\n        patientName: app.pacijentIme || 'N/A',\r\n        doctorName: app.doktorIme || 'N/A',\r\n        date: app.datum,\r\n        time: app.vrijeme,\r\n        status: app.status,\r\n      }));\r\n      setAppointments(transformedAppointments);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja termina:\", error);\r\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      console.warn(\"Nema tokena, preskačem dohvaćanje podataka.\");\r\n      return;\r\n    }\r\n    fetchDoctors();\r\n    fetchPatients();\r\n    fetchAppointments();\r\n  }, [token]);\r\n\r\n  const handleAddDoctor = async (newDoctorData) => {\r\n    try {\r\n      const registerPayload = {\r\n        email: newDoctorData.email,\r\n        password: newDoctorData.password,\r\n        fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\r\n        telefon: newDoctorData.telefon,\r\n        roles: [\"ROLE_DOKTOR\"],\r\n        grad: newDoctorData.grad,\r\n        specijalizacije: newDoctorData.specijalizacije,\r\n      };\r\n\r\n      await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n      fetchDoctors();\r\n      setShowDoctorModal(false);\r\n      showNotification('Novi doktor uspješno registrovan i dodan!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja doktora (registracije):\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja doktora.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleUpdateDoctor = async (updatedDoctor) => {\r\n    try {\r\n      // 1. Ažuriraj profil doktora u Korisnici-Doktori servisu\r\n      // Kreiraj payload samo sa poljima koja su relevantna za Doktor entitet\r\n      const doctorUpdatePayload = {\r\n        ime: updatedDoctor.ime,\r\n        prezime: updatedDoctor.prezime,\r\n        email: updatedDoctor.email,\r\n        telefon: updatedDoctor.telefon,\r\n        grad: updatedDoctor.grad,\r\n        specijalizacije: updatedDoctor.specijalizacije,\r\n        radnoVrijeme: updatedDoctor.radnoVrijeme,\r\n        iskustvo: updatedDoctor.iskustvo,\r\n        ocjena: updatedDoctor.ocjena,\r\n      };\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\r\n\r\n      // 2. Ažuriraj osnovne korisničke podatke u Auth servisu\r\n      // Kreiraj payload samo sa poljima koja su relevantna za User entitet\r\n      const userUpdatePayload = {\r\n        email: updatedDoctor.email,\r\n        fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\r\n        telefon: updatedDoctor.telefon,\r\n        // Uloge se ne ažuriraju ovdje, to rješava UserSyncController\r\n      };\r\n      // Pošalji Auth-u samo ako userId postoji\r\n      if (updatedDoctor.userId) {\r\n          await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\r\n      } else {\r\n          console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n      }\r\n\r\n      fetchDoctors();\r\n      setShowDoctorModal(false);\r\n      setEditingDoctor(null);\r\n      showNotification('Doktor uspješno ažuriran!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja doktora:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja doktora.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleDeleteDoctor = async (id) => {\r\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.');\r\n    if (!confirmed) {\r\n      return;\r\n    }\r\n    try {\r\n      const doctorToDelete = doctors.find(doc => doc.id === id);\r\n      if (!doctorToDelete || !doctorToDelete.userId) {\r\n        showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\r\n        return;\r\n      }\r\n\r\n      // 1. Obriši profil doktora iz Korisnici-Doktori servisa\r\n      await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/doktori/${id}`, authHeaders);\r\n\r\n      // 2. Obriši korisnika iz Auth servisa\r\n      await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\r\n\r\n      fetchDoctors();\r\n      showNotification('Doktor uspješno obrisan!', 'danger');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom brisanja doktora:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom brisanja doktora.', 'danger');\r\n    }\r\n  };\r\n\r\n  const openDoctorModal = (doctor = null) => {\r\n    setEditingDoctor(doctor);\r\n    setShowDoctorModal(true);\r\n  };\r\n\r\n  const filteredDoctors = doctors.filter(doctor =>\r\n    doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n    doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n    doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase())\r\n  );\r\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\r\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\r\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\r\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\r\n\r\n  const handleAddPatient = async (newPatient) => {\r\n    try {\r\n      const registerPayload = {\r\n        email: newPatient.email,\r\n        password: newPatient.password,\r\n        fullName: `${newPatient.ime} ${newPatient.prezime}`,\r\n        telefon: newPatient.telefon,\r\n        roles: [\"ROLE_PACIJENT\"],\r\n        grad: null,\r\n        specijalizacije: null,\r\n      };\r\n      await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n      fetchPatients();\r\n      setShowPatientModal(false);\r\n      showNotification('Novi pacijent uspješno registrovan i dodan!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja pacijenta (registracije):\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja pacijenta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleUpdatePatient = async (updatedPatient) => {\r\n    try {\r\n      // 1. Ažuriraj profil pacijenta u Korisnici-Doktori servisu\r\n      const patientUpdatePayload = {\r\n        ime: updatedPatient.ime,\r\n        prezime: updatedPatient.prezime,\r\n        email: updatedPatient.email,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\r\n\r\n      // 2. Ažuriraj osnovne korisničke podatke u Auth servisu\r\n      const userUpdatePayload = {\r\n        email: updatedPatient.email,\r\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      if (updatedPatient.userId) {\r\n          await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\r\n      } else {\r\n          console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n      }\r\n\r\n      fetchPatients();\r\n      setShowPatientModal(false);\r\n      setEditingPatient(null);\r\n      showNotification('Pacijent uspješno ažuriran!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja pacijenta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleDeletePatient = async (id) => {\r\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.');\r\n    if (!confirmed) {\r\n      return;\r\n    }\r\n    try {\r\n      const patientToDelete = patients.find(pat => pat.id === id);\r\n      if (!patientToDelete || !patientToDelete.userId) {\r\n        showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\r\n        return;\r\n      }\r\n\r\n      // 1. Obriši profil pacijenta iz Korisnici-Doktori servisa\r\n      await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti/${id}`, authHeaders);\r\n\r\n      // 2. Obriši korisnika iz Auth servisa\r\n      await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\r\n\r\n      fetchPatients();\r\n      showNotification('Pacijent uspješno obrisan!', 'danger');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom brisanja pacijenta:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom brisanja pacijenta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const openPatientModal = (patient = null) => {\r\n    setEditingPatient(patient);\r\n    setShowPatientModal(true);\r\n  };\r\n\r\n  const filteredPatients = patients.filter(patient =>\r\n    patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\r\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\r\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\r\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\r\n\r\n  const handleUpdateAppointmentStatus = async (id, newStatus) => {\r\n    try {\r\n      const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}/status`, { status: newStatus }, authHeaders);\r\n      fetchAppointments();\r\n      showNotification(`Status termina ažuriran na ${newStatus}!`, 'info');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja statusa termina:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja statusa termina.', 'danger');\r\n    }\r\n  };\r\n\r\n  const indexOfLastAppointment = appointmentsCurrentPage * itemsPerPage;\r\n  const indexOfFirstAppointment = indexOfLastAppointment - itemsPerPage;\r\n  const currentAppointments = appointments.slice(indexOfFirstAppointment, indexOfLastAppointment);\r\n  const totalAppointmentPages = Math.ceil(appointments.length / itemsPerPage);\r\n\r\nconst DataModal = ({ show, onClose, data, onSave, fields, title, idPrefix }) => {\r\n    const [formData, setFormData] = useState(data || {});\r\n\r\n    useEffect(() => {\r\n      if (data) {\r\n        // Kada se modal otvara za uređivanje, osiguravamo da je specijalizacije uvijek niz\r\n        setFormData({\r\n          ...data,\r\n          specijalizacije: Array.isArray(data.specijalizacije)\r\n            ? data.specijalizacije // Ako je već niz, koristi ga takvog\r\n            : (data.specijalizacije ? [data.specijalizacije] : []) // Ako je string, pretvori ga u niz, inače prazan niz\r\n        });\r\n      } else {\r\n        const initialData = {};\r\n        fields.forEach(field => {\r\n          if (field.name === 'specijalizacije') {\r\n            initialData[field.name] = []; // Uvijek niz za nove podatke\r\n          } else {\r\n            initialData[field.name] = '';\r\n          }\r\n        });\r\n        setFormData(initialData);\r\n      }\r\n    }, [data, fields]);\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      if (name === 'specijalizacije') {\r\n        // Kada se izabere specijalizacija, pohrani je kao niz s jednim elementom\r\n        setFormData(prev => ({ ...prev, [name]: [value] }));\r\n      } else {\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n      }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      onSave(formData);\r\n    };\r\n\r\n    return (\r\n      <Modal show={show} onHide={onClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body>\r\n            {fields.map(field => (\r\n              <Form.Group className=\"mb-3\" controlId={`${idPrefix}-${field.name}`} key={field.name}>\r\n                <Form.Label>{field.label}</Form.Label>\r\n                {field.type === 'select' ? (\r\n                  <Form.Select\r\n                    name={field.name}\r\n                    // Ako je formData[field.name] niz, uzmi prvi element za prikaz u selectu.\r\n                    // Inače, koristi vrijednost direktno ili prazan string.\r\n                    value={Array.isArray(formData[field.name]) && formData[field.name].length > 0\r\n                             ? formData[field.name][0]\r\n                             : formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  >\r\n                    <option value=\"\">Select {field.label}</option>\r\n                    {field.options.map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                ) : field.type === 'textarea' ? (\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    name={field.name}\r\n                    value={formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  />\r\n                ) : (\r\n                  <Form.Control\r\n                    type={field.type || 'text'}\r\n                    name={field.name}\r\n                    value={formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  />\r\n                )}\r\n              </Form.Group>\r\n            ))}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination justify-content-center mt-4\">\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n              <button onClick={() => paginate(number)} className=\"page-link\">\r\n                {number}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const renderContent = () => {\r\n    const addDoctorFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Pedijatar', 'Dermatolog', 'Neurolog', 'Ortoped', 'Hirurg', 'Opća praksa'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n      { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n    const editDoctorFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Pedijatar', 'Dermatolog', 'Neurolog', 'Ortoped', 'Hirurg', 'Opća praksa'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n      { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n    const addPatientFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n    const editPatientFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n\r\n    switch (activeTab) {\r\n      case 'overview':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Dashboard Overview</h4>\r\n            <div className=\"row g-4\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-primary mb-3\">\r\n                  <div className=\"card-header\">Total Doctors</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{doctors.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-success mb-3\">\r\n                  <div className=\"card-header\">Total Patients</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{patients.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-warning mb-3\">\r\n                  <div className=\"card-header\">Pending Appointments</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{appointments.filter(app => app.status === 'Pending').length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h5>Quick Actions</h5>\r\n              <div className=\"d-flex gap-2\">\r\n                <button className=\"btn btn-outline-primary\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n                <button className=\"btn btn-outline-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n                <button className=\"btn btn-outline-info\" onClick={() => setActiveTab('appointments')}>View Appointments</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'doctors':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Doctors</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search doctors...\"\r\n                value={doctorSearchTerm}\r\n                onChange={(e) => setDoctorSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Specialty</th>\r\n                    <th>City</th>\r\n                    <th>Email</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentDoctors.length > 0 ? (\r\n                    currentDoctors.map(doctor => (\r\n                      <tr key={doctor.id}>\r\n                        <td>{doctor.id}</td>\r\n                        <td>{doctor.name}</td>\r\n                        <td>{doctor.specialty}</td>\r\n                        <td>{doctor.city}</td>\r\n                        <td>{doctor.email}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openDoctorModal(doctor)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteDoctor(doctor.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"6\" className=\"text-center\">No doctors found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredDoctors.length}\r\n              currentPage={doctorsCurrentPage}\r\n              paginate={setDoctorsCurrentPage}\r\n            />\r\n            <DataModal\r\n              show={showDoctorModal}\r\n              onClose={() => setShowDoctorModal(false)}\r\n              data={editingDoctor}\r\n              onSave={editingDoctor ? handleUpdateDoctor : handleAddDoctor}\r\n              title={editingDoctor ? 'Edit Doctor' : 'Add New Doctor'}\r\n              idPrefix=\"doctor\"\r\n              fields={editingDoctor ? editDoctorFields : addDoctorFields}\r\n            />\r\n          </div>\r\n        );\r\n      case 'patients':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Patients</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search patients...\"\r\n                value={patientSearchTerm}\r\n                onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentPatients.length > 0 ? (\r\n                    currentPatients.map(patient => (\r\n                      <tr key={patient.id}>\r\n                        <td>{patient.id}</td>\r\n                        <td>{patient.name}</td>\r\n                        <td>{patient.email}</td>\r\n                        <td>{patient.phone}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openPatientModal(patient)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeletePatient(patient.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"text-center\">No patients found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredPatients.length}\r\n              currentPage={patientsCurrentPage}\r\n              paginate={setPatientsCurrentPage}\r\n            />\r\n            <DataModal\r\n              show={showPatientModal}\r\n              onClose={() => setShowPatientModal(false)}\r\n              data={editingPatient}\r\n              onSave={editingPatient ? handleUpdatePatient : handleAddPatient}\r\n              title={editingPatient ? 'Edit Patient' : 'Add New Patient'}\r\n              idPrefix=\"patient\"\r\n              fields={editingPatient ? editPatientFields : addPatientFields}\r\n            />\r\n          </div>\r\n        );\r\n      case 'appointments':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Appointments</h4>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Patient</th>\r\n                    <th>Doctor</th>\r\n                    <th>Date</th>\r\n                    <th>Time</th>\r\n                    <th>Status</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentAppointments.length > 0 ? (\r\n                    currentAppointments.map(appointment => (\r\n                      <tr key={appointment.id}>\r\n                        <td>{appointment.id}</td>\r\n                        <td>{appointment.patientName}</td>\r\n                        <td>{appointment.doctorName}</td>\r\n                        <td>{appointment.date}</td>\r\n                        <td>{appointment.time}</td>\r\n                        <td>\r\n                          <select\r\n                            className=\"form-select\"\r\n                            value={appointment.status}\r\n                            onChange={(e) => handleUpdateAppointmentStatus(appointment.id, e.target.value)}\r\n                          >\r\n                            <option value=\"Pending\">Pending</option>\r\n                            <option value=\"Confirmed\">Confirmed</option>\r\n                            <option value=\"Completed\">Completed</option>\r\n                            <option value=\"Cancelled\">Cancelled</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => showNotification('Brisanje termina nije implementirano.', 'warning')}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"7\" className=\"text-center\">No appointments found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={appointments.length}\r\n              currentPage={appointmentsCurrentPage}\r\n              paginate={setAppointmentsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return <p>Select a tab to view content.</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {showAlert && (\r\n        <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      <div className=\"row\">\r\n        <nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" style={{ minHeight: '100vh' }}>\r\n          <div className=\"position-sticky pt-3\">\r\n            <ul className=\"nav flex-column\">\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'overview' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('overview')}>\r\n                  Overview\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'doctors' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('doctors')}>\r\n                  Doctors\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'patients' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('patients')}>\r\n                  Patients\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'appointments' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('appointments')}>\r\n                  Appointments\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\">\r\n          {renderContent()}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}