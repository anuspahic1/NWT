{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs } from 'react-bootstrap';\n// Nema potrebe za react-datepicker ako ga tvoja originalna verzija ne koristi.\n// Ako želiš date picker, morat ćemo ga ručno integrirati u tvoje postojeće inpute tipa 'date'.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\n\n// Definiranje API prefiksa za svaki mikroservis - KORISTIMO OVE PREFIKSE!\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`; // Pretpostavljena putanja za autentifikaciju, ako se koristi direktno\n\nfunction PatientDashboard() {\n  _s();\n  const {\n    token,\n    user\n  } = useAuth();\n  console.log(\"Current user object from useAuth:\", user);\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [appointments, setAppointments] = useState([]);\n  const [medicalHistory, setMedicalHistory] = useState([]);\n  const [patientProfile, setPatientProfile] = useState({});\n  const [doctors, setDoctors] = useState([]); // To fetch doctors for appointment scheduling and search\n  const [availableTimes, setAvailableTimes] = useState([]); // For doctor availability\n  const [documents, setDocuments] = useState([]); // For patient documents\n  const [bills, setBills] = useState([]); // For billing information\n  const [messages, setMessages] = useState([]); // For secure messaging\n  const [newMessage, setNewMessage] = useState({\n    recipientId: '',\n    subject: '',\n    content: ''\n  });\n  const [replyMessage, setReplyMessage] = useState({\n    messageId: '',\n    content: ''\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null); // For viewing a single message\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [newAppointment, setNewAppointment] = useState({\n    doctorId: '',\n    // Ovo će biti doktorID iz baze\n    appointmentDate: '',\n    appointmentTime: '',\n    reason: ''\n  });\n  const [editingAppointment, setEditingAppointment] = useState(null);\n  const [loading, setLoading] = useState(true); // Loading state\n\n  // --- API Calls ---\n\n  const fetchPatientAppointments = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching appointments.\");\n      return;\n    }\n    try {\n      // Putanja: GATEWAY_BASE_URL/api/termini-pregledi/api/pregledi/pacijent/{id}\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/zakazani/${user.pacijentId}`, authHeaders);\n      const transformedAppointments = response.data.map(app => ({\n        id: app.pregledID,\n        doctorId: app.doktorID,\n        patientId: app.pacijentID,\n        appointmentDate: app.datumPregleda,\n        appointmentTime: app.vrijemePregleda,\n        reason: app.komentarPacijenta,\n        status: app.status,\n        terminID: app.terminID,\n        // Dodano za update logiku\n        doktorIme: app.doktorIme // Dodano za prikaz\n      }));\n      setAppointments(transformedAppointments);\n      setAlertType('success');\n      setShowAlert(false); // Clear previous alerts\n    } catch (error) {\n      var _error$response;\n      console.error('Greška prilikom dohvaćanja pacijentovih pregleda:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje zakazanih pregleda.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMedicalHistory = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching medical history.\");\n      return;\n    }\n    try {\n      // Putanja: GATEWAY_BASE_URL/api/korisnici-doktori/api/pacijenti/{id}/medical-history\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}/medical-history`, authHeaders);\n      setMedicalHistory(response.data);\n      setAlertType('success');\n      setShowAlert(false); // Clear previous alerts\n    } catch (error) {\n      var _error$response2;\n      console.error('Greška prilikom dohvaćanja medicinske historije:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje medicinske historije.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchPatientProfile = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching patient profile.\");\n      return;\n    }\n    try {\n      // Putanja: GATEWAY_BASE_URL/api/korisnici-doktori/api/pacijenti/{id}\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, authHeaders);\n      setPatientProfile({\n        id: response.data.pacijentID,\n        firstName: response.data.ime,\n        lastName: response.data.prezime,\n        email: response.data.email,\n        phone: response.data.telefon,\n        datumRodjenja: response.data.datumRodjenja,\n        // Dodano ako postoji\n        adresa: response.data.adresa,\n        // Dodano ako postoji\n        userId: response.data.userId // Dodaj userId\n      });\n      setAlertType('success');\n      setShowAlert(false); // Clear previous alerts\n    } catch (error) {\n      var _error$response3;\n      console.error('Greška prilikom dohvaćanja pacijentovog profila:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje podataka profila.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctors = async () => {\n    try {\n      // Putanja: GATEWAY_BASE_URL/api/korisnici-doktori/api/doktori\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        firstName: doc.ime,\n        lastName: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\n        email: doc.email,\n        phone: doc.telefon\n      }));\n      setDoctors(transformedDoctors);\n      setAlertType('success');\n      setShowAlert(false); // Clear previous alerts\n    } catch (error) {\n      var _error$response4;\n      console.error('Greška prilikom dohvaćanja doktora:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje liste doktora.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctorAvailability = async (doctorId, date) => {\n    if (!doctorId || !date) {\n      setAvailableTimes([]);\n      return;\n    }\n    setLoading(true); // Postavi loading state\n    try {\n      // Putanja: GATEWAY_BASE_URL/api/termini-pregledi/api/termini/doktor/{doktorId}/datum/{datum}\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${doctorId}/datum/${date}`, authHeaders);\n      const available = response.data.filter(term => term.dostupnost).map(term => ({\n        terminID: term.terminID,\n        vrijeme: term.vrijeme\n      })) // Dohvati i terminID\n      .sort((a, b) => a.vrijeme.localeCompare(b.vrijeme)); // Sortiraj po vremenu\n      setAvailableTimes(available);\n      setAlertType('success');\n      setShowAlert(false); // Clear previous alerts\n    } catch (error) {\n      var _error$response5;\n      console.error('Greška prilikom dohvaćanja dostupnosti doktora:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje dostupnosti doktora.');\n      setAlertType('danger');\n      setShowAlert(true);\n      setAvailableTimes([]);\n    } finally {\n      setLoading(false); // Ukloni loading state\n    }\n  };\n  const fetchDocuments = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching documents.\");\n      return;\n    }\n    try {\n      // Putanja: GATEWAY_BASE_URL/api/obavijesti-dokumentacija/api/dokumentacija/pacijent/{id}\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedDocuments = response.data.map(doc => ({\n        id: doc.dokumentID,\n        fileName: doc.nazivDokumenta,\n        documentType: doc.tipDokumenta,\n        uploadDate: doc.datumKreiranja,\n        pristup: doc.pristup // Dodano\n      }));\n      setDocuments(transformedDocuments);\n      setAlertType('success');\n      setShowAlert(false); // Clear previous alerts\n    } catch (error) {\n      var _error$response6;\n      console.error('Greška prilikom dohvaćanja dokumenata:', ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje dokumenata.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchBills = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching bills.\");\n      return;\n    }\n    try {\n      // Putanja: GATEWAY_BASE_URL/api/obavijesti-dokumentacija/api/racuni/pacijent/{id}\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedBills = response.data.map(bill => ({\n        id: bill.racunID,\n        billDate: bill.datumIzdavanja,\n        amount: bill.iznos,\n        status: bill.status,\n        // Prilagođeno novom RacunDTO\n        dueDate: bill.datumDospijeca,\n        // Ako postoji u DTO\n        opis: bill.opis,\n        doktorIme: bill.doktorIme\n      }));\n      setBills(transformedBills);\n      setAlertType('success');\n      setShowAlert(false); // Clear previous alerts\n    } catch (error) {\n      var _error$response7;\n      console.error('Greška prilikom dohvaćanja računa:', ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje informacija o naplati.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMessages = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching messages.\");\n      return;\n    }\n    try {\n      // Putanja: GATEWAY_BASE_URL/api/obavijesti-dokumentacija/api/poruke/primatelj/{id}\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/primatelj/${user.pacijentId}?receiverType=PACIJENT`, authHeaders);\n      const transformedMessages = response.data.map(msg => ({\n        id: msg.porukaID,\n        senderId: msg.senderId,\n        senderType: msg.senderType,\n        senderIme: msg.senderIme,\n        // Dodano za prikaz\n        receiverId: msg.receiverId,\n        receiverType: msg.receiverType,\n        receiverIme: msg.receiverIme,\n        // Dodano za prikaz\n        subject: msg.subject,\n        content: msg.content,\n        timestamp: msg.timestamp,\n        replies: msg.replies || [] // Provjeri da replies nije null\n      }));\n      setMessages(transformedMessages);\n      setAlertType('success');\n      setShowAlert(false); // Clear previous alerts\n    } catch (error) {\n      var _error$response8;\n      console.error('Greška prilikom dohvaćanja poruka:', ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje poruka.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- useEffect Hooks ---\n  useEffect(() => {\n    const loadAllData = async () => {\n      if (token && user !== null && user !== void 0 && user.pacijentId) {\n        setLoading(true);\n        await Promise.all([fetchPatientAppointments(), fetchMedicalHistory(), fetchPatientProfile(), fetchDoctors(), fetchDocuments(), fetchBills(), fetchMessages()]);\n        setLoading(false);\n      } else if (!token || user && !user.pacijentId) {\n        setLoading(false);\n        if (!token) {\n          console.warn(\"Token nije dostupan. Korisnik nije ulogovan.\");\n        } else if (user && !user.pacijentId) {\n          console.warn(\"User objekat je dostupan, ali pacijentId nije. Moguće da korisnik nije pacijent.\");\n        }\n      }\n    };\n    loadAllData();\n  }, [token, user]); // Re-run when token or user changes\n\n  // --- Appointment Scheduling/Cancellation ---\n\n  const openAppointmentModal = (appointment = null) => {\n    if (appointment) {\n      setEditingAppointment(appointment);\n      setNewAppointment({\n        doctorId: appointment.doctorId,\n        appointmentDate: appointment.appointmentDate,\n        appointmentTime: appointment.appointmentTime,\n        reason: appointment.reason\n      });\n      // Pozovi fetchDoctorAvailability sa postojećim podacima\n      fetchDoctorAvailability(appointment.doctorId, appointment.appointmentDate);\n    } else {\n      setEditingAppointment(null);\n      setNewAppointment({\n        doctorId: '',\n        appointmentDate: '',\n        appointmentTime: '',\n        reason: ''\n      });\n      setAvailableTimes([]); // Clear availability for new appointment\n    }\n    setShowAppointmentModal(true);\n  };\n  const closeAppointmentModal = () => {\n    setShowAppointmentModal(false);\n    setEditingAppointment(null);\n    setNewAppointment({\n      doctorId: '',\n      appointmentDate: '',\n      appointmentTime: '',\n      reason: ''\n    });\n    setAvailableTimes([]);\n  };\n  const handleNewAppointmentChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewAppointment(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (name === 'doctorId' || name === 'appointmentDate') {\n      const docId = name === 'doctorId' ? value : newAppointment.doctorId;\n      const appDate = name === 'appointmentDate' ? value : newAppointment.appointmentDate;\n      if (docId && appDate) {\n        await fetchDoctorAvailability(docId, appDate);\n      } else {\n        setAvailableTimes([]);\n      }\n    }\n  };\n  const handleScheduleAppointment = async () => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće zakazati pregled.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newAppointment.doctorId || !newAppointment.appointmentDate || !newAppointment.appointmentTime) {\n      setAlertMessage('Molimo popunite sva polja za zakazivanje pregleda.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const selectedTermin = availableTimes.find(t => t.vrijeme === newAppointment.appointmentTime);\n      if (!selectedTermin) {\n        setAlertMessage('Odabrani termin nije validan ili nije dostupan.');\n        setAlertType('danger');\n        setShowAlert(true);\n        return;\n      }\n      const appointmentData = {\n        pacijentID: user.pacijentId,\n        doktorID: parseInt(newAppointment.doctorId),\n        datumPregleda: newAppointment.appointmentDate,\n        vrijemePregleda: newAppointment.appointmentTime,\n        komentarPacijenta: newAppointment.reason,\n        // Status je \"zakazan\" pri kreiranju, kod ažuriranja može biti drugačiji\n        status: editingAppointment ? editingAppointment.status : 'zakazan',\n        terminID: selectedTermin.terminID // Ovo je ključno!\n      };\n      let response;\n      if (editingAppointment) {\n        // Putanja: GATEWAY_BASE_URL/api/termini-pregledi/api/pregledi/{id}\n        response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${editingAppointment.id}`, appointmentData, authHeaders);\n        setAlertMessage('Pregled uspješno ažuriran!');\n      } else {\n        // Putanja: GATEWAY_BASE_URL/api/termini-pregledi/api/pregledi\n        response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\n        setAlertMessage('Pregled uspješno zakazan!');\n      }\n      setAlertType('success');\n      setShowAlert(true);\n      fetchPatientAppointments();\n      closeAppointmentModal();\n    } catch (error) {\n      var _error$response9, _error$response0, _error$response0$data;\n      console.error('Greška prilikom zakazivanja/ažuriranja pregleda:', ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n      let errorMessage = 'Neuspješno zakazivanje/ažuriranje pregleda. Molimo pokušajte ponovo.';\n      if ((_error$response0 = error.response) !== null && _error$response0 !== void 0 && (_error$response0$data = _error$response0.data) !== null && _error$response0$data !== void 0 && _error$response0$data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      setAlertMessage(errorMessage);\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleCancelAppointment = async appointmentId => {\n    if (window.confirm('Jeste li sigurni da želite otkazati ovaj pregled?')) {\n      try {\n        // Putanja: GATEWAY_BASE_URL/api/termini-pregledi/api/pregledi/{id}\n        const existingApp = appointments.find(app => app.id === appointmentId);\n        if (!existingApp) {\n          setAlertMessage(\"Pregled nije pronađen za otkazivanje.\");\n          setAlertType('danger');\n          setShowAlert(true);\n          return;\n        }\n        const updatedStatusPayload = {\n          ...existingApp,\n          status: 'otkazan'\n        };\n        await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}`, updatedStatusPayload, authHeaders);\n        setAlertMessage('Pregled uspješno otkazan!');\n        setAlertType('success');\n        setShowAlert(true);\n        fetchPatientAppointments();\n      } catch (error) {\n        var _error$response1, _error$response10, _error$response10$dat;\n        console.error('Greška prilikom otkazivanja pregleda:', ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data) || error.message);\n        setAlertMessage('Neuspješno otkazivanje pregleda. Molimo pokušajte ponovo. ' + (((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.message) || error.message));\n        setAlertType('danger');\n        setShowAlert(true);\n      }\n    }\n  };\n\n  // --- Profile Update ---\n  const handleProfileChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPatientProfile(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSaveProfile = async () => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće sačuvati profil.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const profilePayload = {\n        pacijentID: user.pacijentId,\n        // Pacijent ID iz korisnika\n        ime: patientProfile.firstName,\n        prezime: patientProfile.lastName,\n        email: patientProfile.email,\n        telefon: patientProfile.phone,\n        datumRodjenja: patientProfile.datumRodjenja,\n        adresa: patientProfile.adresa,\n        userId: patientProfile.userId // User ID iz Auth servisa (ako postoji i ako se koristi)\n      };\n      // Putanja: GATEWAY_BASE_URL/api/korisnici-doktori/api/pacijenti/{id}\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, profilePayload, authHeaders);\n\n      // Ažuriraj i Auth servis ako su se promijenili fullName, email ili telefon\n      // Ovdje se koristi user.id (koji je vjerovatno email ili userId iz tokena) jer Auth servis radi sa tim ID-jem.\n      // PROVJERI STVARNI ID U AUTH SERVISU\n      if (user.id && user.id !== user.pacijentId) {\n        // Da ne bi slali dva puta na isti ID ako je isti\n        const authProfilePayload = {\n          fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\n          email: patientProfile.email,\n          telefon: patientProfile.phone\n        };\n        // Putanja: GATEWAY_BASE_URL/auth/users/{id}\n        await axios.put(`${AUTH_API_PREFIX}/users/${user.id}`, authProfilePayload, authHeaders); // OVDJE OSTAJE user.id (koji je string)\n      }\n      setAlertMessage('Profil uspješno ažuriran!');\n      setAlertType('success');\n      setShowAlert(true);\n      fetchPatientProfile(); // Ponovo dohvati profil da se vide promjene\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response12$dat;\n      console.error('Greška prilikom ažuriranja profila:', ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message);\n      setAlertMessage('Neuspješno ažuriranje profila. Molimo pokušajte ponovo. ' + (((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- Document Upload ---\n  const handleDocumentUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('pacijentID', user.pacijentId);\n    formData.append('tipDokumenta', 'Patient Upload'); // Može biti i input polje za ovo\n\n    try {\n      // Putanja: GATEWAY_BASE_URL/api/obavijesti-dokumentacija/api/dokumentacija/upload\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setAlertMessage('Dokument uspješno prenesen!');\n      setAlertType('success');\n      setShowAlert(true);\n      fetchDocuments(); // Osvježi listu dokumenata\n    } catch (error) {\n      var _error$response13, _error$response14, _error$response14$dat;\n      console.error('Greška prilikom prijenosa dokumenta:', ((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) || error.message);\n      setAlertMessage('Neuspješan prijenos dokumenta. ' + (((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : (_error$response14$dat = _error$response14.data) === null || _error$response14$dat === void 0 ? void 0 : _error$response14$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- Secure Messaging ---\n  const handleNewMessageChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMessage(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleReplyMessageChange = e => {\n    setReplyMessage(prev => ({\n      ...prev,\n      content: e.target.value\n    }));\n  };\n  const handleSendMessage = async () => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće poslati poruku.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\n      setAlertMessage('Molimo popunite sva polja za poruku.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const messageData = {\n        senderId: user.pacijentId,\n        senderType: 'PACIJENT',\n        // Pretpostavljamo da Pacijent šalje poruku\n        receiverId: parseInt(newMessage.recipientId),\n        // mora biti int\n        receiverType: 'DOKTOR',\n        // Pretpostavljamo da se šalje Doktoru\n        subject: newMessage.subject,\n        content: newMessage.content\n      };\n      // Putanja: GATEWAY_BASE_URL/api/obavijesti-dokumentacija/api/poruke/posalji\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\n      setAlertMessage('Poruka uspješno poslana!');\n      setAlertType('success');\n      setShowAlert(true);\n      setNewMessage({\n        recipientId: '',\n        subject: '',\n        content: ''\n      }); // Očisti formu\n      fetchMessages(); // Osvježi poruke\n    } catch (error) {\n      var _error$response15, _error$response16, _error$response16$dat;\n      console.error('Greška prilikom slanja poruke:', ((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.data) || error.message);\n      setAlertMessage('Neuspješno slanje poruke. ' + (((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : (_error$response16$dat = _error$response16.data) === null || _error$response16$dat === void 0 ? void 0 : _error$response16$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleReply = async messageId => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće odgovoriti.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!replyMessage.content) {\n      setAlertMessage('Sadržaj odgovora ne može biti prazan.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      // Putanja: GATEWAY_BASE_URL/api/obavijesti-dokumentacija/api/poruke/{id}/odgovori\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\n        senderId: user.pacijentId,\n        senderType: 'PACIJENT',\n        content: replyMessage.content\n      }, authHeaders);\n      setAlertMessage('Odgovor uspješno poslan!');\n      setAlertType('success');\n      setShowAlert(true);\n      setReplyMessage({\n        messageId: '',\n        content: ''\n      });\n      fetchMessages();\n      // Ažuriraj selectedMessage da se prikaže novi odgovor bez ponovnog dohvaćanja cijele poruke\n      setSelectedMessage(prev => ({\n        ...prev,\n        replies: [...(prev.replies || []), {\n          senderId: user.pacijentId,\n          senderIme: user.firstName + \" \" + user.lastName,\n          // Pretpostavi ime za trenutni prikaz\n          senderType: 'PACIJENT',\n          content: replyMessage.content,\n          timestamp: new Date().toISOString() // Trenutno vrijeme\n        }]\n      }));\n    } catch (error) {\n      var _error$response17, _error$response18, _error$response18$dat;\n      console.error('Greška prilikom slanja odgovora:', ((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : _error$response17.data) || error.message);\n      setAlertMessage('Neuspješno slanje odgovora. ' + (((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : (_error$response18$dat = _error$response18.data) === null || _error$response18$dat === void 0 ? void 0 : _error$response18$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleViewMessage = message => {\n    setSelectedMessage(message);\n  };\n  const closeMessageModal = () => {\n    setSelectedMessage(null);\n    setReplyMessage({\n      messageId: '',\n      content: ''\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-2\",\n        children: \"U\\u010Ditavanje podataka kontrolne plo\\u010De...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-white p-3\",\n      style: {\n        width: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-4\",\n        children: \"Kontrolna plo\\u010Da pacijenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('overview'),\n            children: \"Pregled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('myAppointments'),\n            children: \"Moji pregledi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('medicalHistory'),\n            children: \"Medicinska historija\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('documents'),\n            children: \"Moji dokumenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('billing'),\n            children: \"Naplata i pla\\u0107anja\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('messages'),\n            children: \"Poruke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('doctorSearch'),\n            children: \"Prona\\u0111i doktora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('profileSettings'),\n            children: \"Postavke profila\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 p-4 bg-light\",\n      children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: alertType,\n        onClose: () => setShowAlert(false),\n        dismissible: true,\n        className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n        style: {\n          zIndex: 1050\n        },\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: \"Kontrolna plo\\u010Da pacijenta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 17\n      }, this), activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Dobrodo\\u0161li, \", patientProfile.firstName || (user ? user.firstName : 'Pacijent'), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ovo je va\\u0161 pregled pacijenta. Ovdje mo\\u017Eete brzo vidjeti svoje nadolaze\\u0107e preglede i nedavne aktivnosti.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: \"Nadolaze\\u0107i pregledi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-group list-group-flush\",\n                children: appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').length > 0 ? appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').map(app => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item d-flex justify-content-between align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [app.appointmentDate, \" u \", app.appointmentTime]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 739,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 740,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Razlog: \", app.reason]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 741,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 742,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Doktor: \", app.doktorIme]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 743,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 738,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`,\n                    children: app.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 745,\n                    columnNumber: 53\n                  }, this)]\n                }, app.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 737,\n                  columnNumber: 49\n                }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: \"Nema nadolaze\\u0107ih pregleda.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 21\n      }, this), activeTab === 'myAppointments' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moji pregledi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => openAppointmentModal(),\n          children: \"Zaka\\u017Ei novi pregled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 25\n        }, this), appointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Doktor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vrijeme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Razlog\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: appointments.map(app => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.doktorIme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.appointmentDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.appointmentTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.reason\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${app.status === 'obavljen' ? 'success' : app.status === 'zakazan' ? 'warning' : 'danger'}`,\n                  children: app.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.status === 'zakazan' || app.status === 'potvrđen' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"info\",\n                    size: \"sm\",\n                    className: \"me-2\",\n                    onClick: () => openAppointmentModal(app),\n                    children: \"Uredi\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 787,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    size: \"sm\",\n                    onClick: () => handleCancelAppointment(app.id),\n                    children: \"Otka\\u017Ei\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 788,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Nema dostupnih akcija\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 791,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 45\n              }, this)]\n            }, app.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111ene historije pregleda. Zaka\\u017Eite svoj prvi pregled!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 21\n      }, this), activeTab === 'medicalHistory' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moja medicinska historija\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 25\n        }, this), medicalHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: medicalHistory.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 41\n            }, this), \" \", record.datum, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 80\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Dijagnoza:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 41\n            }, this), \" \", record.dijagnoza, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 88\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tretman:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 41\n            }, this), \" \", record.lijecenje, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 86\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Doktor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 41\n            }, this), \" \", record.doktorIme]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih zapisa medicinske historije.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 21\n      }, this), activeTab === 'documents' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moji dokumenti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formFile\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Prenesi novi dokument\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: handleDocumentUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 25\n        }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Naziv dokumenta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum prijenosa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 838,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Pristup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 846,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.documentType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(doc.uploadDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`,\n                  children: doc.pristup\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 849,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  href: `${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${doc.id}`,\n                  target: \"_blank\",\n                  children: \"Preuzmi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 853,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 850,\n                columnNumber: 45\n              }, this)]\n            }, doc.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 845,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih dokumenata.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 21\n      }, this), activeTab === 'billing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Naplata i pla\\u0107anja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 25\n        }, this), bills.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID ra\\u010Duna\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 873,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum izdavanja\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Iznos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Opis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Izdao\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 879,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 872,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: bills.map(bill => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(bill.billDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.amount ? bill.amount.toFixed(2) : 'N/A', \" KM\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${bill.status === 'PLACEN' ? 'success' : 'warning'}`,\n                  children: bill.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 888,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 888,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.opis\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.doktorIme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.status === 'NEPLACEN' && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  className: \"me-2\",\n                  children: \"Plati sada\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 893,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  children: \"Pogledaj detalje\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 895,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 45\n              }, this)]\n            }, bill.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih zapisa o naplati.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 21\n      }, this), activeTab === 'messages' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moje poruke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => setNewMessage({\n            recipientId: '',\n            subject: '',\n            content: ''\n          }),\n          children: \"Sastavi novu poruku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 25\n        }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Od: \", msg.senderIme || (msg.senderType === 'DOKTOR' ? `Doktor (${msg.senderId})` : 'Ja')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 45\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 151\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Naslov:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 45\n              }, this), \" \", msg.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 84\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: new Date(msg.timestamp).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              size: \"sm\",\n              onClick: () => handleViewMessage(msg),\n              children: \"Pogledaj poruku\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 41\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih poruka.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sastavi novu poruku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Primalac (Doktor)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"recipientId\",\n              value: newMessage.recipientId,\n              onChange: handleNewMessageChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite doktora --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 37\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.id,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 945,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Naslov\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"subject\",\n              value: newMessage.subject,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Sadr\\u017Eaj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"content\",\n              value: newMessage.content,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSendMessage,\n            children: \"Po\\u0161alji poruku\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 21\n      }, this), activeTab === 'doctorSearch' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Prona\\u0111i doktora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pretra\\u017Eite doktore po imenu ili specijalnosti kako biste prona\\u0161li pravu njegu za vas.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Pretra\\u017Ei po imenu ili specijalnosti...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 25\n        }, this), doctors.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Ime\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 987,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Specijalnost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 988,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Kontakt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 989,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.specialty || 'Opšti praktičar'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.email, \" | \", doctor.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"sm\",\n                  onClick: () => {\n                    setNewAppointment(prev => ({\n                      ...prev,\n                      doctorId: doctor.id\n                    }));\n                    openAppointmentModal();\n                  },\n                  children: \"Zaka\\u017Ei pregled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1000,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 45\n              }, this)]\n            }, doctor.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih doktora.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 21\n      }, this), activeTab === 'profileSettings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Postavke profila\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formFirstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Ime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              value: patientProfile.firstName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1019,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formLastName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Prezime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1029,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              value: patientProfile.lastName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: patientProfile.email || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1039,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formPhone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Telefon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1047,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"phone\",\n              value: patientProfile.phone || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAddress\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Adresa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"adresa\" // Koristi \"adresa\" jer ti je to polje u modelu\n              ,\n              value: patientProfile.adresa || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDatumRodjenja\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Datum ro\\u0111enja\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"datumRodjenja\" // Koristi \"datumRodjenja\"\n              ,\n              value: patientProfile.datumRodjenja || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1066,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSaveProfile,\n            children: \"Sa\\u010Duvaj profil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAppointmentModal,\n      onHide: closeAppointmentModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: editingAppointment ? 'Uredi pregled' : 'Zakaži novi pregled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDoctor\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odaberite doktora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1089,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"doctorId\",\n              value: newAppointment.doctorId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite doktora --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 33\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.id,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1099,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1090,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1088,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAppointmentDate\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Datum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"appointmentDate\",\n              value: newAppointment.appointmentDate,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              disabled: !newAppointment.doctorId // Onemogući odabir datuma ako doktor nije odabran\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 25\n          }, this), newAppointment.doctorId && newAppointment.appointmentDate && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAppointmentTime\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odaberite dostupno vrijeme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1116,\n              columnNumber: 33\n            }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 37\n            }, this) : availableTimes.length > 0 ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"appointmentTime\",\n              value: newAppointment.appointmentTime,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite vrijeme --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 41\n              }, this), availableTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: time.vrijeme,\n                children: time.vrijeme\n              }, time.terminID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1129,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: \"Nema dostupnih termina za ovog doktora na odabrani datum.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1133,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formReason\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Razlog za pregled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"reason\",\n              value: newAppointment.reason,\n              onChange: handleNewAppointmentChange,\n              placeholder: \"npr. Op\\u0161ti pregled, specifi\\u010Dni simptomi...\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeAppointmentModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleScheduleAppointment,\n          disabled: !newAppointment.doctorId || !newAppointment.appointmentDate || !newAppointment.appointmentTime || loading,\n          children: editingAppointment ? 'Ažuriraj pregled' : 'Zakaži pregled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1082,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: !!selectedMessage,\n      onHide: closeMessageModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Poruka: \", selectedMessage === null || selectedMessage === void 0 ? void 0 : selectedMessage.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Od:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1173,\n              columnNumber: 32\n            }, this), \" \", selectedMessage.senderIme || (selectedMessage.senderType === 'DOKTOR' ? `Doktor (${selectedMessage.senderId})` : 'Ja')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1173,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1174,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedMessage.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1175,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1176,\n            columnNumber: 29\n          }, this), selectedMessage.replies && selectedMessage.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Odgovori:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1180,\n              columnNumber: 37\n            }, this), selectedMessage.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border p-2 mb-2 rounded bg-light\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [reply.senderIme || (reply.senderType === 'DOKTOR' ? `Doktor (${reply.senderId})` : 'Ja'), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1184,\n                columnNumber: 45\n              }, this), \" \", reply.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1185,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: new Date(reply.timestamp).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1186,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1182,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1179,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odgovor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1193,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: replyMessage.content,\n              onChange: handleReplyMessageChange,\n              placeholder: \"Upi\\u0161ite va\\u0161 odgovor ovdje...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1194,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1192,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mt-2\",\n            onClick: () => handleReply(selectedMessage.id),\n            children: \"Po\\u0161alji odgovor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1202,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeMessageModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1166,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 639,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDashboard, \"dxofN7uOAxeW7LOYesHL4uMPNkw=\", false, function () {\n  return [useAuth];\n});\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["axios","useAuth","React","useState","useEffect","useMemo","Modal","Button","Form","Alert","Spinner","Tab","Tabs","jsxDEV","_jsxDEV","Fragment","_Fragment","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","OBAVIJESTI_DOKUMENTI_API_PREFIX","AUTH_API_PREFIX","PatientDashboard","_s","token","user","console","log","authHeaders","headers","activeTab","setActiveTab","appointments","setAppointments","medicalHistory","setMedicalHistory","patientProfile","setPatientProfile","doctors","setDoctors","availableTimes","setAvailableTimes","documents","setDocuments","bills","setBills","messages","setMessages","newMessage","setNewMessage","recipientId","subject","content","replyMessage","setReplyMessage","messageId","selectedMessage","setSelectedMessage","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","showAppointmentModal","setShowAppointmentModal","newAppointment","setNewAppointment","doctorId","appointmentDate","appointmentTime","reason","editingAppointment","setEditingAppointment","loading","setLoading","fetchPatientAppointments","pacijentId","warn","response","get","transformedAppointments","data","map","app","id","pregledID","doktorID","patientId","pacijentID","datumPregleda","vrijemePregleda","komentarPacijenta","status","terminID","doktorIme","error","_error$response","message","fetchMedicalHistory","_error$response2","fetchPatientProfile","firstName","ime","lastName","prezime","email","phone","telefon","datumRodjenja","adresa","userId","_error$response3","fetchDoctors","transformedDoctors","doc","specialty","Array","isArray","specijalizacije","join","_error$response4","fetchDoctorAvailability","date","available","filter","term","dostupnost","vrijeme","sort","a","b","localeCompare","_error$response5","fetchDocuments","transformedDocuments","dokumentID","fileName","nazivDokumenta","documentType","tipDokumenta","uploadDate","datumKreiranja","pristup","_error$response6","fetchBills","transformedBills","bill","racunID","billDate","datumIzdavanja","amount","iznos","dueDate","datumDospijeca","opis","_error$response7","fetchMessages","transformedMessages","msg","porukaID","senderId","senderType","senderIme","receiverId","receiverType","receiverIme","timestamp","replies","_error$response8","loadAllData","Promise","all","openAppointmentModal","appointment","closeAppointmentModal","handleNewAppointmentChange","e","name","value","target","prev","docId","appDate","handleScheduleAppointment","selectedTermin","find","t","appointmentData","parseInt","put","post","_error$response9","_error$response0","_error$response0$data","errorMessage","handleCancelAppointment","appointmentId","window","confirm","existingApp","updatedStatusPayload","_error$response1","_error$response10","_error$response10$dat","handleProfileChange","handleSaveProfile","profilePayload","authProfilePayload","fullName","_error$response11","_error$response12","_error$response12$dat","handleDocumentUpload","file","files","formData","FormData","append","_error$response13","_error$response14","_error$response14$dat","handleNewMessageChange","handleReplyMessageChange","handleSendMessage","messageData","_error$response15","_error$response16","_error$response16$dat","handleReply","Date","toISOString","_error$response17","_error$response18","_error$response18$dat","handleViewMessage","closeMessageModal","className","style","minHeight","children","animation","role","_jsxFileName","lineNumber","columnNumber","width","onClick","variant","onClose","dismissible","zIndex","length","size","record","index","datum","dijagnoza","lijecenje","Group","controlId","Label","Control","type","onChange","toLocaleDateString","href","toFixed","toLocaleString","as","required","doctor","rows","placeholder","show","onHide","Header","closeButton","Title","Body","disabled","time","Footer","reply","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/PatientDashboard.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs } from 'react-bootstrap';\r\n// Nema potrebe za react-datepicker ako ga tvoja originalna verzija ne koristi.\r\n// Ako želiš date picker, morat ćemo ga ručno integrirati u tvoje postojeće inpute tipa 'date'.\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\n// Definiranje API prefiksa za svaki mikroservis - KORISTIMO OVE PREFIKSE!\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`; // Pretpostavljena putanja za autentifikaciju, ako se koristi direktno\r\n\r\nfunction PatientDashboard() {\r\n    const { token, user } = useAuth();\r\n    console.log(\"Current user object from useAuth:\", user);\r\n\r\n    const authHeaders = useMemo(() => ({\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }), [token]);\r\n\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [medicalHistory, setMedicalHistory] = useState([]);\r\n    const [patientProfile, setPatientProfile] = useState({});\r\n    const [doctors, setDoctors] = useState([]); // To fetch doctors for appointment scheduling and search\r\n    const [availableTimes, setAvailableTimes] = useState([]); // For doctor availability\r\n    const [documents, setDocuments] = useState([]); // For patient documents\r\n    const [bills, setBills] = useState([]); // For billing information\r\n    const [messages, setMessages] = useState([]); // For secure messaging\r\n    const [newMessage, setNewMessage] = useState({ recipientId: '', subject: '', content: '' });\r\n    const [replyMessage, setReplyMessage] = useState({ messageId: '', content: '' });\r\n    const [selectedMessage, setSelectedMessage] = useState(null); // For viewing a single message\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('success');\r\n\r\n    const [showAppointmentModal, setShowAppointmentModal] = useState(false);\r\n    const [newAppointment, setNewAppointment] = useState({\r\n        doctorId: '', // Ovo će biti doktorID iz baze\r\n        appointmentDate: '',\r\n        appointmentTime: '',\r\n        reason: ''\r\n    });\r\n    const [editingAppointment, setEditingAppointment] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n\r\n    // --- API Calls ---\r\n\r\n    const fetchPatientAppointments = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching appointments.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Putanja: GATEWAY_BASE_URL/api/termini-pregledi/api/pregledi/pacijent/{id}\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/zakazani/${user.pacijentId}`, authHeaders);\r\n            const transformedAppointments = response.data.map(app => ({\r\n                id: app.pregledID,\r\n                doctorId: app.doktorID,\r\n                patientId: app.pacijentID,\r\n                appointmentDate: app.datumPregleda,\r\n                appointmentTime: app.vrijemePregleda,\r\n                reason: app.komentarPacijenta,\r\n                status: app.status,\r\n                terminID: app.terminID, // Dodano za update logiku\r\n                doktorIme: app.doktorIme // Dodano za prikaz\r\n            }));\r\n            setAppointments(transformedAppointments);\r\n            setAlertType('success');\r\n            setShowAlert(false); // Clear previous alerts\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja pacijentovih pregleda:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje zakazanih pregleda.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMedicalHistory = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching medical history.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Putanja: GATEWAY_BASE_URL/api/korisnici-doktori/api/pacijenti/{id}/medical-history\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}/medical-history`, authHeaders);\r\n            setMedicalHistory(response.data);\r\n            setAlertType('success');\r\n            setShowAlert(false); // Clear previous alerts\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja medicinske historije:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje medicinske historije.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchPatientProfile = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching patient profile.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Putanja: GATEWAY_BASE_URL/api/korisnici-doktori/api/pacijenti/{id}\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, authHeaders);\r\n            setPatientProfile({\r\n                id: response.data.pacijentID,\r\n                firstName: response.data.ime,\r\n                lastName: response.data.prezime,\r\n                email: response.data.email,\r\n                phone: response.data.telefon,\r\n                datumRodjenja: response.data.datumRodjenja, // Dodano ako postoji\r\n                adresa: response.data.adresa, // Dodano ako postoji\r\n                userId: response.data.userId // Dodaj userId\r\n            });\r\n            setAlertType('success');\r\n            setShowAlert(false); // Clear previous alerts\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja pacijentovog profila:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje podataka profila.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctors = async () => {\r\n        try {\r\n            // Putanja: GATEWAY_BASE_URL/api/korisnici-doktori/api/doktori\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n            const transformedDoctors = response.data.map(doc => ({\r\n                id: doc.doktorID,\r\n                firstName: doc.ime,\r\n                lastName: doc.prezime,\r\n                specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\r\n                email: doc.email,\r\n                phone: doc.telefon\r\n            }));\r\n            setDoctors(transformedDoctors);\r\n            setAlertType('success');\r\n            setShowAlert(false); // Clear previous alerts\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja doktora:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje liste doktora.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctorAvailability = async (doctorId, date) => {\r\n        if (!doctorId || !date) {\r\n            setAvailableTimes([]);\r\n            return;\r\n        }\r\n        setLoading(true); // Postavi loading state\r\n        try {\r\n            // Putanja: GATEWAY_BASE_URL/api/termini-pregledi/api/termini/doktor/{doktorId}/datum/{datum}\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${doctorId}/datum/${date}`, authHeaders);\r\n            const available = response.data\r\n                .filter(term => term.dostupnost)\r\n                .map(term => ({ terminID: term.terminID, vrijeme: term.vrijeme })) // Dohvati i terminID\r\n                .sort((a, b) => a.vrijeme.localeCompare(b.vrijeme)); // Sortiraj po vremenu\r\n            setAvailableTimes(available);\r\n            setAlertType('success');\r\n            setShowAlert(false); // Clear previous alerts\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja dostupnosti doktora:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje dostupnosti doktora.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            setAvailableTimes([]);\r\n        } finally {\r\n            setLoading(false); // Ukloni loading state\r\n        }\r\n    };\r\n\r\n    const fetchDocuments = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching documents.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Putanja: GATEWAY_BASE_URL/api/obavijesti-dokumentacija/api/dokumentacija/pacijent/{id}\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedDocuments = response.data.map(doc => ({\r\n                id: doc.dokumentID,\r\n                fileName: doc.nazivDokumenta,\r\n                documentType: doc.tipDokumenta,\r\n                uploadDate: doc.datumKreiranja,\r\n                pristup: doc.pristup // Dodano\r\n            }));\r\n            setDocuments(transformedDocuments);\r\n            setAlertType('success');\r\n            setShowAlert(false); // Clear previous alerts\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja dokumenata:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje dokumenata.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchBills = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching bills.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Putanja: GATEWAY_BASE_URL/api/obavijesti-dokumentacija/api/racuni/pacijent/{id}\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedBills = response.data.map(bill => ({\r\n                id: bill.racunID,\r\n                billDate: bill.datumIzdavanja,\r\n                amount: bill.iznos,\r\n                status: bill.status, // Prilagođeno novom RacunDTO\r\n                dueDate: bill.datumDospijeca, // Ako postoji u DTO\r\n                opis: bill.opis,\r\n                doktorIme: bill.doktorIme\r\n            }));\r\n            setBills(transformedBills);\r\n            setAlertType('success');\r\n            setShowAlert(false); // Clear previous alerts\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja računa:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje informacija o naplati.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching messages.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Putanja: GATEWAY_BASE_URL/api/obavijesti-dokumentacija/api/poruke/primatelj/{id}\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/primatelj/${user.pacijentId}?receiverType=PACIJENT`, authHeaders);\r\n            const transformedMessages = response.data.map(msg => ({\r\n                id: msg.porukaID,\r\n                senderId: msg.senderId,\r\n                senderType: msg.senderType,\r\n                senderIme: msg.senderIme, // Dodano za prikaz\r\n                receiverId: msg.receiverId,\r\n                receiverType: msg.receiverType,\r\n                receiverIme: msg.receiverIme, // Dodano za prikaz\r\n                subject: msg.subject,\r\n                content: msg.content,\r\n                timestamp: msg.timestamp,\r\n                replies: msg.replies || [] // Provjeri da replies nije null\r\n            }));\r\n            setMessages(transformedMessages);\r\n            setAlertType('success');\r\n            setShowAlert(false); // Clear previous alerts\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja poruka:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje poruka.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- useEffect Hooks ---\r\n    useEffect(() => {\r\n        const loadAllData = async () => {\r\n            if (token && user?.pacijentId) {\r\n                setLoading(true);\r\n                await Promise.all([\r\n                    fetchPatientAppointments(),\r\n                    fetchMedicalHistory(),\r\n                    fetchPatientProfile(),\r\n                    fetchDoctors(),\r\n                    fetchDocuments(),\r\n                    fetchBills(),\r\n                    fetchMessages()\r\n                ]);\r\n                setLoading(false);\r\n            } else if (!token || (user && !user.pacijentId)) {\r\n                setLoading(false);\r\n                if (!token) {\r\n                    console.warn(\"Token nije dostupan. Korisnik nije ulogovan.\");\r\n                } else if (user && !user.pacijentId) {\r\n                    console.warn(\"User objekat je dostupan, ali pacijentId nije. Moguće da korisnik nije pacijent.\");\r\n                }\r\n            }\r\n        };\r\n        loadAllData();\r\n    }, [token, user]); // Re-run when token or user changes\r\n\r\n\r\n    // --- Appointment Scheduling/Cancellation ---\r\n\r\n    const openAppointmentModal = (appointment = null) => {\r\n        if (appointment) {\r\n            setEditingAppointment(appointment);\r\n            setNewAppointment({\r\n                doctorId: appointment.doctorId,\r\n                appointmentDate: appointment.appointmentDate,\r\n                appointmentTime: appointment.appointmentTime,\r\n                reason: appointment.reason\r\n            });\r\n            // Pozovi fetchDoctorAvailability sa postojećim podacima\r\n            fetchDoctorAvailability(appointment.doctorId, appointment.appointmentDate);\r\n        } else {\r\n            setEditingAppointment(null);\r\n            setNewAppointment({\r\n                doctorId: '',\r\n                appointmentDate: '',\r\n                appointmentTime: '',\r\n                reason: ''\r\n            });\r\n            setAvailableTimes([]); // Clear availability for new appointment\r\n        }\r\n        setShowAppointmentModal(true);\r\n    };\r\n\r\n    const closeAppointmentModal = () => {\r\n        setShowAppointmentModal(false);\r\n        setEditingAppointment(null);\r\n        setNewAppointment({\r\n            doctorId: '',\r\n            appointmentDate: '',\r\n            appointmentTime: '',\r\n            reason: ''\r\n        });\r\n        setAvailableTimes([]);\r\n    };\r\n\r\n    const handleNewAppointmentChange = async (e) => {\r\n        const { name, value } = e.target;\r\n        setNewAppointment(prev => ({ ...prev, [name]: value }));\r\n\r\n        if (name === 'doctorId' || name === 'appointmentDate') {\r\n            const docId = name === 'doctorId' ? value : newAppointment.doctorId;\r\n            const appDate = name === 'appointmentDate' ? value : newAppointment.appointmentDate;\r\n            if (docId && appDate) {\r\n                await fetchDoctorAvailability(docId, appDate);\r\n            } else {\r\n                setAvailableTimes([]);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const handleScheduleAppointment = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće zakazati pregled.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        if (!newAppointment.doctorId || !newAppointment.appointmentDate || !newAppointment.appointmentTime) {\r\n            setAlertMessage('Molimo popunite sva polja za zakazivanje pregleda.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const selectedTermin = availableTimes.find(t => t.vrijeme === newAppointment.appointmentTime);\r\n            if (!selectedTermin) {\r\n                setAlertMessage('Odabrani termin nije validan ili nije dostupan.');\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n                return;\r\n            }\r\n\r\n            const appointmentData = {\r\n                pacijentID: user.pacijentId,\r\n                doktorID: parseInt(newAppointment.doctorId),\r\n                datumPregleda: newAppointment.appointmentDate,\r\n                vrijemePregleda: newAppointment.appointmentTime,\r\n                komentarPacijenta: newAppointment.reason,\r\n                // Status je \"zakazan\" pri kreiranju, kod ažuriranja može biti drugačiji\r\n                status: editingAppointment ? editingAppointment.status : 'zakazan',\r\n                terminID: selectedTermin.terminID // Ovo je ključno!\r\n            };\r\n\r\n            let response;\r\n            if (editingAppointment) {\r\n                // Putanja: GATEWAY_BASE_URL/api/termini-pregledi/api/pregledi/{id}\r\n                response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${editingAppointment.id}`, appointmentData, authHeaders);\r\n                setAlertMessage('Pregled uspješno ažuriran!');\r\n            } else {\r\n                // Putanja: GATEWAY_BASE_URL/api/termini-pregledi/api/pregledi\r\n                response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\r\n                setAlertMessage('Pregled uspješno zakazan!');\r\n            }\r\n\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchPatientAppointments();\r\n            closeAppointmentModal();\r\n        } catch (error) {\r\n            console.error('Greška prilikom zakazivanja/ažuriranja pregleda:', error.response?.data || error.message);\r\n            let errorMessage = 'Neuspješno zakazivanje/ažuriranje pregleda. Molimo pokušajte ponovo.';\r\n            if (error.response?.data?.message) {\r\n                errorMessage = error.response.data.message;\r\n            } else if (error.message) {\r\n                errorMessage = error.message;\r\n            }\r\n            setAlertMessage(errorMessage);\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleCancelAppointment = async (appointmentId) => {\r\n        if (window.confirm('Jeste li sigurni da želite otkazati ovaj pregled?')) {\r\n            try {\r\n                // Putanja: GATEWAY_BASE_URL/api/termini-pregledi/api/pregledi/{id}\r\n                const existingApp = appointments.find(app => app.id === appointmentId);\r\n                if (!existingApp) {\r\n                    setAlertMessage(\"Pregled nije pronađen za otkazivanje.\");\r\n                    setAlertType('danger');\r\n                    setShowAlert(true);\r\n                    return;\r\n                }\r\n                const updatedStatusPayload = { ...existingApp, status: 'otkazan' };\r\n                await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}`, updatedStatusPayload, authHeaders);\r\n                setAlertMessage('Pregled uspješno otkazan!');\r\n                setAlertType('success');\r\n                setShowAlert(true);\r\n                fetchPatientAppointments();\r\n            } catch (error) {\r\n                console.error('Greška prilikom otkazivanja pregleda:', error.response?.data || error.message);\r\n                setAlertMessage('Neuspješno otkazivanje pregleda. Molimo pokušajte ponovo. ' + (error.response?.data?.message || error.message));\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    // --- Profile Update ---\r\n    const handleProfileChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPatientProfile(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSaveProfile = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće sačuvati profil.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const profilePayload = {\r\n                pacijentID: user.pacijentId, // Pacijent ID iz korisnika\r\n                ime: patientProfile.firstName,\r\n                prezime: patientProfile.lastName,\r\n                email: patientProfile.email,\r\n                telefon: patientProfile.phone,\r\n                datumRodjenja: patientProfile.datumRodjenja,\r\n                adresa: patientProfile.adresa,\r\n                userId: patientProfile.userId // User ID iz Auth servisa (ako postoji i ako se koristi)\r\n            };\r\n            // Putanja: GATEWAY_BASE_URL/api/korisnici-doktori/api/pacijenti/{id}\r\n            await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, profilePayload, authHeaders);\r\n\r\n            // Ažuriraj i Auth servis ako su se promijenili fullName, email ili telefon\r\n            // Ovdje se koristi user.id (koji je vjerovatno email ili userId iz tokena) jer Auth servis radi sa tim ID-jem.\r\n            // PROVJERI STVARNI ID U AUTH SERVISU\r\n            if (user.id && user.id !== user.pacijentId) { // Da ne bi slali dva puta na isti ID ako je isti\r\n                const authProfilePayload = {\r\n                    fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\r\n                    email: patientProfile.email,\r\n                    telefon: patientProfile.phone,\r\n                };\r\n                // Putanja: GATEWAY_BASE_URL/auth/users/{id}\r\n                await axios.put(`${AUTH_API_PREFIX}/users/${user.id}`, authProfilePayload, authHeaders); // OVDJE OSTAJE user.id (koji je string)\r\n            }\r\n\r\n\r\n            setAlertMessage('Profil uspješno ažuriran!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchPatientProfile(); // Ponovo dohvati profil da se vide promjene\r\n        } catch (error) {\r\n            console.error('Greška prilikom ažuriranja profila:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno ažuriranje profila. Molimo pokušajte ponovo. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- Document Upload ---\r\n    const handleDocumentUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('pacijentID', user.pacijentId);\r\n        formData.append('tipDokumenta', 'Patient Upload'); // Može biti i input polje za ovo\r\n\r\n        try {\r\n            // Putanja: GATEWAY_BASE_URL/api/obavijesti-dokumentacija/api/dokumentacija/upload\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            setAlertMessage('Dokument uspješno prenesen!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchDocuments(); // Osvježi listu dokumenata\r\n        } catch (error) {\r\n            console.error('Greška prilikom prijenosa dokumenta:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješan prijenos dokumenta. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- Secure Messaging ---\r\n    const handleNewMessageChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewMessage(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleReplyMessageChange = (e) => {\r\n        setReplyMessage(prev => ({ ...prev, content: e.target.value }));\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće poslati poruku.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\r\n            setAlertMessage('Molimo popunite sva polja za poruku.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const messageData = {\r\n                senderId: user.pacijentId,\r\n                senderType: 'PACIJENT', // Pretpostavljamo da Pacijent šalje poruku\r\n                receiverId: parseInt(newMessage.recipientId), // mora biti int\r\n                receiverType: 'DOKTOR', // Pretpostavljamo da se šalje Doktoru\r\n                subject: newMessage.subject,\r\n                content: newMessage.content\r\n            };\r\n            // Putanja: GATEWAY_BASE_URL/api/obavijesti-dokumentacija/api/poruke/posalji\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\r\n            setAlertMessage('Poruka uspješno poslana!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setNewMessage({ recipientId: '', subject: '', content: '' }); // Očisti formu\r\n            fetchMessages(); // Osvježi poruke\r\n        } catch (error) {\r\n            console.error('Greška prilikom slanja poruke:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno slanje poruke. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleReply = async (messageId) => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće odgovoriti.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!replyMessage.content) {\r\n            setAlertMessage('Sadržaj odgovora ne može biti prazan.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        try {\r\n            // Putanja: GATEWAY_BASE_URL/api/obavijesti-dokumentacija/api/poruke/{id}/odgovori\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\r\n                senderId: user.pacijentId,\r\n                senderType: 'PACIJENT',\r\n                content: replyMessage.content\r\n            }, authHeaders);\r\n            setAlertMessage('Odgovor uspješno poslan!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setReplyMessage({ messageId: '', content: '' });\r\n            fetchMessages();\r\n            // Ažuriraj selectedMessage da se prikaže novi odgovor bez ponovnog dohvaćanja cijele poruke\r\n            setSelectedMessage(prev => ({\r\n                ...prev,\r\n                replies: [...(prev.replies || []), {\r\n                    senderId: user.pacijentId,\r\n                    senderIme: user.firstName + \" \" + user.lastName, // Pretpostavi ime za trenutni prikaz\r\n                    senderType: 'PACIJENT',\r\n                    content: replyMessage.content,\r\n                    timestamp: new Date().toISOString() // Trenutno vrijeme\r\n                }]\r\n            }));\r\n        } catch (error) {\r\n            console.error('Greška prilikom slanja odgovora:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno slanje odgovora. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleViewMessage = (message) => {\r\n        setSelectedMessage(message);\r\n    };\r\n\r\n    const closeMessageModal = () => {\r\n        setSelectedMessage(null);\r\n        setReplyMessage({ messageId: '', content: '' });\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Učitavanje...</span>\r\n                </Spinner>\r\n                <p className=\"ms-2\">Učitavanje podataka kontrolne ploče...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ minHeight: '100vh' }}>\r\n            {/* Sidebar */}\r\n            <div className=\"bg-dark text-white p-3\" style={{ width: '250px' }}>\r\n                <h4 className=\"mb-4\">Kontrolna ploča pacijenta</h4>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('overview')}\r\n                        >\r\n                            Pregled\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('myAppointments')}\r\n                        >\r\n                            Moji pregledi\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('medicalHistory')}\r\n                        >\r\n                            Medicinska historija\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('documents')}\r\n                        >\r\n                            Moji dokumenti\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('billing')}\r\n                        >\r\n                            Naplata i plaćanja\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('messages')}\r\n                        >\r\n                            Poruke\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('doctorSearch')}\r\n                        >\r\n                            Pronađi doktora\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('profileSettings')}\r\n                        >\r\n                            Postavke profila\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            {/* Main Content Area */}\r\n            <div className=\"flex-grow-1 p-4 bg-light\">\r\n                {showAlert && (\r\n                    <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n                        {alertMessage}\r\n                    </Alert>\r\n                )}\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <h2 className=\"mb-0\">Kontrolna ploča pacijenta</h2>\r\n                </div>\r\n\r\n                {/* Content based on activeTab */}\r\n                {activeTab === 'overview' && (\r\n                    <div>\r\n                        <h3>Dobrodošli, {patientProfile.firstName || (user ? user.firstName : 'Pacijent')}!</h3>\r\n                        <p>Ovo je vaš pregled pacijenta. Ovdje možete brzo vidjeti svoje nadolazeće preglede i nedavne aktivnosti.</p>\r\n                        <div className=\"row mt-4\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        Nadolazeći pregledi\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        {appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').length > 0 ? (\r\n                                            appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').map(app => (\r\n                                                <li key={app.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                    <div>\r\n                                                        <strong>{app.appointmentDate} u {app.appointmentTime}</strong>\r\n                                                        <br />\r\n                                                        <small>Razlog: {app.reason}</small>\r\n                                                        <br />\r\n                                                        <small>Doktor: {app.doktorIme}</small>\r\n                                                    </div>\r\n                                                    <span className={`badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`}>{app.status}</span>\r\n                                                </li>\r\n                                            ))\r\n                                        ) : (\r\n                                            <li className=\"list-group-item\">Nema nadolazećih pregleda.</li>\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'myAppointments' && (\r\n                    <div>\r\n                        <h3>Moji pregledi</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => openAppointmentModal()}>\r\n                            Zakaži novi pregled\r\n                        </Button>\r\n                        {appointments.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Doktor</th>\r\n                                        <th>Datum</th>\r\n                                        <th>Vrijeme</th>\r\n                                        <th>Razlog</th>\r\n                                        <th>Status</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {appointments.map(app => (\r\n                                        <tr key={app.id}>\r\n                                            <td>{app.doktorIme}</td>\r\n                                            <td>{app.appointmentDate}</td>\r\n                                            <td>{app.appointmentTime}</td>\r\n                                            <td>{app.reason}</td>\r\n                                            <td><span className={`badge bg-${app.status === 'obavljen' ? 'success' : app.status === 'zakazan' ? 'warning' : 'danger'}`}>{app.status}</span></td>\r\n                                            <td>\r\n                                                {app.status === 'zakazan' || app.status === 'potvrđen' ? (\r\n                                                    <>\r\n                                                        <Button variant=\"info\" size=\"sm\" className=\"me-2\" onClick={() => openAppointmentModal(app)}>Uredi</Button>\r\n                                                        <Button variant=\"danger\" size=\"sm\" onClick={() => handleCancelAppointment(app.id)}>Otkaži</Button>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <small>Nema dostupnih akcija</small>\r\n                                                )}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađene historije pregleda. Zakažite svoj prvi pregled!</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'medicalHistory' && (\r\n                    <div>\r\n                        <h3>Moja medicinska historija</h3>\r\n                        {medicalHistory.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {medicalHistory.map((record, index) => (\r\n                                    <li key={index} className=\"list-group-item\">\r\n                                        <strong>Datum:</strong> {record.datum} <br />\r\n                                        <strong>Dijagnoza:</strong> {record.dijagnoza} <br />\r\n                                        <strong>Tretman:</strong> {record.lijecenje} <br />\r\n                                        <strong>Doktor:</strong> {record.doktorIme}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Nema pronađenih zapisa medicinske historije.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'documents' && (\r\n                    <div>\r\n                        <h3>Moji dokumenti</h3>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Prenesi novi dokument</Form.Label>\r\n                            <Form.Control type=\"file\" onChange={handleDocumentUpload} />\r\n                        </Form.Group>\r\n\r\n                        {documents.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Naziv dokumenta</th>\r\n                                        <th>Tip</th>\r\n                                        <th>Datum prijenosa</th>\r\n                                        <th>Pristup</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {documents.map(doc => (\r\n                                        <tr key={doc.id}>\r\n                                            <td>{doc.fileName}</td>\r\n                                            <td>{doc.documentType}</td>\r\n                                            <td>{new Date(doc.uploadDate).toLocaleDateString()}</td>\r\n                                            <td><span className={`badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`}>{doc.pristup}</span></td>\r\n                                            <td>\r\n                                                {/* Preuzimanje dokumenta - mora se prilagoditi backend putanji */}\r\n                                                {/* Putanja: GATEWAY_BASE_URL/api/obavijesti-dokumentacija/api/dokumentacija/download/{id} */}\r\n                                                <Button variant=\"success\" size=\"sm\" href={`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${doc.id}`} target=\"_blank\">Preuzmi</Button>\r\n                                                {/* Dodaj opciju brisanja ako je potrebno */}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih dokumenata.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'billing' && (\r\n                    <div>\r\n                        <h3>Naplata i plaćanja</h3>\r\n                        {bills.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID računa</th>\r\n                                        <th>Datum izdavanja</th>\r\n                                        <th>Iznos</th>\r\n                                        <th>Status</th>\r\n                                        <th>Opis</th>\r\n                                        <th>Izdao</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {bills.map(bill => (\r\n                                        <tr key={bill.id}>\r\n                                            <td>{bill.id}</td>\r\n                                            <td>{new Date(bill.billDate).toLocaleDateString()}</td>\r\n                                            <td>{bill.amount ? bill.amount.toFixed(2) : 'N/A'} KM</td>\r\n                                            <td><span className={`badge bg-${bill.status === 'PLACEN' ? 'success' : 'warning'}`}>{bill.status}</span></td>\r\n                                            <td>{bill.opis}</td>\r\n                                            <td>{bill.doktorIme}</td>\r\n                                            <td>\r\n                                                {bill.status === 'NEPLACEN' && (\r\n                                                    <Button variant=\"success\" size=\"sm\" className=\"me-2\">Plati sada</Button>\r\n                                                )}\r\n                                                <Button variant=\"info\" size=\"sm\">Pogledaj detalje</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih zapisa o naplati.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'messages' && (\r\n                    <div>\r\n                        <h3>Moje poruke</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => setNewMessage({ recipientId: '', subject: '', content: '' })}>Sastavi novu poruku</Button>\r\n\r\n                        {messages.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {messages.map(msg => (\r\n                                    <li key={msg.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            {/* Prilagođeno novoj strukturi DTO-a sa senderIme */}\r\n                                            <strong>Od: {msg.senderIme || (msg.senderType === 'DOKTOR' ? `Doktor (${msg.senderId})` : 'Ja')}</strong> <br />\r\n                                            <strong>Naslov:</strong> {msg.subject} <br />\r\n                                            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                        <Button variant=\"info\" size=\"sm\" onClick={() => handleViewMessage(msg)}>Pogledaj poruku</Button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Nema pronađenih poruka.</p>\r\n                        )}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <h4>Sastavi novu poruku</h4>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Primalac (Doktor)</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"recipientId\"\r\n                                    value={newMessage.recipientId}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Odaberite doktora --</option>\r\n                                    {doctors.map(doctor => (\r\n                                        <option key={doctor.id} value={doctor.id}>{doctor.firstName} {doctor.lastName}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Naslov</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    value={newMessage.subject}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Sadržaj</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"content\"\r\n                                    value={newMessage.content}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSendMessage}>Pošalji poruku</Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'doctorSearch' && (\r\n                    <div>\r\n                        <h3>Pronađi doktora</h3>\r\n                        <p>Pretražite doktore po imenu ili specijalnosti kako biste pronašli pravu njegu za vas.</p>\r\n                        {/* Osnovni input za pretragu - može se proširiti */}\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control type=\"text\" placeholder=\"Pretraži po imenu ili specijalnosti...\" />\r\n                        </Form.Group>\r\n                        {doctors.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Ime</th>\r\n                                        <th>Specijalnost</th>\r\n                                        <th>Kontakt</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {doctors.map(doctor => (\r\n                                        <tr key={doctor.id}>\r\n                                            <td>{doctor.firstName} {doctor.lastName}</td>\r\n                                            <td>{doctor.specialty || 'Opšti praktičar'}</td>\r\n                                            <td>{doctor.email} | {doctor.phone}</td>\r\n                                            <td>\r\n                                                <Button variant=\"primary\" size=\"sm\" onClick={() => {\r\n                                                    setNewAppointment(prev => ({ ...prev, doctorId: doctor.id }));\r\n                                                    openAppointmentModal();\r\n                                                }}>Zakaži pregled</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih doktora.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'profileSettings' && (\r\n                    <div>\r\n                        <h3>Postavke profila</h3>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                                <Form.Label>Ime</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={patientProfile.firstName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                                <Form.Label>Prezime</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    value={patientProfile.lastName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={patientProfile.email || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formPhone\">\r\n                                <Form.Label>Telefon</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"phone\"\r\n                                    value={patientProfile.phone || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAddress\">\r\n                                <Form.Label>Adresa</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"adresa\" // Koristi \"adresa\" jer ti je to polje u modelu\r\n                                    value={patientProfile.adresa || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formDatumRodjenja\">\r\n                                <Form.Label>Datum rođenja</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    name=\"datumRodjenja\" // Koristi \"datumRodjenja\"\r\n                                    value={patientProfile.datumRodjenja || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSaveProfile}>\r\n                                Sačuvaj profil\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Appointment Modal */}\r\n            <Modal show={showAppointmentModal} onHide={closeAppointmentModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{editingAppointment ? 'Uredi pregled' : 'Zakaži novi pregled'}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formDoctor\">\r\n                            <Form.Label>Odaberite doktora</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"doctorId\"\r\n                                value={newAppointment.doctorId}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">-- Odaberite doktora --</option>\r\n                                {doctors.map(doctor => (\r\n                                    <option key={doctor.id} value={doctor.id}>{doctor.firstName} {doctor.lastName}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formAppointmentDate\">\r\n                            <Form.Label>Datum</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                name=\"appointmentDate\"\r\n                                value={newAppointment.appointmentDate}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                                disabled={!newAppointment.doctorId} // Onemogući odabir datuma ako doktor nije odabran\r\n                            />\r\n                        </Form.Group>\r\n                        {newAppointment.doctorId && newAppointment.appointmentDate && (\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAppointmentTime\">\r\n                                <Form.Label>Odaberite dostupno vrijeme</Form.Label>\r\n                                {loading ? (\r\n                                    <Spinner animation=\"border\" size=\"sm\" />\r\n                                ) : availableTimes.length > 0 ? (\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"appointmentTime\"\r\n                                        value={newAppointment.appointmentTime}\r\n                                        onChange={handleNewAppointmentChange}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">-- Odaberite vrijeme --</option>\r\n                                        {availableTimes.map(time => (\r\n                                            <option key={time.terminID} value={time.vrijeme}>{time.vrijeme}</option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                ) : (\r\n                                    <Alert variant=\"info\">Nema dostupnih termina za ovog doktora na odabrani datum.</Alert>\r\n                                )}\r\n                            </Form.Group>\r\n                        )}\r\n                        <Form.Group className=\"mb-3\" controlId=\"formReason\">\r\n                            <Form.Label>Razlog za pregled</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"reason\"\r\n                                value={newAppointment.reason}\r\n                                onChange={handleNewAppointmentChange}\r\n                                placeholder=\"npr. Opšti pregled, specifični simptomi...\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeAppointmentModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={handleScheduleAppointment}\r\n                        disabled={!newAppointment.doctorId || !newAppointment.appointmentDate || !newAppointment.appointmentTime || loading}\r\n                    >\r\n                        {editingAppointment ? 'Ažuriraj pregled' : 'Zakaži pregled'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Message Detail Modal */}\r\n            <Modal show={!!selectedMessage} onHide={closeMessageModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Poruka: {selectedMessage?.subject}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedMessage && (\r\n                        <>\r\n                            <p><strong>Od:</strong> {selectedMessage.senderIme || (selectedMessage.senderType === 'DOKTOR' ? `Doktor (${selectedMessage.senderId})` : 'Ja')}</p>\r\n                            <p><strong>Datum:</strong> {new Date(selectedMessage.timestamp).toLocaleString()}</p>\r\n                            <hr />\r\n                            <p>{selectedMessage.content}</p>\r\n\r\n                            {selectedMessage.replies && selectedMessage.replies.length > 0 && (\r\n                                <div className=\"mt-4\">\r\n                                    <h5>Odgovori:</h5>\r\n                                    {selectedMessage.replies.map((reply, index) => (\r\n                                        <div key={index} className=\"border p-2 mb-2 rounded bg-light\">\r\n                                            {/* Prikaz senderIme iz DTO-a, ili fallback na ID */}\r\n                                            <strong>{reply.senderIme || (reply.senderType === 'DOKTOR' ? `Doktor (${reply.senderId})` : 'Ja')}:</strong> {reply.content}\r\n                                            <br />\r\n                                            <small>{new Date(reply.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            <Form.Group className=\"mt-4\">\r\n                                <Form.Label>Odgovor</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={2}\r\n                                    value={replyMessage.content}\r\n                                    onChange={handleReplyMessageChange}\r\n                                    placeholder=\"Upišite vaš odgovor ovdje...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" className=\"mt-2\" onClick={() => handleReply(selectedMessage.id)}>Pošalji odgovor</Button>\r\n                        </>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeMessageModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}