{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs, Card, ListGroup, Badge } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { format } from 'date-fns';\n\n// AŽURIRANO: API_URL sada pokazuje samo na bazni URL API Gatewaya\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8081';\nfunction PatientDashboard() {\n  _s();\n  const {\n    token,\n    user\n  } = useAuth(); // Assuming 'user' object contains patient-specific info like ID\n\n  const [activeTab, setActiveTab] = useState('overview');\n  const [appointments, setAppointments] = useState([]);\n  const [medicalHistory, setMedicalHistory] = useState([]);\n  const [patientProfile, setPatientProfile] = useState({});\n  const [doctors, setDoctors] = useState([]); // To fetch doctors for appointment scheduling and search\n  const [availableTimes, setAvailableTimes] = useState([]); // For doctor availability\n  const [documents, setDocuments] = useState([]); // For patient documents\n  const [bills, setBills] = useState([]); // For billing information\n  const [messages, setMessages] = useState([]); // For secure messaging\n  const [newMessage, setNewMessage] = useState({\n    recipientId: '',\n    subject: '',\n    content: ''\n  });\n  const [replyMessage, setReplyMessage] = useState({\n    messageId: '',\n    content: ''\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null); // For viewing a single message\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  // State for scheduling new appointment\n  const [showScheduleModal, setShowScheduleModal] = useState(false);\n  const [selectedDoctorId, setSelectedDoctorId] = useState('');\n  const [selectedDate, setSelectedDate] = useState(null); // Date object for react-datepicker\n  const [selectedTime, setSelectedTime] = useState('');\n\n  // State for updating profile\n  const [showProfileModal, setShowProfileModal] = useState(false);\n  const [updatedProfile, setUpdatedProfile] = useState({});\n  useEffect(() => {\n    if (token && user !== null && user !== void 0 && user.id) {\n      fetchPatientProfile();\n      fetchDoctors();\n      fetchPatientAppointments(); // Fetch appointments for the current user\n      fetchMedicalHistory();\n      fetchDocuments(); // Fetch documents for the current user\n      fetchBills(); // Fetch bills for the current user\n      fetchMessages(); // Fetch messages for the current user\n    }\n  }, [token, user === null || user === void 0 ? void 0 : user.id]); // Depend on token and user.id\n\n  // Fetch Patient Profile\n  const fetchPatientProfile = async () => {\n    setLoading(true);\n    try {\n      // AŽURIRANA PUTANJA: /api/korisnici-doktori/pacijenti/{id}\n      const response = await axios.get(`${API_URL}/api/korisnici-doktori/api/pacijenti/${user.id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPatientProfile(response.data);\n      setUpdatedProfile(response.data); // Initialize update form with current profile\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Greška prilikom dohvaćanja profila pacijenta:\", error);\n      setAlertMessage(\"Greška prilikom dohvaćanja profila pacijenta: \" + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n      setShowAlert(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch Doctors\n  const fetchDoctors = async () => {\n    setLoading(true);\n    try {\n      // AŽURIRANA PUTANJA: /api/korisnici-doktori/doktori\n      const response = await axios.get(`${API_URL}/api/korisnici-doktori/api/doktori`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setDoctors(response.data);\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Greška prilikom dohvaćanja doktora:\", error);\n      setAlertMessage(\"Greška prilikom dohvaćanja doktora: \" + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message));\n      setShowAlert(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch Patient Appointments\n  const fetchPatientAppointments = async () => {\n    setLoading(true);\n    try {\n      // AŽURIRANA PUTANJA: /api/termini-pregledi/pregledi/zakazani/{pacijentID}\n      const response = await axios.get(`${API_URL}/api/termini-pregledi/api/pregledi/zakazani/${user.id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAppointments(response.data);\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"Greška prilikom dohvaćanja pacijentovih pregleda:\", error);\n      setAlertMessage(\"Greška prilikom dohvaćanja pacijentovih pregleda: \" + (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message));\n      setShowAlert(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch Medical History\n  const fetchMedicalHistory = async () => {\n    setLoading(true);\n    try {\n      // AŽURIRANA PUTANJA: /api/korisnici-doktori/pacijenti/{id}/medical-history\n      const response = await axios.get(`${API_URL}/api/korisnici-doktori/api/pacijenti/${user.id}/medical-history`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMedicalHistory(response.data);\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error(\"Greška prilikom dohvaćanja medicinske historije:\", error);\n      setAlertMessage(\"Greška prilikom dohvaćanja medicinske historije: \" + (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || error.message));\n      setShowAlert(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch Documents\n  const fetchDocuments = async () => {\n    setLoading(true);\n    try {\n      // AŽURIRANA PUTANJA: /api/obavijesti-dokumentacija/dokumentacija/pacijent/{id}\n      const response = await axios.get(`${API_URL}/api/obavijesti-dokumentacija/dokumentacija/pacijent/${user.id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setDocuments(response.data);\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error(\"Greška prilikom dohvaćanja dokumenata:\", error);\n      setAlertMessage(\"Greška prilikom dohvaćanja dokumenata: \" + (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || error.message));\n      setShowAlert(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch Bills - AŽURIRANO (nova funkcija)\n  const fetchBills = async () => {\n    if (!token || !(user !== null && user !== void 0 && user.id)) return;\n    setLoading(true);\n    try {\n      // AŽURIRANA PUTANJA: /api/obavijesti-dokumentacija/racuni/pacijent/{userId}\n      const response = await axios.get(`${API_URL}/api/obavijesti-dokumentacija/racuni/pacijent/${user.id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setBills(response.data);\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      console.error(\"Greška prilikom dohvaćanja računa:\", error);\n      setAlertMessage(\"Greška prilikom dohvaćanja računa: \" + (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || error.message));\n      setShowAlert(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch Messages - AŽURIRANO (nova funkcija)\n  const fetchMessages = async () => {\n    if (!token || !(user !== null && user !== void 0 && user.id)) return;\n    setLoading(true);\n    try {\n      // Nova putanja: /api/obavijesti-dokumentacija/poruke/primatelj/{userId}?receiverType=PACIJENT\n      const response = await axios.get(`${API_URL}/api/obavijesti-dokumentacija/poruke/primatelj/${user.id}?receiverType=PACIJENT`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessages(response.data);\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      console.error(\"Greška prilikom dohvaćanja poruka:\", error);\n      setAlertMessage(\"Greška prilikom dohvaćanja poruka: \" + (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || error.message));\n      setShowAlert(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle change for new message form\n  const handleNewMessageChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMessage(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle sending new message\n  const handleSendMessage = async () => {\n    if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\n      setAlertMessage(\"Popunite sva polja za slanje poruke.\");\n      setShowAlert(true);\n      return;\n    }\n    setLoading(true);\n    try {\n      // Predpostavljam da je Pacijent (user.id) pošiljatelj, a RecipientId je Doktor\n      const payload = {\n        senderId: user.id,\n        // ID pacijenta\n        senderType: \"PACIJENT\",\n        // Uloga pošiljatelja\n        receiverId: parseInt(newMessage.recipientId),\n        // ID primatelja (Doktor)\n        receiverType: \"DOKTOR\",\n        // Uloga primatelja (pretpostavljamo da se šalje Doktoru)\n        subject: newMessage.subject,\n        content: newMessage.content\n      };\n\n      // AŽURIRANA PUTANJA: /api/obavijesti-dokumentacija/poruke/posalji\n      const response = await axios.post(`${API_URL}/api/obavijesti-dokumentacija/poruke/posalji`, payload, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Poruka uspješno poslana:\", response.data);\n      setNewMessage({\n        recipientId: '',\n        subject: '',\n        content: ''\n      }); // Resetiraj formu\n      fetchMessages(); // Osvježi listu poruka\n      setAlertMessage(\"Poruka uspješno poslana!\");\n      setShowAlert(true);\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      console.error(\"Greška prilikom slanja poruke:\", error);\n      setAlertMessage(\"Greška prilikom slanja poruke: \" + (((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || error.message));\n      setShowAlert(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle change for reply message form\n  const handleReplyMessageChange = e => {\n    setReplyMessage(prev => ({\n      ...prev,\n      content: e.target.value\n    }));\n  };\n\n  // Handle sending a reply\n  const handleReply = async messageId => {\n    if (!replyMessage.content) {\n      setAlertMessage(\"Unesite sadržaj odgovora.\");\n      setShowAlert(true);\n      return;\n    }\n    setLoading(true);\n    try {\n      const payload = {\n        senderId: user.id,\n        // ID pacijenta koji odgovara\n        senderType: \"PACIJENT\",\n        // Uloga pošiljatelja odgovora\n        content: replyMessage.content\n      };\n\n      // AŽURIRANA PUTANJA: /api/obavijesti-dokumentacija/poruke/{messageId}/odgovori\n      const response = await axios.post(`${API_URL}/api/obavijesti-dokumentacija/poruke/${messageId}/odgovori`, payload, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Odgovor uspješno poslan:\", response.data);\n      setReplyMessage({\n        messageId: '',\n        content: ''\n      }); // Resetiraj formu\n      setSelectedMessage(response.data); // Ažuriraj odabranu poruku da prikaže odgovor\n      fetchMessages(); // Osvježi cijelu listu poruka nakon odgovora\n      setAlertMessage(\"Odgovor uspješno poslan!\");\n      setShowAlert(true);\n    } catch (error) {\n      var _error$response9, _error$response9$data;\n      console.error(\"Greška prilikom slanja odgovora:\", error);\n      setAlertMessage(\"Greška prilikom slanja odgovora: \" + (((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || error.message));\n      setShowAlert(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Open message detail modal\n  const openMessageModal = message => {\n    setSelectedMessage(message);\n    setReplyMessage(prev => ({\n      ...prev,\n      messageId: message.porukaID\n    })); // Set messageId for reply\n  };\n\n  // Close message detail modal\n  const closeMessageModal = () => {\n    setSelectedMessage(null);\n    setReplyMessage({\n      messageId: '',\n      content: ''\n    });\n  };\n\n  // Handle opening schedule appointment modal\n  const handleOpenScheduleModal = () => {\n    setShowScheduleModal(true);\n    setSelectedDoctorId('');\n    setSelectedDate(null);\n    setSelectedTime('');\n    setAvailableTimes([]); // Clear available times\n  };\n\n  // Handle closing schedule appointment modal\n  const handleCloseScheduleModal = () => {\n    setShowScheduleModal(false);\n  };\n\n  // Handle doctor selection for appointment\n  const handleDoctorChange = async e => {\n    const docId = e.target.value;\n    setSelectedDoctorId(docId);\n    setSelectedDate(null); // Reset date when doctor changes\n    setSelectedTime('');\n    setAvailableTimes([]); // Clear times\n  };\n\n  // Handle date selection for appointment\n  const handleDateChange = async date => {\n    setSelectedDate(date);\n    setSelectedTime('');\n    setAvailableTimes([]); // Clear times\n\n    if (selectedDoctorId && date) {\n      setLoading(true);\n      try {\n        const formattedDate = format(date, 'yyyy-MM-dd');\n        // AŽURIRANA PUTANJA: /api/termini-pregledi/termini/doktor/{doctorId}/datum/{date}\n        const response = await axios.get(`${API_URL}/api/termini-pregledi/api/termini/doktor/${selectedDoctorId}/datum/${formattedDate}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setAvailableTimes(response.data);\n        setShowAlert(false);\n        if (response.data.length === 0) {\n          setAlertMessage(\"Nema dostupnih termina za ovog doktora na odabrani datum. Molimo odaberite drugi datum ili doktora.\");\n          setShowAlert(true);\n        }\n      } catch (error) {\n        var _error$response0, _error$response0$data;\n        console.error(\"Greška prilikom dohvaćanja dostupnosti doktora:\", error);\n        setAlertMessage(\"Greška prilikom dohvaćanja dostupnosti doktora: \" + (((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || error.message));\n        setShowAlert(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  // Handle scheduling new appointment\n  const handleScheduleAppointment = async () => {\n    if (!selectedDoctorId || !selectedDate || !selectedTime) {\n      setAlertMessage(\"Molimo popunite sva polja za zakazivanje pregleda.\");\n      setShowAlert(true);\n      return;\n    }\n    setLoading(true);\n    try {\n      const selectedTermin = availableTimes.find(time => time.vrijeme === selectedTime);\n      if (!selectedTermin) {\n        setAlertMessage(\"Odabrani termin nije validan.\");\n        setShowAlert(true);\n        setLoading(false);\n        return;\n      }\n      const payload = {\n        pacijentID: user.id,\n        doktorID: parseInt(selectedDoctorId),\n        terminID: selectedTermin.terminID,\n        status: \"zakazan\",\n        komentarPacijenta: \"Zakazan putem pacijentovog dashboarda.\" // Example comment\n      };\n\n      // AŽURIRANA PUTANJA: /api/termini-pregledi/pregledi\n      const response = await axios.post(`${API_URL}/api/termini-pregledi/api/pregledi`, payload, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Pregled uspješno zakazan:\", response.data);\n      setAlertMessage(\"Pregled uspješno zakazan!\");\n      setShowAlert(true);\n      handleCloseScheduleModal(); // Close modal\n      fetchPatientAppointments(); // Refresh appointments list\n    } catch (error) {\n      var _error$response1, _error$response1$data;\n      console.error(\"Greška prilikom zakazivanja/ažuriranja pregleda:\", error);\n      setAlertMessage(\"Greška prilikom zakazivanja/ažuriranja pregleda: \" + (((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || error.message));\n      setShowAlert(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle opening profile update modal\n  const handleOpenProfileModal = () => {\n    setUpdatedProfile(patientProfile); // Load current profile into the form\n    setShowProfileModal(true);\n  };\n\n  // Handle closing profile update modal\n  const handleCloseProfileModal = () => {\n    setShowProfileModal(false);\n  };\n\n  // Handle changes in profile update form\n  const handleProfileChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedProfile(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle updating patient profile\n  const handleUpdateProfile = async () => {\n    setLoading(true);\n    try {\n      // AŽURIRANA PUTANJA: /api/korisnici-doktori/pacijenti/{id}\n      const response = await axios.put(`${API_URL}/api/korisnici-doktori/api/pacijenti/${user.id}`, updatedProfile, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPatientProfile(response.data); // Update main profile state\n      setAlertMessage(\"Profil uspješno ažuriran!\");\n      setShowAlert(true);\n      handleCloseProfileModal();\n    } catch (error) {\n      var _error$response10, _error$response10$dat;\n      console.error(\"Greška prilikom ažuriranja profila:\", error);\n      setAlertMessage(\"Greška prilikom ažuriranja profila: \" + (((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.message) || error.message));\n      setShowAlert(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavam...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4 text-center\",\n      children: \"Pacijentski Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      activeKey: activeTab,\n      onSelect: k => setActiveTab(k),\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"overview\",\n        title: \"Pregled\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Moj Profil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ime:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 49\n                }, this), \" \", patientProfile.ime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Prezime:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 49\n                }, this), \" \", patientProfile.prezime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 49\n                }, this), \" \", patientProfile.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Datum ro\\u0111enja:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 49\n                }, this), \" \", patientProfile.datumRodjenja]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Adresa:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 49\n                }, this), \" \", patientProfile.adresa]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Telefon:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 49\n                }, this), \" \", patientProfile.brojTelefona]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              className: \"mt-3\",\n              onClick: handleOpenProfileModal,\n              children: \"A\\u017Euriraj Profil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"appointments\",\n        title: \"Moji Pregledi\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Zakazani Pregledi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              className: \"mb-3\",\n              onClick: handleOpenScheduleModal,\n              children: \"Zaka\\u017Ei Novi Pregled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 29\n            }, this), appointments.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: \"Nemate zakazanih pregleda.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: appointments.map(app => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: app.doktorIme\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mb-1\",\n                      children: [\"Datum: \", app.datumPregleda]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mb-1\",\n                      children: [\"Vrijeme: \", app.vrijemePregleda]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mb-0\",\n                      children: [\"Status: \", /*#__PURE__*/_jsxDEV(Badge, {\n                        bg: app.status === 'zakazan' ? 'info' : 'secondary',\n                        children: app.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 492,\n                        columnNumber: 81\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 492,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 45\n                }, this)\n              }, app.pregledID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"history\",\n        title: \"Medicinska Historija\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Moja Medicinska Historija\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 29\n            }, this), medicalHistory.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: \"Nema zapisa u medicinskoj historiji.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: medicalHistory.map((record, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Datum:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 65\n                  }, this), \" \", record.datum]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Dijagnoza:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 65\n                  }, this), \" \", record.dijagnoza]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Lije\\u010Denje:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 65\n                  }, this), \" \", record.lijecenje]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Doktor:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 65\n                  }, this), \" \", record.doktorIme]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"documents\",\n        title: \"Dokumenti\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Moji Dokumenti\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 29\n            }, this), documents.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: \"Nemate dostupnih dokumenata.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: documents.map(doc => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Tip:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 65\n                  }, this), \" \", doc.tipDokumenta]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Naziv:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 65\n                  }, this), \" \", doc.nazivDokumenta]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Datum kreiranja:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 65\n                  }, this), \" \", doc.datumKreiranja]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: doc.pristup === 'JAVNA' ? 'success' : 'secondary',\n                  children: doc.pristup\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 45\n                }, this)]\n              }, doc.dokumentID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"bills\",\n        title: \"Ra\\u010Duni\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Moji Ra\\u010Duni\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 29\n            }, this), bills.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: \"Nemate dostupnih ra\\u010Duna.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: bills.map(bill => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Datum izdavanja:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 65\n                  }, this), \" \", bill.datumIzdavanja]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Iznos:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 65\n                  }, this), \" \", bill.iznos, \" KM\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 65\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(Badge, {\n                    bg: bill.status === 'PLACEN' ? 'success' : 'warning',\n                    children: bill.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 90\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Opis:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 65\n                  }, this), \" \", bill.opis]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Izdao:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 65\n                  }, this), \" \", bill.doktorIme]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 45\n                }, this)]\n              }, bill.racunID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"messages\",\n        title: \"Poruke\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Moje Poruke\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Odaberi Doktora\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  name: \"recipientId\",\n                  value: newMessage.recipientId,\n                  onChange: handleNewMessageChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Odaberi doktora...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 580,\n                    columnNumber: 41\n                  }, this), doctors.map(doc => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: doc.doktorID,\n                    children: [\"Dr. \", doc.ime, \" \", doc.prezime]\n                  }, doc.doktorID, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Predmet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"subject\",\n                  value: newMessage.subject,\n                  onChange: handleNewMessageChange,\n                  placeholder: \"Predmet poruke\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Sadr\\u017Eaj\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  rows: 3,\n                  name: \"content\",\n                  value: newMessage.content,\n                  onChange: handleNewMessageChange,\n                  placeholder: \"Unesite svoju poruku...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: handleSendMessage,\n                children: \"Po\\u0161alji Poruku\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"my-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Primljene Poruke\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 29\n            }, this), messages.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: \"Nemate primljenih poruka.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: messages.map(msg => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                action: true,\n                onClick: () => openMessageModal(msg),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      children: msg.subject\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 623,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Od: \", msg.senderIme, \" (\", msg.senderType, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 624,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mb-0\",\n                      children: [msg.content.substring(0, 50), \"...\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 625,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 622,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: msg.timestamp\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 627,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 45\n                }, this)\n              }, msg.porukaID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showProfileModal,\n      onHide: handleCloseProfileModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"A\\u017Euriraj Profil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Ime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"ime\",\n              value: updatedProfile.ime || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Prezime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"prezime\",\n              value: updatedProfile.prezime || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: updatedProfile.email || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Datum ro\\u0111enja\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"datumRodjenja\",\n              value: updatedProfile.datumRodjenja || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Adresa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"adresa\",\n              value: updatedProfile.adresa || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Telefon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"brojTelefona\",\n              value: updatedProfile.brojTelefona || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseProfileModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleUpdateProfile,\n          children: \"Sa\\u010Duvaj Promjene\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showScheduleModal,\n      onHide: handleCloseScheduleModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Zaka\\u017Ei Novi Pregled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odaberi Doktora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: selectedDoctorId,\n              onChange: handleDoctorChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Odaberi...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 33\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.doktorID,\n                children: [\"Dr. \", doctor.ime, \" \", doctor.prezime]\n              }, doctor.doktorID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odaberi Datum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: selectedDate,\n              onChange: handleDateChange,\n              dateFormat: \"yyyy-MM-dd\",\n              className: \"form-control\",\n              minDate: new Date() // Prevent selecting past dates\n              ,\n              placeholderText: \"Odaberi datum\",\n              disabled: !selectedDoctorId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 25\n          }, this), selectedDate && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Dostupni Termini\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 33\n            }, this), availableTimes.length === 0 && !loading ? /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: \"Nema dostupnih termina za ovog doktora na odabrani datum.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: selectedTime,\n              onChange: e => setSelectedTime(e.target.value),\n              disabled: loading,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Odaberi termin...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 41\n              }, this), availableTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: time.vrijeme,\n                children: time.vrijeme\n              }, time.terminID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseScheduleModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleScheduleAppointment,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n            as: \"span\",\n            animation: \"border\",\n            size: \"sm\",\n            role: \"status\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 36\n          }, this) : 'Zakaži'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: selectedMessage !== null,\n      onHide: closeMessageModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Poruka: \", selectedMessage === null || selectedMessage === void 0 ? void 0 : selectedMessage.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Od:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 32\n            }, this), \" \", selectedMessage.senderIme, \" (\", selectedMessage.senderType, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Za:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 32\n            }, this), \" \", selectedMessage.receiverIme, \" (\", selectedMessage.receiverType, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sadr\\u017Eaj:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 32\n            }, this), \" \", selectedMessage.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: selectedMessage.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 29\n          }, this), selectedMessage.replies && selectedMessage.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 border-top pt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Odgovori:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 37\n            }, this), selectedMessage.replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2 p-2 bg-light rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [reply.senderIme, \" (\", reply.senderType, \"):\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 45\n              }, this), \" \", reply.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: reply.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 45\n              }, this)]\n            }, reply.odgovorID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odgovor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: replyMessage.content,\n              onChange: handleReplyMessageChange,\n              placeholder: \"Napi\\u0161ite svoj odgovor ovdje...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 768,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mt-2\",\n            onClick: () => handleReply(selectedMessage.porukaID),\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"border\",\n              size: \"sm\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 44\n            }, this) : 'Pošalji Odgovor'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeMessageModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 450,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDashboard, \"BbfIXDLWZcgBKK5CM8dwwPcqP9k=\", false, function () {\n  return [useAuth];\n});\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["axios","useAuth","React","useState","useEffect","Modal","Button","Form","Alert","Spinner","Tab","Tabs","Card","ListGroup","Badge","DatePicker","format","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","PatientDashboard","_s","token","user","activeTab","setActiveTab","appointments","setAppointments","medicalHistory","setMedicalHistory","patientProfile","setPatientProfile","doctors","setDoctors","availableTimes","setAvailableTimes","documents","setDocuments","bills","setBills","messages","setMessages","newMessage","setNewMessage","recipientId","subject","content","replyMessage","setReplyMessage","messageId","selectedMessage","setSelectedMessage","showAlert","setShowAlert","alertMessage","setAlertMessage","loading","setLoading","showScheduleModal","setShowScheduleModal","selectedDoctorId","setSelectedDoctorId","selectedDate","setSelectedDate","selectedTime","setSelectedTime","showProfileModal","setShowProfileModal","updatedProfile","setUpdatedProfile","id","fetchPatientProfile","fetchDoctors","fetchPatientAppointments","fetchMedicalHistory","fetchDocuments","fetchBills","fetchMessages","response","get","headers","Authorization","data","error","_error$response","_error$response$data","console","message","_error$response2","_error$response2$data","_error$response3","_error$response3$data","_error$response4","_error$response4$data","_error$response5","_error$response5$data","_error$response6","_error$response6$data","_error$response7","_error$response7$data","handleNewMessageChange","e","name","value","target","prev","handleSendMessage","payload","senderId","senderType","receiverId","parseInt","receiverType","post","log","_error$response8","_error$response8$data","handleReplyMessageChange","handleReply","_error$response9","_error$response9$data","openMessageModal","porukaID","closeMessageModal","handleOpenScheduleModal","handleCloseScheduleModal","handleDoctorChange","docId","handleDateChange","date","formattedDate","length","_error$response0","_error$response0$data","handleScheduleAppointment","selectedTermin","find","time","vrijeme","pacijentID","doktorID","terminID","status","komentarPacijenta","_error$response1","_error$response1$data","handleOpenProfileModal","handleCloseProfileModal","handleProfileChange","handleUpdateProfile","put","_error$response10","_error$response10$dat","className","style","height","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClose","dismissible","activeKey","onSelect","k","eventKey","title","Body","Title","Item","ime","prezime","email","datumRodjenja","adresa","brojTelefona","onClick","map","app","doktorIme","datumPregleda","vrijemePregleda","bg","pregledID","record","index","datum","dijagnoza","lijecenje","doc","tipDokumenta","nazivDokumenta","datumKreiranja","pristup","dokumentID","bill","datumIzdavanja","iznos","opis","racunID","Group","Label","Control","as","onChange","type","placeholder","rows","msg","action","senderIme","substring","timestamp","show","onHide","Header","closeButton","Footer","doctor","selected","dateFormat","minDate","Date","placeholderText","disabled","size","receiverIme","replies","reply","odgovorID","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/PatientDashboard.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs, Card, ListGroup, Badge } from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { format } from 'date-fns';\r\n\r\n// AŽURIRANO: API_URL sada pokazuje samo na bazni URL API Gatewaya\r\nconst API_URL = 'http://localhost:8081';\r\n\r\nfunction PatientDashboard() {\r\n    const { token, user } = useAuth(); // Assuming 'user' object contains patient-specific info like ID\r\n\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [medicalHistory, setMedicalHistory] = useState([]);\r\n    const [patientProfile, setPatientProfile] = useState({});\r\n    const [doctors, setDoctors] = useState([]); // To fetch doctors for appointment scheduling and search\r\n    const [availableTimes, setAvailableTimes] = useState([]); // For doctor availability\r\n    const [documents, setDocuments] = useState([]); // For patient documents\r\n    const [bills, setBills] = useState([]); // For billing information\r\n    const [messages, setMessages] = useState([]); // For secure messaging\r\n    const [newMessage, setNewMessage] = useState({ recipientId: '', subject: '', content: '' });\r\n    const [replyMessage, setReplyMessage] = useState({ messageId: '', content: '' });\r\n    const [selectedMessage, setSelectedMessage] = useState(null); // For viewing a single message\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // State for scheduling new appointment\r\n    const [showScheduleModal, setShowScheduleModal] = useState(false);\r\n    const [selectedDoctorId, setSelectedDoctorId] = useState('');\r\n    const [selectedDate, setSelectedDate] = useState(null); // Date object for react-datepicker\r\n    const [selectedTime, setSelectedTime] = useState('');\r\n\r\n    // State for updating profile\r\n    const [showProfileModal, setShowProfileModal] = useState(false);\r\n    const [updatedProfile, setUpdatedProfile] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (token && user?.id) {\r\n            fetchPatientProfile();\r\n            fetchDoctors();\r\n            fetchPatientAppointments(); // Fetch appointments for the current user\r\n            fetchMedicalHistory();\r\n            fetchDocuments(); // Fetch documents for the current user\r\n            fetchBills(); // Fetch bills for the current user\r\n            fetchMessages(); // Fetch messages for the current user\r\n        }\r\n    }, [token, user?.id]); // Depend on token and user.id\r\n\r\n    // Fetch Patient Profile\r\n    const fetchPatientProfile = async () => {\r\n        setLoading(true);\r\n        try {\r\n            // AŽURIRANA PUTANJA: /api/korisnici-doktori/pacijenti/{id}\r\n            const response = await axios.get(`${API_URL}/api/korisnici-doktori/api/pacijenti/${user.id}`, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            setPatientProfile(response.data);\r\n            setUpdatedProfile(response.data); // Initialize update form with current profile\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error(\"Greška prilikom dohvaćanja profila pacijenta:\", error);\r\n            setAlertMessage(\"Greška prilikom dohvaćanja profila pacijenta: \" + (error.response?.data?.message || error.message));\r\n            setShowAlert(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Fetch Doctors\r\n    const fetchDoctors = async () => {\r\n        setLoading(true);\r\n        try {\r\n            // AŽURIRANA PUTANJA: /api/korisnici-doktori/doktori\r\n            const response = await axios.get(`${API_URL}/api/korisnici-doktori/api/doktori`, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            setDoctors(response.data);\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error(\"Greška prilikom dohvaćanja doktora:\", error);\r\n            setAlertMessage(\"Greška prilikom dohvaćanja doktora: \" + (error.response?.data?.message || error.message));\r\n            setShowAlert(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Fetch Patient Appointments\r\n    const fetchPatientAppointments = async () => {\r\n        setLoading(true);\r\n        try {\r\n            // AŽURIRANA PUTANJA: /api/termini-pregledi/pregledi/zakazani/{pacijentID}\r\n            const response = await axios.get(`${API_URL}/api/termini-pregledi/api/pregledi/zakazani/${user.id}`, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            setAppointments(response.data);\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error(\"Greška prilikom dohvaćanja pacijentovih pregleda:\", error);\r\n            setAlertMessage(\"Greška prilikom dohvaćanja pacijentovih pregleda: \" + (error.response?.data?.message || error.message));\r\n            setShowAlert(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Fetch Medical History\r\n    const fetchMedicalHistory = async () => {\r\n        setLoading(true);\r\n        try {\r\n            // AŽURIRANA PUTANJA: /api/korisnici-doktori/pacijenti/{id}/medical-history\r\n            const response = await axios.get(`${API_URL}/api/korisnici-doktori/api/pacijenti/${user.id}/medical-history`, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            setMedicalHistory(response.data);\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error(\"Greška prilikom dohvaćanja medicinske historije:\", error);\r\n            setAlertMessage(\"Greška prilikom dohvaćanja medicinske historije: \" + (error.response?.data?.message || error.message));\r\n            setShowAlert(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Fetch Documents\r\n    const fetchDocuments = async () => {\r\n        setLoading(true);\r\n        try {\r\n            // AŽURIRANA PUTANJA: /api/obavijesti-dokumentacija/dokumentacija/pacijent/{id}\r\n            const response = await axios.get(`${API_URL}/api/obavijesti-dokumentacija/dokumentacija/pacijent/${user.id}`, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            setDocuments(response.data);\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error(\"Greška prilikom dohvaćanja dokumenata:\", error);\r\n            setAlertMessage(\"Greška prilikom dohvaćanja dokumenata: \" + (error.response?.data?.message || error.message));\r\n            setShowAlert(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Fetch Bills - AŽURIRANO (nova funkcija)\r\n    const fetchBills = async () => {\r\n        if (!token || !user?.id) return;\r\n        setLoading(true);\r\n        try {\r\n            // AŽURIRANA PUTANJA: /api/obavijesti-dokumentacija/racuni/pacijent/{userId}\r\n            const response = await axios.get(\r\n                `${API_URL}/api/obavijesti-dokumentacija/racuni/pacijent/${user.id}`,\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }\r\n            );\r\n            setBills(response.data);\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error(\"Greška prilikom dohvaćanja računa:\", error);\r\n            setAlertMessage(\"Greška prilikom dohvaćanja računa: \" + (error.response?.data?.message || error.message));\r\n            setShowAlert(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Fetch Messages - AŽURIRANO (nova funkcija)\r\n    const fetchMessages = async () => {\r\n        if (!token || !user?.id) return;\r\n        setLoading(true);\r\n        try {\r\n            // Nova putanja: /api/obavijesti-dokumentacija/poruke/primatelj/{userId}?receiverType=PACIJENT\r\n            const response = await axios.get(\r\n                `${API_URL}/api/obavijesti-dokumentacija/poruke/primatelj/${user.id}?receiverType=PACIJENT`,\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }\r\n            );\r\n            setMessages(response.data);\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error(\"Greška prilikom dohvaćanja poruka:\", error);\r\n            setAlertMessage(\"Greška prilikom dohvaćanja poruka: \" + (error.response?.data?.message || error.message));\r\n            setShowAlert(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Handle change for new message form\r\n    const handleNewMessageChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewMessage(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    // Handle sending new message\r\n    const handleSendMessage = async () => {\r\n        if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\r\n            setAlertMessage(\"Popunite sva polja za slanje poruke.\");\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            // Predpostavljam da je Pacijent (user.id) pošiljatelj, a RecipientId je Doktor\r\n            const payload = {\r\n                senderId: user.id, // ID pacijenta\r\n                senderType: \"PACIJENT\", // Uloga pošiljatelja\r\n                receiverId: parseInt(newMessage.recipientId), // ID primatelja (Doktor)\r\n                receiverType: \"DOKTOR\", // Uloga primatelja (pretpostavljamo da se šalje Doktoru)\r\n                subject: newMessage.subject,\r\n                content: newMessage.content\r\n            };\r\n\r\n            // AŽURIRANA PUTANJA: /api/obavijesti-dokumentacija/poruke/posalji\r\n            const response = await axios.post(\r\n                `${API_URL}/api/obavijesti-dokumentacija/poruke/posalji`,\r\n                payload,\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }\r\n            );\r\n            console.log(\"Poruka uspješno poslana:\", response.data);\r\n            setNewMessage({ recipientId: '', subject: '', content: '' }); // Resetiraj formu\r\n            fetchMessages(); // Osvježi listu poruka\r\n            setAlertMessage(\"Poruka uspješno poslana!\");\r\n            setShowAlert(true);\r\n        } catch (error) {\r\n            console.error(\"Greška prilikom slanja poruke:\", error);\r\n            setAlertMessage(\"Greška prilikom slanja poruke: \" + (error.response?.data?.message || error.message));\r\n            setShowAlert(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Handle change for reply message form\r\n    const handleReplyMessageChange = (e) => {\r\n        setReplyMessage(prev => ({ ...prev, content: e.target.value }));\r\n    };\r\n\r\n    // Handle sending a reply\r\n    const handleReply = async (messageId) => {\r\n        if (!replyMessage.content) {\r\n            setAlertMessage(\"Unesite sadržaj odgovora.\");\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const payload = {\r\n                senderId: user.id, // ID pacijenta koji odgovara\r\n                senderType: \"PACIJENT\", // Uloga pošiljatelja odgovora\r\n                content: replyMessage.content\r\n            };\r\n\r\n            // AŽURIRANA PUTANJA: /api/obavijesti-dokumentacija/poruke/{messageId}/odgovori\r\n            const response = await axios.post(\r\n                `${API_URL}/api/obavijesti-dokumentacija/poruke/${messageId}/odgovori`,\r\n                payload,\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                }\r\n            );\r\n            console.log(\"Odgovor uspješno poslan:\", response.data);\r\n            setReplyMessage({ messageId: '', content: '' }); // Resetiraj formu\r\n            setSelectedMessage(response.data); // Ažuriraj odabranu poruku da prikaže odgovor\r\n            fetchMessages(); // Osvježi cijelu listu poruka nakon odgovora\r\n            setAlertMessage(\"Odgovor uspješno poslan!\");\r\n            setShowAlert(true);\r\n        } catch (error) {\r\n            console.error(\"Greška prilikom slanja odgovora:\", error);\r\n            setAlertMessage(\"Greška prilikom slanja odgovora: \" + (error.response?.data?.message || error.message));\r\n            setShowAlert(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Open message detail modal\r\n    const openMessageModal = (message) => {\r\n        setSelectedMessage(message);\r\n        setReplyMessage(prev => ({ ...prev, messageId: message.porukaID })); // Set messageId for reply\r\n    };\r\n\r\n    // Close message detail modal\r\n    const closeMessageModal = () => {\r\n        setSelectedMessage(null);\r\n        setReplyMessage({ messageId: '', content: '' });\r\n    };\r\n\r\n    // Handle opening schedule appointment modal\r\n    const handleOpenScheduleModal = () => {\r\n        setShowScheduleModal(true);\r\n        setSelectedDoctorId('');\r\n        setSelectedDate(null);\r\n        setSelectedTime('');\r\n        setAvailableTimes([]); // Clear available times\r\n    };\r\n\r\n    // Handle closing schedule appointment modal\r\n    const handleCloseScheduleModal = () => {\r\n        setShowScheduleModal(false);\r\n    };\r\n\r\n    // Handle doctor selection for appointment\r\n    const handleDoctorChange = async (e) => {\r\n        const docId = e.target.value;\r\n        setSelectedDoctorId(docId);\r\n        setSelectedDate(null); // Reset date when doctor changes\r\n        setSelectedTime('');\r\n        setAvailableTimes([]); // Clear times\r\n    };\r\n\r\n    // Handle date selection for appointment\r\n    const handleDateChange = async (date) => {\r\n        setSelectedDate(date);\r\n        setSelectedTime('');\r\n        setAvailableTimes([]); // Clear times\r\n\r\n        if (selectedDoctorId && date) {\r\n            setLoading(true);\r\n            try {\r\n                const formattedDate = format(date, 'yyyy-MM-dd');\r\n                // AŽURIRANA PUTANJA: /api/termini-pregledi/termini/doktor/{doctorId}/datum/{date}\r\n                const response = await axios.get(\r\n                    `${API_URL}/api/termini-pregledi/api/termini/doktor/${selectedDoctorId}/datum/${formattedDate}`,\r\n                    { headers: { Authorization: `Bearer ${token}` } }\r\n                );\r\n                setAvailableTimes(response.data);\r\n                setShowAlert(false);\r\n                if (response.data.length === 0) {\r\n                    setAlertMessage(\"Nema dostupnih termina za ovog doktora na odabrani datum. Molimo odaberite drugi datum ili doktora.\");\r\n                    setShowAlert(true);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Greška prilikom dohvaćanja dostupnosti doktora:\", error);\r\n                setAlertMessage(\"Greška prilikom dohvaćanja dostupnosti doktora: \" + (error.response?.data?.message || error.message));\r\n                setShowAlert(true);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Handle scheduling new appointment\r\n    const handleScheduleAppointment = async () => {\r\n        if (!selectedDoctorId || !selectedDate || !selectedTime) {\r\n            setAlertMessage(\"Molimo popunite sva polja za zakazivanje pregleda.\");\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const selectedTermin = availableTimes.find(time => time.vrijeme === selectedTime);\r\n\r\n            if (!selectedTermin) {\r\n                setAlertMessage(\"Odabrani termin nije validan.\");\r\n                setShowAlert(true);\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            const payload = {\r\n                pacijentID: user.id,\r\n                doktorID: parseInt(selectedDoctorId),\r\n                terminID: selectedTermin.terminID,\r\n                status: \"zakazan\",\r\n                komentarPacijenta: \"Zakazan putem pacijentovog dashboarda.\" // Example comment\r\n            };\r\n\r\n            // AŽURIRANA PUTANJA: /api/termini-pregledi/pregledi\r\n            const response = await axios.post(`${API_URL}/api/termini-pregledi/api/pregledi`, payload, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n\r\n            console.log(\"Pregled uspješno zakazan:\", response.data);\r\n            setAlertMessage(\"Pregled uspješno zakazan!\");\r\n            setShowAlert(true);\r\n            handleCloseScheduleModal(); // Close modal\r\n            fetchPatientAppointments(); // Refresh appointments list\r\n        } catch (error) {\r\n            console.error(\"Greška prilikom zakazivanja/ažuriranja pregleda:\", error);\r\n            setAlertMessage(\"Greška prilikom zakazivanja/ažuriranja pregleda: \" + (error.response?.data?.message || error.message));\r\n            setShowAlert(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Handle opening profile update modal\r\n    const handleOpenProfileModal = () => {\r\n        setUpdatedProfile(patientProfile); // Load current profile into the form\r\n        setShowProfileModal(true);\r\n    };\r\n\r\n    // Handle closing profile update modal\r\n    const handleCloseProfileModal = () => {\r\n        setShowProfileModal(false);\r\n    };\r\n\r\n    // Handle changes in profile update form\r\n    const handleProfileChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUpdatedProfile(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    // Handle updating patient profile\r\n    const handleUpdateProfile = async () => {\r\n        setLoading(true);\r\n        try {\r\n            // AŽURIRANA PUTANJA: /api/korisnici-doktori/pacijenti/{id}\r\n            const response = await axios.put(`${API_URL}/api/korisnici-doktori/api/pacijenti/${user.id}`, updatedProfile, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            setPatientProfile(response.data); // Update main profile state\r\n            setAlertMessage(\"Profil uspješno ažuriran!\");\r\n            setShowAlert(true);\r\n            handleCloseProfileModal();\r\n        } catch (error) {\r\n            console.error(\"Greška prilikom ažuriranja profila:\", error);\r\n            setAlertMessage(\"Greška prilikom ažuriranja profila: \" + (error.response?.data?.message || error.message));\r\n            setShowAlert(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Učitavam...</span>\r\n                </Spinner>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h2 className=\"mb-4 text-center\">Pacijentski Dashboard</h2>\r\n\r\n            {showAlert && (\r\n                <Alert variant=\"danger\" onClose={() => setShowAlert(false)} dismissible>\r\n                    {alertMessage}\r\n                </Alert>\r\n            )}\r\n\r\n            <Tabs activeKey={activeTab} onSelect={(k) => setActiveTab(k)} className=\"mb-3\">\r\n                <Tab eventKey=\"overview\" title=\"Pregled\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Moj Profil</Card.Title>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item><strong>Ime:</strong> {patientProfile.ime}</ListGroup.Item>\r\n                                <ListGroup.Item><strong>Prezime:</strong> {patientProfile.prezime}</ListGroup.Item>\r\n                                <ListGroup.Item><strong>Email:</strong> {patientProfile.email}</ListGroup.Item>\r\n                                <ListGroup.Item><strong>Datum rođenja:</strong> {patientProfile.datumRodjenja}</ListGroup.Item>\r\n                                <ListGroup.Item><strong>Adresa:</strong> {patientProfile.adresa}</ListGroup.Item>\r\n                                <ListGroup.Item><strong>Telefon:</strong> {patientProfile.brojTelefona}</ListGroup.Item>\r\n                            </ListGroup>\r\n                            <Button variant=\"primary\" className=\"mt-3\" onClick={handleOpenProfileModal}>Ažuriraj Profil</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Tab>\r\n                <Tab eventKey=\"appointments\" title=\"Moji Pregledi\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Zakazani Pregledi</Card.Title>\r\n                            <Button variant=\"success\" className=\"mb-3\" onClick={handleOpenScheduleModal}>Zakaži Novi Pregled</Button>\r\n                            {appointments.length === 0 ? (\r\n                                <Alert variant=\"info\">Nemate zakazanih pregleda.</Alert>\r\n                            ) : (\r\n                                <ListGroup>\r\n                                    {appointments.map(app => (\r\n                                        <ListGroup.Item key={app.pregledID}>\r\n                                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                <div>\r\n                                                    <h5>{app.doktorIme}</h5>\r\n                                                    <p className=\"mb-1\">Datum: {app.datumPregleda}</p>\r\n                                                    <p className=\"mb-1\">Vrijeme: {app.vrijemePregleda}</p>\r\n                                                    <p className=\"mb-0\">Status: <Badge bg={app.status === 'zakazan' ? 'info' : 'secondary'}>{app.status}</Badge></p>\r\n                                                </div>\r\n                                                {/* Add action buttons like cancel/reschedule if needed */}\r\n                                            </div>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Tab>\r\n                <Tab eventKey=\"history\" title=\"Medicinska Historija\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Moja Medicinska Historija</Card.Title>\r\n                            {medicalHistory.length === 0 ? (\r\n                                <Alert variant=\"info\">Nema zapisa u medicinskoj historiji.</Alert>\r\n                            ) : (\r\n                                <ListGroup>\r\n                                    {medicalHistory.map((record, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <p className=\"mb-1\"><strong>Datum:</strong> {record.datum}</p>\r\n                                            <p className=\"mb-1\"><strong>Dijagnoza:</strong> {record.dijagnoza}</p>\r\n                                            <p className=\"mb-1\"><strong>Liječenje:</strong> {record.lijecenje}</p>\r\n                                            <p className=\"mb-0\"><strong>Doktor:</strong> {record.doktorIme}</p>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Tab>\r\n                <Tab eventKey=\"documents\" title=\"Dokumenti\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Moji Dokumenti</Card.Title>\r\n                            {documents.length === 0 ? (\r\n                                <Alert variant=\"info\">Nemate dostupnih dokumenata.</Alert>\r\n                            ) : (\r\n                                <ListGroup>\r\n                                    {documents.map(doc => (\r\n                                        <ListGroup.Item key={doc.dokumentID}>\r\n                                            <p className=\"mb-1\"><strong>Tip:</strong> {doc.tipDokumenta}</p>\r\n                                            <p className=\"mb-1\"><strong>Naziv:</strong> {doc.nazivDokumenta}</p>\r\n                                            <p className=\"mb-0\"><strong>Datum kreiranja:</strong> {doc.datumKreiranja}</p>\r\n                                            <Badge bg={doc.pristup === 'JAVNA' ? 'success' : 'secondary'}>{doc.pristup}</Badge>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Tab>\r\n                <Tab eventKey=\"bills\" title=\"Računi\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Moji Računi</Card.Title>\r\n                            {bills.length === 0 ? (\r\n                                <Alert variant=\"info\">Nemate dostupnih računa.</Alert>\r\n                            ) : (\r\n                                <ListGroup>\r\n                                    {bills.map(bill => (\r\n                                        <ListGroup.Item key={bill.racunID}>\r\n                                            <p className=\"mb-1\"><strong>Datum izdavanja:</strong> {bill.datumIzdavanja}</p>\r\n                                            <p className=\"mb-1\"><strong>Iznos:</strong> {bill.iznos} KM</p>\r\n                                            <p className=\"mb-0\"><strong>Status:</strong> <Badge bg={bill.status === 'PLACEN' ? 'success' : 'warning'}>{bill.status}</Badge></p>\r\n                                            <p className=\"mb-0\"><strong>Opis:</strong> {bill.opis}</p>\r\n                                            <p className=\"mb-0\"><strong>Izdao:</strong> {bill.doktorIme}</p>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Tab>\r\n                <Tab eventKey=\"messages\" title=\"Poruke\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Moje Poruke</Card.Title>\r\n                            <Form>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Odaberi Doktora</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"recipientId\"\r\n                                        value={newMessage.recipientId}\r\n                                        onChange={handleNewMessageChange}\r\n                                    >\r\n                                        <option value=\"\">Odaberi doktora...</option>\r\n                                        {doctors.map(doc => (\r\n                                            <option key={doc.doktorID} value={doc.doktorID}>\r\n                                                Dr. {doc.ime} {doc.prezime}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Predmet</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"subject\"\r\n                                        value={newMessage.subject}\r\n                                        onChange={handleNewMessageChange}\r\n                                        placeholder=\"Predmet poruke\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Sadržaj</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"textarea\"\r\n                                        rows={3}\r\n                                        name=\"content\"\r\n                                        value={newMessage.content}\r\n                                        onChange={handleNewMessageChange}\r\n                                        placeholder=\"Unesite svoju poruku...\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button variant=\"primary\" onClick={handleSendMessage}>Pošalji Poruku</Button>\r\n                            </Form>\r\n\r\n                            <hr className=\"my-4\" />\r\n\r\n                            <h4>Primljene Poruke</h4>\r\n                            {messages.length === 0 ? (\r\n                                <Alert variant=\"info\">Nemate primljenih poruka.</Alert>\r\n                            ) : (\r\n                                <ListGroup>\r\n                                    {messages.map(msg => (\r\n                                        <ListGroup.Item key={msg.porukaID} action onClick={() => openMessageModal(msg)}>\r\n                                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                <div>\r\n                                                    <h6>{msg.subject}</h6>\r\n                                                    <small>Od: {msg.senderIme} ({msg.senderType})</small>\r\n                                                    <p className=\"mb-0\">{msg.content.substring(0, 50)}...</p>\r\n                                                </div>\r\n                                                <small>{msg.timestamp}</small>\r\n                                            </div>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Tab>\r\n            </Tabs>\r\n\r\n            {/* Modal for Update Profile */}\r\n            <Modal show={showProfileModal} onHide={handleCloseProfileModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Ažuriraj Profil</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Ime</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"ime\" value={updatedProfile.ime || ''} onChange={handleProfileChange} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Prezime</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"prezime\" value={updatedProfile.prezime || ''} onChange={handleProfileChange} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" name=\"email\" value={updatedProfile.email || ''} onChange={handleProfileChange} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Datum rođenja</Form.Label>\r\n                            <Form.Control type=\"date\" name=\"datumRodjenja\" value={updatedProfile.datumRodjenja || ''} onChange={handleProfileChange} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Adresa</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"adresa\" value={updatedProfile.adresa || ''} onChange={handleProfileChange} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Telefon</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"brojTelefona\" value={updatedProfile.brojTelefona || ''} onChange={handleProfileChange} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseProfileModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleUpdateProfile}>\r\n                        Sačuvaj Promjene\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Modal for Schedule New Appointment */}\r\n            <Modal show={showScheduleModal} onHide={handleCloseScheduleModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Zakaži Novi Pregled</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Odaberi Doktora</Form.Label>\r\n                            <Form.Control as=\"select\" value={selectedDoctorId} onChange={handleDoctorChange}>\r\n                                <option value=\"\">Odaberi...</option>\r\n                                {doctors.map(doctor => (\r\n                                    <option key={doctor.doktorID} value={doctor.doktorID}>\r\n                                        Dr. {doctor.ime} {doctor.prezime}\r\n                                    </option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Odaberi Datum</Form.Label>\r\n                            <DatePicker\r\n                                selected={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                dateFormat=\"yyyy-MM-dd\"\r\n                                className=\"form-control\"\r\n                                minDate={new Date()} // Prevent selecting past dates\r\n                                placeholderText=\"Odaberi datum\"\r\n                                disabled={!selectedDoctorId}\r\n                            />\r\n                        </Form.Group>\r\n                        {selectedDate && (\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Dostupni Termini</Form.Label>\r\n                                {availableTimes.length === 0 && !loading ? (\r\n                                    <Alert variant=\"info\">Nema dostupnih termina za ovog doktora na odabrani datum.</Alert>\r\n                                ) : (\r\n                                    <Form.Control as=\"select\" value={selectedTime} onChange={e => setSelectedTime(e.target.value)} disabled={loading}>\r\n                                        <option value=\"\">Odaberi termin...</option>\r\n                                        {availableTimes.map(time => (\r\n                                            <option key={time.terminID} value={time.vrijeme}>\r\n                                                {time.vrijeme}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                )}\r\n                            </Form.Group>\r\n                        )}\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseScheduleModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleScheduleAppointment} disabled={loading}>\r\n                        {loading ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> : 'Zakaži'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Modal for Message Details and Reply */}\r\n            <Modal show={selectedMessage !== null} onHide={closeMessageModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Poruka: {selectedMessage?.subject}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedMessage && (\r\n                        <>\r\n                            <p><strong>Od:</strong> {selectedMessage.senderIme} ({selectedMessage.senderType})</p>\r\n                            <p><strong>Za:</strong> {selectedMessage.receiverIme} ({selectedMessage.receiverType})</p>\r\n                            <p><strong>Sadržaj:</strong> {selectedMessage.content}</p>\r\n                            <small>{selectedMessage.timestamp}</small>\r\n\r\n                            {selectedMessage.replies && selectedMessage.replies.length > 0 && (\r\n                                <div className=\"mt-4 border-top pt-3\">\r\n                                    <h6>Odgovori:</h6>\r\n                                    {selectedMessage.replies.map(reply => (\r\n                                        <div key={reply.odgovorID} className=\"mb-2 p-2 bg-light rounded\">\r\n                                            <strong>{reply.senderIme} ({reply.senderType}):</strong> {reply.content}\r\n                                            <br />\r\n                                            <small>{reply.timestamp}</small>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            <Form.Group className=\"mt-4\">\r\n                                <Form.Label>Odgovor</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={2}\r\n                                    value={replyMessage.content}\r\n                                    onChange={handleReplyMessageChange}\r\n                                    placeholder=\"Napišite svoj odgovor ovdje...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" className=\"mt-2\" onClick={() => handleReply(selectedMessage.porukaID)} disabled={loading}>\r\n                                {loading ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> : 'Pošalji Odgovor'}\r\n                            </Button>\r\n                        </>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeMessageModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}