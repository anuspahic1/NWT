{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\n\n// BAZNI URL API GATEWAY-a\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\n\n// Prefiksi za pojedine mikroservise kroz Gateway\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\n\n// DataModal komponenta - IZDVOJENA IZVAN AdminDashboard komponente\nconst DataModal = ({\n  show,\n  onClose,\n  data,\n  onSave,\n  fields,\n  title,\n  idPrefix,\n  authHeaders,\n  showNotification,\n  TERMINI_PREGLEDI_API_PREFIX\n}) => {\n  _s();\n  const [formData, setFormData] = useState(() => {\n    const initialData = data ? {\n      ...data\n    } : {};\n    fields.forEach(field => {\n      if (data && data[field.name] !== undefined && data[field.name] !== null) {\n        let value = data[field.name];\n        if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\n          value = value.split('T')[0];\n        } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\n          value = value.substring(0, 8);\n        } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\n          value = value[0] || '';\n        } else if (field.type === 'checkbox') {\n          value = Boolean(value);\n        } else if (field.type === 'number' && (value === 0 || value === 0.0)) {\n          value = '';\n        }\n        initialData[field.name] = value;\n      } else {\n        if (field.name === 'specijalizacije') {\n          initialData[field.name] = '';\n        } else if (field.type === 'number') {\n          initialData[field.name] = '';\n        } else if (field.type === 'checkbox') {\n          initialData[field.name] = false;\n        } else {\n          initialData[field.name] = '';\n        }\n      }\n    });\n    return initialData;\n  });\n  const prevTerminIDRef = useRef(null);\n  useEffect(() => {\n    const initialData = data ? {\n      ...data\n    } : {};\n    fields.forEach(field => {\n      if (data && data[field.name] !== undefined && data[field.name] !== null) {\n        let value = data[field.name];\n        if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\n          value = value.split('T')[0];\n        } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\n          value = value.substring(0, 8);\n        } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\n          value = value[0] || '';\n        } else if (field.type === 'checkbox') {\n          value = Boolean(value);\n        } else if (field.type === 'number' && (value === 0 || value === 0.0)) {\n          value = '';\n        }\n        initialData[field.name] = value;\n      } else {\n        if (field.name === 'specijalizacije') {\n          initialData[field.name] = '';\n        } else if (field.type === 'number') {\n          initialData[field.name] = '';\n        } else if (field.type === 'checkbox') {\n          initialData[field.name] = false;\n        } else {\n          initialData[field.name] = '';\n        }\n      }\n    });\n    setFormData(initialData);\n    prevTerminIDRef.current = null;\n  }, [data, fields, idPrefix]);\n  useEffect(() => {\n    if (idPrefix === 'examination' && formData.terminID && formData.terminID !== 'N/A' && formData.terminID !== prevTerminIDRef.current) {\n      const fetchTermDetails = async () => {\n        try {\n          const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${formData.terminID}`, authHeaders);\n          const fetchedTerm = response.data;\n          setFormData(prev => ({\n            ...prev,\n            doktorID: fetchedTerm.doktorID,\n            datumPregleda: fetchedTerm.datum,\n            vrijemePregleda: fetchedTerm.vrijeme.substring(0, 8)\n          }));\n          prevTerminIDRef.current = formData.terminID;\n          showNotification('Detalji termina uspješno popunjeni!', 'info');\n        } catch (error) {\n          var _error$response;\n          console.error(\"Greška prilikom dohvaćanja detalja termina:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n          showNotification('Greška prilikom dohvaćanja detalja termina. Provjerite Term ID.', 'danger');\n          setFormData(prev => ({\n            ...prev,\n            doktorID: '',\n            datumPregleda: '',\n            vrijemePregleda: ''\n          }));\n          prevTerminIDRef.current = null;\n        }\n      };\n      fetchTermDetails();\n    } else if (idPrefix === 'examination' && (formData.terminID === 'N/A' || !formData.terminID)) {\n      setFormData(prev => ({\n        ...prev,\n        doktorID: '',\n        datumPregleda: '',\n        vrijemePregleda: ''\n      }));\n      prevTerminIDRef.current = null;\n    }\n  }, [formData.terminID, idPrefix, authHeaders, showNotification, TERMINI_PREGLEDI_API_PREFIX]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prev => {\n      let newValue = value;\n      if (name === 'specijalizacije') {\n        newValue = value;\n      } else if (type === 'number') {\n        newValue = value === '' ? 0 : Number(value);\n        if (isNaN(newValue)) {\n          newValue = 0;\n        }\n      } else if (type === 'checkbox') {\n        newValue = checked;\n      }\n      return {\n        ...prev,\n        [name]: newValue\n      };\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const finalFormData = {\n      ...formData\n    };\n    if (idPrefix === 'doctor' && typeof finalFormData.specijalizacije === 'string') {\n      finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\n    }\n    if (finalFormData.iskustvo === null || finalFormData.iskustvo === '') {\n      finalFormData.iskustvo = 0;\n    }\n    if (finalFormData.ocjena === null || finalFormData.ocjena === '') {\n      finalFormData.ocjena = 0.0;\n    }\n    if (idPrefix === 'term' && finalFormData.vrijeme) {\n      if (finalFormData.vrijeme.length === 5) {\n        finalFormData.vrijeme += ':00';\n      }\n    } else if (idPrefix === 'examination' && finalFormData.vrijemePregleda) {\n      if (finalFormData.vrijemePregleda.length === 5) {\n        finalFormData.vrijemePregleda += ':00';\n      }\n    }\n    console.log('DataModal handleSubmit - finalFormData:', finalFormData);\n    onSave(finalFormData);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onClose,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: fields.map(field => /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: `${idPrefix}-${field.name}`,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), field.type === 'select' ? /*#__PURE__*/_jsxDEV(Form.Select, {\n            name: field.name,\n            value: formData[field.name] || '',\n            onChange: handleChange,\n            required: field.required,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: [\"Select \", field.label]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this) : field.type === 'textarea' ? /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            name: field.name,\n            value: formData[field.name] || '',\n            onChange: handleChange,\n            required: field.required\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this) : field.type === 'checkbox' ? /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            name: field.name,\n            checked: formData[field.name] || false,\n            onChange: handleChange,\n            label: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: field.type || 'text',\n            name: field.name,\n            value: formData[field.name] === null || formData[field.name] === undefined || formData[field.name] === 'N/A' || field.type === 'number' && (formData[field.name] === 0 || formData[field.name] === 0.0) ? '' : formData[field.name],\n            onChange: handleChange,\n            required: field.required,\n            readOnly: field.readOnly || idPrefix === 'examination' && (field.name === 'doktorID' || field.name === 'datumPregleda' || field.name === 'vrijemePregleda')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this)]\n        }, field.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n// Pagination komponenta - IZDVOJENA IZVAN AdminDashboard komponente\n_s(DataModal, \"XrYNuxCDVADW8Ttkc2GLkdquNe8=\");\n_c = DataModal;\nconst Pagination = ({\n  itemsPerPage,\n  totalItems,\n  currentPage,\n  paginate\n}) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination justify-content-center mt-4\",\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `page-item ${currentPage === number ? 'active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => paginate(number),\n          className: \"page-link\",\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Pagination;\nfunction AdminDashboard() {\n  _s2();\n  const {\n    token\n  } = useAuth();\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const [loadingInitial, setLoadingInitial] = useState(true);\n  const [isAuthChecked, setIsAuthChecked] = useState(false);\n  const [activeTab, setActiveTab] = useState(() => {\n    const savedTab = localStorage.getItem('adminActiveTab');\n    return savedTab || 'overview';\n  });\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [examinations, setExaminations] = useState([]);\n  const [terms, setTerms] = useState([]);\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\n  const [editingDoctor, setEditingDoctor] = useState(null);\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n  const [showTermModal, setShowTermModal] = useState(false);\n  const [editingTerm, setEditingTerm] = useState(null);\n  const [showExaminationModal, setShowExaminationModal] = useState(false);\n  const [editingExamination, setEditingExamination] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n  const [termSearchTerm, setTermSearchTerm] = useState('');\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\n  const [termsCurrentPage, setTermsCurrentPage] = useState(1);\n  const [examinationsCurrentPage, setExaminationsCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: doc.userId,\n        name: `${doc.ime} ${doc.prezime}`,\n        ime: doc.ime,\n        prezime: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        specijalizacije: doc.specijalizacije,\n        city: doc.grad || 'N/A',\n        grad: doc.grad,\n        email: doc.email || 'N/A',\n        telefon: doc.telefon || 'N/A',\n        radnoVrijeme: doc.radnoVrijeme || '',\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : '',\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 0.0\n      }));\n      setDoctors(transformedDoctors);\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Greška prilikom dohvaćanja doktora:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\n      const transformedPatients = response.data.map(pat => ({\n        id: pat.pacijentID,\n        userId: pat.userId,\n        name: `${pat.ime} ${pat.prezime}`,\n        ime: pat.ime,\n        prezime: pat.prezime,\n        email: pat.email || 'N/A',\n        phone: pat.telefon || 'N/A',\n        telefon: pat.telefon\n      }));\n      setPatients(transformedPatients);\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\n    }\n  };\n  const fetchTerms = async () => {\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, authHeaders);\n      const transformedTerms = response.data.map(term => ({\n        id: term.terminID,\n        doktorID: term.doktorID,\n        datum: term.datum,\n        vrijeme: term.vrijeme,\n        dostupnost: term.dostupnost\n      }));\n      setTerms(transformedTerms);\n    } catch (error) {\n      var _error$response4;\n      console.error(\"Greška prilikom dohvaćanja termina:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\n    }\n  };\n  const fetchExaminations = async () => {\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\n      const transformedExaminations = response.data.map(app => ({\n        id: app.pregledID,\n        pacijentID: app.pacijentID,\n        doktorID: app.doktorID,\n        patientName: app.pacijentIme || 'N/A',\n        doctorName: app.doktorIme || 'N/A',\n        datumPregleda: app.datumPregleda,\n        vrijemePregleda: app.vrijemePregleda,\n        status: app.status,\n        komentarPacijenta: app.komentarPacijenta || '',\n        ocjenaDoktora: app.ocjenaDoktora || null,\n        terminID: app.terminID !== null && app.terminID !== undefined ? app.terminID : 'N/A'\n      }));\n      setExaminations(transformedExaminations);\n    } catch (error) {\n      var _error$response5;\n      console.error(\"Greška prilikom dohvaćanja pregleda:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja pregleda sa servera.\", \"danger\");\n    }\n  };\n  useEffect(() => {\n    if (token !== undefined && !isAuthChecked) {\n      setIsAuthChecked(true);\n    }\n    const initializeDashboard = async () => {\n      if (isAuthChecked) {\n        if (token) {\n          try {\n            await Promise.all([fetchDoctors(), fetchPatients(), fetchTerms(), fetchExaminations()]);\n          } catch (error) {\n            console.error(\"Greška prilikom inicijalnog dohvaćanja podataka:\", error);\n            showNotification(\"Greška prilikom učitavanja početnih podataka.\", \"danger\");\n          } finally {\n            setLoadingInitial(false);\n          }\n        } else {\n          setLoadingInitial(false);\n          console.warn(\"Provjera autentifikacije završena, ali token nije dostupan. Korisnik nije ulogovan/autorizovan.\");\n        }\n      }\n    };\n    initializeDashboard();\n  }, [token, isAuthChecked]);\n  useEffect(() => {\n    localStorage.setItem('adminActiveTab', activeTab);\n  }, [activeTab]);\n  const handleAddDoctor = async newDoctorData => {\n    try {\n      var _authResponse$data$us;\n      const registerPayload = {\n        email: newDoctorData.email,\n        password: newDoctorData.password,\n        fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\n        telefon: newDoctorData.telefon,\n        roles: [\"ROLE_DOKTOR\"],\n        grad: newDoctorData.grad,\n        specijalizacije: newDoctorData.specijalizacije\n      };\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      console.log(\"Auth Service Register Response Data:\", authResponse.data);\n      const userId = authResponse.data.id || ((_authResponse$data$us = authResponse.data.user) === null || _authResponse$data$us === void 0 ? void 0 : _authResponse$data$us.id) || null;\n      if (!userId) {\n        throw new Error(\"Korisnički ID nije dobiven iz Auth servisa.\");\n      }\n      const doctorDetailsPayload = {\n        userId: userId,\n        ime: newDoctorData.ime,\n        prezime: newDoctorData.prezime,\n        email: newDoctorData.email,\n        telefon: newDoctorData.telefon,\n        grad: newDoctorData.grad,\n        specijalizacije: newDoctorData.specijalizacije,\n        radnoVrijeme: newDoctorData.radnoVrijeme || '',\n        iskustvo: newDoctorData.iskustvo !== null && newDoctorData.iskustvo !== undefined ? newDoctorData.iskustvo : 0,\n        ocjena: 0.0\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/user-details/${userId}`, doctorDetailsPayload, authHeaders);\n      setTimeout(() => {\n        fetchDoctors();\n      }, 500);\n      setShowDoctorModal(false);\n      showNotification('Novi doktor uspješno registrovan i detalji sačuvani!', 'success');\n    } catch (error) {\n      var _error$response6, _error$response7, _error$response7$data;\n      console.error(\"Greška prilikom dodavanja doktora:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      showNotification(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Greška prilikom dodavanja doktora.', \"danger\");\n    }\n  };\n  const handleUpdateDoctor = async updatedDoctor => {\n    try {\n      if (!updatedDoctor.id) {\n        showNotification('ID doktora nedostaje za ažuriranje.', 'danger');\n        console.error('ID doktora nedostaje za ažuriranje:', updatedDoctor);\n        return;\n      }\n      const doctorUpdatePayload = {\n        ime: updatedDoctor.ime,\n        prezime: updatedDoctor.prezime,\n        email: updatedDoctor.email,\n        telefon: updatedDoctor.telefon,\n        grad: updatedDoctor.grad,\n        specijalizacije: updatedDoctor.specijalizacije,\n        radnoVrijeme: updatedDoctor.radnoVrijeme || '',\n        iskustvo: updatedDoctor.iskustvo !== null && updatedDoctor.iskustvo !== undefined ? updatedDoctor.iskustvo : 0,\n        ocjena: updatedDoctor.ocjena || 0.0\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\n      const userUpdatePayload = {\n        email: updatedDoctor.email,\n        fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\n        telefon: updatedDoctor.telefon\n      };\n      if (updatedDoctor.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchDoctors();\n      setShowDoctorModal(false);\n      setEditingDoctor(null);\n      showNotification('Doktor uspješno ažuriran!', 'success');\n    } catch (error) {\n      var _error$response8, _error$response9, _error$response9$data;\n      console.error(\"Greška prilikom ažuriranja doktora:\", ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n      showNotification(((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Greška prilikom ažuriranja doktora.', \"danger\");\n    }\n  };\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(() => () => {});\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\n  const [confirmTitle, setConfirmTitle] = useState(\"Potvrda\");\n  const showCustomConfirm = (message, action, title = \"Potvrda\") => {\n    setConfirmMessage(message);\n    setConfirmAction(() => action);\n    setConfirmTitle(title);\n    setShowConfirmModal(true);\n  };\n  const handleConfirmAction = () => {\n    confirmAction();\n    setShowConfirmModal(false);\n  };\n  const handleDeleteDoctor = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.', async () => {\n      try {\n        const doctorToDelete = doctors.find(doc => doc.id === id);\n        if (!doctorToDelete || !doctorToDelete.userId) {\n          showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\n          return;\n        }\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\n        await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\n        fetchDoctors();\n        showNotification('Doktor uspješno obrisan!', 'danger');\n      } catch (error) {\n        var _error$response0, _error$response1, _error$response1$data;\n        console.error(\"Greška prilikom brisanja doktora:\", ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error.message);\n        showNotification(((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || 'Greška prilikom brisanja doktora.', \"danger\");\n      }\n    }, \"Potvrdi brisanje doktora\");\n  };\n  const openDoctorModal = (doctor = null) => {\n    setEditingDoctor(doctor);\n    setShowDoctorModal(true);\n  };\n  const filteredDoctors = doctors.filter(doctor => doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()));\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\n  const handleAddPatient = async newPatient => {\n    try {\n      var _authResponse$data$us2;\n      console.log(\"handleAddPatient: Počinjem proces dodavanja pacijenta.\");\n      const registerPayload = {\n        email: newPatient.email,\n        password: newPatient.password,\n        fullName: `${newPatient.ime} ${newPatient.prezime}`,\n        telefon: newPatient.telefon,\n        roles: [\"ROLE_PACIJENT\"],\n        grad: null,\n        specijalizacije: null\n      };\n      console.log(\"handleAddPatient: Slanje registerPayload-a Auth servisu:\", registerPayload);\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      console.log(\"Auth Service Register Response Data (for patient):\", authResponse.data);\n      const userId = authResponse.data.id || ((_authResponse$data$us2 = authResponse.data.user) === null || _authResponse$data$us2 === void 0 ? void 0 : _authResponse$data$us2.id) || null;\n      if (!userId) {\n        throw new Error(\"Korisnički ID nije dobiven iz Auth servisa za pacijenta.\");\n      }\n      console.log(\"handleAddPatient: Preskačem slanje pacijent detalja na korisnici-doktori servis. Očekujem da UserRegisteredEvent to obradi.\");\n      setTimeout(() => {\n        fetchPatients();\n      }, 500);\n      setShowPatientModal(false);\n      showNotification('Novi pacijent uspješno registrovan!', 'success');\n      console.log(\"handleAddPatient: Proces dodavanja pacijenta uspješno završen (registracija i event obrada).\");\n    } catch (error) {\n      var _error$response10, _error$response11, _error$response11$dat;\n      console.error(\"Greška prilikom dodavanja pacijenta:\", ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message);\n      showNotification(((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : (_error$response11$dat = _error$response11.data) === null || _error$response11$dat === void 0 ? void 0 : _error$response11$dat.message) || 'Greška prilikom dodavanja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\n    }\n  };\n  const handleUpdatePatient = async updatedPatient => {\n    try {\n      const patientUpdatePayload = {\n        ime: updatedPatient.ime,\n        prezime: updatedPatient.prezime,\n        email: updatedPatient.email,\n        telefon: updatedPatient.telefon\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\n      const userUpdatePayload = {\n        email: updatedPatient.email,\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\n        telefon: updatedPatient.telefon\n      };\n      if (updatedPatient.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchPatients();\n      setShowPatientModal(false);\n      setEditingPatient(null);\n      showNotification('Pacijent uspješno ažuriran!', 'success');\n    } catch (error) {\n      var _error$response12, _error$response13, _error$response13$dat;\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", ((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : _error$response12.data) || error.message);\n      showNotification(((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : (_error$response13$dat = _error$response13.data) === null || _error$response13$dat === void 0 ? void 0 : _error$response13$dat.message) || 'Greška prilikom ažuriranja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\n    }\n  };\n  const handleDeletePatient = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.', async () => {\n      try {\n        const patientToDelete = patients.find(pat => pat.id === id);\n        if (!patientToDelete || !patientToDelete.userId) {\n          showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\n          return;\n        }\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`, authHeaders);\n        await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\n        fetchPatients();\n        showNotification('Pacijent uspješno obrisan!', 'success');\n      } catch (error) {\n        var _error$response14, _error$response15, _error$response15$dat;\n        console.error(\"Greška prilikom brisanja pacijenta:\", ((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : _error$response14.data) || error.message);\n        showNotification(((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : (_error$response15$dat = _error$response15.data) === null || _error$response15$dat === void 0 ? void 0 : _error$response15$dat.message) || 'Greška prilikom brisanja pacijenta.', \"danger\");\n      }\n    }, \"Potvrdi brisanje pacijenta\");\n  };\n  const openPatientModal = (patient = null) => {\n    setEditingPatient(patient);\n    setShowPatientModal(true);\n  };\n  const filteredPatients = patients.filter(patient => patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\n  const handleAddTerm = async newTermData => {\n    try {\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, newTermData, authHeaders);\n      showNotification('Novi termin uspješno dodan!', 'success');\n      fetchTerms();\n      setShowTermModal(false);\n    } catch (error) {\n      var _error$response16, _error$response17, _error$response17$dat;\n      console.error(\"Greška prilikom dodavanja termina:\", ((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : _error$response16.data) || error.message);\n      showNotification(((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : (_error$response17$dat = _error$response17.data) === null || _error$response17$dat === void 0 ? void 0 : _error$response17$dat.message) || 'Greška prilikom dodavanja termina.', \"danger\");\n    }\n  };\n  const handleUpdateTerm = async updatedTerm => {\n    try {\n      const termPayload = {\n        doktorID: updatedTerm.doktorID,\n        datum: updatedTerm.datum,\n        vrijeme: updatedTerm.vrijeme,\n        dostupnost: updatedTerm.dostupnost\n      };\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${updatedTerm.id}`, termPayload, authHeaders);\n      showNotification('Termin uspješno ažuriran!', 'success');\n      fetchTerms();\n      setShowTermModal(false);\n      setEditingTerm(null);\n    } catch (error) {\n      var _error$response18, _error$response19, _error$response19$dat;\n      console.error(\"Greška prilikom ažuriranja termina:\", ((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : _error$response18.data) || error.message);\n      showNotification(((_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : (_error$response19$dat = _error$response19.data) === null || _error$response19$dat === void 0 ? void 0 : _error$response19$dat.message) || 'Greška prilikom ažuriranja termina.', \"danger\");\n    }\n  };\n  const handleDeleteTerm = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovaj termin?', async () => {\n      try {\n        await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${id}`, authHeaders);\n        showNotification('Termin uspješno obrisan!', 'success');\n        fetchTerms();\n      } catch (error) {\n        var _error$response20, _error$response21, _error$response21$dat;\n        console.error(\"Greška prilikom brisanja termina:\", ((_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : _error$response20.data) || error.message);\n        showNotification(((_error$response21 = error.response) === null || _error$response21 === void 0 ? void 0 : (_error$response21$dat = _error$response21.data) === null || _error$response21$dat === void 0 ? void 0 : _error$response21$dat.message) || 'Greška prilikom brisanja termina.', \"danger\");\n      }\n    }, \"Potvrdi brisanje termina\");\n  };\n  const openTermModal = (term = null) => {\n    if (term) {\n      setEditingTerm({\n        ...term,\n        doktorID: term.doktorID,\n        dostupnost: term.dostupnost\n      });\n    } else {\n      setEditingTerm(null);\n    }\n    setShowTermModal(true);\n  };\n  const filteredTerms = terms.filter(term => term.doktorID != null && term.doktorID.toString().toLowerCase().includes(termSearchTerm.toLowerCase()) || term.datum && term.datum.toLowerCase().includes(termSearchTerm.toLowerCase()) || term.vrijeme && term.vrijeme.toLowerCase().includes(termSearchTerm.toLowerCase()) || term.dostupnost !== undefined && (term.dostupnost ? 'dostupan' : 'zauzet').includes(termSearchTerm.toLowerCase()));\n  const indexOfLastTerm = termsCurrentPage * itemsPerPage;\n  const indexOfFirstTerm = indexOfLastTerm - itemsPerPage;\n  const currentTerms = filteredTerms.slice(indexOfFirstTerm, indexOfLastTerm);\n  const totalTermPages = Math.ceil(filteredTerms.length / itemsPerPage);\n  const handleAddExamination = async newExaminationData => {\n    try {\n      console.log('handleAddExamination - Podaci prije slanja na backend:', newExaminationData);\n      const examinationPayload = {\n        pacijentID: newExaminationData.pacijentID,\n        doktorID: newExaminationData.doktorID,\n        terminID: newExaminationData.terminID,\n        datumPregleda: newExaminationData.datumPregleda,\n        vrijemePregleda: newExaminationData.vrijemePregleda,\n        status: newExaminationData.status,\n        komentarPacijenta: newExaminationData.komentarPacijenta,\n        ocjenaDoktora: newExaminationData.ocjenaDoktora\n      };\n      console.log('handleAddExamination - Sending Payload:', examinationPayload);\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, examinationPayload, authHeaders);\n      showNotification('Novi pregled uspješno dodan!', 'success');\n      fetchExaminations();\n      setShowExaminationModal(false);\n    } catch (error) {\n      var _error$response22, _error$response23, _error$response23$dat;\n      console.error(\"Greška prilikom dodavanja pregleda:\", ((_error$response22 = error.response) === null || _error$response22 === void 0 ? void 0 : _error$response22.data) || error.message);\n      showNotification(((_error$response23 = error.response) === null || _error$response23 === void 0 ? void 0 : (_error$response23$dat = _error$response23.data) === null || _error$response23$dat === void 0 ? void 0 : _error$response23$dat.message) || 'Greška prilikom dodavanja pregleda.', \"danger\");\n    }\n  };\n  const handleUpdateExamination = async updatedExamination => {\n    try {\n      console.log('handleUpdateExamination primio payload:', updatedExamination);\n      const examinationPayload = {\n        pacijentID: updatedExamination.pacijentID,\n        doktorID: updatedExamination.doktorID,\n        terminID: updatedExamination.terminID,\n        datumPregleda: updatedExamination.datumPregleda,\n        vrijemePregleda: updatedExamination.vrijemePregleda,\n        status: updatedExamination.status,\n        komentarPacijenta: updatedExamination.komentarPacijenta,\n        ocjenaDoktora: updatedExamination.ocjenaDoktora\n      };\n      console.log('handleUpdateExamination šalje na backend:', examinationPayload);\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${updatedExamination.id}`, examinationPayload, authHeaders);\n      showNotification('Pregled uspješno ažuriran!', 'success');\n      fetchExaminations();\n      setShowExaminationModal(false);\n      setEditingExamination(null);\n    } catch (error) {\n      var _error$response24, _error$response25, _error$response25$dat;\n      console.error(\"Greška prilikom ažuriranja pregleda:\", ((_error$response24 = error.response) === null || _error$response24 === void 0 ? void 0 : _error$response24.data) || error.message);\n      showNotification(((_error$response25 = error.response) === null || _error$response25 === void 0 ? void 0 : (_error$response25$dat = _error$response25.data) === null || _error$response25$dat === void 0 ? void 0 : _error$response25$dat.message) || 'Greška prilikom ažuriranja pregleda.', \"danger\");\n    }\n  };\n  const handleDeleteExamination = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovaj pregled?', async () => {\n      try {\n        await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, authHeaders);\n        showNotification('Pregled uspješno obrisan!', 'success');\n        fetchExaminations();\n      } catch (error) {\n        var _error$response26, _error$response27, _error$response27$dat;\n        console.error(\"Greška prilikom brisanja pregleda:\", ((_error$response26 = error.response) === null || _error$response26 === void 0 ? void 0 : _error$response26.data) || error.message);\n        showNotification(((_error$response27 = error.response) === null || _error$response27 === void 0 ? void 0 : (_error$response27$dat = _error$response27.data) === null || _error$response27$dat === void 0 ? void 0 : _error$response27$dat.message) || 'Greška prilikom brisanja pregleda.', \"danger\");\n      }\n    }, \"Potvrdi brisanje pregleda\");\n  };\n  const openExaminationModal = (examination = null) => {\n    if (examination) {\n      setEditingExamination({\n        ...examination,\n        pacijentID: examination.pacijentID,\n        doktorID: examination.doktorID,\n        terminID: examination.terminID,\n        datumPregleda: examination.datumPregleda,\n        vrijemePregleda: examination.vrijemePregleda\n      });\n    } else {\n      setEditingExamination(null);\n    }\n    setShowExaminationModal(true);\n  };\n  const filteredExaminations = examinations.filter(exam => exam.patientName && exam.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.doctorName && exam.doctorName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.status && exam.status.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.datumPregleda && exam.datumPregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.vrijemePregleda && exam.vrijemePregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()));\n  const indexOfLastExamination = examinationsCurrentPage * itemsPerPage;\n  const indexOfFirstExamination = indexOfLastExamination - itemsPerPage;\n  const currentExaminations = filteredExaminations.slice(indexOfFirstExamination, indexOfLastExamination);\n  const totalExaminationPages = Math.ceil(filteredExaminations.length / itemsPerPage);\n  const renderContent = () => {\n    const addDoctorFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'password',\n      label: 'Password',\n      type: 'password',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }, {\n      name: 'grad',\n      label: 'City',\n      type: 'select',\n      required: true,\n      options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n    }, {\n      name: 'specijalizacije',\n      label: 'Specialty',\n      type: 'select',\n      required: true,\n      options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n    }, {\n      name: 'radnoVrijeme',\n      label: 'Work Hours',\n      type: 'text',\n      required: false\n    }, {\n      name: 'iskustvo',\n      label: 'Experience (years)',\n      type: 'number',\n      required: false\n    }];\n    const editDoctorFields = [{\n      name: 'id',\n      label: 'Doctor ID',\n      type: 'text',\n      readOnly: true\n    }, {\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }, {\n      name: 'grad',\n      label: 'City',\n      type: 'select',\n      required: true,\n      options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n    }, {\n      name: 'specijalizacije',\n      label: 'Specialty',\n      type: 'select',\n      required: true,\n      options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n    }, {\n      name: 'radnoVrijeme',\n      label: 'Work Hours',\n      type: 'text',\n      required: false\n    }, {\n      name: 'iskustvo',\n      label: 'Experience (years)',\n      type: 'number',\n      required: false\n    }];\n    const addPatientFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'password',\n      label: 'Password',\n      type: 'password',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }];\n    const editPatientFields = [{\n      name: 'id',\n      label: 'Patient ID',\n      type: 'text',\n      readOnly: true\n    }, {\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }];\n    const addTermFields = [{\n      name: 'doktorID',\n      label: 'Doctor ID',\n      type: 'number',\n      required: true\n    }, {\n      name: 'datum',\n      label: 'Date (YYYY-MM-DD)',\n      type: 'date',\n      required: true\n    }, {\n      name: 'vrijeme',\n      label: 'Time (HH:MM:SS)',\n      type: 'time',\n      required: true\n    }, {\n      name: 'dostupnost',\n      label: 'Available',\n      type: 'checkbox',\n      required: false\n    }];\n    const editTermFields = [{\n      name: 'id',\n      label: 'Term ID (Auto)',\n      type: 'text',\n      required: false,\n      readOnly: true\n    }, {\n      name: 'doktorID',\n      label: 'Doctor ID',\n      type: 'number',\n      required: true\n    }, {\n      name: 'datum',\n      label: 'Date (YYYY-MM-DD)',\n      type: 'date',\n      required: true\n    }, {\n      name: 'vrijeme',\n      label: 'Time (HH:MM:SS)',\n      type: 'time',\n      required: true\n    }, {\n      name: 'dostupnost',\n      label: 'Available',\n      type: 'checkbox',\n      required: false\n    }];\n    const addExaminationFields = [{\n      name: 'pacijentID',\n      label: 'Patient ID',\n      type: 'number',\n      required: true\n    }, {\n      name: 'doktorID',\n      label: 'Doctor ID',\n      type: 'number',\n      required: true,\n      readOnly: true\n    }, {\n      name: 'terminID',\n      label: 'Term ID',\n      type: 'number',\n      required: true\n    }, {\n      name: 'datumPregleda',\n      label: 'Date of Examination (YYYY-MM-DD)',\n      type: 'date',\n      required: true,\n      readOnly: true\n    }, {\n      name: 'vrijemePregleda',\n      label: 'Time of Examination (HH:MM:SS)',\n      type: 'time',\n      required: true,\n      readOnly: true\n    }, {\n      name: 'status',\n      label: 'Status',\n      type: 'select',\n      required: true,\n      options: ['zakazan', 'obavljen', 'otkazan']\n    }, {\n      name: 'komentarPacijenta',\n      label: 'Patient Comment',\n      type: 'textarea',\n      required: false\n    }, {\n      name: 'ocjenaDoktora',\n      label: 'Doctor Rating (0.0-5.0)',\n      type: 'number',\n      required: false\n    }];\n    const editExaminationFields = [{\n      name: 'id',\n      label: 'Examination ID (Auto)',\n      type: 'text',\n      readOnly: true\n    }, {\n      name: 'pacijentID',\n      label: 'Patient ID',\n      type: 'number',\n      required: true\n    }, {\n      name: 'doktorID',\n      label: 'Doctor ID',\n      type: 'number',\n      required: true,\n      readOnly: true\n    }, {\n      name: 'terminID',\n      label: 'Term ID',\n      type: 'number',\n      required: true\n    }, {\n      name: 'datumPregleda',\n      label: 'Date of Examination (YYYY-MM-DD)',\n      type: 'date',\n      required: true,\n      readOnly: true\n    }, {\n      name: 'vrijemePregleda',\n      label: 'Time of Examination (HH:MM:SS)',\n      type: 'time',\n      required: true,\n      readOnly: true\n    }, {\n      name: 'status',\n      label: 'Status',\n      type: 'select',\n      required: true,\n      options: ['zakazan', 'obavljen', 'otkazan']\n    }, {\n      name: 'komentarPacijenta',\n      label: 'Patient Comment',\n      type: 'textarea',\n      required: false\n    }, {\n      name: 'ocjenaDoktora',\n      label: 'Doctor Rating (0.0-5.0)',\n      type: 'number',\n      required: false\n    }];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Admin Dashboard Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 955,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Welcome to the Admin Dashboard. Here you can manage doctors, patients, terms, and examinations.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Use the navigation on the left to switch between different management sections.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 9\n      }, this), activeTab === 'doctors' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Doctors Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control w-auto\",\n            placeholder: \"Search doctors...\",\n            value: doctorSearchTerm,\n            onChange: e => setDoctorSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: () => openDoctorModal(),\n            children: \"Add New Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"table-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 982,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Specialty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Work Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 986,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Experience (years)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 987,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 988,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentDoctors.length > 0 ? currentDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 995,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.telefon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.specialty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1000,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.radnoVrijeme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1001,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.iskustvo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"warning\",\n                  size: \"sm\",\n                  className: \"me-2\",\n                  onClick: () => openDoctorModal(doctor),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1004,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"sm\",\n                  onClick: () => handleDeleteDoctor(doctor.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1005,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 21\n              }, this)]\n            }, doctor.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"9\",\n                className: \"text-center\",\n                children: \"No doctors found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsPerPage: itemsPerPage,\n          totalItems: filteredDoctors.length,\n          currentPage: doctorsCurrentPage,\n          paginate: setDoctorsCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 9\n      }, this), activeTab === 'patients' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Patients Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control w-auto\",\n            placeholder: \"Search patients...\",\n            value: patientSearchTerm,\n            onChange: e => setPatientSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: () => openPatientModal(),\n            children: \"Add New Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"table-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1040,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentPatients.length > 0 ? currentPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: patient.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1050,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: patient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1051,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: patient.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1052,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: patient.telefon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1053,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"warning\",\n                  size: \"sm\",\n                  className: \"me-2\",\n                  onClick: () => openPatientModal(patient),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1055,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"sm\",\n                  onClick: () => handleDeletePatient(patient.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1056,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1054,\n                columnNumber: 21\n              }, this)]\n            }, patient.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"5\",\n                className: \"text-center\",\n                children: \"No patients found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsPerPage: itemsPerPage,\n          totalItems: filteredPatients.length,\n          currentPage: patientsCurrentPage,\n          paginate: setPatientsCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 9\n      }, this), activeTab === 'terms' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Terms Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control w-auto\",\n            placeholder: \"Search terms...\",\n            value: termSearchTerm,\n            onChange: e => setTermSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1078,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: () => openTermModal(),\n            children: \"Add New Term\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1085,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"table-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1090,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Doctor ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1091,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1092,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1093,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1094,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1095,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1089,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1088,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentTerms.length > 0 ? currentTerms.map(term => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: term.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1102,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: term.doktorID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1103,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: term.datum\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1104,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: term.vrijeme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: term.dostupnost ? 'Yes' : 'No'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1106,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"warning\",\n                  size: \"sm\",\n                  className: \"me-2\",\n                  onClick: () => openTermModal(term),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1108,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"sm\",\n                  onClick: () => handleDeleteTerm(term.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1109,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1107,\n                columnNumber: 21\n              }, this)]\n            }, term.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"6\",\n                className: \"text-center\",\n                children: \"No terms found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1114,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsPerPage: itemsPerPage,\n          totalItems: filteredTerms.length,\n          currentPage: termsCurrentPage,\n          paginate: setTermsCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1075,\n        columnNumber: 9\n      }, this), activeTab === 'examinations' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Examinations Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control w-auto\",\n            placeholder: \"Search examinations...\",\n            value: examinationSearchTerm,\n            onChange: e => setExaminationSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: () => openExaminationModal(),\n            children: \"Add New Examination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"table-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Patient ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Doctor ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Term ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Patient Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Doctor Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentExaminations.length > 0 ? currentExaminations.map(exam => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: exam.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1159,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: exam.pacijentID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1160,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: exam.doktorID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1161,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: exam.terminID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1162,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: exam.patientName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: exam.doctorName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1164,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: exam.datumPregleda\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1165,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: exam.vrijemePregleda\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1166,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge ${exam.status === 'zakazan' ? 'bg-primary' : exam.status === 'obavljen' ? 'bg-success' : 'bg-danger'}`,\n                  children: exam.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1168,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1167,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"warning\",\n                  size: \"sm\",\n                  className: \"me-2\",\n                  onClick: () => openExaminationModal(exam),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1175,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"sm\",\n                  onClick: () => handleDeleteExamination(exam.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1176,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1174,\n                columnNumber: 21\n              }, this)]\n            }, exam.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"10\",\n                className: \"text-center\",\n                children: \"No examinations found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1181,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsPerPage: itemsPerPage,\n          totalItems: filteredExaminations.length,\n          currentPage: examinationsCurrentPage,\n          paginate: setExaminationsCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }; // Closing renderContent\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alertType,\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n      style: {\n        zIndex: 1050\n      },\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showConfirmModal,\n      onHide: () => setShowConfirmModal(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: confirmTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: confirmMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowConfirmModal(false),\n          children: \"Poni\\u0161ti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleConfirmAction,\n          children: \"Potvrdi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\",\n        style: {\n          minHeight: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky pt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'overview' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('overview'),\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1227,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'doctors' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('doctors'),\n                children: \"Doctors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1232,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'patients' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('patients'),\n                children: \"Patients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1237,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'terms' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('terms'),\n                children: \"Terms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1242,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'examinations' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('examinations'),\n                children: \"Examinations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1247,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showDoctorModal,\n      onClose: () => setShowDoctorModal(false),\n      data: editingDoctor,\n      onSave: editingDoctor ? handleUpdateDoctor : handleAddDoctor,\n      title: editingDoctor ? 'Edit Doctor' : 'Add New Doctor',\n      idPrefix: \"doctor\",\n      fields: editingDoctor ? editDoctorFields : addDoctorFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification // Proslijeđivanje showNotification funkciji\n      ,\n      TERMINI_PREGLEDI_API_PREFIX: TERMINI_PREGLEDI_API_PREFIX // Proslijeđivanje API prefixa\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showPatientModal,\n      onClose: () => setShowPatientModal(false),\n      data: editingPatient,\n      onSave: editingPatient ? handleUpdatePatient : handleAddPatient,\n      title: editingPatient ? 'Edit Patient' : 'Add New Patient',\n      idPrefix: \"patient\",\n      fields: editingPatient ? editPatientFields : addPatientFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification,\n      TERMINI_PREGLEDI_API_PREFIX: TERMINI_PREGLEDI_API_PREFIX\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showTermModal,\n      onClose: () => setShowTermModal(false),\n      data: editingTerm,\n      onSave: editingTerm ? handleUpdateTerm : handleAddTerm,\n      title: editingTerm ? 'Edit Term' : 'Add New Term',\n      idPrefix: \"term\",\n      fields: editingTerm ? editTermFields : addTermFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification,\n      TERMINI_PREGLEDI_API_PREFIX: TERMINI_PREGLEDI_API_PREFIX\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showExaminationModal,\n      onClose: () => setShowExaminationModal(false),\n      data: editingExamination,\n      onSave: editingExamination ? handleUpdateExamination : handleAddExamination,\n      title: editingExamination ? 'Edit Examination' : 'Add New Examination',\n      idPrefix: \"examination\",\n      fields: editingExamination ? editExaminationFields : addExaminationFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification,\n      TERMINI_PREGLEDI_API_PREFIX: TERMINI_PREGLEDI_API_PREFIX\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1198,\n    columnNumber: 5\n  }, this);\n}\n\n// OBAVEZNO: OVA LINIJA MORA BITI NA KRAJU FAJLA, IZVAN BILO KOJE DRUGE FUNKCIJE\n// I MORA BITI SAMO JEDNA TAKVA LINIJA U CIJELOM FAJLU\n_s2(AdminDashboard, \"afq1K7bojrsB5rih4YDmr06H6ZE=\", false, function () {\n  return [useAuth];\n});\n_c3 = AdminDashboard;\nexport default AdminDashboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DataModal\");\n$RefreshReg$(_c2, \"Pagination\");\n$RefreshReg$(_c3, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","axios","useAuth","Modal","Button","Form","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","AUTH_API_PREFIX","DataModal","show","onClose","data","onSave","fields","title","idPrefix","authHeaders","showNotification","_s","formData","setFormData","initialData","forEach","field","name","undefined","value","type","includes","split","length","substring","Array","isArray","Boolean","prevTerminIDRef","current","terminID","fetchTermDetails","response","get","fetchedTerm","prev","doktorID","datumPregleda","datum","vrijemePregleda","vrijeme","error","_error$response","console","message","handleChange","e","checked","target","newValue","Number","isNaN","handleSubmit","preventDefault","finalFormData","specijalizacije","iskustvo","ocjena","log","onHide","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Body","map","Group","className","controlId","Label","label","Select","onChange","required","options","option","Control","as","rows","Check","readOnly","Footer","variant","onClick","_c","Pagination","itemsPerPage","totalItems","currentPage","paginate","pageNumbers","i","Math","ceil","push","number","_c2","AdminDashboard","_s2","token","headers","loadingInitial","setLoadingInitial","isAuthChecked","setIsAuthChecked","activeTab","setActiveTab","savedTab","localStorage","getItem","doctors","setDoctors","patients","setPatients","examinations","setExaminations","terms","setTerms","showDoctorModal","setShowDoctorModal","editingDoctor","setEditingDoctor","showPatientModal","setShowPatientModal","editingPatient","setEditingPatient","showTermModal","setShowTermModal","editingTerm","setEditingTerm","showExaminationModal","setShowExaminationModal","editingExamination","setEditingExamination","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","doctorSearchTerm","setDoctorSearchTerm","patientSearchTerm","setPatientSearchTerm","termSearchTerm","setTermSearchTerm","examinationSearchTerm","setExaminationSearchTerm","doctorsCurrentPage","setDoctorsCurrentPage","patientsCurrentPage","setPatientsCurrentPage","termsCurrentPage","setTermsCurrentPage","examinationsCurrentPage","setExaminationsCurrentPage","setTimeout","fetchDoctors","transformedDoctors","doc","id","userId","ime","prezime","specialty","join","city","grad","email","telefon","radnoVrijeme","_error$response2","fetchPatients","transformedPatients","pat","pacijentID","phone","_error$response3","fetchTerms","transformedTerms","term","dostupnost","_error$response4","fetchExaminations","transformedExaminations","app","pregledID","patientName","pacijentIme","doctorName","doktorIme","status","komentarPacijenta","ocjenaDoktora","_error$response5","initializeDashboard","Promise","all","warn","setItem","handleAddDoctor","newDoctorData","_authResponse$data$us","registerPayload","password","fullName","roles","authResponse","post","user","Error","doctorDetailsPayload","put","_error$response6","_error$response7","_error$response7$data","handleUpdateDoctor","updatedDoctor","doctorUpdatePayload","userUpdatePayload","_error$response8","_error$response9","_error$response9$data","showConfirmModal","setShowConfirmModal","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","confirmTitle","setConfirmTitle","showCustomConfirm","action","handleConfirmAction","handleDeleteDoctor","doctorToDelete","find","delete","_error$response0","_error$response1","_error$response1$data","openDoctorModal","doctor","filteredDoctors","filter","toLowerCase","indexOfLastDoctor","indexOfFirstDoctor","currentDoctors","slice","totalDoctorPages","handleAddPatient","newPatient","_authResponse$data$us2","_error$response10","_error$response11","_error$response11$dat","handleUpdatePatient","updatedPatient","patientUpdatePayload","_error$response12","_error$response13","_error$response13$dat","handleDeletePatient","patientToDelete","_error$response14","_error$response15","_error$response15$dat","openPatientModal","patient","filteredPatients","indexOfLastPatient","indexOfFirstPatient","currentPatients","totalPatientPages","handleAddTerm","newTermData","_error$response16","_error$response17","_error$response17$dat","handleUpdateTerm","updatedTerm","termPayload","_error$response18","_error$response19","_error$response19$dat","handleDeleteTerm","_error$response20","_error$response21","_error$response21$dat","openTermModal","filteredTerms","toString","indexOfLastTerm","indexOfFirstTerm","currentTerms","totalTermPages","handleAddExamination","newExaminationData","examinationPayload","_error$response22","_error$response23","_error$response23$dat","handleUpdateExamination","updatedExamination","_error$response24","_error$response25","_error$response25$dat","handleDeleteExamination","_error$response26","_error$response27","_error$response27$dat","openExaminationModal","examination","filteredExaminations","exam","indexOfLastExamination","indexOfFirstExamination","currentExaminations","totalExaminationPages","renderContent","addDoctorFields","editDoctorFields","addPatientFields","editPatientFields","addTermFields","editTermFields","addExaminationFields","editExaminationFields","placeholder","size","colSpan","dismissible","style","zIndex","minHeight","href","_c3","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\n\r\n// BAZNI URL API GATEWAY-a\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\n// Prefiksi za pojedine mikroservise kroz Gateway\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\r\n\r\n// DataModal komponenta - IZDVOJENA IZVAN AdminDashboard komponente\r\nconst DataModal = ({ show, onClose, data, onSave, fields, title, idPrefix, authHeaders, showNotification, TERMINI_PREGLEDI_API_PREFIX }) => {\r\n  const [formData, setFormData] = useState(() => {\r\n      const initialData = data ? { ...data } : {};\r\n      fields.forEach(field => {\r\n          if (data && data[field.name] !== undefined && data[field.name] !== null) {\r\n              let value = data[field.name];\r\n              if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\r\n                  value = value.split('T')[0];\r\n              } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\r\n                  value = value.substring(0, 8);\r\n              } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\r\n                  value = value[0] || '';\r\n              } else if (field.type === 'checkbox') {\r\n                  value = Boolean(value);\r\n              } else if (field.type === 'number' && (value === 0 || value === 0.0)) {\r\n                  value = '';\r\n              }\r\n              initialData[field.name] = value;\r\n          } else {\r\n              if (field.name === 'specijalizacije') {\r\n                  initialData[field.name] = '';\r\n              } else if (field.type === 'number') {\r\n                  initialData[field.name] = '';\r\n              } else if (field.type === 'checkbox') {\r\n                  initialData[field.name] = false;\r\n              } else {\r\n                  initialData[field.name] = '';\r\n              }\r\n          }\r\n      });\r\n      return initialData;\r\n  });\r\n\r\n  const prevTerminIDRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const initialData = data ? { ...data } : {};\r\n      fields.forEach(field => {\r\n          if (data && data[field.name] !== undefined && data[field.name] !== null) {\r\n              let value = data[field.name];\r\n              if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\r\n                  value = value.split('T')[0];\r\n              } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\r\n                  value = value.substring(0, 8);\r\n              } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\r\n                  value = value[0] || '';\r\n              } else if (field.type === 'checkbox') {\r\n                  value = Boolean(value);\r\n              } else if (field.type === 'number' && (value === 0 || value === 0.0)) {\r\n                  value = '';\r\n              }\r\n              initialData[field.name] = value;\r\n          } else {\r\n              if (field.name === 'specijalizacije') {\r\n                  initialData[field.name] = '';\r\n              } else if (field.type === 'number') {\r\n                  initialData[field.name] = '';\r\n              } else if (field.type === 'checkbox') {\r\n                  initialData[field.name] = false;\r\n              } else {\r\n                  initialData[field.name] = '';\r\n              }\r\n          }\r\n      });\r\n      setFormData(initialData);\r\n      prevTerminIDRef.current = null;\r\n  }, [data, fields, idPrefix]);\r\n\r\n  useEffect(() => {\r\n      if (idPrefix === 'examination' && formData.terminID && formData.terminID !== 'N/A' && formData.terminID !== prevTerminIDRef.current) {\r\n          const fetchTermDetails = async () => {\r\n              try {\r\n                  const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${formData.terminID}`, authHeaders);\r\n                  const fetchedTerm = response.data;\r\n                  setFormData(prev => ({\r\n                      ...prev,\r\n                      doktorID: fetchedTerm.doktorID,\r\n                      datumPregleda: fetchedTerm.datum,\r\n                      vrijemePregleda: fetchedTerm.vrijeme.substring(0, 8),\r\n                  }));\r\n                  prevTerminIDRef.current = formData.terminID;\r\n                  showNotification('Detalji termina uspješno popunjeni!', 'info');\r\n              } catch (error) {\r\n                  console.error(\"Greška prilikom dohvaćanja detalja termina:\", error.response?.data || error.message);\r\n                  showNotification('Greška prilikom dohvaćanja detalja termina. Provjerite Term ID.', 'danger');\r\n                  setFormData(prev => ({\r\n                      ...prev,\r\n                      doktorID: '',\r\n                      datumPregleda: '',\r\n                      vrijemePregleda: '',\r\n                  }));\r\n                  prevTerminIDRef.current = null;\r\n              }\r\n          };\r\n          fetchTermDetails();\r\n      } else if (idPrefix === 'examination' && (formData.terminID === 'N/A' || !formData.terminID)) {\r\n          setFormData(prev => ({\r\n              ...prev,\r\n              doktorID: '',\r\n              datumPregleda: '',\r\n              vrijemePregleda: '',\r\n          }));\r\n          prevTerminIDRef.current = null;\r\n      }\r\n  }, [formData.terminID, idPrefix, authHeaders, showNotification, TERMINI_PREGLEDI_API_PREFIX]);\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData(prev => {\r\n      let newValue = value;\r\n\r\n      if (name === 'specijalizacije') {\r\n          newValue = value;\r\n      } else if (type === 'number') {\r\n          newValue = value === '' ? 0 : Number(value);\r\n          if (isNaN(newValue)) {\r\n              newValue = 0;\r\n          }\r\n      } else if (type === 'checkbox') {\r\n          newValue = checked;\r\n      }\r\n\r\n      return { ...prev, [name]: newValue };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const finalFormData = { ...formData };\r\n\r\n    if (idPrefix === 'doctor' && typeof finalFormData.specijalizacije === 'string') {\r\n        finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\r\n    }\r\n\r\n    if (finalFormData.iskustvo === null || finalFormData.iskustvo === '') {\r\n        finalFormData.iskustvo = 0;\r\n    }\r\n    if (finalFormData.ocjena === null || finalFormData.ocjena === '') {\r\n        finalFormData.ocjena = 0.0;\r\n    }\r\n\r\n    if (idPrefix === 'term' && finalFormData.vrijeme) {\r\n        if (finalFormData.vrijeme.length === 5) {\r\n            finalFormData.vrijeme += ':00';\r\n        }\r\n    } else if (idPrefix === 'examination' && finalFormData.vrijemePregleda) {\r\n        if (finalFormData.vrijemePregleda.length === 5) {\r\n            finalFormData.vrijemePregleda += ':00';\r\n        }\r\n    }\r\n\r\n    console.log('DataModal handleSubmit - finalFormData:', finalFormData);\r\n\r\n    onSave(finalFormData);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={onClose} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Modal.Body>\r\n          {fields.map(field => (\r\n            <Form.Group className=\"mb-3\" controlId={`${idPrefix}-${field.name}`} key={field.name}>\r\n              <Form.Label>{field.label}</Form.Label>\r\n              {field.type === 'select' ? (\r\n                <Form.Select\r\n                  name={field.name}\r\n                  value={formData[field.name] || ''}\r\n                  onChange={handleChange}\r\n                  required={field.required}\r\n                >\r\n                  <option value=\"\">Select {field.label}</option>\r\n                  {field.options.map(option => (\r\n                    <option key={option} value={option}>{option}</option>\r\n                  ))}\r\n                </Form.Select>\r\n              ) : field.type === 'textarea' ? (\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  name={field.name}\r\n                  value={formData[field.name] || ''}\r\n                  onChange={handleChange}\r\n                  required={field.required}\r\n                />\r\n              ) : field.type === 'checkbox' ? (\r\n                  <Form.Check\r\n                      type=\"checkbox\"\r\n                      name={field.name}\r\n                      checked={formData[field.name] || false}\r\n                      onChange={handleChange}\r\n                      label={field.label}\r\n                  />\r\n              ) : (\r\n                <Form.Control\r\n                  type={field.type || 'text'}\r\n                  name={field.name}\r\n                  value={(formData[field.name] === null || formData[field.name] === undefined || formData[field.name] === 'N/A' || (field.type === 'number' && (formData[field.name] === 0 || formData[field.name] === 0.0))) ? '' : formData[field.name]}\r\n                  onChange={handleChange}\r\n                  required={field.required}\r\n                  readOnly={field.readOnly || (idPrefix === 'examination' && (field.name === 'doktorID' || field.name === 'datumPregleda' || field.name === 'vrijemePregleda'))}\r\n                />\r\n              )}\r\n            </Form.Group>\r\n          ))}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={onClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Save changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n// Pagination komponenta - IZDVOJENA IZVAN AdminDashboard komponente\r\nconst Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination justify-content-center mt-4\">\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n            <button onClick={() => paginate(number)} className=\"page-link\">\r\n              {number}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n\r\nfunction AdminDashboard() {\r\n  const { token } = useAuth();\r\n\r\n  const authHeaders = useMemo(() => ({\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  }), [token]);\r\n\r\n  const [loadingInitial, setLoadingInitial] = useState(true);\r\n  const [isAuthChecked, setIsAuthChecked] = useState(false);\r\n\r\n  const [activeTab, setActiveTab] = useState(() => {\r\n    const savedTab = localStorage.getItem('adminActiveTab');\r\n    return savedTab || 'overview';\r\n  });\r\n\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [examinations, setExaminations] = useState([]);\r\n  const [terms, setTerms] = useState([]);\r\n\r\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\r\n  const [editingDoctor, setEditingDoctor] = useState(null);\r\n  const [showPatientModal, setShowPatientModal] = useState(false);\r\n  const [editingPatient, setEditingPatient] = useState(null);\r\n  const [showTermModal, setShowTermModal] = useState(false);\r\n  const [editingTerm, setEditingTerm] = useState(null);\r\n  const [showExaminationModal, setShowExaminationModal] = useState(false);\r\n  const [editingExamination, setEditingExamination] = useState(null);\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [alertType, setAlertType] = useState('success');\r\n\r\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\r\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n  const [termSearchTerm, setTermSearchTerm] = useState('');\r\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\r\n\r\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\r\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\r\n  const [termsCurrentPage, setTermsCurrentPage] = useState(1);\r\n  const [examinationsCurrentPage, setExaminationsCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const showNotification = (message, type = 'success') => {\r\n    setAlertMessage(message);\r\n    setAlertType(type);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n      setAlertMessage('');\r\n    }, 3000);\r\n  };\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n      const transformedDoctors = response.data.map(doc => ({\r\n        id: doc.doktorID,\r\n        userId: doc.userId,\r\n        name: `${doc.ime} ${doc.prezime}`,\r\n        ime: doc.ime,\r\n        prezime: doc.prezime,\r\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                   ? doc.specijalizacije.join(', ')\r\n                   : 'N/A',\r\n        specijalizacije: doc.specijalizacije,\r\n        city: doc.grad || 'N/A',\r\n        grad: doc.grad,\r\n        email: doc.email || 'N/A',\r\n        telefon: doc.telefon || 'N/A',\r\n        radnoVrijeme: doc.radnoVrijeme || '',\r\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : '',\r\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 0.0,\r\n      }));\r\n      setDoctors(transformedDoctors);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja doktora:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\r\n      const transformedPatients = response.data.map(pat => ({\r\n        id: pat.pacijentID,\r\n        userId: pat.userId,\r\n        name: `${pat.ime} ${pat.prezime}`,\r\n        ime: pat.ime,\r\n        prezime: pat.prezime,\r\n        email: pat.email || 'N/A',\r\n        phone: pat.telefon || 'N/A',\r\n        telefon: pat.telefon,\r\n      }));\r\n      setPatients(transformedPatients);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchTerms = async () => {\r\n    try {\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, authHeaders);\r\n      const transformedTerms = response.data.map(term => ({\r\n        id: term.terminID,\r\n        doktorID: term.doktorID,\r\n        datum: term.datum,\r\n        vrijeme: term.vrijeme,\r\n        dostupnost: term.dostupnost,\r\n      }));\r\n      setTerms(transformedTerms);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja termina:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchExaminations = async () => {\r\n    try {\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\r\n      const transformedExaminations = response.data.map(app => ({\r\n        id: app.pregledID,\r\n        pacijentID: app.pacijentID,\r\n        doktorID: app.doktorID,\r\n        patientName: app.pacijentIme || 'N/A',\r\n        doctorName: app.doktorIme || 'N/A',\r\n        datumPregleda: app.datumPregleda,\r\n        vrijemePregleda: app.vrijemePregleda,\r\n        status: app.status,\r\n        komentarPacijenta: app.komentarPacijenta || '',\r\n        ocjenaDoktora: app.ocjenaDoktora || null,\r\n        terminID: app.terminID !== null && app.terminID !== undefined ? app.terminID : 'N/A',\r\n      }));\r\n      setExaminations(transformedExaminations);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja pregleda:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja pregleda sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token !== undefined && !isAuthChecked) {\r\n      setIsAuthChecked(true);\r\n    }\r\n\r\n    const initializeDashboard = async () => {\r\n      if (isAuthChecked) {\r\n        if (token) {\r\n          try {\r\n            await Promise.all([\r\n              fetchDoctors(),\r\n              fetchPatients(),\r\n              fetchTerms(),\r\n              fetchExaminations()\r\n            ]);\r\n          } catch (error) {\r\n            console.error(\"Greška prilikom inicijalnog dohvaćanja podataka:\", error);\r\n            showNotification(\"Greška prilikom učitavanja početnih podataka.\", \"danger\");\r\n          } finally {\r\n            setLoadingInitial(false);\r\n          }\r\n        } else {\r\n          setLoadingInitial(false);\r\n          console.warn(\"Provjera autentifikacije završena, ali token nije dostupan. Korisnik nije ulogovan/autorizovan.\");\r\n        }\r\n      }\r\n    };\r\n\r\n    initializeDashboard();\r\n  }, [token, isAuthChecked]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('adminActiveTab', activeTab);\r\n  }, [activeTab]);\r\n\r\n  const handleAddDoctor = async (newDoctorData) => {\r\n        try {\r\n          const registerPayload = {\r\n            email: newDoctorData.email,\r\n            password: newDoctorData.password,\r\n            fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\r\n            telefon: newDoctorData.telefon,\r\n            roles: [\"ROLE_DOKTOR\"],\r\n            grad: newDoctorData.grad,\r\n            specijalizacije: newDoctorData.specijalizacije,\r\n          };\r\n\r\n          const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n          console.log(\"Auth Service Register Response Data:\", authResponse.data);\r\n\r\n          const userId = authResponse.data.id || authResponse.data.user?.id || null;\r\n\r\n          if (!userId) {\r\n              throw new Error(\"Korisnički ID nije dobiven iz Auth servisa.\");\r\n          }\r\n\r\n          const doctorDetailsPayload = {\r\n            userId: userId,\r\n            ime: newDoctorData.ime,\r\n            prezime: newDoctorData.prezime,\r\n            email: newDoctorData.email,\r\n            telefon: newDoctorData.telefon,\r\n            grad: newDoctorData.grad,\r\n            specijalizacije: newDoctorData.specijalizacije,\r\n            radnoVrijeme: newDoctorData.radnoVrijeme || '',\r\n            iskustvo: newDoctorData.iskustvo !== null && newDoctorData.iskustvo !== undefined ? newDoctorData.iskustvo : 0,\r\n            ocjena: 0.0,\r\n          };\r\n\r\n          await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/user-details/${userId}`, doctorDetailsPayload, authHeaders);\r\n\r\n          setTimeout(() => {\r\n              fetchDoctors();\r\n          }, 500);\r\n\r\n          setShowDoctorModal(false);\r\n          showNotification('Novi doktor uspješno registrovan i detalji sačuvani!', 'success');\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom dodavanja doktora:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom dodavanja doktora.', \"danger\");\r\n        }\r\n      };\r\n\r\n       const handleUpdateDoctor = async (updatedDoctor) => {\r\n           try {\r\n             if (!updatedDoctor.id) {\r\n                 showNotification('ID doktora nedostaje za ažuriranje.', 'danger');\r\n                 console.error('ID doktora nedostaje za ažuriranje:', updatedDoctor);\r\n                 return;\r\n             }\r\n\r\n             const doctorUpdatePayload = {\r\n               ime: updatedDoctor.ime,\r\n               prezime: updatedDoctor.prezime,\r\n               email: updatedDoctor.email,\r\n               telefon: updatedDoctor.telefon,\r\n               grad: updatedDoctor.grad,\r\n               specijalizacije: updatedDoctor.specijalizacije,\r\n               radnoVrijeme: updatedDoctor.radnoVrijeme || '',\r\n               iskustvo: updatedDoctor.iskustvo !== null && updatedDoctor.iskustvo !== undefined ? updatedDoctor.iskustvo : 0,\r\n               ocjena: updatedDoctor.ocjena || 0.0,\r\n             };\r\n             await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\r\n\r\n             const userUpdatePayload = {\r\n               email: updatedDoctor.email,\r\n               fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\r\n               telefon: updatedDoctor.telefon,\r\n             };\r\n             if (updatedDoctor.userId) {\r\n                 await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\r\n             } else {\r\n                 console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n             }\r\n\r\n             fetchDoctors();\r\n             setShowDoctorModal(false);\r\n             setEditingDoctor(null);\r\n             showNotification('Doktor uspješno ažuriran!', 'success');\r\n           } catch (error) {\r\n             console.error(\"Greška prilikom ažuriranja doktora:\", error.response?.data || error.message);\r\n             showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja doktora.', \"danger\");\r\n           }\r\n         };\r\n\r\n         const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n         const [confirmAction, setConfirmAction] = useState(() => () => {});\r\n         const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n         const [confirmTitle, setConfirmTitle] = useState(\"Potvrda\");\r\n\r\n         const showCustomConfirm = (message, action, title = \"Potvrda\") => {\r\n           setConfirmMessage(message);\r\n           setConfirmAction(() => action);\r\n           setConfirmTitle(title);\r\n           setShowConfirmModal(true);\r\n         };\r\n\r\n         const handleConfirmAction = () => {\r\n           confirmAction();\r\n           setShowConfirmModal(false);\r\n         };\r\n\r\n         const handleDeleteDoctor = async (id) => {\r\n           showCustomConfirm(\r\n             'Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.',\r\n             async () => {\r\n               try {\r\n                 const doctorToDelete = doctors.find(doc => doc.id === id);\r\n                 if (!doctorToDelete || !doctorToDelete.userId) {\r\n                   showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\r\n                   return;\r\n                 }\r\n\r\n                 await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\r\n                 await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\r\n\r\n                 fetchDoctors();\r\n                 showNotification('Doktor uspješno obrisan!', 'danger');\r\n               } catch (error) {\r\n                 console.error(\"Greška prilikom brisanja doktora:\", error.response?.data || error.message);\r\n                 showNotification(error.response?.data?.message || 'Greška prilikom brisanja doktora.', \"danger\");\r\n               }\r\n             },\r\n             \"Potvrdi brisanje doktora\"\r\n           );\r\n         };\r\n\r\n         const openDoctorModal = (doctor = null) => {\r\n           setEditingDoctor(doctor);\r\n           setShowDoctorModal(true);\r\n         };\r\n\r\n         const filteredDoctors = doctors.filter(doctor =>\r\n           doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           (doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n           (doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n           (doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()))\r\n         );\r\n         const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\r\n         const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\r\n         const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\r\n         const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\r\n\r\n       const handleAddPatient = async (newPatient) => {\r\n         try {\r\n           console.log(\"handleAddPatient: Počinjem proces dodavanja pacijenta.\");\r\n           const registerPayload = {\r\n             email: newPatient.email,\r\n             password: newPatient.password,\r\n             fullName: `${newPatient.ime} ${newPatient.prezime}`,\r\n             telefon: newPatient.telefon,\r\n             roles: [\"ROLE_PACIJENT\"],\r\n             grad: null,\r\n             specijalizacije: null,\r\n           };\r\n           console.log(\"handleAddPatient: Slanje registerPayload-a Auth servisu:\", registerPayload);\r\n           const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n\r\n           console.log(\"Auth Service Register Response Data (for patient):\", authResponse.data);\r\n\r\n           const userId = authResponse.data.id || authResponse.data.user?.id || null;\r\n\r\n           if (!userId) {\r\n               throw new Error(\"Korisnički ID nije dobiven iz Auth servisa za pacijenta.\");\r\n           }\r\n\r\n           console.log(\"handleAddPatient: Preskačem slanje pacijent detalja na korisnici-doktori servis. Očekujem da UserRegisteredEvent to obradi.\");\r\n\r\n           setTimeout(() => {\r\n               fetchPatients();\r\n           }, 500);\r\n\r\n           setShowPatientModal(false);\r\n           showNotification('Novi pacijent uspješno registrovan!', 'success');\r\n           console.log(\"handleAddPatient: Proces dodavanja pacijenta uspješno završen (registracija i event obrada).\");\r\n\r\n         } catch (error) {\r\n           console.error(\"Greška prilikom dodavanja pacijenta:\", error.response?.data || error.message);\r\n           showNotification(error.response?.data?.message || 'Greška prilikom dodavanja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\r\n         }\r\n       };\r\n\r\n\r\n  const handleUpdatePatient = async (updatedPatient) => {\r\n    try {\r\n      const patientUpdatePayload = {\r\n        ime: updatedPatient.ime,\r\n        prezime: updatedPatient.prezime,\r\n        email: updatedPatient.email,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\r\n\r\n      const userUpdatePayload = {\r\n        email: updatedPatient.email,\r\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      if (updatedPatient.userId) {\r\n          await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\r\n      } else {\r\n          console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n      }\r\n\r\n      fetchPatients();\r\n      setShowPatientModal(false);\r\n      setEditingPatient(null);\r\n      showNotification('Pacijent uspješno ažuriran!', 'success');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleDeletePatient = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.',\r\n      async () => {\r\n        try {\r\n          const patientToDelete = patients.find(pat => pat.id === id);\r\n          if (!patientToDelete || !patientToDelete.userId) {\r\n            showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\r\n            return;\r\n          }\r\n\r\n          await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`, authHeaders);\r\n          await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\r\n\r\n          fetchPatients();\r\n          showNotification('Pacijent uspješno obrisan!', 'success');\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja pacijenta:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja pacijenta.', \"danger\");\r\n        }\r\n      },\r\n      \"Potvrdi brisanje pacijenta\"\r\n    );\r\n  };\r\n\r\n  const openPatientModal = (patient = null) => {\r\n    setEditingPatient(patient);\r\n    setShowPatientModal(true);\r\n  };\r\n\r\n  const filteredPatients = patients.filter(patient =>\r\n    patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\r\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\r\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\r\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\r\n\r\n\r\n  const handleAddTerm = async (newTermData) => {\r\n    try {\r\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, newTermData, authHeaders);\r\n      showNotification('Novi termin uspješno dodan!', 'success');\r\n      fetchTerms();\r\n      setShowTermModal(false);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja termina:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja termina.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateTerm = async (updatedTerm) => {\r\n    try {\r\n      const termPayload = {\r\n        doktorID: updatedTerm.doktorID,\r\n        datum: updatedTerm.datum,\r\n        vrijeme: updatedTerm.vrijeme,\r\n        dostupnost: updatedTerm.dostupnost,\r\n      };\r\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${updatedTerm.id}`, termPayload, authHeaders);\r\n      showNotification('Termin uspješno ažuriran!', 'success');\r\n      fetchTerms();\r\n      setShowTermModal(false);\r\n      setEditingTerm(null);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja termina:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja termina.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteTerm = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovaj termin?',\r\n      async () => {\r\n        try {\r\n          await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${id}`, authHeaders);\r\n          showNotification('Termin uspješno obrisan!', 'success');\r\n          fetchTerms();\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja termina:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja termina.', \"danger\");\r\n        }\r\n      },\r\n      \"Potvrdi brisanje termina\"\r\n    );\r\n  };\r\n\r\n  const openTermModal = (term = null) => {\r\n    if (term) {\r\n        setEditingTerm({ ...term, doktorID: term.doktorID, dostupnost: term.dostupnost });\r\n    } else {\r\n        setEditingTerm(null);\r\n    }\r\n    setShowTermModal(true);\r\n  };\r\n\r\n  const filteredTerms = terms.filter(term =>\r\n    (term.doktorID != null && term.doktorID.toString().toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.datum && term.datum.toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.vrijeme && term.vrijeme.toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.dostupnost !== undefined && (term.dostupnost ? 'dostupan' : 'zauzet').includes(termSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastTerm = termsCurrentPage * itemsPerPage;\r\n  const indexOfFirstTerm = indexOfLastTerm - itemsPerPage;\r\n  const currentTerms = filteredTerms.slice(indexOfFirstTerm, indexOfLastTerm);\r\n  const totalTermPages = Math.ceil(filteredTerms.length / itemsPerPage);\r\n\r\n\r\n  const handleAddExamination = async (newExaminationData) => {\r\n    try {\r\n      console.log('handleAddExamination - Podaci prije slanja na backend:', newExaminationData);\r\n\r\n      const examinationPayload = {\r\n        pacijentID: newExaminationData.pacijentID,\r\n        doktorID: newExaminationData.doktorID,\r\n        terminID: newExaminationData.terminID,\r\n        datumPregleda: newExaminationData.datumPregleda,\r\n        vrijemePregleda: newExaminationData.vrijemePregleda,\r\n        status: newExaminationData.status,\r\n        komentarPacijenta: newExaminationData.komentarPacijenta,\r\n        ocjenaDoktora: newExaminationData.ocjenaDoktora,\r\n      };\r\n      console.log('handleAddExamination - Sending Payload:', examinationPayload);\r\n\r\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, examinationPayload, authHeaders);\r\n      showNotification('Novi pregled uspješno dodan!', 'success');\r\n      fetchExaminations();\r\n      setShowExaminationModal(false);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja pregleda:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja pregleda.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateExamination = async (updatedExamination) => {\r\n    try {\r\n      console.log('handleUpdateExamination primio payload:', updatedExamination);\r\n\r\n      const examinationPayload = {\r\n        pacijentID: updatedExamination.pacijentID,\r\n        doktorID: updatedExamination.doktorID,\r\n        terminID: updatedExamination.terminID,\r\n        datumPregleda: updatedExamination.datumPregleda,\r\n        vrijemePregleda: updatedExamination.vrijemePregleda,\r\n        status: updatedExamination.status,\r\n        komentarPacijenta: updatedExamination.komentarPacijenta,\r\n        ocjenaDoktora: updatedExamination.ocjenaDoktora,\r\n      };\r\n      console.log('handleUpdateExamination šalje na backend:', examinationPayload);\r\n\r\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${updatedExamination.id}`, examinationPayload, authHeaders);\r\n      showNotification('Pregled uspješno ažuriran!', 'success');\r\n      fetchExaminations();\r\n      setShowExaminationModal(false);\r\n      setEditingExamination(null);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja pregleda:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja pregleda.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteExamination = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovaj pregled?',\r\n      async () => {\r\n        try {\r\n          await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, authHeaders);\r\n          showNotification('Pregled uspješno obrisan!', 'success');\r\n          fetchExaminations();\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja pregleda:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja pregleda.', \"danger\");\r\n        }\r\n      },\r\n      \"Potvrdi brisanje pregleda\"\r\n    );\r\n  };\r\n\r\n  const openExaminationModal = (examination = null) => {\r\n    if (examination) {\r\n        setEditingExamination({\r\n            ...examination,\r\n            pacijentID: examination.pacijentID,\r\n            doktorID: examination.doktorID,\r\n            terminID: examination.terminID,\r\n            datumPregleda: examination.datumPregleda,\r\n            vrijemePregleda: examination.vrijemePregleda\r\n        });\r\n    } else {\r\n        setEditingExamination(null);\r\n    }\r\n    setShowExaminationModal(true);\r\n  };\r\n\r\n  const filteredExaminations = examinations.filter(exam =>\r\n    (exam.patientName && exam.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.doctorName && exam.doctorName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.status && exam.status.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.datumPregleda && exam.datumPregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.vrijemePregleda && exam.vrijemePregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastExamination = examinationsCurrentPage * itemsPerPage;\r\n  const indexOfFirstExamination = indexOfLastExamination - itemsPerPage;\r\n  const currentExaminations = filteredExaminations.slice(indexOfFirstExamination, indexOfLastExamination);\r\n  const totalExaminationPages = Math.ceil(filteredExaminations.length / itemsPerPage);\r\n\r\n\r\n  const renderContent = () => {\r\n    const addDoctorFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n    ];\r\n\r\n    const editDoctorFields = [\r\n      { name: 'id', label: 'Doctor ID', type: 'text', readOnly: true },\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n    ];\r\n\r\n    const addPatientFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n    const editPatientFields = [\r\n      { name: 'id', label: 'Patient ID', type: 'text', readOnly: true },\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n    const addTermFields = [\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true },\r\n      { name: 'datum', label: 'Date (YYYY-MM-DD)', type: 'date', required: true },\r\n      { name: 'vrijeme', label: 'Time (HH:MM:SS)', type: 'time', required: true },\r\n      { name: 'dostupnost', label: 'Available', type: 'checkbox', required: false },\r\n    ];\r\n\r\n    const editTermFields = [\r\n      { name: 'id', label: 'Term ID (Auto)', type: 'text', required: false, readOnly: true },\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true },\r\n      { name: 'datum', label: 'Date (YYYY-MM-DD)', type: 'date', required: true },\r\n      { name: 'vrijeme', label: 'Time (HH:MM:SS)', type: 'time', required: true },\r\n      { name: 'dostupnost', label: 'Available', type: 'checkbox', required: false },\r\n    ];\r\n\r\n    const addExaminationFields = [\r\n      { name: 'pacijentID', label: 'Patient ID', type: 'number', required: true },\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true, readOnly: true },\r\n      { name: 'terminID', label: 'Term ID', type: 'number', required: true },\r\n      { name: 'datumPregleda', label: 'Date of Examination (YYYY-MM-DD)', type: 'date', required: true, readOnly: true },\r\n      { name: 'vrijemePregleda', label: 'Time of Examination (HH:MM:SS)', type: 'time', required: true, readOnly: true },\r\n      { name: 'status', label: 'Status', type: 'select', required: true, options: ['zakazan', 'obavljen', 'otkazan'] },\r\n      { name: 'komentarPacijenta', label: 'Patient Comment', type: 'textarea', required: false },\r\n      { name: 'ocjenaDoktora', label: 'Doctor Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n    const editExaminationFields = [\r\n      { name: 'id', label: 'Examination ID (Auto)', type: 'text', readOnly: true },\r\n      { name: 'pacijentID', label: 'Patient ID', type: 'number', required: true },\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true, readOnly: true },\r\n      { name: 'terminID', label: 'Term ID', type: 'number', required: true },\r\n      { name: 'datumPregleda', label: 'Date of Examination (YYYY-MM-DD)', type: 'date', required: true, readOnly: true },\r\n      { name: 'vrijemePregleda', label: 'Time of Examination (HH:MM:SS)', type: 'time', required: true, readOnly: true },\r\n      { name: 'status', label: 'Status', type: 'select', required: true, options: ['zakazan', 'obavljen', 'otkazan'] },\r\n      { name: 'komentarPacijenta', label: 'Patient Comment', type: 'textarea', required: false },\r\n      { name: 'ocjenaDoktora', label: 'Doctor Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n\r\n  return (\r\n    <> {/* React Fragment to wrap multiple elements */}\r\n      {activeTab === 'overview' && (\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h4>Admin Dashboard Overview</h4>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <p>Welcome to the Admin Dashboard. Here you can manage doctors, patients, terms, and examinations.</p>\r\n            <p>Use the navigation on the left to switch between different management sections.</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'doctors' && (\r\n        <div>\r\n          <h3>Doctors Management</h3>\r\n          <div className=\"mb-3 d-flex justify-content-between align-items-center\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control w-auto\"\r\n              placeholder=\"Search doctors...\"\r\n              value={doctorSearchTerm}\r\n              onChange={(e) => setDoctorSearchTerm(e.target.value)}\r\n            />\r\n            <Button variant=\"success\" onClick={() => openDoctorModal()}>Add New Doctor</Button>\r\n          </div>\r\n          <table className=\"table table-striped table-hover\">\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>City</th>\r\n                <th>Specialty</th>\r\n                <th>Work Hours</th>\r\n                <th>Experience (years)</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentDoctors.length > 0 ? (\r\n                currentDoctors.map(doctor => (\r\n                  <tr key={doctor.id}>\r\n                    <td>{doctor.id}</td>\r\n                    <td>{doctor.name}</td>\r\n                    <td>{doctor.email}</td>\r\n                    <td>{doctor.telefon}</td>\r\n                    <td>{doctor.city}</td>\r\n                    <td>{doctor.specialty}</td>\r\n                    <td>{doctor.radnoVrijeme}</td>\r\n                    <td>{doctor.iskustvo}</td>\r\n                    <td>\r\n                      <Button variant=\"warning\" size=\"sm\" className=\"me-2\" onClick={() => openDoctorModal(doctor)}>Edit</Button>\r\n                      <Button variant=\"danger\" size=\"sm\" onClick={() => handleDeleteDoctor(doctor.id)}>Delete</Button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr><td colSpan=\"9\" className=\"text-center\">No doctors found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          <Pagination\r\n            itemsPerPage={itemsPerPage}\r\n            totalItems={filteredDoctors.length}\r\n            currentPage={doctorsCurrentPage}\r\n            paginate={setDoctorsCurrentPage}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'patients' && (\r\n        <div>\r\n          <h3>Patients Management</h3>\r\n          <div className=\"mb-3 d-flex justify-content-between align-items-center\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control w-auto\"\r\n              placeholder=\"Search patients...\"\r\n              value={patientSearchTerm}\r\n              onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n            />\r\n            <Button variant=\"success\" onClick={() => openPatientModal()}>Add New Patient</Button>\r\n          </div>\r\n          <table className=\"table table-striped table-hover\">\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentPatients.length > 0 ? (\r\n                currentPatients.map(patient => (\r\n                  <tr key={patient.id}>\r\n                    <td>{patient.id}</td>\r\n                    <td>{patient.name}</td>\r\n                    <td>{patient.email}</td>\r\n                    <td>{patient.telefon}</td>\r\n                    <td>\r\n                      <Button variant=\"warning\" size=\"sm\" className=\"me-2\" onClick={() => openPatientModal(patient)}>Edit</Button>\r\n                      <Button variant=\"danger\" size=\"sm\" onClick={() => handleDeletePatient(patient.id)}>Delete</Button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr><td colSpan=\"5\" className=\"text-center\">No patients found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          <Pagination\r\n            itemsPerPage={itemsPerPage}\r\n            totalItems={filteredPatients.length}\r\n            currentPage={patientsCurrentPage}\r\n            paginate={setPatientsCurrentPage}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'terms' && (\r\n        <div>\r\n          <h3>Terms Management</h3>\r\n          <div className=\"mb-3 d-flex justify-content-between align-items-center\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control w-auto\"\r\n              placeholder=\"Search terms...\"\r\n              value={termSearchTerm}\r\n              onChange={(e) => setTermSearchTerm(e.target.value)}\r\n            />\r\n            <Button variant=\"success\" onClick={() => openTermModal()}>Add New Term</Button>\r\n          </div>\r\n          <table className=\"table table-striped table-hover\">\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Doctor ID</th>\r\n                <th>Date</th>\r\n                <th>Time</th>\r\n                <th>Available</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentTerms.length > 0 ? (\r\n                currentTerms.map(term => (\r\n                  <tr key={term.id}>\r\n                    <td>{term.id}</td>\r\n                    <td>{term.doktorID}</td>\r\n                    <td>{term.datum}</td>\r\n                    <td>{term.vrijeme}</td>\r\n                    <td>{term.dostupnost ? 'Yes' : 'No'}</td>\r\n                    <td>\r\n                      <Button variant=\"warning\" size=\"sm\" className=\"me-2\" onClick={() => openTermModal(term)}>Edit</Button>\r\n                      <Button variant=\"danger\" size=\"sm\" onClick={() => handleDeleteTerm(term.id)}>Delete</Button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr><td colSpan=\"6\" className=\"text-center\">No terms found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          <Pagination\r\n            itemsPerPage={itemsPerPage}\r\n            totalItems={filteredTerms.length}\r\n            currentPage={termsCurrentPage}\r\n            paginate={setTermsCurrentPage}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'examinations' && (\r\n        <div>\r\n          <h3>Examinations Management</h3>\r\n          <div className=\"mb-3 d-flex justify-content-between align-items-center\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control w-auto\"\r\n              placeholder=\"Search examinations...\"\r\n              value={examinationSearchTerm}\r\n              onChange={(e) => setExaminationSearchTerm(e.target.value)}\r\n            />\r\n            <Button variant=\"success\" onClick={() => openExaminationModal()}>Add New Examination</Button>\r\n          </div>\r\n          <table className=\"table table-striped table-hover\">\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Patient ID</th>\r\n                <th>Doctor ID</th>\r\n                <th>Term ID</th>\r\n                <th>Patient Name</th>\r\n                <th>Doctor Name</th>\r\n                <th>Date</th>\r\n                <th>Time</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentExaminations.length > 0 ? (\r\n                currentExaminations.map(exam => (\r\n                  <tr key={exam.id}>\r\n                    <td>{exam.id}</td>\r\n                    <td>{exam.pacijentID}</td>\r\n                    <td>{exam.doktorID}</td>\r\n                    <td>{exam.terminID}</td> {/* Prikaz terminID-a */}\r\n                    <td>{exam.patientName}</td>\r\n                    <td>{exam.doctorName}</td>\r\n                    <td>{exam.datumPregleda}</td>\r\n                    <td>{exam.vrijemePregleda}</td>\r\n                    <td>\r\n                      <span className={`badge ${\r\n                          exam.status === 'zakazan' ? 'bg-primary' :\r\n                          exam.status === 'obavljen' ? 'bg-success' :\r\n                          'bg-danger'\r\n                      }`}>{exam.status}</span>\r\n                    </td>\r\n                    <td>\r\n                      <Button variant=\"warning\" size=\"sm\" className=\"me-2\" onClick={() => openExaminationModal(exam)}>Edit</Button>\r\n                      <Button variant=\"danger\" size=\"sm\" onClick={() => handleDeleteExamination(exam.id)}>Delete</Button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr><td colSpan=\"10\" className=\"text-center\">No examinations found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          <Pagination\r\n            itemsPerPage={itemsPerPage}\r\n            totalItems={filteredExaminations.length}\r\n            currentPage={examinationsCurrentPage}\r\n            paginate={setExaminationsCurrentPage}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}; // Closing renderContent\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {showAlert && (\r\n        <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      <Modal show={showConfirmModal} onHide={() => setShowConfirmModal(false)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{confirmTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {confirmMessage}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowConfirmModal(false)}>\r\n            Poništi\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleConfirmAction}>\r\n            Potvrdi\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <div className=\"row\">\r\n        <nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" style={{ minHeight: '100vh' }}>\r\n          <div className=\"position-sticky pt-3\">\r\n            <ul className=\"nav flex-column\">\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'overview' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('overview')}>\r\n                  Overview\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'doctors' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('doctors')}>\r\n                  Doctors\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'patients' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('patients')}>\r\n                  Patients\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'terms' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('terms')}>\r\n                  Terms\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'examinations' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('examinations')}>\r\n                  Examinations\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\">\r\n          {renderContent()}\r\n        </main>\r\n      </div>\r\n\r\n      <DataModal\r\n        show={showDoctorModal}\r\n        onClose={() => setShowDoctorModal(false)}\r\n        data={editingDoctor}\r\n        onSave={editingDoctor ? handleUpdateDoctor : handleAddDoctor}\r\n        title={editingDoctor ? 'Edit Doctor' : 'Add New Doctor'}\r\n        idPrefix=\"doctor\"\r\n        fields={editingDoctor ? editDoctorFields : addDoctorFields}\r\n        authHeaders={authHeaders}\r\n        showNotification={showNotification} // Proslijeđivanje showNotification funkciji\r\n        TERMINI_PREGLEDI_API_PREFIX={TERMINI_PREGLEDI_API_PREFIX} // Proslijeđivanje API prefixa\r\n      />\r\n\r\n      <DataModal\r\n        show={showPatientModal}\r\n        onClose={() => setShowPatientModal(false)}\r\n        data={editingPatient}\r\n        onSave={editingPatient ? handleUpdatePatient : handleAddPatient}\r\n        title={editingPatient ? 'Edit Patient' : 'Add New Patient'}\r\n        idPrefix=\"patient\"\r\n        fields={editingPatient ? editPatientFields : addPatientFields}\r\n        authHeaders={authHeaders}\r\n        showNotification={showNotification}\r\n        TERMINI_PREGLEDI_API_PREFIX={TERMINI_PREGLEDI_API_PREFIX}\r\n      />\r\n\r\n      <DataModal\r\n        show={showTermModal}\r\n        onClose={() => setShowTermModal(false)}\r\n        data={editingTerm}\r\n        onSave={editingTerm ? handleUpdateTerm : handleAddTerm}\r\n        title={editingTerm ? 'Edit Term' : 'Add New Term'}\r\n        idPrefix=\"term\"\r\n        fields={editingTerm ? editTermFields : addTermFields}\r\n        authHeaders={authHeaders}\r\n        showNotification={showNotification}\r\n        TERMINI_PREGLEDI_API_PREFIX={TERMINI_PREGLEDI_API_PREFIX}\r\n      />\r\n\r\n      <DataModal\r\n        show={showExaminationModal}\r\n        onClose={() => setShowExaminationModal(false)}\r\n        data={editingExamination}\r\n        onSave={editingExamination ? handleUpdateExamination : handleAddExamination}\r\n        title={editingExamination ? 'Edit Examination' : 'Add New Examination'}\r\n        idPrefix=\"examination\"\r\n        fields={editingExamination ? editExaminationFields : addExaminationFields}\r\n        authHeaders={authHeaders}\r\n        showNotification={showNotification}\r\n        TERMINI_PREGLEDI_API_PREFIX={TERMINI_PREGLEDI_API_PREFIX}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// OBAVEZNO: OVA LINIJA MORA BITI NA KRAJU FAJLA, IZVAN BILO KOJE DRUGE FUNKCIJE\r\n// I MORA BITI SAMO JEDNA TAKVA LINIJA U CIJELOM FAJLU\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}