{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\nfunction AdminDashboard() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    token\n  } = useAuth();\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const [loadingInitial, setLoadingInitial] = useState(true);\n  const [isAuthChecked, setIsAuthChecked] = useState(false);\n  const [activeTab, setActiveTab] = useState(() => {\n    const savedTab = localStorage.getItem('adminActiveTab');\n    return savedTab || 'overview';\n  });\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [examinations, setExaminations] = useState([]);\n  const [terms, setTerms] = useState([]);\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\n  const [editingDoctor, setEditingDoctor] = useState(null);\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n  const [showTermModal, setShowTermModal] = useState(false);\n  const [editingTerm, setEditingTerm] = useState(null);\n  const [showExaminationModal, setShowExaminationModal] = useState(false);\n  const [editingExamination, setEditingExamination] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n  const [termSearchTerm, setTermSearchTerm] = useState('');\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\n  const [termsCurrentPage, setTermsCurrentPage] = useState(1);\n  const [examinationsCurrentPage, setExaminationsCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: doc.userId,\n        name: `${doc.ime} ${doc.prezime}`,\n        ime: doc.ime,\n        prezime: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        specijalizacije: doc.specijalizacije,\n        city: doc.grad || 'N/A',\n        grad: doc.grad,\n        email: doc.email || 'N/A',\n        telefon: doc.telefon || 'N/A',\n        radnoVrijeme: doc.radnoVrijeme || '',\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : '',\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 0.0\n      }));\n      setDoctors(transformedDoctors);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Greška prilikom dohvaćanja doktora:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\n      const transformedPatients = response.data.map(pat => ({\n        id: pat.pacijentID,\n        userId: pat.userId,\n        name: `${pat.ime} ${pat.prezime}`,\n        ime: pat.ime,\n        prezime: pat.prezime,\n        email: pat.email || 'N/A',\n        phone: pat.telefon || 'N/A',\n        telefon: pat.telefon\n      }));\n      setPatients(transformedPatients);\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\n    }\n  };\n  const fetchTerms = async () => {\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, authHeaders);\n      const transformedTerms = response.data.map(term => ({\n        id: term.terminID,\n        doktorID: term.doktorID,\n        datum: term.datum,\n        vrijeme: term.vrijeme,\n        dostupnost: term.dostupnost\n      }));\n      setTerms(transformedTerms);\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Greška prilikom dohvaćanja termina:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\n    }\n  };\n  const fetchExaminations = async () => {\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\n      const transformedExaminations = response.data.map(app => ({\n        id: app.pregledID,\n        pacijentID: app.pacijentID,\n        doktorID: app.doktorID,\n        patientName: app.pacijentIme || 'N/A',\n        doctorName: app.doktorIme || 'N/A',\n        datumPregleda: app.datumPregleda,\n        vrijemePregleda: app.vrijemePregleda,\n        status: app.status,\n        komentarPacijenta: app.komentarPacijenta || '',\n        ocjenaDoktora: app.ocjenaDoktora || null,\n        terminID: app.terminID !== null && app.terminID !== undefined ? app.terminID : 'N/A'\n      }));\n      setExaminations(transformedExaminations);\n    } catch (error) {\n      var _error$response4;\n      console.error(\"Greška prilikom dohvaćanja pregleda:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja pregleda sa servera.\", \"danger\");\n    }\n  };\n  useEffect(() => {\n    if (token !== undefined && !isAuthChecked) {\n      setIsAuthChecked(true);\n    }\n    const initializeDashboard = async () => {\n      if (isAuthChecked) {\n        if (token) {\n          try {\n            await Promise.all([fetchDoctors(), fetchPatients(), fetchTerms(), fetchExaminations()]);\n          } catch (error) {\n            console.error(\"Greška prilikom inicijalnog dohvaćanja podataka:\", error);\n            showNotification(\"Greška prilikom učitavanja početnih podataka.\", \"danger\");\n          } finally {\n            setLoadingInitial(false);\n          }\n        } else {\n          setLoadingInitial(false);\n          console.warn(\"Provjera autentifikacije završena, ali token nije dostupan. Korisnik nije ulogovan/autorizovan.\");\n        }\n      }\n    };\n    initializeDashboard();\n  }, [token, isAuthChecked]);\n  useEffect(() => {\n    localStorage.setItem('adminActiveTab', activeTab);\n  }, [activeTab]);\n  const handleAddDoctor = async newDoctorData => {\n    try {\n      var _authResponse$data$us;\n      const registerPayload = {\n        email: newDoctorData.email,\n        password: newDoctorData.password,\n        fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\n        telefon: newDoctorData.telefon,\n        roles: [\"ROLE_DOKTOR\"],\n        grad: newDoctorData.grad,\n        specijalizacije: newDoctorData.specijalizacije\n      };\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      console.log(\"Auth Service Register Response Data:\", authResponse.data);\n      const userId = authResponse.data.id || ((_authResponse$data$us = authResponse.data.user) === null || _authResponse$data$us === void 0 ? void 0 : _authResponse$data$us.id) || null;\n      if (!userId) {\n        throw new Error(\"Korisnički ID nije dobiven iz Auth servisa.\");\n      }\n      const doctorDetailsPayload = {\n        userId: userId,\n        ime: newDoctorData.ime,\n        prezime: newDoctorData.prezime,\n        email: newDoctorData.email,\n        telefon: newDoctorData.telefon,\n        grad: newDoctorData.grad,\n        specijalizacije: newDoctorData.specijalizacije,\n        radnoVrijeme: newDoctorData.radnoVrijeme || '',\n        iskustvo: newDoctorData.iskustvo !== null && newDoctorData.iskustvo !== undefined ? newDoctorData.iskustvo : 0,\n        ocjena: 0.0\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/user-details/${userId}`, doctorDetailsPayload, authHeaders);\n      setTimeout(() => {\n        fetchDoctors();\n      }, 500);\n      setShowDoctorModal(false);\n      showNotification('Novi doktor uspješno registrovan i detalji sačuvani!');\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response6$data;\n      console.error(\"Greška prilikom dodavanja doktora:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      showNotification(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Greška prilikom dodavanja doktora.', \"danger\");\n    }\n  };\n  const handleUpdateDoctor = async updatedDoctor => {\n    try {\n      if (!updatedDoctor.id) {\n        showNotification('ID doktora nedostaje za ažuriranje.', 'danger');\n        console.error('ID doktora nedostaje za ažuriranje:', updatedDoctor);\n        return;\n      }\n      const doctorUpdatePayload = {\n        ime: updatedDoctor.ime,\n        prezime: updatedDoctor.prezime,\n        email: updatedDoctor.email,\n        telefon: updatedDoctor.telefon,\n        grad: updatedDoctor.grad,\n        specijalizacije: updatedDoctor.specijalizacije,\n        radnoVrijeme: updatedDoctor.radnoVrijeme || '',\n        iskustvo: updatedDoctor.iskustvo !== null && updatedDoctor.iskustvo !== undefined ? updatedDoctor.iskustvo : 0,\n        ocjena: updatedDoctor.ocjena || 0.0\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\n      const userUpdatePayload = {\n        email: updatedDoctor.email,\n        fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\n        telefon: updatedDoctor.telefon\n      };\n      if (updatedDoctor.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchDoctors();\n      setShowDoctorModal(false);\n      setEditingDoctor(null);\n      showNotification('Doktor uspješno ažuriran!', 'success');\n    } catch (error) {\n      var _error$response7, _error$response8, _error$response8$data;\n      console.error(\"Greška prilikom ažuriranja doktora:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      showNotification(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Greška prilikom ažuriranja doktora.', \"danger\");\n    }\n  };\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(() => () => {});\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\n  const [confirmTitle, setConfirmTitle] = useState(\"Potvrda\");\n  const showCustomConfirm = (message, action, title = \"Potvrda\") => {\n    setConfirmMessage(message);\n    setConfirmAction(() => action);\n    setConfirmTitle(title);\n    setShowConfirmModal(true);\n  };\n  const handleConfirmAction = () => {\n    confirmAction();\n    setShowConfirmModal(false);\n  };\n  const handleDeleteDoctor = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.', async () => {\n      try {\n        const doctorToDelete = doctors.find(doc => doc.id === id);\n        if (!doctorToDelete || !doctorToDelete.userId) {\n          showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\n          return;\n        }\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\n        await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\n        fetchDoctors();\n        showNotification('Doktor uspješno obrisan!', 'danger');\n      } catch (error) {\n        var _error$response9, _error$response0, _error$response0$data;\n        console.error(\"Greška prilikom brisanja doktora:\", ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n        showNotification(((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || 'Greška prilikom brisanja doktora.', \"danger\");\n      }\n    }, \"Potvrdi brisanje doktora\");\n  };\n  const openDoctorModal = (doctor = null) => {\n    setEditingDoctor(doctor);\n    setShowDoctorModal(true);\n  };\n  const filteredDoctors = doctors.filter(doctor => doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()));\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\n  const handleAddPatient = async newPatient => {\n    try {\n      var _authResponse$data$us2;\n      console.log(\"handleAddPatient: Počinjem proces dodavanja pacijenta.\");\n      const registerPayload = {\n        email: newPatient.email,\n        password: newPatient.password,\n        fullName: `${newPatient.ime} ${newPatient.prezime}`,\n        telefon: newPatient.telefon,\n        roles: [\"ROLE_PACIJENT\"],\n        grad: null,\n        specijalizacije: null\n      };\n      console.log(\"handleAddPatient: Slanje registerPayload-a Auth servisu:\", registerPayload);\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      console.log(\"Auth Service Register Response Data (for patient):\", authResponse.data);\n      const userId = authResponse.data.id || ((_authResponse$data$us2 = authResponse.data.user) === null || _authResponse$data$us2 === void 0 ? void 0 : _authResponse$data$us2.id) || null;\n      if (!userId) {\n        throw new Error(\"Korisnički ID nije dobiven iz Auth servisa za pacijenta.\");\n      }\n      console.log(\"handleAddPatient: Preskačem slanje pacijent detalja na korisnici-doktori servis. Očekujem da UserRegisteredEvent to obradi.\");\n      setTimeout(() => {\n        fetchPatients();\n      }, 500);\n      setShowPatientModal(false);\n      showNotification('Novi pacijent uspješno registrovan!', 'success');\n      console.log(\"handleAddPatient: Proces dodavanja pacijenta uspješno završen (registracija i event obrada).\");\n    } catch (error) {\n      var _error$response1, _error$response10, _error$response10$dat;\n      console.error(\"Greška prilikom dodavanja pacijenta:\", ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data) || error.message);\n      showNotification(((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.message) || 'Greška prilikom dodavanja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\n    }\n  };\n  const handleUpdatePatient = async updatedPatient => {\n    try {\n      const patientUpdatePayload = {\n        ime: updatedPatient.ime,\n        prezime: updatedPatient.prezime,\n        email: updatedPatient.email,\n        telefon: updatedPatient.telefon\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\n      const userUpdatePayload = {\n        email: updatedPatient.email,\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\n        telefon: updatedPatient.telefon\n      };\n      if (updatedPatient.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchPatients();\n      setShowPatientModal(false);\n      setEditingPatient(null);\n      showNotification('Pacijent uspješno ažuriran!', 'success');\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response12$dat;\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message);\n      showNotification(((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.message) || 'Greška prilikom ažuriranja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\n    }\n  };\n  const handleDeletePatient = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.', async () => {\n      try {\n        const patientToDelete = patients.find(pat => pat.id === id);\n        if (!patientToDelete || !patientToDelete.userId) {\n          showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\n          return;\n        }\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`, authHeaders);\n        await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\n        fetchPatients();\n        showNotification('Pacijent uspješno obrisan!', 'success');\n      } catch (error) {\n        var _error$response13, _error$response14, _error$response14$dat;\n        console.error(\"Greška prilikom brisanja pacijenta:\", ((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) || error.message);\n        showNotification(((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : (_error$response14$dat = _error$response14.data) === null || _error$response14$dat === void 0 ? void 0 : _error$response14$dat.message) || 'Greška prilikom brisanja pacijenta.', \"danger\");\n      }\n    }, \"Potvrdi brisanje pacijenta\");\n  };\n  const openPatientModal = (patient = null) => {\n    setEditingPatient(patient);\n    setShowPatientModal(true);\n  };\n  const filteredPatients = patients.filter(patient => patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\n  const handleAddTerm = async newTermData => {\n    try {\n      // Logiraj podatke koji se šalju\n      console.log('handleAddTerm - Podaci koji se šalju:', newTermData);\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, newTermData, authHeaders);\n      showNotification('Novi termin uspješno dodan!', 'success');\n      fetchTerms();\n      setShowTermModal(false);\n    } catch (error) {\n      var _error$response15, _error$response16, _error$response16$dat;\n      console.error(\"Greška prilikom dodavanja termina:\", ((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.data) || error.message);\n      showNotification(((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : (_error$response16$dat = _error$response16.data) === null || _error$response16$dat === void 0 ? void 0 : _error$response16$dat.message) || 'Greška prilikom dodavanja termina.', \"danger\");\n    }\n  };\n  const handleUpdateTerm = async updatedTerm => {\n    try {\n      const termPayload = {\n        doktorID: updatedTerm.doktorID,\n        datum: updatedTerm.datum,\n        vrijeme: updatedTerm.vrijeme,\n        dostupnost: updatedTerm.dostupnost\n      };\n      // Logiraj podatke koji se šalju prilikom ažuriranja\n      console.log('handleUpdateTerm - Podaci koji se šalju:', termPayload);\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${updatedTerm.id}`, termPayload, authHeaders);\n      showNotification('Termin uspješno ažuriran!', 'success');\n      fetchTerms();\n      setShowTermModal(false);\n      setEditingTerm(null);\n    } catch (error) {\n      var _error$response17, _error$response18, _error$response18$dat;\n      console.error(\"Greška prilikom ažuriranja termina:\", ((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : _error$response17.data) || error.message);\n      showNotification(((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : (_error$response18$dat = _error$response18.data) === null || _error$response18$dat === void 0 ? void 0 : _error$response18$dat.message) || 'Greška prilikom ažuriranja termina.', \"danger\");\n    }\n  };\n  const handleDeleteTerm = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovaj termin?', async () => {\n      try {\n        await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${id}`, authHeaders);\n        showNotification('Termin uspješno obrisan!', 'success');\n        fetchTerms();\n      } catch (error) {\n        var _error$response19, _error$response20, _error$response20$dat;\n        console.error(\"Greška prilikom brisanja termina:\", ((_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : _error$response19.data) || error.message);\n        showNotification(((_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : (_error$response20$dat = _error$response20.data) === null || _error$response20$dat === void 0 ? void 0 : _error$response20$dat.message) || 'Greška prilikom brisanja termina.', \"danger\");\n      }\n    }, \"Potvrdi brisanje termina\");\n  };\n  const openTermModal = (term = null) => {\n    if (term) {\n      setEditingTerm({\n        ...term,\n        doktorID: term.doktorID,\n        dostupnost: term.dostupnost\n      });\n    } else {\n      setEditingTerm(null);\n    }\n    setShowTermModal(true);\n  };\n  const filteredTerms = terms.filter(term => term.doktorID != null && term.doktorID.toString().toLowerCase().includes(termSearchTerm.toLowerCase()) || term.datum && term.datum.toLowerCase().includes(termSearchTerm.toLowerCase()) || term.vrijeme && term.vrijeme.toLowerCase().includes(termSearchTerm.toLowerCase()) || term.dostupnost !== undefined && (term.dostupnost ? 'dostupan' : 'zauzet').includes(termSearchTerm.toLowerCase()));\n  const indexOfLastTerm = termsCurrentPage * itemsPerPage;\n  const indexOfFirstTerm = indexOfLastTerm - itemsPerPage;\n  const currentTerms = filteredTerms.slice(indexOfFirstTerm, indexOfLastTerm);\n  const totalTermPages = Math.ceil(filteredTerms.length / itemsPerPage);\n  const handleAddExamination = async newExaminationData => {\n    try {\n      console.log('handleAddExamination - Podaci prije slanja na backend:', newExaminationData);\n      const examinationPayload = {\n        pacijentID: newExaminationData.pacijentID,\n        doktorID: newExaminationData.doktorID,\n        terminID: newExaminationData.terminID,\n        datumPregleda: newExaminationData.datumPregleda,\n        vrijemePregleda: newExaminationData.vrijemePregleda,\n        status: newExaminationData.status,\n        komentarPacijenta: newExaminationData.komentarPacijenta,\n        ocjenaDoktora: newExaminationData.ocjenaDoktora\n      };\n      console.log('handleAddExamination - Sending Payload:', examinationPayload);\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, examinationPayload, authHeaders);\n      showNotification('Novi pregled uspješno dodan!', 'success');\n      fetchExaminations();\n      setShowExaminationModal(false);\n    } catch (error) {\n      var _error$response21, _error$response22, _error$response22$dat;\n      console.error(\"Greška prilikom dodavanja pregleda:\", ((_error$response21 = error.response) === null || _error$response21 === void 0 ? void 0 : _error$response21.data) || error.message);\n      showNotification(((_error$response22 = error.response) === null || _error$response22 === void 0 ? void 0 : (_error$response22$dat = _error$response22.data) === null || _error$response22$dat === void 0 ? void 0 : _error$response22$dat.message) || 'Greška prilikom dodavanja pregleda.', \"danger\");\n    }\n  };\n  const handleUpdateExamination = async updatedExamination => {\n    try {\n      console.log('handleUpdateExamination primio payload:', updatedExamination);\n      const examinationPayload = {\n        pacijentID: updatedExamination.pacijentID,\n        doktorID: updatedExamination.doktorID,\n        terminID: updatedExamination.terminID,\n        datumPregleda: updatedExamination.datumPregleda,\n        vrijemePregleda: updatedExamination.vrijemePregleda,\n        status: updatedExamination.status,\n        komentarPacijenta: updatedExamination.komentarPacijenta,\n        ocjenaDoktora: updatedExamination.ocjenaDoktora\n      };\n      console.log('handleUpdateExamination - Sending Payload:', examinationPayload);\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${updatedExamination.id}`, examinationPayload, authHeaders);\n      showNotification('Pregled uspješno ažuriran!', 'success');\n      fetchExaminations();\n      setShowExaminationModal(false);\n      setEditingExamination(null);\n    } catch (error) {\n      var _error$response23, _error$response24, _error$response24$dat;\n      console.error(\"Greška prilikom ažuriranja pregleda:\", ((_error$response23 = error.response) === null || _error$response23 === void 0 ? void 0 : _error$response23.data) || error.message);\n      showNotification(((_error$response24 = error.response) === null || _error$response24 === void 0 ? void 0 : (_error$response24$dat = _error$response24.data) === null || _error$response24$dat === void 0 ? void 0 : _error$response24$dat.message) || 'Greška prilikom ažuriranja pregleda.', \"danger\");\n    }\n  };\n  const handleDeleteExamination = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovaj pregled?', async () => {\n      try {\n        await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, authHeaders);\n        showNotification('Pregled uspješno obrisan!', 'success');\n        fetchExaminations();\n      } catch (error) {\n        var _error$response25, _error$response26, _error$response26$dat;\n        console.error(\"Greška prilikom brisanja pregleda:\", ((_error$response25 = error.response) === null || _error$response25 === void 0 ? void 0 : _error$response25.data) || error.message);\n        showNotification(((_error$response26 = error.response) === null || _error$response26 === void 0 ? void 0 : (_error$response26$dat = _error$response26.data) === null || _error$response26$dat === void 0 ? void 0 : _error$response26$dat.message) || 'Greška prilikom brisanja pregleda.', \"danger\");\n      }\n    }, \"Potvrdi brisanje pregleda\");\n  };\n  const openExaminationModal = (examination = null) => {\n    if (examination) {\n      setEditingExamination({\n        ...examination,\n        pacijentID: examination.pacijentID,\n        doktorID: examination.doktorID,\n        terminID: examination.terminID,\n        datumPregleda: examination.datumPregleda,\n        vrijemePregleda: examination.vrijemePregleda\n      });\n    } else {\n      setEditingExamination(null);\n    }\n    setShowExaminationModal(true);\n  };\n  const filteredExaminations = examinations.filter(exam => exam.patientName && exam.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.doctorName && exam.doctorName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.status && exam.status.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.datumPregleda && exam.datumPregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.vrijemePregleda && exam.vrijemePregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()));\n  const indexOfLastExamination = examinationsCurrentPage * itemsPerPage;\n  const indexOfFirstExamination = indexOfLastExamination - itemsPerPage;\n  const currentExaminations = filteredExaminations.slice(indexOfFirstExamination, indexOfLastExamination);\n  const totalExaminationPages = Math.ceil(filteredExaminations.length / itemsPerPage);\n\n  // Komponenta za modal za unos/uređivanje podataka (Doktor/Pacijent/Termin/Pregled)\n  // DataModal definisana UNUTAR AdminDashboard funkcije (kao u tvojoj admin2.txt verziji)\n  const DataModal = ({\n    show,\n    onClose,\n    data,\n    onSave,\n    fields,\n    title,\n    idPrefix,\n    authHeaders,\n    showNotification\n  }) => {\n    _s();\n    // useRef za praćenje prethodnog terminID-a\n    const prevTerminIDRef = React.useRef(null);\n    const [formData, setFormData] = useState(() => {\n      const initialData = data ? {\n        ...data\n      } : {};\n      fields.forEach(field => {\n        if (data && data[field.name] !== undefined && data[field.name] !== null) {\n          let value = data[field.name];\n          if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\n            value = value.split('T')[0];\n          } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\n            value = value.substring(0, 8);\n          } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\n            value = value[0] || '';\n          } else if (field.type === 'checkbox') {\n            value = Boolean(value);\n          } else if (field.type === 'number' && (value === 0 || value === 0.0)) {\n            value = ''; // Ako je 0 ili 0.0, prikaži kao prazan string za unos\n          }\n          initialData[field.name] = value;\n        } else {\n          // ISPRAVKA 1: Inicijaliziraj numerička polja na 0 (broj) za nove unose\n          if (field.name === 'specijalizacije') {\n            initialData[field.name] = '';\n          } else if (field.type === 'number') {\n            initialData[field.name] = 0; // Inicijaliziraj na 0 za numerička polja\n          } else if (field.type === 'checkbox') {\n            initialData[field.name] = false;\n          } else {\n            initialData[field.name] = '';\n          }\n        }\n      });\n      return initialData;\n    });\n    useEffect(() => {\n      const initialData = data ? {\n        ...data\n      } : {};\n      fields.forEach(field => {\n        if (data && data[field.name] !== undefined && data[field.name] !== null) {\n          let value = data[field.name];\n          if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\n            value = value.split('T')[0];\n          } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\n            value = value.substring(0, 8);\n          } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\n            value = value[0] || '';\n          } else if (field.type === 'checkbox') {\n            value = Boolean(value);\n          } else if (field.type === 'number' && (value === 0 || value === 0.0)) {\n            value = '';\n          }\n          initialData[field.name] = value;\n        } else {\n          if (field.name === 'specijalizacije') {\n            initialData[field.name] = '';\n          } else if (field.type === 'number') {\n            initialData[field.name] = 0; // Inicijaliziraj na 0 za numerička polja prilikom resetiranja modala\n          } else if (field.type === 'checkbox') {\n            initialData[field.name] = false;\n          } else {\n            initialData[field.name] = '';\n          }\n        }\n      });\n      setFormData(initialData);\n      prevTerminIDRef.current = null;\n    }, [data, fields, idPrefix]);\n    useEffect(() => {\n      const currentTerminID = formData.terminID;\n      // Provjeri da li je terminID validan broj i da nije \"N/A\" string\n      const isNumericAndValidTerminID = typeof currentTerminID === 'number' && currentTerminID > 0;\n      if (idPrefix === 'examination' && isNumericAndValidTerminID &&\n      // Koristimo novu provjeru\n      currentTerminID !== prevTerminIDRef.current) {\n        const fetchTermDetails = async () => {\n          try {\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${currentTerminID}`, authHeaders);\n            const fetchedTerm = response.data;\n            setFormData(prev => ({\n              ...prev,\n              doktorID: fetchedTerm.doktorID,\n              datumPregleda: fetchedTerm.datum,\n              vrijemePregleda: fetchedTerm.vrijeme.substring(0, 8)\n            }));\n            prevTerminIDRef.current = currentTerminID;\n            showNotification('Detalji termina uspješno popunjeni!', 'info');\n          } catch (error) {\n            var _error$response27;\n            console.error(\"Greška prilikom dohvaćanja detalja termina:\", ((_error$response27 = error.response) === null || _error$response27 === void 0 ? void 0 : _error$response27.data) || error.message);\n            showNotification('Greška prilikom dohvaćanja detalja termina. Provjerite Term ID.', \"danger\");\n            setFormData(prev => ({\n              ...prev,\n              doktorID: 0,\n              // Reset na 0 ili null ako je došlo do greške\n              datumPregleda: '',\n              vrijemePregleda: ''\n            }));\n            prevTerminIDRef.current = null;\n          }\n        };\n        fetchTermDetails();\n      } else if (idPrefix === 'examination' && (!isNumericAndValidTerminID || currentTerminID === 'N/A')) {\n        // Resetiraj polja ako je terminID nevažeći ili 'N/A'\n        setFormData(prev => ({\n          ...prev,\n          doktorID: 0,\n          // Reset na 0\n          datumPregleda: '',\n          vrijemePregleda: ''\n        }));\n        prevTerminIDRef.current = null;\n      }\n    }, [formData.terminID, idPrefix, authHeaders, showNotification]);\n    const handleChange = e => {\n      const {\n        name,\n        value,\n        type,\n        checked\n      } = e.target;\n      setFormData(prev => {\n        let newValue = value;\n        if (name === 'specijalizacije') {\n          newValue = value;\n        } else if (type === 'number') {\n          // ISPRAVKA 2: Konvertiraj prazan string u 0 za numeričke inpute\n          newValue = value === '' ? 0 : Number(value);\n          if (isNaN(newValue)) {\n            newValue = 0; // Osiguraj da NaN također postane 0\n          }\n        } else if (type === 'checkbox') {\n          newValue = checked;\n        }\n        return {\n          ...prev,\n          [name]: newValue\n        };\n      });\n    };\n    const handleSubmit = e => {\n      e.preventDefault();\n      const finalFormData = {\n        ...formData\n      };\n      if (idPrefix === 'doctor' && typeof finalFormData.specijalizacije === 'string') {\n        finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\n      }\n\n      // Nije potrebno dodatno provjeravati iskustvo i ocjenu ovdje\n      // jer ih handleChange već ispravno postavlja na 0 ako su prazni\n\n      if (idPrefix === 'term' && finalFormData.vrijeme) {\n        if (finalFormData.vrijeme.length === 5) {\n          finalFormData.vrijeme += ':00';\n        }\n      } else if (idPrefix === 'examination' && finalFormData.vrijemePregleda) {\n        if (finalFormData.vrijemePregleda.length === 5) {\n          finalFormData.vrijemePregleda += ':00';\n        }\n      }\n      console.log('DataModal submitting:', finalFormData);\n      onSave(finalFormData);\n    };\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: onClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: fields.map(field => /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: `${idPrefix}-${field.name}`,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 17\n            }, this), field.type === 'select' ? /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: [\"Select \", field.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 21\n              }, this), field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 19\n            }, this) : field.type === 'textarea' ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 19\n            }, this) : field.type === 'checkbox' ? /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              name: field.name,\n              checked: formData[field.name] || false,\n              onChange: handleChange,\n              label: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: field.type || 'text',\n              name: field.name,\n              value: formData[field.name] === null || formData[field.name] === undefined || formData[field.name] === 'N/A' || field.type === 'number' && (formData[field.name] === 0 || formData[field.name] === 0.0 && field.name !== 'ocjenaDoktora') ? '' : formData[field.name],\n              onChange: handleChange,\n              required: field.required,\n              readOnly: field.readOnly || idPrefix === 'examination' && (field.name === 'doktorID' || field.name === 'datumPregleda' || field.name === 'vrijemePregleda')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 19\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 7\n    }, this);\n  };\n  _s(DataModal, \"BcYRaLfslyGFwQJ1QK3Uz1f85OE=\");\n  const Pagination = ({\n    itemsPerPage,\n    totalItems,\n    currentPage,\n    paginate\n  }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center mt-4\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === number ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 15\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 7\n    }, this);\n  };\n  const renderContent = () => {\n    const addDoctorFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'password',\n      label: 'Password',\n      type: 'password',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }, {\n      name: 'grad',\n      label: 'City',\n      type: 'select',\n      required: true,\n      options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n    }, {\n      name: 'specijalizacije',\n      label: 'Specialty',\n      type: 'select',\n      required: true,\n      options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n    }, {\n      name: 'radnoVrijeme',\n      label: 'Work Hours',\n      type: 'text',\n      required: false\n    }, {\n      name: 'iskustvo',\n      label: 'Experience (years)',\n      type: 'number',\n      required: false\n    }];\n    const editDoctorFields = [{\n      name: 'id',\n      label: 'Doctor ID',\n      type: 'text',\n      readOnly: true\n    }, {\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }, {\n      name: 'grad',\n      label: 'City',\n      type: 'select',\n      required: true,\n      options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n    }, {\n      name: 'specijalizacije',\n      label: 'Specialty',\n      type: 'select',\n      required: true,\n      options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n    }, {\n      name: 'radnoVrijeme',\n      label: 'Work Hours',\n      type: 'text',\n      required: false\n    }, {\n      name: 'iskustvo',\n      label: 'Experience (years)',\n      type: 'number',\n      required: false\n    }];\n    const addPatientFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'password',\n      label: 'Password',\n      type: 'password',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }];\n    const editPatientFields = [{\n      name: 'id',\n      label: 'Patient ID',\n      type: 'text',\n      readOnly: true\n    }, {\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }];\n    const addTermFields = [{\n      name: 'doktorID',\n      label: 'Doctor ID',\n      type: 'number',\n      required: true\n    }, {\n      name: 'datum',\n      label: 'Date (YYYY-MM-DD)',\n      type: 'date',\n      required: true\n    }, {\n      name: 'vrijeme',\n      label: 'Time (HH:MM:SS)',\n      type: 'time',\n      required: true\n    }, {\n      name: 'dostupnost',\n      label: 'Available',\n      type: 'checkbox',\n      required: false\n    }];\n    const editTermFields = [{\n      name: 'id',\n      label: 'Term ID (Auto)',\n      type: 'text',\n      required: false,\n      readOnly: true\n    }, {\n      name: 'doktorID',\n      label: 'Doctor ID',\n      type: 'number',\n      required: true\n    }, {\n      name: 'datum',\n      label: 'Date (YYYY-MM-DD)',\n      type: 'date',\n      required: true\n    }, {\n      name: 'vrijeme',\n      label: 'Time (HH:MM:SS)',\n      type: 'time',\n      required: true\n    }, {\n      name: 'dostupnost',\n      label: 'Available',\n      type: 'checkbox',\n      required: false\n    }];\n    const addExaminationFields = [{\n      name: 'pacijentID',\n      label: 'Patient ID',\n      type: 'number',\n      required: true\n    }, {\n      name: 'doktorID',\n      label: 'Doctor ID',\n      type: 'number',\n      required: true,\n      readOnly: true\n    }, {\n      name: 'terminID',\n      label: 'Term ID',\n      type: 'number',\n      required: true\n    }, {\n      name: 'datumPregleda',\n      label: 'Date of Examination (YYYY-MM-DD)',\n      type: 'date',\n      required: true,\n      readOnly: true\n    }, {\n      name: 'vrijemePregleda',\n      label: 'Time of Examination (HH:MM:SS)',\n      type: 'time',\n      required: true,\n      readOnly: true\n    }, {\n      name: 'status',\n      label: 'Status',\n      type: 'select',\n      required: true,\n      options: ['zakazan', 'obavljen', 'otkazan']\n    }, {\n      name: 'komentarPacijenta',\n      label: 'Patient Comment',\n      type: 'textarea',\n      required: false\n    }, {\n      name: 'ocjenaDoktora',\n      label: 'Doctor Rating (0.0-5.0)',\n      type: 'number',\n      required: false\n    }];\n    const editExaminationFields = [{\n      name: 'id',\n      label: 'Examination ID (Auto)',\n      type: 'text',\n      readOnly: true\n    }, {\n      name: 'pacijentID',\n      label: 'Patient ID',\n      type: 'number',\n      required: true\n    }, {\n      name: 'doktorID',\n      label: 'Doctor ID',\n      type: 'number',\n      required: true,\n      readOnly: true\n    }, {\n      name: 'terminID',\n      label: 'Term ID',\n      type: 'number',\n      required: true\n    }, {\n      name: 'datumPregleda',\n      label: 'Date of Examination (YYYY-MM-DD)',\n      type: 'date',\n      required: true,\n      readOnly: true\n    }, {\n      name: 'vrijemePregleda',\n      label: 'Time of Examination (HH:MM:SS)',\n      type: 'time',\n      required: true,\n      readOnly: true\n    }, {\n      name: 'status',\n      label: 'Status',\n      type: 'select',\n      required: true,\n      options: ['zakazan', 'obavljen', 'otkazan']\n    }, {\n      name: 'komentarPacijenta',\n      label: 'Patient Comment',\n      type: 'textarea',\n      required: false\n    }, {\n      name: 'ocjenaDoktora',\n      label: 'Doctor Rating (0.0-5.0)',\n      type: 'number',\n      required: false\n    }];\n    switch (activeTab) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Dashboard Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-primary mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Doctors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 967,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: doctors.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 969,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 968,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 965,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-success mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Patients\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 975,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: patients.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 977,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 976,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 974,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-info mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Available Terms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 983,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: terms.filter(t => t.dostupnost === true).length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 985,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 984,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 982,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-warning mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Pending Examinations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 991,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: examinations.filter(exam => exam.status === 'zakazan').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 993,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 992,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 964,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Quick Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2 flex-wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => openDoctorModal(),\n                children: \"Add New Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1001,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-success\",\n                onClick: () => openPatientModal(),\n                children: \"Add New Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-info\",\n                onClick: () => openTermModal(),\n                children: \"Add New Term\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-warning\",\n                onClick: () => openExaminationModal(),\n                children: \"Add New Examination\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1004,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 11\n        }, this);\n      case 'doctors':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Doctors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1012,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openDoctorModal(),\n              children: \"Add New Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search doctors...\",\n              value: doctorSearchTerm,\n              onChange: e => setDoctorSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1013,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1027,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1028,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Specialty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1029,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"City\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1030,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1031,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1032,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Work Hours\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1033,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Experience\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1034,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1035,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1036,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1026,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentDoctors.length > 0 ? currentDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1043,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1044,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.specialty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1045,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.city\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1046,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1047,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.telefon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1048,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.radnoVrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1049,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.iskustvo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1050,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.ocjena\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1051,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openDoctorModal(doctor),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1053,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteDoctor(doctor.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1054,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1052,\n                    columnNumber: 25\n                  }, this)]\n                }, doctor.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1042,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"10\",\n                    className: \"text-center\",\n                    children: \"No doctors found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1060,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1059,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1024,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1023,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredDoctors.length,\n            currentPage: doctorsCurrentPage,\n            paginate: setDoctorsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 11\n        }, this);\n      case 'patients':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openPatientModal(),\n              children: \"Add New Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1079,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search patients...\",\n              value: patientSearchTerm,\n              onChange: e => setPatientSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1078,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1092,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1093,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1094,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1095,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1096,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1091,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1090,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentPatients.length > 0 ? currentPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1103,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1104,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1105,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.telefon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1106,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openPatientModal(patient),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1108,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeletePatient(patient.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1109,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1107,\n                    columnNumber: 25\n                  }, this)]\n                }, patient.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1102,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"No patients found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1115,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1114,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1099,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1089,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1088,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredPatients.length,\n            currentPage: patientsCurrentPage,\n            paginate: setPatientsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 11\n        }, this);\n      case 'terms':\n        // Novi tab za termine\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openTermModal(),\n              children: \"Add New Term\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search terms...\",\n              value: termSearchTerm,\n              onChange: e => setTermSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1147,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1148,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1149,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1150,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1151,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1152,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1146,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentTerms.length > 0 ? currentTerms.map(term => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1159,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.doktorID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1160,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.datum\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1161,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.vrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1162,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.dostupnost ? 'Dostupan' : 'Zauzet'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1163,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openTermModal(term),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1165,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteTerm(term.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1166,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1164,\n                    columnNumber: 25\n                  }, this)]\n                }, term.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1158,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: \"text-center\",\n                    children: \"No terms found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1172,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1171,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredTerms.length,\n            currentPage: termsCurrentPage,\n            paginate: setTermsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1131,\n          columnNumber: 11\n        }, this);\n      case 'examinations':\n        // Novi tab za preglede (prethodno appointments)\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Examinations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openExaminationModal(),\n              children: \"Add New Examination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search examinations...\",\n              value: examinationSearchTerm,\n              onChange: e => setExaminationSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1204,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Patient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1205,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1206,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Term ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1207,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1208,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1209,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1210,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Patient Comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1211,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1212,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1213,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1203,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentExaminations.length > 0 ? currentExaminations.map(examination => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1220,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.patientName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1221,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.doctorName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1222,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.terminID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1223,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.datumPregleda\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1224,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.vrijemePregleda\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1225,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select\",\n                      value: examination.status,\n                      onChange: e => handleUpdateExamination({\n                        ...examination,\n                        status: e.target.value,\n                        datumPregleda: examination.datumPregleda,\n                        vrijemePregleda: examination.vrijemePregleda\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"zakazan\",\n                        children: \"Zakazan\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1239,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"obavljen\",\n                        children: \"Obavljen\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1240,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"otkazan\",\n                        children: \"Otkazan\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1241,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1227,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1226,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.komentarPacijenta\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1244,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.ocjenaDoktora\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1245,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openExaminationModal(examination),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1247,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteExamination(examination.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1248,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1246,\n                    columnNumber: 25\n                  }, this)]\n                }, examination.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1219,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"10\",\n                    className: \"text-center\",\n                    children: \"No examinations found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1254,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1253,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1216,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredExaminations.length,\n            currentPage: examinationsCurrentPage,\n            paginate: setExaminationsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1188,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a tab to view content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1269,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const addDoctorFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Password',\n    type: 'password',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }, {\n    name: 'grad',\n    label: 'City',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specialty',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Work Hours',\n    type: 'text',\n    required: false\n  }, {\n    name: 'iskustvo',\n    label: 'Experience (years)',\n    type: 'number',\n    required: false\n  }];\n  const editDoctorFields = [{\n    name: 'id',\n    label: 'Doctor ID',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }, {\n    name: 'grad',\n    label: 'City',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specialty',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Work Hours',\n    type: 'text',\n    required: false\n  }, {\n    name: 'iskustvo',\n    label: 'Experience (years)',\n    type: 'number',\n    required: false\n  }];\n  const addPatientFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Password',\n    type: 'password',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }];\n  const editPatientFields = [{\n    name: 'id',\n    label: 'Patient ID',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }];\n  const addTermFields = [{\n    name: 'doktorID',\n    label: 'Doctor ID',\n    type: 'number',\n    required: true\n  }, {\n    name: 'datum',\n    label: 'Date (YYYY-MM-DD)',\n    type: 'date',\n    required: true\n  }, {\n    name: 'vrijeme',\n    label: 'Time (HH:MM:SS)',\n    type: 'time',\n    required: true\n  }, {\n    name: 'dostupnost',\n    label: 'Available',\n    type: 'checkbox',\n    required: false\n  }];\n  const editTermFields = [{\n    name: 'id',\n    label: 'Term ID (Auto)',\n    type: 'text',\n    required: false,\n    readOnly: true\n  }, {\n    name: 'doktorID',\n    label: 'Doctor ID',\n    type: 'number',\n    required: true\n  }, {\n    name: 'datum',\n    label: 'Date (YYYY-MM-DD)',\n    type: 'date',\n    required: true\n  }, {\n    name: 'vrijeme',\n    label: 'Time (HH:MM:SS)',\n    type: 'time',\n    required: true\n  }, {\n    name: 'dostupnost',\n    label: 'Available',\n    type: 'checkbox',\n    required: false\n  }];\n  const addExaminationFields = [{\n    name: 'pacijentID',\n    label: 'Patient ID',\n    type: 'number',\n    required: true\n  }, {\n    name: 'doktorID',\n    label: 'Doctor ID',\n    type: 'number',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'terminID',\n    label: 'Term ID',\n    type: 'number',\n    required: true\n  }, {\n    name: 'datumPregleda',\n    label: 'Date of Examination (YYYY-MM-DD)',\n    type: 'date',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'vrijemePregleda',\n    label: 'Time of Examination (HH:MM:SS)',\n    type: 'time',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'status',\n    label: 'Status',\n    type: 'select',\n    required: true,\n    options: ['zakazan', 'obavljen', 'otkazan']\n  }, {\n    name: 'komentarPacijenta',\n    label: 'Patient Comment',\n    type: 'textarea',\n    required: false\n  }, {\n    name: 'ocjenaDoktora',\n    label: 'Doctor Rating (0.0-5.0)',\n    type: 'number',\n    required: false\n  }];\n  const editExaminationFields = [{\n    name: 'id',\n    label: 'Examination ID (Auto)',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'pacijentID',\n    label: 'Patient ID',\n    type: 'number',\n    required: true\n  }, {\n    name: 'doktorID',\n    label: 'Doctor ID',\n    type: 'number',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'terminID',\n    label: 'Term ID',\n    type: 'number',\n    required: true\n  }, {\n    name: 'datumPregleda',\n    label: 'Date of Examination (YYYY-MM-DD)',\n    type: 'date',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'vrijemePregleda',\n    label: 'Time of Examination (HH:MM:SS)',\n    type: 'time',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'status',\n    label: 'Status',\n    type: 'select',\n    required: true,\n    options: ['zakazan', 'obavljen', 'otkazan']\n  }, {\n    name: 'komentarPacijenta',\n    label: 'Patient Comment',\n    type: 'textarea',\n    required: false\n  }, {\n    name: 'ocjenaDoktora',\n    label: 'Doctor Rating (0.0-5.0)',\n    type: 'number',\n    required: false\n  }];\n  if (loadingInitial) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje administratorskog panela...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1357,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1356,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1355,\n      columnNumber: 7\n    }, this);\n  }\n  if (!loadingInitial && !token && isAuthChecked) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-danger\",\n          children: \"Pristup odbijen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead\",\n          children: \"Niste autorizovani za pristup ovoj stranici. Molimo prijavite se kao administrator.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1366,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1365,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alertType,\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n      style: {\n        zIndex: 1050\n      },\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1377,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showConfirmModal,\n      onHide: () => setShowConfirmModal(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: confirmTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1384,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: confirmMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowConfirmModal(false),\n          children: \"Poni\\u0161ti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleConfirmAction,\n          children: \"Potvrdi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\",\n        style: {\n          minHeight: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky pt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'overview' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('overview'),\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1404,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'doctors' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('doctors'),\n                children: \"Doctors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1409,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'patients' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('patients'),\n                children: \"Patients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1414,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'terms' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('terms'),\n                children: \"Terms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1419,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'examinations' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('examinations'),\n                children: \"Examinations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1424,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1423,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1402,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1401,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1432,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showDoctorModal,\n      onClose: () => setShowDoctorModal(false),\n      data: editingDoctor,\n      onSave: editingDoctor ? handleUpdateDoctor : handleAddDoctor,\n      title: editingDoctor ? 'Edit Doctor' : 'Add New Doctor',\n      idPrefix: \"doctor\",\n      fields: editingDoctor ? editDoctorFields : addDoctorFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showPatientModal,\n      onClose: () => setShowPatientModal(false),\n      data: editingPatient,\n      onSave: editingPatient ? handleUpdatePatient : handleAddPatient,\n      title: editingPatient ? 'Edit Patient' : 'Add New Patient',\n      idPrefix: \"patient\",\n      fields: editingPatient ? editPatientFields : addPatientFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showTermModal,\n      onClose: () => setShowTermModal(false),\n      data: editingTerm,\n      onSave: editingTerm ? handleUpdateTerm : handleAddTerm,\n      title: editingTerm ? 'Edit Term' : 'Add New Term',\n      idPrefix: \"term\",\n      fields: editingTerm ? editTermFields : addTermFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1462,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showExaminationModal,\n      onClose: () => setShowExaminationModal(false),\n      data: editingExamination,\n      onSave: editingExamination ? handleUpdateExamination : handleAddExamination,\n      title: editingExamination ? 'Edit Examination' : 'Add New Examination',\n      idPrefix: \"examination\",\n      fields: editingExamination ? editExaminationFields : addExaminationFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1474,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1375,\n    columnNumber: 5\n  }, this);\n}\n_s2(AdminDashboard, \"afq1K7bojrsB5rih4YDmr06H6ZE=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","useAuth","Modal","Button","Form","Alert","jsxDEV","_jsxDEV","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","AUTH_API_PREFIX","AdminDashboard","_s2","_s","$RefreshSig$","token","authHeaders","headers","loadingInitial","setLoadingInitial","isAuthChecked","setIsAuthChecked","activeTab","setActiveTab","savedTab","localStorage","getItem","doctors","setDoctors","patients","setPatients","examinations","setExaminations","terms","setTerms","showDoctorModal","setShowDoctorModal","editingDoctor","setEditingDoctor","showPatientModal","setShowPatientModal","editingPatient","setEditingPatient","showTermModal","setShowTermModal","editingTerm","setEditingTerm","showExaminationModal","setShowExaminationModal","editingExamination","setEditingExamination","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","doctorSearchTerm","setDoctorSearchTerm","patientSearchTerm","setPatientSearchTerm","termSearchTerm","setTermSearchTerm","examinationSearchTerm","setExaminationSearchTerm","doctorsCurrentPage","setDoctorsCurrentPage","patientsCurrentPage","setPatientsCurrentPage","termsCurrentPage","setTermsCurrentPage","examinationsCurrentPage","setExaminationsCurrentPage","itemsPerPage","showNotification","message","type","setTimeout","fetchDoctors","response","get","transformedDoctors","data","map","doc","id","doktorID","userId","name","ime","prezime","specialty","Array","isArray","specijalizacije","length","join","city","grad","email","telefon","radnoVrijeme","iskustvo","undefined","ocjena","error","_error$response","console","fetchPatients","transformedPatients","pat","pacijentID","phone","_error$response2","fetchTerms","transformedTerms","term","terminID","datum","vrijeme","dostupnost","_error$response3","fetchExaminations","transformedExaminations","app","pregledID","patientName","pacijentIme","doctorName","doktorIme","datumPregleda","vrijemePregleda","status","komentarPacijenta","ocjenaDoktora","_error$response4","initializeDashboard","Promise","all","warn","setItem","handleAddDoctor","newDoctorData","_authResponse$data$us","registerPayload","password","fullName","roles","authResponse","post","log","user","Error","doctorDetailsPayload","put","_error$response5","_error$response6","_error$response6$data","handleUpdateDoctor","updatedDoctor","doctorUpdatePayload","userUpdatePayload","_error$response7","_error$response8","_error$response8$data","showConfirmModal","setShowConfirmModal","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","confirmTitle","setConfirmTitle","showCustomConfirm","action","title","handleConfirmAction","handleDeleteDoctor","doctorToDelete","find","delete","_error$response9","_error$response0","_error$response0$data","openDoctorModal","doctor","filteredDoctors","filter","toLowerCase","includes","indexOfLastDoctor","indexOfFirstDoctor","currentDoctors","slice","totalDoctorPages","Math","ceil","handleAddPatient","newPatient","_authResponse$data$us2","_error$response1","_error$response10","_error$response10$dat","handleUpdatePatient","updatedPatient","patientUpdatePayload","_error$response11","_error$response12","_error$response12$dat","handleDeletePatient","patientToDelete","_error$response13","_error$response14","_error$response14$dat","openPatientModal","patient","filteredPatients","indexOfLastPatient","indexOfFirstPatient","currentPatients","totalPatientPages","handleAddTerm","newTermData","_error$response15","_error$response16","_error$response16$dat","handleUpdateTerm","updatedTerm","termPayload","_error$response17","_error$response18","_error$response18$dat","handleDeleteTerm","_error$response19","_error$response20","_error$response20$dat","openTermModal","filteredTerms","toString","indexOfLastTerm","indexOfFirstTerm","currentTerms","totalTermPages","handleAddExamination","newExaminationData","examinationPayload","_error$response21","_error$response22","_error$response22$dat","handleUpdateExamination","updatedExamination","_error$response23","_error$response24","_error$response24$dat","handleDeleteExamination","_error$response25","_error$response26","_error$response26$dat","openExaminationModal","examination","filteredExaminations","exam","indexOfLastExamination","indexOfFirstExamination","currentExaminations","totalExaminationPages","DataModal","show","onClose","onSave","fields","idPrefix","prevTerminIDRef","useRef","formData","setFormData","initialData","forEach","field","value","split","substring","Boolean","current","currentTerminID","isNumericAndValidTerminID","fetchTermDetails","fetchedTerm","prev","_error$response27","handleChange","e","checked","target","newValue","Number","isNaN","handleSubmit","preventDefault","finalFormData","onHide","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Body","Group","className","controlId","Label","label","Select","onChange","required","options","option","Control","as","rows","Check","readOnly","Footer","variant","onClick","Pagination","totalItems","currentPage","paginate","pageNumbers","i","push","number","renderContent","addDoctorFields","editDoctorFields","addPatientFields","editPatientFields","addTermFields","editTermFields","addExaminationFields","editExaminationFields","t","placeholder","colSpan","style","minHeight","role","dismissible","zIndex","href","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\r\n\r\nfunction AdminDashboard() {\r\n  const { token } = useAuth();\r\n\r\n  const authHeaders = useMemo(() => ({\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  }), [token]);\r\n\r\n  const [loadingInitial, setLoadingInitial] = useState(true);\r\n  const [isAuthChecked, setIsAuthChecked] = useState(false);\r\n\r\n  const [activeTab, setActiveTab] = useState(() => {\r\n    const savedTab = localStorage.getItem('adminActiveTab');\r\n    return savedTab || 'overview';\r\n  });\r\n\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [examinations, setExaminations] = useState([]);\r\n  const [terms, setTerms] = useState([]);\r\n\r\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\r\n  const [editingDoctor, setEditingDoctor] = useState(null);\r\n  const [showPatientModal, setShowPatientModal] = useState(false);\r\n  const [editingPatient, setEditingPatient] = useState(null);\r\n  const [showTermModal, setShowTermModal] = useState(false);\r\n  const [editingTerm, setEditingTerm] = useState(null);\r\n  const [showExaminationModal, setShowExaminationModal] = useState(false);\r\n  const [editingExamination, setEditingExamination] = useState(null);\r\n\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [alertType, setAlertType] = useState('success');\r\n\r\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\r\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n  const [termSearchTerm, setTermSearchTerm] = useState('');\r\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\r\n\r\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\r\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\r\n  const [termsCurrentPage, setTermsCurrentPage] = useState(1);\r\n  const [examinationsCurrentPage, setExaminationsCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const showNotification = (message, type = 'success') => {\r\n    setAlertMessage(message);\r\n    setAlertType(type);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n      setAlertMessage('');\r\n    }, 3000);\r\n  };\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n      const transformedDoctors = response.data.map(doc => ({\r\n        id: doc.doktorID,\r\n        userId: doc.userId,\r\n        name: `${doc.ime} ${doc.prezime}`,\r\n        ime: doc.ime,\r\n        prezime: doc.prezime,\r\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                   ? doc.specijalizacije.join(', ')\r\n                   : 'N/A',\r\n        specijalizacije: doc.specijalizacije,\r\n        city: doc.grad || 'N/A',\r\n        grad: doc.grad,\r\n        email: doc.email || 'N/A',\r\n        telefon: doc.telefon || 'N/A',\r\n        radnoVrijeme: doc.radnoVrijeme || '',\r\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : '',\r\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 0.0,\r\n      }));\r\n      setDoctors(transformedDoctors);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja doktora:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\r\n      const transformedPatients = response.data.map(pat => ({\r\n        id: pat.pacijentID,\r\n        userId: pat.userId,\r\n        name: `${pat.ime} ${pat.prezime}`,\r\n        ime: pat.ime,\r\n        prezime: pat.prezime,\r\n        email: pat.email || 'N/A',\r\n        phone: pat.telefon || 'N/A',\r\n        telefon: pat.telefon,\r\n      }));\r\n      setPatients(transformedPatients);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchTerms = async () => {\r\n    try {\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, authHeaders);\r\n      const transformedTerms = response.data.map(term => ({\r\n        id: term.terminID,\r\n        doktorID: term.doktorID,\r\n        datum: term.datum,\r\n        vrijeme: term.vrijeme,\r\n        dostupnost: term.dostupnost,\r\n      }));\r\n      setTerms(transformedTerms);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja termina:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchExaminations = async () => {\r\n    try {\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\r\n      const transformedExaminations = response.data.map(app => ({\r\n        id: app.pregledID,\r\n        pacijentID: app.pacijentID,\r\n        doktorID: app.doktorID,\r\n        patientName: app.pacijentIme || 'N/A',\r\n        doctorName: app.doktorIme || 'N/A',\r\n        datumPregleda: app.datumPregleda,\r\n        vrijemePregleda: app.vrijemePregleda,\r\n        status: app.status,\r\n        komentarPacijenta: app.komentarPacijenta || '',\r\n        ocjenaDoktora: app.ocjenaDoktora || null,\r\n        terminID: app.terminID !== null && app.terminID !== undefined ? app.terminID : 'N/A',\r\n      }));\r\n      setExaminations(transformedExaminations);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja pregleda:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja pregleda sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token !== undefined && !isAuthChecked) {\r\n      setIsAuthChecked(true);\r\n    }\r\n\r\n    const initializeDashboard = async () => {\r\n      if (isAuthChecked) {\r\n        if (token) {\r\n          try {\r\n            await Promise.all([\r\n              fetchDoctors(),\r\n              fetchPatients(),\r\n              fetchTerms(),\r\n              fetchExaminations()\r\n            ]);\r\n          } catch (error) {\r\n            console.error(\"Greška prilikom inicijalnog dohvaćanja podataka:\", error);\r\n            showNotification(\"Greška prilikom učitavanja početnih podataka.\", \"danger\");\r\n          } finally {\r\n            setLoadingInitial(false);\r\n          }\r\n        } else {\r\n          setLoadingInitial(false);\r\n          console.warn(\"Provjera autentifikacije završena, ali token nije dostupan. Korisnik nije ulogovan/autorizovan.\");\r\n        }\r\n      }\r\n    };\r\n\r\n    initializeDashboard();\r\n  }, [token, isAuthChecked]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('adminActiveTab', activeTab);\r\n  }, [activeTab]);\r\n\r\n  const handleAddDoctor = async (newDoctorData) => {\r\n        try {\r\n          const registerPayload = {\r\n            email: newDoctorData.email,\r\n            password: newDoctorData.password,\r\n            fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\r\n            telefon: newDoctorData.telefon,\r\n            roles: [\"ROLE_DOKTOR\"],\r\n            grad: newDoctorData.grad,\r\n            specijalizacije: newDoctorData.specijalizacije,\r\n          };\r\n\r\n          const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n          console.log(\"Auth Service Register Response Data:\", authResponse.data);\r\n\r\n          const userId = authResponse.data.id || authResponse.data.user?.id || null;\r\n\r\n          if (!userId) {\r\n              throw new Error(\"Korisnički ID nije dobiven iz Auth servisa.\");\r\n          }\r\n\r\n          const doctorDetailsPayload = {\r\n            userId: userId,\r\n            ime: newDoctorData.ime,\r\n            prezime: newDoctorData.prezime,\r\n            email: newDoctorData.email,\r\n            telefon: newDoctorData.telefon,\r\n            grad: newDoctorData.grad,\r\n            specijalizacije: newDoctorData.specijalizacije,\r\n            radnoVrijeme: newDoctorData.radnoVrijeme || '',\r\n            iskustvo: newDoctorData.iskustvo !== null && newDoctorData.iskustvo !== undefined ? newDoctorData.iskustvo : 0,\r\n            ocjena: 0.0,\r\n          };\r\n\r\n          await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/user-details/${userId}`, doctorDetailsPayload, authHeaders);\r\n\r\n          setTimeout(() => {\r\n              fetchDoctors();\r\n          }, 500);\r\n\r\n          setShowDoctorModal(false);\r\n          showNotification('Novi doktor uspješno registrovan i detalji sačuvani!');\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom dodavanja doktora:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom dodavanja doktora.', \"danger\");\r\n        }\r\n      };\r\n\r\n       const handleUpdateDoctor = async (updatedDoctor) => {\r\n           try {\r\n             if (!updatedDoctor.id) {\r\n                 showNotification('ID doktora nedostaje za ažuriranje.', 'danger');\r\n                 console.error('ID doktora nedostaje za ažuriranje:', updatedDoctor);\r\n                 return;\r\n             }\r\n\r\n             const doctorUpdatePayload = {\r\n               ime: updatedDoctor.ime,\r\n               prezime: updatedDoctor.prezime,\r\n               email: updatedDoctor.email,\r\n               telefon: updatedDoctor.telefon,\r\n               grad: updatedDoctor.grad,\r\n               specijalizacije: updatedDoctor.specijalizacije,\r\n               radnoVrijeme: updatedDoctor.radnoVrijeme || '',\r\n               iskustvo: updatedDoctor.iskustvo !== null && updatedDoctor.iskustvo !== undefined ? updatedDoctor.iskustvo : 0,\r\n               ocjena: updatedDoctor.ocjena || 0.0,\r\n             };\r\n             await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\r\n\r\n             const userUpdatePayload = {\r\n               email: updatedDoctor.email,\r\n               fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\r\n               telefon: updatedDoctor.telefon,\r\n             };\r\n             if (updatedDoctor.userId) {\r\n                 await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\r\n             } else {\r\n                 console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n             }\r\n\r\n             fetchDoctors();\r\n             setShowDoctorModal(false);\r\n             setEditingDoctor(null);\r\n             showNotification('Doktor uspješno ažuriran!', 'success');\r\n           } catch (error) {\r\n             console.error(\"Greška prilikom ažuriranja doktora:\", error.response?.data || error.message);\r\n             showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja doktora.', \"danger\");\r\n           }\r\n         };\r\n\r\n         const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n         const [confirmAction, setConfirmAction] = useState(() => () => {});\r\n         const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n         const [confirmTitle, setConfirmTitle] = useState(\"Potvrda\");\r\n\r\n         const showCustomConfirm = (message, action, title = \"Potvrda\") => {\r\n           setConfirmMessage(message);\r\n           setConfirmAction(() => action);\r\n           setConfirmTitle(title);\r\n           setShowConfirmModal(true);\r\n         };\r\n\r\n         const handleConfirmAction = () => {\r\n           confirmAction();\r\n           setShowConfirmModal(false);\r\n         };\r\n\r\n         const handleDeleteDoctor = async (id) => {\r\n           showCustomConfirm(\r\n             'Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.',\r\n             async () => {\r\n               try {\r\n                 const doctorToDelete = doctors.find(doc => doc.id === id);\r\n                 if (!doctorToDelete || !doctorToDelete.userId) {\r\n                   showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\r\n                   return;\r\n                 }\r\n\r\n                 await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\r\n                 await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\r\n\r\n                 fetchDoctors();\r\n                 showNotification('Doktor uspješno obrisan!', 'danger');\r\n               } catch (error) {\r\n                 console.error(\"Greška prilikom brisanja doktora:\", error.response?.data || error.message);\r\n                 showNotification(error.response?.data?.message || 'Greška prilikom brisanja doktora.', \"danger\");\r\n               }\r\n             },\r\n             \"Potvrdi brisanje doktora\"\r\n           );\r\n         };\r\n\r\n         const openDoctorModal = (doctor = null) => {\r\n           setEditingDoctor(doctor);\r\n           setShowDoctorModal(true);\r\n         };\r\n\r\n         const filteredDoctors = doctors.filter(doctor =>\r\n           doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           (doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n           (doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n           (doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()))\r\n         );\r\n         const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\r\n         const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\r\n         const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\r\n         const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\r\n\r\n       const handleAddPatient = async (newPatient) => {\r\n         try {\r\n           console.log(\"handleAddPatient: Počinjem proces dodavanja pacijenta.\");\r\n           const registerPayload = {\r\n             email: newPatient.email,\r\n             password: newPatient.password,\r\n             fullName: `${newPatient.ime} ${newPatient.prezime}`,\r\n             telefon: newPatient.telefon,\r\n             roles: [\"ROLE_PACIJENT\"],\r\n             grad: null,\r\n             specijalizacije: null,\r\n           };\r\n           console.log(\"handleAddPatient: Slanje registerPayload-a Auth servisu:\", registerPayload);\r\n           const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n\r\n           console.log(\"Auth Service Register Response Data (for patient):\", authResponse.data);\r\n\r\n           const userId = authResponse.data.id || authResponse.data.user?.id || null;\r\n\r\n           if (!userId) {\r\n               throw new Error(\"Korisnički ID nije dobiven iz Auth servisa za pacijenta.\");\r\n           }\r\n\r\n           console.log(\"handleAddPatient: Preskačem slanje pacijent detalja na korisnici-doktori servis. Očekujem da UserRegisteredEvent to obradi.\");\r\n\r\n           setTimeout(() => {\r\n               fetchPatients();\r\n           }, 500);\r\n\r\n           setShowPatientModal(false);\r\n           showNotification('Novi pacijent uspješno registrovan!', 'success');\r\n           console.log(\"handleAddPatient: Proces dodavanja pacijenta uspješno završen (registracija i event obrada).\");\r\n\r\n         } catch (error) {\r\n           console.error(\"Greška prilikom dodavanja pacijenta:\", error.response?.data || error.message);\r\n           showNotification(error.response?.data?.message || 'Greška prilikom dodavanja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\r\n         }\r\n       };\r\n\r\n\r\n  const handleUpdatePatient = async (updatedPatient) => {\r\n    try {\r\n      const patientUpdatePayload = {\r\n        ime: updatedPatient.ime,\r\n        prezime: updatedPatient.prezime,\r\n        email: updatedPatient.email,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\r\n\r\n      const userUpdatePayload = {\r\n        email: updatedPatient.email,\r\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      if (updatedPatient.userId) {\r\n          await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\r\n      } else {\r\n          console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n      }\r\n\r\n      fetchPatients();\r\n      setShowPatientModal(false);\r\n      setEditingPatient(null);\r\n      showNotification('Pacijent uspješno ažuriran!', 'success');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleDeletePatient = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.',\r\n      async () => {\r\n        try {\r\n          const patientToDelete = patients.find(pat => pat.id === id);\r\n          if (!patientToDelete || !patientToDelete.userId) {\r\n            showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\r\n            return;\r\n          }\r\n\r\n          await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`, authHeaders);\r\n          await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\r\n\r\n          fetchPatients();\r\n          showNotification('Pacijent uspješno obrisan!', 'success');\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja pacijenta:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja pacijenta.', \"danger\");\r\n        }\r\n      },\r\n      \"Potvrdi brisanje pacijenta\"\r\n    );\r\n  };\r\n\r\n  const openPatientModal = (patient = null) => {\r\n    setEditingPatient(patient);\r\n    setShowPatientModal(true);\r\n  };\r\n\r\n  const filteredPatients = patients.filter(patient =>\r\n    patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\r\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\r\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\r\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\r\n\r\n\r\n  const handleAddTerm = async (newTermData) => {\r\n    try {\r\n      // Logiraj podatke koji se šalju\r\n      console.log('handleAddTerm - Podaci koji se šalju:', newTermData);\r\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, newTermData, authHeaders);\r\n      showNotification('Novi termin uspješno dodan!', 'success');\r\n      fetchTerms();\r\n      setShowTermModal(false);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja termina:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja termina.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateTerm = async (updatedTerm) => {\r\n    try {\r\n      const termPayload = {\r\n        doktorID: updatedTerm.doktorID,\r\n        datum: updatedTerm.datum,\r\n        vrijeme: updatedTerm.vrijeme,\r\n        dostupnost: updatedTerm.dostupnost,\r\n      };\r\n      // Logiraj podatke koji se šalju prilikom ažuriranja\r\n      console.log('handleUpdateTerm - Podaci koji se šalju:', termPayload);\r\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${updatedTerm.id}`, termPayload, authHeaders);\r\n      showNotification('Termin uspješno ažuriran!', 'success');\r\n      fetchTerms();\r\n      setShowTermModal(false);\r\n      setEditingTerm(null);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja termina:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja termina.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteTerm = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovaj termin?',\r\n      async () => {\r\n        try {\r\n          await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${id}`, authHeaders);\r\n          showNotification('Termin uspješno obrisan!', 'success');\r\n          fetchTerms();\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja termina:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja termina.', \"danger\");\r\n        }\r\n      },\r\n      \"Potvrdi brisanje termina\"\r\n    );\r\n  };\r\n\r\n  const openTermModal = (term = null) => {\r\n    if (term) {\r\n        setEditingTerm({ ...term, doktorID: term.doktorID, dostupnost: term.dostupnost });\r\n    } else {\r\n        setEditingTerm(null);\r\n    }\r\n    setShowTermModal(true);\r\n  };\r\n\r\n  const filteredTerms = terms.filter(term =>\r\n    (term.doktorID != null && term.doktorID.toString().toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.datum && term.datum.toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.vrijeme && term.vrijeme.toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.dostupnost !== undefined && (term.dostupnost ? 'dostupan' : 'zauzet').includes(termSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastTerm = termsCurrentPage * itemsPerPage;\r\n  const indexOfFirstTerm = indexOfLastTerm - itemsPerPage;\r\n  const currentTerms = filteredTerms.slice(indexOfFirstTerm, indexOfLastTerm);\r\n  const totalTermPages = Math.ceil(filteredTerms.length / itemsPerPage);\r\n\r\n\r\n  const handleAddExamination = async (newExaminationData) => {\r\n    try {\r\n      console.log('handleAddExamination - Podaci prije slanja na backend:', newExaminationData);\r\n\r\n      const examinationPayload = {\r\n        pacijentID: newExaminationData.pacijentID,\r\n        doktorID: newExaminationData.doktorID,\r\n        terminID: newExaminationData.terminID,\r\n        datumPregleda: newExaminationData.datumPregleda,\r\n        vrijemePregleda: newExaminationData.vrijemePregleda,\r\n        status: newExaminationData.status,\r\n        komentarPacijenta: newExaminationData.komentarPacijenta,\r\n        ocjenaDoktora: newExaminationData.ocjenaDoktora,\r\n      };\r\n      console.log('handleAddExamination - Sending Payload:', examinationPayload);\r\n\r\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, examinationPayload, authHeaders);\r\n      showNotification('Novi pregled uspješno dodan!', 'success');\r\n      fetchExaminations();\r\n      setShowExaminationModal(false);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja pregleda:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja pregleda.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateExamination = async (updatedExamination) => {\r\n    try {\r\n      console.log('handleUpdateExamination primio payload:', updatedExamination);\r\n\r\n      const examinationPayload = {\r\n        pacijentID: updatedExamination.pacijentID,\r\n        doktorID: updatedExamination.doktorID,\r\n        terminID: updatedExamination.terminID,\r\n        datumPregleda: updatedExamination.datumPregleda,\r\n        vrijemePregleda: updatedExamination.vrijemePregleda,\r\n        status: updatedExamination.status,\r\n        komentarPacijenta: updatedExamination.komentarPacijenta,\r\n        ocjenaDoktora: updatedExamination.ocjenaDoktora,\r\n      };\r\n      console.log('handleUpdateExamination - Sending Payload:', examinationPayload);\r\n\r\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${updatedExamination.id}`, examinationPayload, authHeaders);\r\n      showNotification('Pregled uspješno ažuriran!', 'success');\r\n      fetchExaminations();\r\n      setShowExaminationModal(false);\r\n      setEditingExamination(null);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja pregleda:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja pregleda.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteExamination = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovaj pregled?',\r\n      async () => {\r\n        try {\r\n          await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, authHeaders);\r\n          showNotification('Pregled uspješno obrisan!', 'success');\r\n          fetchExaminations();\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja pregleda:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja pregleda.', \"danger\");\r\n        }\r\n      },\r\n      \"Potvrdi brisanje pregleda\"\r\n    );\r\n  };\r\n\r\n  const openExaminationModal = (examination = null) => {\r\n    if (examination) {\r\n        setEditingExamination({\r\n            ...examination,\r\n            pacijentID: examination.pacijentID,\r\n            doktorID: examination.doktorID,\r\n            terminID: examination.terminID,\r\n            datumPregleda: examination.datumPregleda,\r\n            vrijemePregleda: examination.vrijemePregleda\r\n        });\r\n    } else {\r\n        setEditingExamination(null);\r\n    }\r\n    setShowExaminationModal(true);\r\n  };\r\n\r\n  const filteredExaminations = examinations.filter(exam =>\r\n    (exam.patientName && exam.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.doctorName && exam.doctorName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.status && exam.status.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.datumPregleda && exam.datumPregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.vrijemePregleda && exam.vrijemePregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastExamination = examinationsCurrentPage * itemsPerPage;\r\n  const indexOfFirstExamination = indexOfLastExamination - itemsPerPage;\r\n  const currentExaminations = filteredExaminations.slice(indexOfFirstExamination, indexOfLastExamination);\r\n  const totalExaminationPages = Math.ceil(filteredExaminations.length / itemsPerPage);\r\n\r\n\r\n  // Komponenta za modal za unos/uređivanje podataka (Doktor/Pacijent/Termin/Pregled)\r\n  // DataModal definisana UNUTAR AdminDashboard funkcije (kao u tvojoj admin2.txt verziji)\r\n  const DataModal = ({ show, onClose, data, onSave, fields, title, idPrefix, authHeaders, showNotification }) => {\r\n    // useRef za praćenje prethodnog terminID-a\r\n    const prevTerminIDRef = React.useRef(null);\r\n\r\n    const [formData, setFormData] = useState(() => {\r\n        const initialData = data ? { ...data } : {};\r\n        fields.forEach(field => {\r\n            if (data && data[field.name] !== undefined && data[field.name] !== null) {\r\n                let value = data[field.name];\r\n                if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\r\n                    value = value.split('T')[0];\r\n                } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\r\n                    value = value.substring(0, 8);\r\n                } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\r\n                    value = value[0] || '';\r\n                } else if (field.type === 'checkbox') {\r\n                    value = Boolean(value);\r\n                } else if (field.type === 'number' && (value === 0 || value === 0.0)) {\r\n                    value = ''; // Ako je 0 ili 0.0, prikaži kao prazan string za unos\r\n                }\r\n                initialData[field.name] = value;\r\n            } else {\r\n                // ISPRAVKA 1: Inicijaliziraj numerička polja na 0 (broj) za nove unose\r\n                if (field.name === 'specijalizacije') {\r\n                    initialData[field.name] = '';\r\n                } else if (field.type === 'number') {\r\n                    initialData[field.name] = 0; // Inicijaliziraj na 0 za numerička polja\r\n                } else if (field.type === 'checkbox') {\r\n                    initialData[field.name] = false;\r\n                } else {\r\n                    initialData[field.name] = '';\r\n                }\r\n            }\r\n        });\r\n        return initialData;\r\n    });\r\n\r\n    useEffect(() => {\r\n      const initialData = data ? { ...data } : {};\r\n        fields.forEach(field => {\r\n            if (data && data[field.name] !== undefined && data[field.name] !== null) {\r\n                let value = data[field.name];\r\n                if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\r\n                    value = value.split('T')[0];\r\n                } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\r\n                    value = value.substring(0, 8);\r\n                } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\r\n                    value = value[0] || '';\r\n                } else if (field.type === 'checkbox') {\r\n                    value = Boolean(value);\r\n                } else if (field.type === 'number' && (value === 0 || value === 0.0)) {\r\n                    value = '';\r\n                }\r\n                initialData[field.name] = value;\r\n            } else {\r\n                if (field.name === 'specijalizacije') {\r\n                    initialData[field.name] = '';\r\n                } else if (field.type === 'number') {\r\n                    initialData[field.name] = 0; // Inicijaliziraj na 0 za numerička polja prilikom resetiranja modala\r\n                } else if (field.type === 'checkbox') {\r\n                    initialData[field.name] = false;\r\n                } else {\r\n                    initialData[field.name] = '';\r\n                }\r\n            }\r\n        });\r\n        setFormData(initialData);\r\n        prevTerminIDRef.current = null;\r\n    }, [data, fields, idPrefix]);\r\n\r\n    useEffect(() => {\r\n        const currentTerminID = formData.terminID;\r\n        // Provjeri da li je terminID validan broj i da nije \"N/A\" string\r\n        const isNumericAndValidTerminID = typeof currentTerminID === 'number' && currentTerminID > 0;\r\n\r\n        if (\r\n            idPrefix === 'examination' &&\r\n            isNumericAndValidTerminID && // Koristimo novu provjeru\r\n            currentTerminID !== prevTerminIDRef.current\r\n        ) {\r\n            const fetchTermDetails = async () => {\r\n                try {\r\n                    const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${currentTerminID}`, authHeaders);\r\n                    const fetchedTerm = response.data;\r\n                    setFormData(prev => ({\r\n                        ...prev,\r\n                        doktorID: fetchedTerm.doktorID,\r\n                        datumPregleda: fetchedTerm.datum,\r\n                        vrijemePregleda: fetchedTerm.vrijeme.substring(0, 8),\r\n                    }));\r\n                    prevTerminIDRef.current = currentTerminID;\r\n                    showNotification('Detalji termina uspješno popunjeni!', 'info');\r\n                } catch (error) {\r\n                    console.error(\"Greška prilikom dohvaćanja detalja termina:\", error.response?.data || error.message);\r\n                    showNotification('Greška prilikom dohvaćanja detalja termina. Provjerite Term ID.', \"danger\");\r\n                    setFormData(prev => ({\r\n                        ...prev,\r\n                        doktorID: 0, // Reset na 0 ili null ako je došlo do greške\r\n                        datumPregleda: '',\r\n                        vrijemePregleda: '',\r\n                    }));\r\n                    prevTerminIDRef.current = null;\r\n                }\r\n            };\r\n            fetchTermDetails();\r\n        } else if (idPrefix === 'examination' && (!isNumericAndValidTerminID || currentTerminID === 'N/A')) {\r\n            // Resetiraj polja ako je terminID nevažeći ili 'N/A'\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                doktorID: 0, // Reset na 0\r\n                datumPregleda: '',\r\n                vrijemePregleda: '',\r\n            }));\r\n            prevTerminIDRef.current = null;\r\n        }\r\n    }, [formData.terminID, idPrefix, authHeaders, showNotification]);\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value, type, checked } = e.target;\r\n      setFormData(prev => {\r\n        let newValue = value;\r\n\r\n        if (name === 'specijalizacije') {\r\n            newValue = value;\r\n        } else if (type === 'number') {\r\n            // ISPRAVKA 2: Konvertiraj prazan string u 0 za numeričke inpute\r\n            newValue = value === '' ? 0 : Number(value);\r\n            if (isNaN(newValue)) {\r\n                newValue = 0; // Osiguraj da NaN također postane 0\r\n            }\r\n        } else if (type === 'checkbox') {\r\n            newValue = checked;\r\n        }\r\n\r\n        return { ...prev, [name]: newValue };\r\n      });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const finalFormData = { ...formData };\r\n\r\n      if (idPrefix === 'doctor' && typeof finalFormData.specijalizacije === 'string') {\r\n          finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\r\n      }\r\n\r\n      // Nije potrebno dodatno provjeravati iskustvo i ocjenu ovdje\r\n      // jer ih handleChange već ispravno postavlja na 0 ako su prazni\r\n\r\n      if (idPrefix === 'term' && finalFormData.vrijeme) {\r\n          if (finalFormData.vrijeme.length === 5) {\r\n              finalFormData.vrijeme += ':00';\r\n          }\r\n      } else if (idPrefix === 'examination' && finalFormData.vrijemePregleda) {\r\n          if (finalFormData.vrijemePregleda.length === 5) {\r\n              finalFormData.vrijemePregleda += ':00';\r\n          }\r\n      }\r\n\r\n      console.log('DataModal submitting:', finalFormData);\r\n\r\n      onSave(finalFormData);\r\n    };\r\n\r\n    return (\r\n      <Modal show={show} onHide={onClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body>\r\n            {fields.map(field => (\r\n              <Form.Group className=\"mb-3\" controlId={`${idPrefix}-${field.name}`} key={field.name}>\r\n                <Form.Label>{field.label}</Form.Label>\r\n                {field.type === 'select' ? (\r\n                  <Form.Select\r\n                    name={field.name}\r\n                    value={formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  >\r\n                    <option value=\"\">Select {field.label}</option>\r\n                    {field.options.map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                ) : field.type === 'textarea' ? (\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    name={field.name}\r\n                    value={formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  />\r\n                ) : field.type === 'checkbox' ? (\r\n                    <Form.Check\r\n                        type=\"checkbox\"\r\n                        name={field.name}\r\n                        checked={formData[field.name] || false}\r\n                        onChange={handleChange}\r\n                        label={field.label}\r\n                    />\r\n                ) : (\r\n                  <Form.Control\r\n                    type={field.type || 'text'}\r\n                    name={field.name}\r\n                    value={(formData[field.name] === null || formData[field.name] === undefined || formData[field.name] === 'N/A' || (field.type === 'number' && (formData[field.name] === 0 || formData[field.name] === 0.0 && field.name !== 'ocjenaDoktora'))) ? '' : formData[field.name]}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                    readOnly={field.readOnly || (idPrefix === 'examination' && (field.name === 'doktorID' || field.name === 'datumPregleda' || field.name === 'vrijemePregleda'))}\r\n                  />\r\n                )}\r\n              </Form.Group>\r\n            ))}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination justify-content-center mt-4\">\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n              <button onClick={() => paginate(number)} className=\"page-link\">\r\n                {number}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const renderContent = () => {\r\n    const addDoctorFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n    ];\r\n\r\n    const editDoctorFields = [\r\n      { name: 'id', label: 'Doctor ID', type: 'text', readOnly: true },\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n    ];\r\n\r\n    const addPatientFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n    const editPatientFields = [\r\n      { name: 'id', label: 'Patient ID', type: 'text', readOnly: true },\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n    const addTermFields = [\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true },\r\n      { name: 'datum', label: 'Date (YYYY-MM-DD)', type: 'date', required: true },\r\n      { name: 'vrijeme', label: 'Time (HH:MM:SS)', type: 'time', required: true },\r\n      { name: 'dostupnost', label: 'Available', type: 'checkbox', required: false },\r\n    ];\r\n\r\n    const editTermFields = [\r\n      { name: 'id', label: 'Term ID (Auto)', type: 'text', required: false, readOnly: true },\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true },\r\n      { name: 'datum', label: 'Date (YYYY-MM-DD)', type: 'date', required: true },\r\n      { name: 'vrijeme', label: 'Time (HH:MM:SS)', type: 'time', required: true },\r\n      { name: 'dostupnost', label: 'Available', type: 'checkbox', required: false },\r\n    ];\r\n\r\n    const addExaminationFields = [\r\n      { name: 'pacijentID', label: 'Patient ID', type: 'number', required: true },\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true, readOnly: true },\r\n      { name: 'terminID', label: 'Term ID', type: 'number', required: true },\r\n      { name: 'datumPregleda', label: 'Date of Examination (YYYY-MM-DD)', type: 'date', required: true, readOnly: true },\r\n      { name: 'vrijemePregleda', label: 'Time of Examination (HH:MM:SS)', type: 'time', required: true, readOnly: true },\r\n      { name: 'status', label: 'Status', type: 'select', required: true, options: ['zakazan', 'obavljen', 'otkazan'] },\r\n      { name: 'komentarPacijenta', label: 'Patient Comment', type: 'textarea', required: false },\r\n      { name: 'ocjenaDoktora', label: 'Doctor Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n    const editExaminationFields = [\r\n      { name: 'id', label: 'Examination ID (Auto)', type: 'text', readOnly: true },\r\n      { name: 'pacijentID', label: 'Patient ID', type: 'number', required: true },\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true, readOnly: true },\r\n      { name: 'terminID', label: 'Term ID', type: 'number', required: true },\r\n      { name: 'datumPregleda', label: 'Date of Examination (YYYY-MM-DD)', type: 'date', required: true, readOnly: true },\r\n      { name: 'vrijemePregleda', label: 'Time of Examination (HH:MM:SS)', type: 'time', required: true, readOnly: true },\r\n      { name: 'status', label: 'Status', type: 'select', required: true, options: ['zakazan', 'obavljen', 'otkazan'] },\r\n      { name: 'komentarPacijenta', label: 'Patient Comment', type: 'textarea', required: false },\r\n      { name: 'ocjenaDoktora', label: 'Doctor Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n\r\n    switch (activeTab) {\r\n      case 'overview':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Dashboard Overview</h4>\r\n            <div className=\"row g-4\">\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-primary mb-3\">\r\n                  <div className=\"card-header\">Total Doctors</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{doctors.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-success mb-3\">\r\n                  <div className=\"card-header\">Total Patients</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{patients.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-info mb-3\">\r\n                  <div className=\"card-header\">Available Terms</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{terms.filter(t => t.dostupnost === true).length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-warning mb-3\">\r\n                  <div className=\"card-header\">Pending Examinations</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{examinations.filter(exam => exam.status === 'zakazan').length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h5>Quick Actions</h5>\r\n              <div className=\"d-flex gap-2 flex-wrap\">\r\n                <button className=\"btn btn-outline-primary\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n                <button className=\"btn btn-outline-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n                <button className=\"btn btn-outline-info\" onClick={() => openTermModal()}>Add New Term</button>\r\n                <button className=\"btn btn-outline-warning\" onClick={() => openExaminationModal()}>Add New Examination</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'doctors':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Doctors</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search doctors...\"\r\n                value={doctorSearchTerm}\r\n                onChange={(e) => setDoctorSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Specialty</th>\r\n                    <th>City</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Work Hours</th>\r\n                    <th>Experience</th>\r\n                    <th>Rating</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentDoctors.length > 0 ? (\r\n                    currentDoctors.map(doctor => (\r\n                      <tr key={doctor.id}>\r\n                        <td>{doctor.id}</td>\r\n                        <td>{doctor.name}</td>\r\n                        <td>{doctor.specialty}</td>\r\n                        <td>{doctor.city}</td>\r\n                        <td>{doctor.email}</td>\r\n                        <td>{doctor.telefon}</td>\r\n                        <td>{doctor.radnoVrijeme}</td>\r\n                        <td>{doctor.iskustvo}</td>\r\n                        <td>{doctor.ocjena}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openDoctorModal(doctor)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteDoctor(doctor.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"10\" className=\"text-center\">No doctors found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredDoctors.length}\r\n              currentPage={doctorsCurrentPage}\r\n              paginate={setDoctorsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'patients':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Patients</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search patients...\"\r\n                value={patientSearchTerm}\r\n                onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentPatients.length > 0 ? (\r\n                    currentPatients.map(patient => (\r\n                      <tr key={patient.id}>\r\n                        <td>{patient.id}</td>\r\n                        <td>{patient.name}</td>\r\n                        <td>{patient.email}</td>\r\n                        <td>{patient.telefon}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openPatientModal(patient)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeletePatient(patient.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"text-center\">No patients found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredPatients.length}\r\n              currentPage={patientsCurrentPage}\r\n              paginate={setPatientsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'terms': // Novi tab za termine\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Terms</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openTermModal()}>Add New Term</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search terms...\"\r\n                value={termSearchTerm}\r\n                onChange={(e) => setTermSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Doctor ID</th>\r\n                    <th>Date</th>\r\n                    <th>Time</th>\r\n                    <th>Available</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentTerms.length > 0 ? (\r\n                    currentTerms.map(term => (\r\n                      <tr key={term.id}>\r\n                        <td>{term.id}</td>\r\n                        <td>{term.doktorID}</td>\r\n                        <td>{term.datum}</td>\r\n                        <td>{term.vrijeme}</td>\r\n                        <td>{term.dostupnost ? 'Dostupan' : 'Zauzet'}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openTermModal(term)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteTerm(term.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"6\" className=\"text-center\">No terms found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredTerms.length}\r\n              currentPage={termsCurrentPage}\r\n              paginate={setTermsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'examinations': // Novi tab za preglede (prethodno appointments)\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Examinations</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openExaminationModal()}>Add New Examination</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search examinations...\"\r\n                value={examinationSearchTerm}\r\n                onChange={(e) => setExaminationSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Patient</th>\r\n                    <th>Doctor</th>\r\n                    <th>Term ID</th>\r\n                    <th>Date</th>\r\n                    <th>Time</th>\r\n                    <th>Status</th>\r\n                    <th>Patient Comment</th>\r\n                    <th>Doctor Rating</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentExaminations.length > 0 ? (\r\n                    currentExaminations.map(examination => (\r\n                      <tr key={examination.id}>\r\n                        <td>{examination.id}</td>\r\n                        <td>{examination.patientName}</td>\r\n                        <td>{examination.doctorName}</td>\r\n                        <td>{examination.terminID}</td>\r\n                        <td>{examination.datumPregleda}</td>\r\n                        <td>{examination.vrijemePregleda}</td>\r\n                        <td>\r\n                          <select\r\n                            className=\"form-select\"\r\n                            value={examination.status}\r\n                            onChange={(e) => handleUpdateExamination(\r\n                                {\r\n                                  ...examination,\r\n                                  status: e.target.value,\r\n                                  datumPregleda: examination.datumPregleda,\r\n                                  vrijemePregleda: examination.vrijemePregleda\r\n                                }\r\n                            )}\r\n                          >\r\n                            <option value=\"zakazan\">Zakazan</option>\r\n                            <option value=\"obavljen\">Obavljen</option>\r\n                            <option value=\"otkazan\">Otkazan</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>{examination.komentarPacijenta}</td>\r\n                        <td>{examination.ocjenaDoktora}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openExaminationModal(examination)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteExamination(examination.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"10\" className=\"text-center\">No examinations found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredExaminations.length}\r\n              currentPage={examinationsCurrentPage}\r\n              paginate={setExaminationsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return <p>Select a tab to view content.</p>;\r\n    }\r\n  };\r\n\r\n\r\n  const addDoctorFields = [\r\n    { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n    { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n    { name: 'email', label: 'Email', type: 'email', required: true },\r\n    { name: 'password', label: 'Password', type: 'password', required: true },\r\n    { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n    { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n    { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n    { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n  ];\r\n\r\n    const editDoctorFields = [\r\n      { name: 'id', label: 'Doctor ID', type: 'text', readOnly: true },\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n    ];\r\n\r\n    const addPatientFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n    const editPatientFields = [\r\n      { name: 'id', label: 'Patient ID', type: 'text', readOnly: true },\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n    const addTermFields = [\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true },\r\n      { name: 'datum', label: 'Date (YYYY-MM-DD)', type: 'date', required: true },\r\n      { name: 'vrijeme', label: 'Time (HH:MM:SS)', type: 'time', required: true },\r\n      { name: 'dostupnost', label: 'Available', type: 'checkbox', required: false },\r\n    ];\r\n\r\n    const editTermFields = [\r\n      { name: 'id', label: 'Term ID (Auto)', type: 'text', required: false, readOnly: true },\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true },\r\n      { name: 'datum', label: 'Date (YYYY-MM-DD)', type: 'date', required: true },\r\n      { name: 'vrijeme', label: 'Time (HH:MM:SS)', type: 'time', required: true },\r\n      { name: 'dostupnost', label: 'Available', type: 'checkbox', required: false },\r\n    ];\r\n\r\n    const addExaminationFields = [\r\n      { name: 'pacijentID', label: 'Patient ID', type: 'number', required: true },\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true, readOnly: true },\r\n      { name: 'terminID', label: 'Term ID', type: 'number', required: true },\r\n      { name: 'datumPregleda', label: 'Date of Examination (YYYY-MM-DD)', type: 'date', required: true, readOnly: true },\r\n      { name: 'vrijemePregleda', label: 'Time of Examination (HH:MM:SS)', type: 'time', required: true, readOnly: true },\r\n      { name: 'status', label: 'Status', type: 'select', required: true, options: ['zakazan', 'obavljen', 'otkazan'] },\r\n      { name: 'komentarPacijenta', label: 'Patient Comment', type: 'textarea', required: false },\r\n      { name: 'ocjenaDoktora', label: 'Doctor Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n    const editExaminationFields = [\r\n      { name: 'id', label: 'Examination ID (Auto)', type: 'text', readOnly: true },\r\n      { name: 'pacijentID', label: 'Patient ID', type: 'number', required: true },\r\n      { name: 'doktorID', label: 'Doctor ID', type: 'number', required: true, readOnly: true },\r\n      { name: 'terminID', label: 'Term ID', type: 'number', required: true },\r\n      { name: 'datumPregleda', label: 'Date of Examination (YYYY-MM-DD)', type: 'date', required: true, readOnly: true },\r\n      { name: 'vrijemePregleda', label: 'Time of Examination (HH:MM:SS)', type: 'time', required: true, readOnly: true },\r\n      { name: 'status', label: 'Status', type: 'select', required: true, options: ['zakazan', 'obavljen', 'otkazan'] },\r\n      { name: 'komentarPacijenta', label: 'Patient Comment', type: 'textarea', required: false },\r\n      { name: 'ocjenaDoktora', label: 'Doctor Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n\r\n  if (loadingInitial) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Učitavanje administratorskog panela...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadingInitial && !token && isAuthChecked) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-danger\">Pristup odbijen</h2>\r\n          <p className=\"lead\">Niste autorizovani za pristup ovoj stranici. Molimo prijavite se kao administrator.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {showAlert && (\r\n        <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      <Modal show={showConfirmModal} onHide={() => setShowConfirmModal(false)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{confirmTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {confirmMessage}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowConfirmModal(false)}>\r\n            Poništi\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleConfirmAction}>\r\n            Potvrdi\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <div className=\"row\">\r\n        <nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" style={{ minHeight: '100vh' }}>\r\n          <div className=\"position-sticky pt-3\">\r\n            <ul className=\"nav flex-column\">\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'overview' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('overview')}>\r\n                  Overview\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'doctors' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('doctors')}>\r\n                  Doctors\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'patients' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('patients')}>\r\n                  Patients\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'terms' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('terms')}>\r\n                  Terms\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'examinations' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('examinations')}>\r\n                  Examinations\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\">\r\n          {renderContent()}\r\n        </main>\r\n      </div>\r\n\r\n      {/* Važno: DataModal, Pagination i renderContent su sada unutar AdminDashboard kao u tvojoj working verziji */}\r\n      <DataModal\r\n        show={showDoctorModal}\r\n        onClose={() => setShowDoctorModal(false)}\r\n        data={editingDoctor}\r\n        onSave={editingDoctor ? handleUpdateDoctor : handleAddDoctor}\r\n        title={editingDoctor ? 'Edit Doctor' : 'Add New Doctor'}\r\n        idPrefix=\"doctor\"\r\n        fields={editingDoctor ? editDoctorFields : addDoctorFields}\r\n        authHeaders={authHeaders}\r\n        showNotification={showNotification}\r\n      />\r\n\r\n      <DataModal\r\n        show={showPatientModal}\r\n        onClose={() => setShowPatientModal(false)}\r\n        data={editingPatient}\r\n        onSave={editingPatient ? handleUpdatePatient : handleAddPatient}\r\n        title={editingPatient ? 'Edit Patient' : 'Add New Patient'}\r\n        idPrefix=\"patient\"\r\n        fields={editingPatient ? editPatientFields : addPatientFields}\r\n        authHeaders={authHeaders}\r\n        showNotification={showNotification}\r\n      />\r\n\r\n      <DataModal\r\n        show={showTermModal}\r\n        onClose={() => setShowTermModal(false)}\r\n        data={editingTerm}\r\n        onSave={editingTerm ? handleUpdateTerm : handleAddTerm}\r\n        title={editingTerm ? 'Edit Term' : 'Add New Term'}\r\n        idPrefix=\"term\"\r\n        fields={editingTerm ? editTermFields : addTermFields}\r\n        authHeaders={authHeaders}\r\n        showNotification={showNotification}\r\n      />\r\n\r\n      <DataModal\r\n        show={showExaminationModal}\r\n        onClose={() => setShowExaminationModal(false)}\r\n        data={editingExamination}\r\n        onSave={editingExamination ? handleUpdateExamination : handleAddExamination}\r\n        title={editingExamination ? 'Edit Examination' : 'Add New Examination'}\r\n        idPrefix=\"examination\"\r\n        fields={editingExamination ? editExaminationFields : addExaminationFields}\r\n        authHeaders={authHeaders}\r\n        showNotification={showNotification}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}