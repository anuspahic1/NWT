{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\nfunction PatientDashboard() {\n  _s();\n  var _doctors$find3, _doctors$find4;\n  // AŽURIRANO: user objekat sada sadrži authId (Long), id (email), pacijentId (Integer)\n  // Važno: user.userId je Auth ID, user.pacijentId je ID iz korisnici-doktori servisa.\n  // Za poruke ćemo koristiti user.userId.\n  const {\n    token,\n    user\n  } = useAuth();\n  console.log(\"Trenutni korisnički objekt iz useAuth (PatientDashboard):\", user);\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [appointments, setAppointments] = useState([]);\n  const [medicalHistory, setMedicalHistory] = useState([]);\n  const [patientProfile, setPatientProfile] = useState({});\n  const [doctors, setDoctors] = useState([]); // Ova lista doktora treba da sadrži i userId\n  const [allDoctorAvailableTerms, setAllDoctorAvailableTerms] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [bills, setBills] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState({\n    recipientId: '',\n    subject: '',\n    content: ''\n  }); // recipientId će sada biti Long userId\n  const [replyMessage, setReplyMessage] = useState({\n    messageId: '',\n    content: ''\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [newAppointment, setNewAppointment] = useState({\n    doctorId: '',\n    appointmentDate: '',\n    appointmentTime: '',\n    terminId: '',\n    reason: ''\n  });\n  const [editingAppointment, setEditingAppointment] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Stanje za modal za ocjenjivanje\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  const [selectedDoctorForRating, setSelectedDoctorForRating] = useState(null);\n  const [ratingData, setRatingData] = useState({\n    ocjena: 5,\n    komentar: ''\n  }); // Default ocjena 5\n\n  // --- API Calls ---\n\n  const fetchPatientAppointments = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje pregleda.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/zakazani/${user.pacijentId}`, authHeaders);\n      const transformedAppointments = response.data.map(app => ({\n        id: app.pregledID,\n        doktorID: app.doktorID,\n        pacijentID: app.pacijentID,\n        datumPregleda: app.datumPregleda,\n        vrijemePregleda: app.vrijemePregleda,\n        komentarPacijenta: app.komentarPacijenta,\n        status: app.status,\n        terminID: app.terminID,\n        doktorIme: app.doktorIme\n      }));\n      setAppointments(transformedAppointments);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response;\n      console.error('Greška prilikom dohvaćanja pacijentovih pregleda:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje zakazanih pregleda.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMedicalHistory = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje medicinske historije.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedHistory = response.data.map(record => ({\n        id: record.zapisID,\n        patientId: record.pacijentID,\n        doctorId: record.doktorID,\n        doctorName: record.doktorIme,\n        date: record.datumZapisivanja,\n        diagnosis: record.dijagnoza,\n        treatment: record.lijecenje,\n        notes: record.napomene\n      }));\n      setMedicalHistory(transformedHistory);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response2;\n      console.error('Greška prilikom dohvaćanja medicinske historije:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje medicinske historije.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchPatientProfile = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje pacijentovog profila.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, authHeaders);\n      setPatientProfile({\n        id: response.data.pacijentID,\n        firstName: response.data.ime,\n        lastName: response.data.prezime,\n        email: response.data.email,\n        phone: response.data.telefon,\n        datumRodjenja: response.data.datumRodjenja,\n        adresa: response.data.adresa,\n        userId: response.data.userId // Dodaj userId ovdje\n      });\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response3;\n      console.error('Greška prilikom dohvaćanja pacijentovog profila:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje podataka profila.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        // Doktor ID (Integer)\n        userId: doc.userId,\n        // User ID iz Auth servisa (Long)\n        firstName: doc.ime,\n        lastName: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\n        email: doc.email,\n        phone: doc.telefon,\n        ocjena: doc.ocjena // Uvjeri se da je ocjena mapirana sa backend-a\n      }));\n      setDoctors(transformedDoctors);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response4;\n      console.error('Greška prilikom dohvaćanja doktora:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje liste doktora.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctorAllAvailableTerms = async doktorId => {\n    if (!doktorId) {\n      setAllDoctorAvailableTerms([]);\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/slobodni/${doktorId}`, authHeaders);\n      const termsData = Array.isArray(response.data) ? response.data : [];\n      const available = termsData.map(term => ({\n        terminID: term.terminID,\n        datum: term.datum,\n        vrijeme: term.vrijeme,\n        display: `${term.datum} ${term.vrijeme.substring(0, 5)}`\n      })).sort((a, b) => {\n        const dateTimeA = `${a.datum}T${a.vrijeme}`;\n        const dateTimeB = `${b.datum}T${b.vrijeme}`;\n        return new Date(dateTimeA) - new Date(dateTimeB);\n      });\n      setAllDoctorAvailableTerms(available);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response5;\n      console.error('Greška prilikom dohvaćanja dostupnosti doktora:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje dostupnosti doktora.');\n      setAlertType('danger');\n      setShowAlert(true);\n      setAllDoctorAvailableTerms([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchDocuments = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje dokumenata.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedDocuments = response.data.map(doc => ({\n        id: doc.dokumentID,\n        fileName: doc.nazivDokumenta,\n        documentType: doc.tipDokumenta,\n        uploadDate: doc.datumKreiranja,\n        pristup: doc.pristup\n      }));\n      setDocuments(transformedDocuments);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response6;\n      console.error('Greška prilikom dohvaćanja dokumenata:', ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      setAlertMessage('Neuspješan prijenos dokumenta.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchBills = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje računa.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedBills = response.data.map(bill => ({\n        id: bill.racunID,\n        billDate: bill.datumIzdavanja,\n        amount: bill.iznos,\n        status: bill.status,\n        dueDate: bill.datumDospijeca,\n        opis: bill.opis,\n        doktorIme: bill.doktorIme\n      }));\n      setBills(transformedBills);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response7;\n      console.error('Greška prilikom dohvaćanja računa:', ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje informacija o naplati.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMessages = async () => {\n    if (!user || !user.userId) {\n      // Koristi user.userId za dohvaćanje poruka\n      console.warn(\"User ID nije dostupan za dohvaćanje poruka.\");\n      return;\n    }\n    try {\n      // Ažuriran endpoint za dohvaćanje poruka koristeći user.userId i userType PACIJENT\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=PACIJENT`, authHeaders);\n      const transformedMessages = response.data.map(msg => ({\n        id: msg.porukaID,\n        senderId: msg.senderId,\n        // Ovo je sada Auth userId\n        senderType: msg.senderType,\n        senderIme: msg.senderIme,\n        receiverId: msg.receiverId,\n        // Ovo je sada Auth userId\n        receiverType: msg.receiverType,\n        receiverIme: msg.receiverIme,\n        subject: msg.subject,\n        content: msg.content,\n        timestamp: msg.timestamp,\n        replies: msg.replies || [] // Ensure replies is always an array\n      }));\n      setMessages(transformedMessages);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response8;\n      console.error('Greška prilikom dohvaćanja poruka:', ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje poruka.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- useEffect Hooks ---\n  useEffect(() => {\n    const loadAllData = async () => {\n      if (token && user) {\n        // Promijenjen uslov, sada se oslanja na user objekat i token\n        setLoading(true);\n        await Promise.all([fetchPatientAppointments(), fetchMedicalHistory(), fetchPatientProfile(), fetchDoctors(), fetchDocuments(), fetchBills(), fetchMessages() // Sada će koristiti user.userId\n        ]);\n        setLoading(false);\n      } else if (!token || user && !user.pacijentId && !user.doktorId) {\n        // Ako nije ni pacijent ni doktor (npr. admin)\n        setLoading(false);\n        if (!token) {\n          console.warn(\"Token nije dostupan. Korisnik nije ulogovan.\");\n        } else {\n          console.warn(\"Korisnički objekt je dostupan, ali pacijentId ni doktorId nisu. Moguće da korisnik nije ni pacijent ni doktor.\");\n        }\n      }\n    };\n    loadAllData();\n  }, [token, user]);\n\n  // --- Appointment Scheduling/Cancellation ---\n\n  const openAppointmentModal = (appointment = null, doctorIdFromSearch = null) => {\n    if (appointment) {\n      setEditingAppointment(appointment);\n      setNewAppointment({\n        doctorId: appointment.doktorID,\n        appointmentDate: appointment.datumPregleda,\n        appointmentTime: appointment.vrijemePregleda,\n        terminId: appointment.terminID,\n        reason: appointment.komentarPacijenta\n      });\n      fetchDoctorAllAvailableTerms(appointment.doktorID);\n    } else {\n      setEditingAppointment(null);\n      setNewAppointment({\n        doctorId: doctorIdFromSearch || '',\n        appointmentDate: '',\n        appointmentTime: '',\n        terminId: '',\n        reason: ''\n      });\n      setAllDoctorAvailableTerms([]);\n      // Ako je doctorIdFromSearch prisutan, odmah dohvati termine\n      if (doctorIdFromSearch) {\n        fetchDoctorAllAvailableTerms(doctorIdFromSearch);\n      }\n    }\n    setShowAppointmentModal(true);\n  };\n  const closeAppointmentModal = () => {\n    setShowAppointmentModal(false);\n    setEditingAppointment(null);\n    setNewAppointment({\n      doctorId: '',\n      appointmentDate: '',\n      appointmentTime: '',\n      terminId: '',\n      reason: ''\n    });\n    setAllDoctorAvailableTerms([]);\n  };\n  const handleNewAppointmentChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let updatedAppointment = {\n      ...newAppointment,\n      [name]: value\n    };\n    if (name === 'doctorId') {\n      updatedAppointment.appointmentDate = '';\n      updatedAppointment.appointmentTime = '';\n      updatedAppointment.terminId = '';\n      if (value) {\n        await fetchDoctorAllAvailableTerms(value);\n      } else {\n        setAllDoctorAvailableTerms([]);\n      }\n    } else if (name === 'terminId') {\n      const selectedTerm = allDoctorAvailableTerms.find(term => term.terminID === parseInt(value));\n      if (selectedTerm) {\n        updatedAppointment.terminId = selectedTerm.terminID;\n        updatedAppointment.appointmentDate = selectedTerm.datum;\n        updatedAppointment.appointmentTime = selectedTerm.vrijeme;\n      } else {\n        updatedAppointment.terminId = '';\n        updatedAppointment.appointmentDate = '';\n        updatedAppointment.appointmentTime = '';\n      }\n    }\n    setNewAppointment(updatedAppointment);\n  };\n  const handleScheduleAppointment = async () => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće zakazati pregled.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason) {\n      setAlertMessage('Molimo odaberite doktora, slobodan termin i navedite razlog.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const appointmentData = {\n        pacijentID: user.pacijentId,\n        doktorID: parseInt(newAppointment.doctorId),\n        terminID: newAppointment.terminId,\n        datumPregleda: newAppointment.appointmentDate,\n        vrijemePregleda: newAppointment.appointmentTime,\n        komentarPacijenta: newAppointment.reason,\n        status: editingAppointment ? editingAppointment.status : 'zakazan'\n      };\n      let response;\n      if (editingAppointment) {\n        response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${editingAppointment.id}`, appointmentData, authHeaders);\n        setAlertMessage('Pregled uspješno ažuriran!');\n      } else {\n        response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\n        setAlertMessage('Pregled uspješno zakazan!');\n      }\n      setAlertType('success');\n      setShowAlert(true);\n      fetchPatientAppointments();\n      closeAppointmentModal();\n    } catch (error) {\n      var _error$response9, _error$response0, _error$response0$data;\n      console.error('Greška prilikom zakazivanja/ažuriranja pregleda:', ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n      let errorMessage = 'Neuspješno zakazivanje/ažuriranje pregleda. Molimo pokušajte ponovo.';\n      if ((_error$response0 = error.response) !== null && _error$response0 !== void 0 && (_error$response0$data = _error$response0.data) !== null && _error$response0$data !== void 0 && _error$response0$data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      setAlertMessage(errorMessage);\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleCancelAppointment = async appointmentId => {\n    if (window.confirm('Jeste li sigurni da želite otkazati ovaj pregled?')) {\n      if (!user || !user.pacijentId) {\n        setAlertMessage('ID pacijenta nije dostupan za otkazivanje. Molimo pokušajte ponovo.');\n        setAlertType('danger');\n        setShowAlert(true);\n        return;\n      }\n      try {\n        const existingApp = appointments.find(app => app.id === appointmentId);\n        if (!existingApp) {\n          setAlertMessage(\"Pregled nije pronađen za otkazivanje.\");\n          setAlertType('danger');\n          setShowAlert(true);\n          return;\n        }\n        const cancelPayload = {\n          pregledID: existingApp.id,\n          pacijentID: user.pacijentId,\n          doktorID: existingApp.doktorID,\n          terminID: existingApp.terminID,\n          datumPregleda: existingApp.datumPregleda,\n          vrijemePregleda: existingApp.vrijemePregleda,\n          komentarPacijenta: existingApp.komentarPacijenta,\n          status: 'otkazan'\n        };\n        await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}`, cancelPayload, authHeaders);\n        setAlertMessage('Pregled uspješno otkazan!');\n        setAlertType('success');\n        setShowAlert(true);\n        fetchPatientAppointments();\n      } catch (error) {\n        var _error$response1, _error$response10, _error$response10$dat;\n        console.error('Greška prilikom otkazivanja pregleda:', ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data) || error.message);\n        setAlertMessage('Neuspješno otkazivanje pregleda. Molimo pokušajte ponovo. ' + (((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.message) || error.message));\n        setAlertType('danger');\n        setShowAlert(true);\n      }\n    }\n  };\n\n  // --- Profile Update ---\n  const handleProfileChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPatientProfile(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSaveProfile = async () => {\n    if (!user || !user.pacijentId || !user.userId) {\n      setAlertMessage('ID pacijenta ili Korisnički ID nije dostupan. Nije moguće sačuvati profil.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const patientDetailsPayload = {\n        pacijentID: user.pacijentId,\n        ime: patientProfile.firstName,\n        prezime: patientProfile.lastName,\n        email: patientProfile.email,\n        telefon: patientProfile.phone,\n        datumRodjenja: patientProfile.datumRodjenja,\n        adresa: patientProfile.adresa,\n        userId: user.userId\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, patientDetailsPayload, authHeaders);\n      const authProfilePayload = {\n        email: patientProfile.email,\n        fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\n        telefon: patientProfile.phone\n      };\n      await axios.put(`${AUTH_API_PREFIX}/users/${user.userId}`, authProfilePayload, authHeaders);\n      setAlertMessage('Profil uspješno ažuriran!');\n      setAlertType('success');\n      setShowAlert(true);\n      fetchPatientProfile();\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response12$dat;\n      console.error('Greška prilikom ažuriranja profila:', ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message);\n      setAlertMessage('Neuspješno ažuriranje profila. Molimo pokušajte ponovo. ' + (((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- Document Upload ---\n  const handleDocumentUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('pacijentID', user.pacijentId);\n    formData.append('tipDokumenta', 'Patient Upload');\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setAlertMessage('Dokument uspješno prenesen!');\n      setAlertType('success');\n      setShowAlert(true);\n      fetchDocuments();\n    } catch (error) {\n      var _error$response13, _error$response14, _error$response14$dat;\n      console.error('Greška prilikom prijenosa dokumenta:', ((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) || error.message);\n      setAlertMessage('Neuspješan prijenos dokumenta. ' + (((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : (_error$response14$dat = _error$response14.data) === null || _error$response14$dat === void 0 ? void 0 : _error$response14$dat.message) || error.message), \"danger\");\n    }\n  };\n\n  // --- Secure Messaging ---\n  const handleNewMessageChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMessage(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleReplyMessageChange = e => {\n    setReplyMessage(prev => ({\n      ...prev,\n      content: e.target.value\n    }));\n  };\n  const handleSendMessage = async () => {\n    if (!user || !user.userId) {\n      // Koristi user.userId za slanje poruke\n      setAlertMessage('Vaš korisnički ID nije dostupan. Nije moguće poslati poruku.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\n      setAlertMessage('Molimo popunite sva polja za poruku.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const messageData = {\n        senderId: user.userId,\n        // SENDER je sada user.userId (Long)\n        senderType: 'PACIJENT',\n        receiverId: parseInt(newMessage.recipientId, 10),\n        // RECIPIENT je user.userId doktora (Long)\n        receiverType: 'DOKTOR',\n        subject: newMessage.subject,\n        content: newMessage.content\n      };\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\n      setAlertMessage('Poruka uspješno poslana!');\n      setAlertType('success');\n      setShowAlert(true);\n      setNewMessage({\n        recipientId: '',\n        subject: '',\n        content: ''\n      });\n      fetchMessages(); // Osvježi listu poruka\n    } catch (error) {\n      var _error$response15, _error$response16, _error$response16$dat;\n      console.error('Greška prilikom slanja poruke:', ((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.data) || error.message);\n      setAlertMessage('Neuspješno slanje poruke. ' + (((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : (_error$response16$dat = _error$response16.data) === null || _error$response16$dat === void 0 ? void 0 : _error$response16$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleReply = async messageId => {\n    if (!user || !user.userId) {\n      // Koristi user.userId za slanje odgovora\n      setAlertMessage('Vaš korisnički ID nije dostupan. Nije moguće odgovoriti.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!replyMessage.content) {\n      setAlertMessage('Sadržaj odgovora ne može biti prazan.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\n        senderId: user.userId,\n        // SENDER je sada user.userId (Long)\n        senderType: 'PACIJENT',\n        content: replyMessage.content\n      }, authHeaders);\n      setAlertMessage('Odgovor uspješno poslan!');\n      setAlertType('success');\n      setShowAlert(true);\n      setReplyMessage({\n        messageId: '',\n        content: ''\n      });\n      fetchMessages(); // Osvježi listu poruka\n      // Ažuriraj lokalno stanje za trenutni prikaz odgovora\n      setSelectedMessage(prev => {\n        if (!prev) return null;\n        return {\n          ...prev,\n          replies: [...(prev.replies || []), {\n            senderId: user.userId,\n            // Važno: Koristite user.userId ovdje\n            senderIme: user.fullName,\n            // Koristi fullName iz useAuth\n            senderType: 'PACIJENT',\n            content: replyMessage.content,\n            timestamp: new Date().toISOString()\n          }]\n        };\n      });\n    } catch (error) {\n      var _error$response17, _error$response18, _error$response18$dat;\n      console.error('Greška prilikom slanja odgovora:', ((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : _error$response17.data) || error.message);\n      setAlertMessage('Neuspješno slanje odgovora. ' + (((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : (_error$response18$dat = _error$response18.data) === null || _error$response18$dat === void 0 ? void 0 : _error$response18$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleViewMessage = message => {\n    setSelectedMessage(message);\n  };\n  const closeMessageModal = () => {\n    setSelectedMessage(null);\n    setReplyMessage({\n      messageId: '',\n      content: ''\n    });\n  };\n\n  // --- Funkcije za ocjenjivanje ---\n  const openRatingModal = (doktorID, doktorIme) => {\n    setSelectedDoctorForRating({\n      id: doktorID,\n      name: doktorIme\n    });\n    setRatingData({\n      ocjena: 5,\n      komentar: ''\n    });\n    setShowRatingModal(true);\n  };\n  const closeRatingModal = () => {\n    setShowRatingModal(false);\n    setSelectedDoctorForRating(null);\n    setRatingData({\n      ocjena: 5,\n      komentar: ''\n    });\n  };\n  const handleRatingChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRatingData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmitRating = async () => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće poslati ocjenu.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!selectedDoctorForRating || ratingData.ocjena === null) {\n      setAlertMessage('Molimo odaberite ocjenu.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const ratingPayload = {\n        pacijentID: user.pacijentId,\n        doktorID: selectedDoctorForRating.id,\n        ocjena: parseFloat(ratingData.ocjena),\n        komentar: ratingData.komentar\n      };\n      await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/ocjene`, ratingPayload, authHeaders);\n      setAlertMessage(`Ocjena uspješno poslana za doktora ${selectedDoctorForRating.name}!`);\n      setAlertType('success');\n      setShowAlert(true);\n      closeRatingModal();\n      fetchPatientAppointments();\n      fetchDoctors();\n    } catch (error) {\n      var _error$response19, _error$response20, _error$response20$dat;\n      console.error('Greška prilikom slanja ocjene:', ((_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : _error$response19.data) || error.message);\n      setAlertMessage('Neuspješno slanje ocjene. ' + (((_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : (_error$response20$dat = _error$response20.data) === null || _error$response20$dat === void 0 ? void 0 : _error$response20$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-2\",\n        children: \"U\\u010Ditavanje podataka kontrolne plo\\u010De...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 13\n    }, this);\n  }\n  const currentPatientUserId = user.userId; // NOVO: Dohvati user.userId\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-white p-3\",\n      style: {\n        width: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-4\",\n        children: \"Kontrolna plo\\u010Da pacijenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('overview'),\n            children: \"Pregled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('myAppointments'),\n            children: \"Moji pregledi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('medicalHistory'),\n            children: \"Medicinska historija\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('documents'),\n            children: \"Moji dokumenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('billing'),\n            children: \"Naplata i pla\\u0107anja\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('messages'),\n            children: \"Poruke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('doctorSearch'),\n            children: \"Prona\\u0111i doktora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('profileSettings'),\n            children: \"Postavke profila\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 p-4 bg-light\",\n      children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: alertType,\n        onClose: () => setShowAlert(false),\n        dismissible: true,\n        className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n        style: {\n          zIndex: 1050\n        },\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: \"Kontrolna plo\\u010Da pacijenta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 17\n      }, this), activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Dobrodo\\u0161li, \", patientProfile.firstName || (user ? user.fullName : 'Pacijent'), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ovo je va\\u0161 pregled pacijenta. Ovdje mo\\u017Eete brzo vidjeti svoje nadolaze\\u0107e preglede i nedavne aktivnosti.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: \"Nadolaze\\u0107i pregledi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-group list-group-flush\",\n                children: appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').length > 0 ? appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').map(app => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item d-flex justify-content-between align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [app.datumPregleda, \" u \", app.vrijemePregleda]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 836,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 837,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Razlog: \", app.komentarPacijenta]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 838,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 839,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Doktor: \", app.doktorIme]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 840,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 835,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`,\n                    children: app.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 842,\n                    columnNumber: 53\n                  }, this)]\n                }, app.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 834,\n                  columnNumber: 49\n                }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: \"Nema nadolaze\\u0107ih pregleda.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 846,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 21\n      }, this), activeTab === 'myAppointments' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moji pregledi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => openAppointmentModal(),\n          children: \"Zaka\\u017Ei novi pregled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 25\n        }, this), appointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Doktor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 865,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vrijeme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Razlog\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 868,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: appointments.map(app => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.doktorIme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.datumPregleda\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.vrijemePregleda\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.komentarPacijenta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 879,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${app.status === 'obavljen' ? 'success' : app.status === 'zakazan' ? 'warning' : 'danger'}`,\n                  children: app.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 880,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.status === 'zakazan' || app.status === 'potvrđen' ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"sm\",\n                  onClick: () => handleCancelAppointment(app.id),\n                  children: \"Otka\\u017Ei\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 883,\n                  columnNumber: 53\n                }, this) : app.status === 'obavljen' ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  onClick: () => openRatingModal(app.doktorID, app.doktorIme),\n                  children: \"Ocijeni\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 885,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Nema dostupnih akcija\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 881,\n                columnNumber: 45\n              }, this)]\n            }, app.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111ene historije pregleda. Zaka\\u017Eite svoj prvi pregled!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 21\n      }, this), activeTab === 'medicalHistory' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moja medicinska historija\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 25\n        }, this), medicalHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: medicalHistory.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 41\n            }, this), \" \", record.date, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 79\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Dijagnoza:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 41\n            }, this), \" \", record.diagnosis, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 88\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Lije\\u010Denje:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 41\n            }, this), \" \", record.treatment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 88\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Doktor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 41\n            }, this), \" \", record.doctorName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 86\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Napomene:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 41\n            }, this), \" \", record.notes || 'N/A']\n          }, record.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih zapisa medicinske historije.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 21\n      }, this), activeTab === 'documents' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moji dokumenti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formFile\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Prenesi novi dokument\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: handleDocumentUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 25\n        }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Naziv dokumenta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum prijenosa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 935,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Pristup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 936,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.documentType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(doc.uploadDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 945,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`,\n                  children: doc.pristup\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 946,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  href: `${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${doc.id}`,\n                  target: \"_blank\",\n                  children: \"Preuzmi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 948,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 947,\n                columnNumber: 45\n              }, this)]\n            }, doc.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih dokumenata.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 21\n      }, this), activeTab === 'billing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Naplata i pla\\u0107anja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 25\n        }, this), bills.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID ra\\u010Duna\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 967,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum izdavanja\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 968,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Iznos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Opis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Izdao\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 966,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 965,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: bills.map(bill => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 979,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(bill.billDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.amount ? bill.amount.toFixed(2) : 'N/A', \" KM\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${bill.status === 'PLACEN' ? 'success' : 'warning'}`,\n                  children: bill.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 982,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 982,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.opis\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.doktorIme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.status === 'NEPLACEN' && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  className: \"me-2\",\n                  children: \"Plati sada\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 987,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  children: \"Pogledaj detalje\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 989,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 45\n              }, this)]\n            }, bill.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 978,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 976,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih zapisa o naplati.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 21\n      }, this), activeTab === 'messages' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moje poruke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => setNewMessage({\n            recipientId: '',\n            subject: '',\n            content: ''\n          }),\n          children: \"Sastavi novu poruku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 25\n        }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: messages.map(msg => {\n            var _doctors$find, _doctors$find2;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"Od: \", msg.senderId === currentPatientUserId ? 'Ja' : ((_doctors$find = doctors.find(d => d.userId === msg.senderId)) === null || _doctors$find === void 0 ? void 0 : _doctors$find.firstName) + ' ' + ((_doctors$find2 = doctors.find(d => d.userId === msg.senderId)) === null || _doctors$find2 === void 0 ? void 0 : _doctors$find2.lastName) || `Doktor (${msg.senderId})`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1012,\n                  columnNumber: 45\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1012,\n                  columnNumber: 266\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Naslov:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1013,\n                  columnNumber: 45\n                }, this), \" \", msg.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1013,\n                  columnNumber: 84\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(msg.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1014,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                size: \"sm\",\n                onClick: () => handleViewMessage(msg),\n                children: \"Pogledaj poruku\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 41\n              }, this)]\n            }, msg.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih poruka.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sastavi novu poruku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Primalac (Doktor)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1029,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"recipientId\",\n              value: newMessage.recipientId,\n              onChange: handleNewMessageChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite doktora --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1037,\n                columnNumber: 37\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.userId,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.userId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Naslov\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1044,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"subject\",\n              value: newMessage.subject,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1043,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Sadr\\u017Eaj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1054,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"content\",\n              value: newMessage.content,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1055,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSendMessage,\n            children: \"Po\\u0161alji poruku\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 21\n      }, this), activeTab === 'doctorSearch' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Prona\\u0111i doktora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pretra\\u017Eite doktore po imenu ili specijalnosti kako biste prona\\u0161li pravu njegu za vas.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1072,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Pretra\\u017Ei po imenu ili specijalnosti...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1074,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 25\n        }, this), doctors.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Ime\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1080,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Specijalnost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1081,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Kontakt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1082,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Ocjena\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1083,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1084,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1079,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1078,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1090,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.specialty || 'Opšti praktičar'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1091,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.email, \" | \", doctor.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1092,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.ocjena ? doctor.ocjena.toFixed(1) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1093,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"sm\",\n                  onClick: () => {\n                    openAppointmentModal(null, doctor.id);\n                  },\n                  children: \"Zaka\\u017Ei pregled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1095,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1094,\n                columnNumber: 45\n              }, this)]\n            }, doctor.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1089,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih doktora.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 21\n      }, this), activeTab === 'profileSettings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Postavke profila\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formFirstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Ime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              value: patientProfile.firstName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formLastName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Prezime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              value: patientProfile.lastName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1132,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: patientProfile.email || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1133,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formPhone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Telefon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"phone\",\n              value: patientProfile.phone || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1142,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAddress\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Adresa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"adresa\",\n              value: patientProfile.adresa || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1151,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1149,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDatumRodjenja\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Datum ro\\u0111enja\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1159,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"datumRodjenja\",\n              value: patientProfile.datumRodjenja || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1160,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSaveProfile,\n            children: \"Sa\\u010Duvaj profil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1167,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAppointmentModal,\n      onHide: closeAppointmentModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: editingAppointment ? 'Uredi pregled' : 'Zakaži novi pregled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1178,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDoctor\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odaberite doktora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"doctorId\",\n              value: newAppointment.doctorId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite doktora --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1191,\n                columnNumber: 33\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.id,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1193,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1184,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1182,\n            columnNumber: 25\n          }, this), newAppointment.doctorId && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAvailableTerm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odaberite slobodan termin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1200,\n              columnNumber: 33\n            }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1202,\n              columnNumber: 37\n            }, this) : allDoctorAvailableTerms.length > 0 ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"terminId\",\n              value: newAppointment.terminId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite datum i vrijeme --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1211,\n                columnNumber: 41\n              }, this), allDoctorAvailableTerms.map(term => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term.terminID,\n                children: term.display\n              }, term.terminID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1213,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1204,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: \"Nema dostupnih termina za ovog doktora.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1217,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1199,\n            columnNumber: 29\n          }, this), newAppointment.terminId && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formAppointmentDateDisplay\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Odabrani datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1226,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: newAppointment.appointmentDate,\n                readOnly: true,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1227,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1225,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formAppointmentTimeDisplay\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Odabrano vrijeme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: newAppointment.appointmentTime ? newAppointment.appointmentTime.substring(0, 5) : '',\n                readOnly: true,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1236,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1234,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formReason\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Razlog za pregled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"reason\",\n              value: newAppointment.reason,\n              onChange: handleNewAppointmentChange,\n              placeholder: \"npr. Op\\u0161ti pregled, specifi\\u010Dni simptomi...\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1248,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1246,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeAppointmentModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleScheduleAppointment,\n          disabled: !newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason || loading,\n          children: editingAppointment ? 'Ažuriraj pregled' : 'Zakaži pregled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: !!selectedMessage,\n      onHide: closeMessageModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Poruka: \", selectedMessage === null || selectedMessage === void 0 ? void 0 : selectedMessage.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1277,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Od:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1283,\n              columnNumber: 32\n            }, this), \" \", selectedMessage.senderId === currentPatientUserId ? 'Ja' : ((_doctors$find3 = doctors.find(d => d.userId === selectedMessage.senderId)) === null || _doctors$find3 === void 0 ? void 0 : _doctors$find3.firstName) + ' ' + ((_doctors$find4 = doctors.find(d => d.userId === selectedMessage.senderId)) === null || _doctors$find4 === void 0 ? void 0 : _doctors$find4.lastName) || `Doktor (${selectedMessage.senderId})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1283,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1284,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedMessage.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1284,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1285,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1286,\n            columnNumber: 29\n          }, this), selectedMessage.replies && selectedMessage.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Odgovori:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1290,\n              columnNumber: 37\n            }, this), selectedMessage.replies.map((reply, index) => {\n              var _doctors$find5, _doctors$find6;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border p-2 mb-2 rounded bg-light\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [reply.senderId === currentPatientUserId ? 'Ja' : ((_doctors$find5 = doctors.find(d => d.userId === reply.senderId)) === null || _doctors$find5 === void 0 ? void 0 : _doctors$find5.firstName) + ' ' + ((_doctors$find6 = doctors.find(d => d.userId === reply.senderId)) === null || _doctors$find6 === void 0 ? void 0 : _doctors$find6.lastName) || `Doktor (${reply.senderId})`, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1294,\n                  columnNumber: 45\n                }, this), \" \", reply.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1295,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(reply.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1296,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1292,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1289,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odgovor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1303,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: replyMessage.content,\n              onChange: handleReplyMessageChange,\n              placeholder: \"Upi\\u0161ite va\\u0161 odgovor ovdje...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1304,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1302,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mt-2\",\n            onClick: () => handleReply(selectedMessage.id),\n            children: \"Po\\u0161alji odgovor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1312,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeMessageModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1317,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1316,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1275,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showRatingModal,\n      onHide: closeRatingModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Ocijeni doktora: \", selectedDoctorForRating === null || selectedDoctorForRating === void 0 ? void 0 : selectedDoctorForRating.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1326,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formRating\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Ocjena (1-5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1331,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"ocjena\",\n              value: ratingData.ocjena,\n              onChange: handleRatingChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"1 - Vrlo lo\\u0161e\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1339,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"2 - Lo\\u0161e\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1340,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"3 - Prosje\\u010Dno\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1341,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"4 - Dobro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1342,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5 - Izvrsno\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1343,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1332,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1330,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formRatingComment\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Komentar (opcionalno)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1347,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"komentar\",\n              value: ratingData.komentar,\n              onChange: handleRatingChange,\n              placeholder: \"Napi\\u0161ite komentar o svom iskustvu...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1348,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1346,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1329,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1328,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeRatingModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmitRating,\n          children: \"Po\\u0161alji ocjenu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1363,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1359,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1324,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 736,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDashboard, \"seutKl0vzSs5A3SRIbIobDgcGnk=\", false, function () {\n  return [useAuth];\n});\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["axios","useAuth","React","useState","useEffect","useMemo","Modal","Button","Form","Alert","Spinner","Tab","Tabs","jsxDEV","_jsxDEV","Fragment","_Fragment","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","OBAVIJESTI_DOKUMENTI_API_PREFIX","AUTH_API_PREFIX","PatientDashboard","_s","_doctors$find3","_doctors$find4","token","user","console","log","authHeaders","headers","activeTab","setActiveTab","appointments","setAppointments","medicalHistory","setMedicalHistory","patientProfile","setPatientProfile","doctors","setDoctors","allDoctorAvailableTerms","setAllDoctorAvailableTerms","documents","setDocuments","bills","setBills","messages","setMessages","newMessage","setNewMessage","recipientId","subject","content","replyMessage","setReplyMessage","messageId","selectedMessage","setSelectedMessage","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","showAppointmentModal","setShowAppointmentModal","newAppointment","setNewAppointment","doctorId","appointmentDate","appointmentTime","terminId","reason","editingAppointment","setEditingAppointment","loading","setLoading","showRatingModal","setShowRatingModal","selectedDoctorForRating","setSelectedDoctorForRating","ratingData","setRatingData","ocjena","komentar","fetchPatientAppointments","pacijentId","warn","response","get","transformedAppointments","data","map","app","id","pregledID","doktorID","pacijentID","datumPregleda","vrijemePregleda","komentarPacijenta","status","terminID","doktorIme","error","_error$response","message","fetchMedicalHistory","transformedHistory","record","zapisID","patientId","doctorName","date","datumZapisivanja","diagnosis","dijagnoza","treatment","lijecenje","notes","napomene","_error$response2","fetchPatientProfile","firstName","ime","lastName","prezime","email","phone","telefon","datumRodjenja","adresa","userId","_error$response3","fetchDoctors","transformedDoctors","doc","specialty","Array","isArray","specijalizacije","join","_error$response4","fetchDoctorAllAvailableTerms","doktorId","termsData","available","term","datum","vrijeme","display","substring","sort","a","b","dateTimeA","dateTimeB","Date","_error$response5","fetchDocuments","transformedDocuments","dokumentID","fileName","nazivDokumenta","documentType","tipDokumenta","uploadDate","datumKreiranja","pristup","_error$response6","fetchBills","transformedBills","bill","racunID","billDate","datumIzdavanja","amount","iznos","dueDate","datumDospijeca","opis","_error$response7","fetchMessages","transformedMessages","msg","porukaID","senderId","senderType","senderIme","receiverId","receiverType","receiverIme","timestamp","replies","_error$response8","loadAllData","Promise","all","openAppointmentModal","appointment","doctorIdFromSearch","closeAppointmentModal","handleNewAppointmentChange","e","name","value","target","updatedAppointment","selectedTerm","find","parseInt","handleScheduleAppointment","appointmentData","put","post","_error$response9","_error$response0","_error$response0$data","errorMessage","handleCancelAppointment","appointmentId","window","confirm","existingApp","cancelPayload","_error$response1","_error$response10","_error$response10$dat","handleProfileChange","prev","handleSaveProfile","patientDetailsPayload","authProfilePayload","fullName","_error$response11","_error$response12","_error$response12$dat","handleDocumentUpload","file","files","formData","FormData","append","_error$response13","_error$response14","_error$response14$dat","handleNewMessageChange","handleReplyMessageChange","handleSendMessage","messageData","_error$response15","_error$response16","_error$response16$dat","handleReply","toISOString","_error$response17","_error$response18","_error$response18$dat","handleViewMessage","closeMessageModal","openRatingModal","closeRatingModal","handleRatingChange","handleSubmitRating","ratingPayload","parseFloat","_error$response19","_error$response20","_error$response20$dat","className","style","minHeight","children","animation","role","_jsxFileName","lineNumber","columnNumber","currentPatientUserId","width","onClick","variant","onClose","dismissible","zIndex","filter","length","size","index","Group","controlId","Label","Control","type","onChange","toLocaleDateString","href","toFixed","_doctors$find","_doctors$find2","d","toLocaleString","as","required","doctor","rows","placeholder","show","onHide","Header","closeButton","Title","Body","readOnly","disabled","Footer","reply","_doctors$find5","_doctors$find6","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/PatientDashboard.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\r\n\r\nfunction PatientDashboard() {\r\n    // AŽURIRANO: user objekat sada sadrži authId (Long), id (email), pacijentId (Integer)\r\n    // Važno: user.userId je Auth ID, user.pacijentId je ID iz korisnici-doktori servisa.\r\n    // Za poruke ćemo koristiti user.userId.\r\n    const { token, user } = useAuth();\r\n    console.log(\"Trenutni korisnički objekt iz useAuth (PatientDashboard):\", user);\r\n\r\n    const authHeaders = useMemo(() => ({\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }), [token]);\r\n\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [medicalHistory, setMedicalHistory] = useState([]);\r\n    const [patientProfile, setPatientProfile] = useState({});\r\n    const [doctors, setDoctors] = useState([]); // Ova lista doktora treba da sadrži i userId\r\n    const [allDoctorAvailableTerms, setAllDoctorAvailableTerms] = useState([]);\r\n    const [documents, setDocuments] = useState([]);\r\n    const [bills, setBills] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState({ recipientId: '', subject: '', content: '' }); // recipientId će sada biti Long userId\r\n    const [replyMessage, setReplyMessage] = useState({ messageId: '', content: '' });\r\n    const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('success');\r\n\r\n    const [showAppointmentModal, setShowAppointmentModal] = useState(false);\r\n    const [newAppointment, setNewAppointment] = useState({\r\n        doctorId: '',\r\n        appointmentDate: '',\r\n        appointmentTime: '',\r\n        terminId: '',\r\n        reason: ''\r\n    });\r\n    const [editingAppointment, setEditingAppointment] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Stanje za modal za ocjenjivanje\r\n    const [showRatingModal, setShowRatingModal] = useState(false);\r\n    const [selectedDoctorForRating, setSelectedDoctorForRating] = useState(null);\r\n    const [ratingData, setRatingData] = useState({ ocjena: 5, komentar: '' }); // Default ocjena 5\r\n\r\n    // --- API Calls ---\r\n\r\n    const fetchPatientAppointments = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje pregleda.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/zakazani/${user.pacijentId}`, authHeaders);\r\n            const transformedAppointments = response.data.map(app => ({\r\n                id: app.pregledID,\r\n                doktorID: app.doktorID,\r\n                pacijentID: app.pacijentID,\r\n                datumPregleda: app.datumPregleda,\r\n                vrijemePregleda: app.vrijemePregleda,\r\n                komentarPacijenta: app.komentarPacijenta,\r\n                status: app.status,\r\n                terminID: app.terminID,\r\n                doktorIme: app.doktorIme\r\n            }));\r\n            setAppointments(transformedAppointments);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja pacijentovih pregleda:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje zakazanih pregleda.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMedicalHistory = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje medicinske historije.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedHistory = response.data.map(record => ({\r\n                id: record.zapisID,\r\n                patientId: record.pacijentID,\r\n                doctorId: record.doktorID,\r\n                doctorName: record.doktorIme,\r\n                date: record.datumZapisivanja,\r\n                diagnosis: record.dijagnoza,\r\n                treatment: record.lijecenje,\r\n                notes: record.napomene\r\n            }));\r\n            setMedicalHistory(transformedHistory);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja medicinske historije:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje medicinske historije.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchPatientProfile = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje pacijentovog profila.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, authHeaders);\r\n            setPatientProfile({\r\n                id: response.data.pacijentID,\r\n                firstName: response.data.ime,\r\n                lastName: response.data.prezime,\r\n                email: response.data.email,\r\n                phone: response.data.telefon,\r\n                datumRodjenja: response.data.datumRodjenja,\r\n                adresa: response.data.adresa,\r\n                userId: response.data.userId // Dodaj userId ovdje\r\n            });\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja pacijentovog profila:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje podataka profila.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctors = async () => {\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n            const transformedDoctors = response.data.map(doc => ({\r\n                id: doc.doktorID, // Doktor ID (Integer)\r\n                userId: doc.userId, // User ID iz Auth servisa (Long)\r\n                firstName: doc.ime,\r\n                lastName: doc.prezime,\r\n                specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\r\n                email: doc.email,\r\n                phone: doc.telefon,\r\n                ocjena: doc.ocjena // Uvjeri se da je ocjena mapirana sa backend-a\r\n            }));\r\n            setDoctors(transformedDoctors);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja doktora:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje liste doktora.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctorAllAvailableTerms = async (doktorId) => {\r\n        if (!doktorId) {\r\n            setAllDoctorAvailableTerms([]);\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/slobodni/${doktorId}`, authHeaders);\r\n            const termsData = Array.isArray(response.data) ? response.data : [];\r\n            const available = termsData\r\n                .map(term => ({\r\n                    terminID: term.terminID,\r\n                    datum: term.datum,\r\n                    vrijeme: term.vrijeme,\r\n                    display: `${term.datum} ${term.vrijeme.substring(0, 5)}`\r\n                }))\r\n                .sort((a, b) => {\r\n                    const dateTimeA = `${a.datum}T${a.vrijeme}`;\r\n                    const dateTimeB = `${b.datum}T${b.vrijeme}`;\r\n                    return new Date(dateTimeA) - new Date(dateTimeB);\r\n                });\r\n            setAllDoctorAvailableTerms(available);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja dostupnosti doktora:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje dostupnosti doktora.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            setAllDoctorAvailableTerms([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchDocuments = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje dokumenata.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedDocuments = response.data.map(doc => ({\r\n                id: doc.dokumentID,\r\n                fileName: doc.nazivDokumenta,\r\n                documentType: doc.tipDokumenta,\r\n                uploadDate: doc.datumKreiranja,\r\n                pristup: doc.pristup\r\n            }));\r\n            setDocuments(transformedDocuments);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja dokumenata:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješan prijenos dokumenta.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchBills = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje računa.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedBills = response.data.map(bill => ({\r\n                id: bill.racunID,\r\n                billDate: bill.datumIzdavanja,\r\n                amount: bill.iznos,\r\n                status: bill.status,\r\n                dueDate: bill.datumDospijeca,\r\n                opis: bill.opis,\r\n                doktorIme: bill.doktorIme\r\n            }));\r\n            setBills(transformedBills);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja računa:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje informacija o naplati.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async () => {\r\n        if (!user || !user.userId) { // Koristi user.userId za dohvaćanje poruka\r\n            console.warn(\"User ID nije dostupan za dohvaćanje poruka.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Ažuriran endpoint za dohvaćanje poruka koristeći user.userId i userType PACIJENT\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=PACIJENT`, authHeaders);\r\n            const transformedMessages = response.data.map(msg => ({\r\n                id: msg.porukaID,\r\n                senderId: msg.senderId, // Ovo je sada Auth userId\r\n                senderType: msg.senderType,\r\n                senderIme: msg.senderIme,\r\n                receiverId: msg.receiverId, // Ovo je sada Auth userId\r\n                receiverType: msg.receiverType,\r\n                receiverIme: msg.receiverIme,\r\n                subject: msg.subject,\r\n                content: msg.content,\r\n                timestamp: msg.timestamp,\r\n                replies: msg.replies || [] // Ensure replies is always an array\r\n            }));\r\n            setMessages(transformedMessages);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja poruka:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje poruka.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- useEffect Hooks ---\r\n    useEffect(() => {\r\n        const loadAllData = async () => {\r\n            if (token && user) { // Promijenjen uslov, sada se oslanja na user objekat i token\r\n                setLoading(true);\r\n                await Promise.all([\r\n                    fetchPatientAppointments(),\r\n                    fetchMedicalHistory(),\r\n                    fetchPatientProfile(),\r\n                    fetchDoctors(),\r\n                    fetchDocuments(),\r\n                    fetchBills(),\r\n                    fetchMessages() // Sada će koristiti user.userId\r\n                ]);\r\n                setLoading(false);\r\n            } else if (!token || (user && !user.pacijentId && !user.doktorId)) { // Ako nije ni pacijent ni doktor (npr. admin)\r\n                setLoading(false);\r\n                if (!token) {\r\n                    console.warn(\"Token nije dostupan. Korisnik nije ulogovan.\");\r\n                } else {\r\n                    console.warn(\"Korisnički objekt je dostupan, ali pacijentId ni doktorId nisu. Moguće da korisnik nije ni pacijent ni doktor.\");\r\n                }\r\n            }\r\n        };\r\n        loadAllData();\r\n    }, [token, user]);\r\n\r\n\r\n    // --- Appointment Scheduling/Cancellation ---\r\n\r\n    const openAppointmentModal = (appointment = null, doctorIdFromSearch = null) => {\r\n        if (appointment) {\r\n            setEditingAppointment(appointment);\r\n            setNewAppointment({\r\n                doctorId: appointment.doktorID,\r\n                appointmentDate: appointment.datumPregleda,\r\n                appointmentTime: appointment.vrijemePregleda,\r\n                terminId: appointment.terminID,\r\n                reason: appointment.komentarPacijenta\r\n            });\r\n            fetchDoctorAllAvailableTerms(appointment.doktorID);\r\n        } else {\r\n            setEditingAppointment(null);\r\n            setNewAppointment({\r\n                doctorId: doctorIdFromSearch || '',\r\n                appointmentDate: '',\r\n                appointmentTime: '',\r\n                terminId: '',\r\n                reason: ''\r\n            });\r\n            setAllDoctorAvailableTerms([]);\r\n            // Ako je doctorIdFromSearch prisutan, odmah dohvati termine\r\n            if (doctorIdFromSearch) {\r\n                fetchDoctorAllAvailableTerms(doctorIdFromSearch);\r\n            }\r\n        }\r\n        setShowAppointmentModal(true);\r\n    };\r\n\r\n    const closeAppointmentModal = () => {\r\n        setShowAppointmentModal(false);\r\n        setEditingAppointment(null);\r\n        setNewAppointment({\r\n            doctorId: '',\r\n            appointmentDate: '',\r\n            appointmentTime: '',\r\n            terminId: '',\r\n            reason: ''\r\n        });\r\n        setAllDoctorAvailableTerms([]);\r\n    };\r\n\r\n    const handleNewAppointmentChange = async (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        let updatedAppointment = { ...newAppointment, [name]: value };\r\n\r\n        if (name === 'doctorId') {\r\n            updatedAppointment.appointmentDate = '';\r\n            updatedAppointment.appointmentTime = '';\r\n            updatedAppointment.terminId = '';\r\n            if (value) {\r\n                await fetchDoctorAllAvailableTerms(value);\r\n            } else {\r\n                setAllDoctorAvailableTerms([]);\r\n            }\r\n        } else if (name === 'terminId') {\r\n            const selectedTerm = allDoctorAvailableTerms.find(term => term.terminID === parseInt(value));\r\n            if (selectedTerm) {\r\n                updatedAppointment.terminId = selectedTerm.terminID;\r\n                updatedAppointment.appointmentDate = selectedTerm.datum;\r\n                updatedAppointment.appointmentTime = selectedTerm.vrijeme;\r\n            } else {\r\n                updatedAppointment.terminId = '';\r\n                updatedAppointment.appointmentDate = '';\r\n                updatedAppointment.appointmentTime = '';\r\n            }\r\n        }\r\n        setNewAppointment(updatedAppointment);\r\n    };\r\n\r\n\r\n    const handleScheduleAppointment = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće zakazati pregled.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        if (!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason) {\r\n            setAlertMessage('Molimo odaberite doktora, slobodan termin i navedite razlog.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const appointmentData = {\r\n                pacijentID: user.pacijentId,\r\n                doktorID: parseInt(newAppointment.doctorId),\r\n                terminID: newAppointment.terminId,\r\n                datumPregleda: newAppointment.appointmentDate,\r\n                vrijemePregleda: newAppointment.appointmentTime,\r\n                komentarPacijenta: newAppointment.reason,\r\n                status: editingAppointment ? editingAppointment.status : 'zakazan',\r\n            };\r\n\r\n            let response;\r\n            if (editingAppointment) {\r\n                response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${editingAppointment.id}`, appointmentData, authHeaders);\r\n                setAlertMessage('Pregled uspješno ažuriran!');\r\n            } else {\r\n                response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\r\n                setAlertMessage('Pregled uspješno zakazan!');\r\n            }\r\n\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchPatientAppointments();\r\n            closeAppointmentModal();\r\n        } catch (error) {\r\n            console.error('Greška prilikom zakazivanja/ažuriranja pregleda:', error.response?.data || error.message);\r\n            let errorMessage = 'Neuspješno zakazivanje/ažuriranje pregleda. Molimo pokušajte ponovo.';\r\n            if (error.response?.data?.message) {\r\n                errorMessage = error.response.data.message;\r\n            } else if (error.message) {\r\n                errorMessage = error.message;\r\n            }\r\n            setAlertMessage(errorMessage);\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleCancelAppointment = async (appointmentId) => {\r\n        if (window.confirm('Jeste li sigurni da želite otkazati ovaj pregled?')) {\r\n            if (!user || !user.pacijentId) {\r\n                setAlertMessage('ID pacijenta nije dostupan za otkazivanje. Molimo pokušajte ponovo.');\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n                return;\r\n            }\r\n            try {\r\n                const existingApp = appointments.find(app => app.id === appointmentId);\r\n                if (!existingApp) {\r\n                    setAlertMessage(\"Pregled nije pronađen za otkazivanje.\");\r\n                    setAlertType('danger');\r\n                    setShowAlert(true);\r\n                    return;\r\n                }\r\n\r\n                const cancelPayload = {\r\n                    pregledID: existingApp.id,\r\n                    pacijentID: user.pacijentId,\r\n                    doktorID: existingApp.doktorID,\r\n                    terminID: existingApp.terminID,\r\n                    datumPregleda: existingApp.datumPregleda,\r\n                    vrijemePregleda: existingApp.vrijemePregleda,\r\n                    komentarPacijenta: existingApp.komentarPacijenta,\r\n                    status: 'otkazan'\r\n                };\r\n\r\n                await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}`, cancelPayload, authHeaders);\r\n                setAlertMessage('Pregled uspješno otkazan!');\r\n                setAlertType('success');\r\n                setShowAlert(true);\r\n                fetchPatientAppointments();\r\n            } catch (error) {\r\n                console.error('Greška prilikom otkazivanja pregleda:', error.response?.data || error.message);\r\n                setAlertMessage('Neuspješno otkazivanje pregleda. Molimo pokušajte ponovo. ' + (error.response?.data?.message || error.message));\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    // --- Profile Update ---\r\n    const handleProfileChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPatientProfile(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSaveProfile = async () => {\r\n        if (!user || !user.pacijentId || !user.userId) {\r\n            setAlertMessage('ID pacijenta ili Korisnički ID nije dostupan. Nije moguće sačuvati profil.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const patientDetailsPayload = {\r\n                pacijentID: user.pacijentId,\r\n                ime: patientProfile.firstName,\r\n                prezime: patientProfile.lastName,\r\n                email: patientProfile.email,\r\n                telefon: patientProfile.phone,\r\n                datumRodjenja: patientProfile.datumRodjenja,\r\n                adresa: patientProfile.adresa,\r\n                userId: user.userId\r\n            };\r\n            await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, patientDetailsPayload, authHeaders);\r\n\r\n            const authProfilePayload = {\r\n                email: patientProfile.email,\r\n                fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\r\n                telefon: patientProfile.phone,\r\n            };\r\n            await axios.put(`${AUTH_API_PREFIX}/users/${user.userId}`, authProfilePayload, authHeaders);\r\n\r\n\r\n            setAlertMessage('Profil uspješno ažuriran!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchPatientProfile();\r\n        } catch (error) {\r\n            console.error('Greška prilikom ažuriranja profila:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno ažuriranje profila. Molimo pokušajte ponovo. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- Document Upload ---\r\n    const handleDocumentUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('pacijentID', user.pacijentId);\r\n        formData.append('tipDokumenta', 'Patient Upload');\r\n\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            setAlertMessage('Dokument uspješno prenesen!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchDocuments();\r\n        }\r\n        catch (error) {\r\n            console.error('Greška prilikom prijenosa dokumenta:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješan prijenos dokumenta. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    // --- Secure Messaging ---\r\n    const handleNewMessageChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewMessage(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleReplyMessageChange = (e) => {\r\n        setReplyMessage(prev => ({ ...prev, content: e.target.value }));\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!user || !user.userId) { // Koristi user.userId za slanje poruke\r\n            setAlertMessage('Vaš korisnički ID nije dostupan. Nije moguće poslati poruku.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\r\n            setAlertMessage('Molimo popunite sva polja za poruku.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const messageData = {\r\n                senderId: user.userId, // SENDER je sada user.userId (Long)\r\n                senderType: 'PACIJENT',\r\n                receiverId: parseInt(newMessage.recipientId, 10), // RECIPIENT je user.userId doktora (Long)\r\n                receiverType: 'DOKTOR',\r\n                subject: newMessage.subject,\r\n                content: newMessage.content\r\n            };\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\r\n            setAlertMessage('Poruka uspješno poslana!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setNewMessage({ recipientId: '', subject: '', content: '' });\r\n            fetchMessages(); // Osvježi listu poruka\r\n        } catch (error) {\r\n            console.error('Greška prilikom slanja poruke:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno slanje poruke. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleReply = async (messageId) => {\r\n        if (!user || !user.userId) { // Koristi user.userId za slanje odgovora\r\n            setAlertMessage('Vaš korisnički ID nije dostupan. Nije moguće odgovoriti.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!replyMessage.content) {\r\n            setAlertMessage('Sadržaj odgovora ne može biti prazan.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\r\n                senderId: user.userId, // SENDER je sada user.userId (Long)\r\n                senderType: 'PACIJENT',\r\n                content: replyMessage.content\r\n            }, authHeaders);\r\n            setAlertMessage('Odgovor uspješno poslan!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setReplyMessage({ messageId: '', content: '' });\r\n            fetchMessages(); // Osvježi listu poruka\r\n            // Ažuriraj lokalno stanje za trenutni prikaz odgovora\r\n            setSelectedMessage(prev => {\r\n                if (!prev) return null;\r\n                return {\r\n                    ...prev,\r\n                    replies: [...(prev.replies || []), {\r\n                        senderId: user.userId, // Važno: Koristite user.userId ovdje\r\n                        senderIme: user.fullName, // Koristi fullName iz useAuth\r\n                        senderType: 'PACIJENT',\r\n                        content: replyMessage.content,\r\n                        timestamp: new Date().toISOString()\r\n                    }]\r\n                };\r\n            });\r\n        } catch (error) {\r\n            console.error('Greška prilikom slanja odgovora:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno slanje odgovora. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleViewMessage = (message) => {\r\n        setSelectedMessage(message);\r\n    };\r\n\r\n    const closeMessageModal = () => {\r\n        setSelectedMessage(null);\r\n        setReplyMessage({ messageId: '', content: '' });\r\n    };\r\n\r\n    // --- Funkcije za ocjenjivanje ---\r\n    const openRatingModal = (doktorID, doktorIme) => {\r\n        setSelectedDoctorForRating({ id: doktorID, name: doktorIme });\r\n        setRatingData({ ocjena: 5, komentar: '' });\r\n        setShowRatingModal(true);\r\n    };\r\n\r\n    const closeRatingModal = () => {\r\n        setShowRatingModal(false);\r\n        setSelectedDoctorForRating(null);\r\n        setRatingData({ ocjena: 5, komentar: '' });\r\n    };\r\n\r\n    const handleRatingChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setRatingData(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmitRating = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće poslati ocjenu.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!selectedDoctorForRating || ratingData.ocjena === null) {\r\n            setAlertMessage('Molimo odaberite ocjenu.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const ratingPayload = {\r\n                pacijentID: user.pacijentId,\r\n                doktorID: selectedDoctorForRating.id,\r\n                ocjena: parseFloat(ratingData.ocjena),\r\n                komentar: ratingData.komentar\r\n            };\r\n\r\n            await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/ocjene`, ratingPayload, authHeaders);\r\n\r\n            setAlertMessage(`Ocjena uspješno poslana za doktora ${selectedDoctorForRating.name}!`);\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            closeRatingModal();\r\n            fetchPatientAppointments();\r\n            fetchDoctors();\r\n        } catch (error) {\r\n            console.error('Greška prilikom slanja ocjene:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno slanje ocjene. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Učitavanje...</span>\r\n                </Spinner>\r\n                <p className=\"ms-2\">Učitavanje podataka kontrolne ploče...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const currentPatientUserId = user.userId; // NOVO: Dohvati user.userId\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ minHeight: '100vh' }}>\r\n            {/* Sidebar */}\r\n            <div className=\"bg-dark text-white p-3\" style={{ width: '250px' }}>\r\n                <h4 className=\"mb-4\">Kontrolna ploča pacijenta</h4>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('overview')}\r\n                        >\r\n                            Pregled\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('myAppointments')}\r\n                        >\r\n                            Moji pregledi\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('medicalHistory')}\r\n                        >\r\n                            Medicinska historija\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('documents')}\r\n                        >\r\n                            Moji dokumenti\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('billing')}\r\n                        >\r\n                            Naplata i plaćanja\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('messages')}\r\n                        >\r\n                            Poruke\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('doctorSearch')}\r\n                        >\r\n                            Pronađi doktora\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('profileSettings')}\r\n                        >\r\n                            Postavke profila\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            {/* Main Content Area */}\r\n            <div className=\"flex-grow-1 p-4 bg-light\">\r\n                {showAlert && (\r\n                    <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n                        {alertMessage}\r\n                    </Alert>\r\n                )}\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <h2 className=\"mb-0\">Kontrolna ploča pacijenta</h2>\r\n                </div>\r\n\r\n                {/* Content based on activeTab */}\r\n                {activeTab === 'overview' && (\r\n                    <div>\r\n                        <h3>Dobrodošli, {patientProfile.firstName || (user ? user.fullName : 'Pacijent')}!</h3>\r\n                        <p>Ovo je vaš pregled pacijenta. Ovdje možete brzo vidjeti svoje nadolazeće preglede i nedavne aktivnosti.</p>\r\n                        <div className=\"row mt-4\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        Nadolazeći pregledi\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        {appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').length > 0 ? (\r\n                                            appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').map(app => (\r\n                                                <li key={app.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                    <div>\r\n                                                        <strong>{app.datumPregleda} u {app.vrijemePregleda}</strong>\r\n                                                        <br />\r\n                                                        <small>Razlog: {app.komentarPacijenta}</small>\r\n                                                        <br />\r\n                                                        <small>Doktor: {app.doktorIme}</small>\r\n                                                    </div>\r\n                                                    <span className={`badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`}>{app.status}</span>\r\n                                                </li>\r\n                                            ))\r\n                                        ) : (\r\n                                            <li className=\"list-group-item\">Nema nadolazećih pregleda.</li>\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'myAppointments' && (\r\n                    <div>\r\n                        <h3>Moji pregledi</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => openAppointmentModal()}>\r\n                            Zakaži novi pregled\r\n                        </Button>\r\n                        {appointments.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Doktor</th>\r\n                                        <th>Datum</th>\r\n                                        <th>Vrijeme</th>\r\n                                        <th>Razlog</th>\r\n                                        <th>Status</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {appointments.map(app => (\r\n                                        <tr key={app.id}>\r\n                                            <td>{app.doktorIme}</td>\r\n                                            <td>{app.datumPregleda}</td>\r\n                                            <td>{app.vrijemePregleda}</td>\r\n                                            <td>{app.komentarPacijenta}</td>\r\n                                            <td><span className={`badge bg-${app.status === 'obavljen' ? 'success' : app.status === 'zakazan' ? 'warning' : 'danger'}`}>{app.status}</span></td>\r\n                                            <td>\r\n                                                {app.status === 'zakazan' || app.status === 'potvrđen' ? (\r\n                                                    <Button variant=\"danger\" size=\"sm\" onClick={() => handleCancelAppointment(app.id)}>Otkaži</Button>\r\n                                                ) : app.status === 'obavljen' ? (\r\n                                                    <Button variant=\"success\" size=\"sm\" onClick={() => openRatingModal(app.doktorID, app.doktorIme)}>Ocijeni</Button>\r\n                                                ) : (\r\n                                                    <small>Nema dostupnih akcija</small>\r\n                                                )}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađene historije pregleda. Zakažite svoj prvi pregled!</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'medicalHistory' && (\r\n                    <div>\r\n                        <h3>Moja medicinska historija</h3>\r\n                        {medicalHistory.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {medicalHistory.map((record, index) => (\r\n                                    <li key={record.id} className=\"list-group-item\">\r\n                                        <strong>Datum:</strong> {record.date} <br />\r\n                                        <strong>Dijagnoza:</strong> {record.diagnosis} <br />\r\n                                        <strong>Liječenje:</strong> {record.treatment} <br />\r\n                                        <strong>Doktor:</strong> {record.doctorName} <br />\r\n                                        <strong>Napomene:</strong> {record.notes || 'N/A'}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Nema pronađenih zapisa medicinske historije.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'documents' && (\r\n                    <div>\r\n                        <h3>Moji dokumenti</h3>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Prenesi novi dokument</Form.Label>\r\n                            <Form.Control type=\"file\" onChange={handleDocumentUpload} />\r\n                        </Form.Group>\r\n\r\n                        {documents.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Naziv dokumenta</th>\r\n                                        <th>Tip</th>\r\n                                        <th>Datum prijenosa</th>\r\n                                        <th>Pristup</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {documents.map(doc => (\r\n                                        <tr key={doc.id}>\r\n                                            <td>{doc.fileName}</td>\r\n                                            <td>{doc.documentType}</td>\r\n                                            <td>{new Date(doc.uploadDate).toLocaleDateString()}</td>\r\n                                            <td><span className={`badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`}>{doc.pristup}</span></td>\r\n                                            <td>\r\n                                                <Button variant=\"success\" size=\"sm\" href={`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${doc.id}`} target=\"_blank\">Preuzmi</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih dokumenata.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'billing' && (\r\n                    <div>\r\n                        <h3>Naplata i plaćanja</h3>\r\n                        {bills.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID računa</th>\r\n                                        <th>Datum izdavanja</th>\r\n                                        <th>Iznos</th>\r\n                                        <th>Status</th>\r\n                                        <th>Opis</th>\r\n                                        <th>Izdao</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {bills.map(bill => (\r\n                                        <tr key={bill.id}>\r\n                                            <td>{bill.id}</td>\r\n                                            <td>{new Date(bill.billDate).toLocaleDateString()}</td>\r\n                                            <td>{bill.amount ? bill.amount.toFixed(2) : 'N/A'} KM</td>\r\n                                            <td><span className={`badge bg-${bill.status === 'PLACEN' ? 'success' : 'warning'}`}>{bill.status}</span></td>\r\n                                            <td>{bill.opis}</td>\r\n                                            <td>{bill.doktorIme}</td>\r\n                                            <td>\r\n                                                {bill.status === 'NEPLACEN' && (\r\n                                                    <Button variant=\"success\" size=\"sm\" className=\"me-2\">Plati sada</Button>\r\n                                                )}\r\n                                                <Button variant=\"info\" size=\"sm\">Pogledaj detalje</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih zapisa o naplati.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'messages' && (\r\n                    <div>\r\n                        <h3>Moje poruke</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => setNewMessage({ recipientId: '', subject: '', content: '' })}>Sastavi novu poruku</Button>\r\n\r\n                        {messages.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {messages.map(msg => (\r\n                                    <li key={msg.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            {/* Prikazuje ime pošiljatelja poruke (Auth userId), provjerava je li trenutni korisnik pacijent ili doktor */}\r\n                                            <strong>Od: {msg.senderId === currentPatientUserId ? 'Ja' : (doctors.find(d => d.userId === msg.senderId)?.firstName + ' ' + doctors.find(d => d.userId === msg.senderId)?.lastName || `Doktor (${msg.senderId})`)}</strong> <br />\r\n                                            <strong>Naslov:</strong> {msg.subject} <br />\r\n                                            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                        <Button variant=\"info\" size=\"sm\" onClick={() => handleViewMessage(msg)}>Pogledaj poruku</Button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Nema pronađenih poruka.</p>\r\n                        )}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <h4>Sastavi novu poruku</h4>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Primalac (Doktor)</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"recipientId\"\r\n                                    value={newMessage.recipientId}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Odaberite doktora --</option>\r\n                                    {doctors.map(doctor => (\r\n                                        <option key={doctor.userId} value={doctor.userId}>{doctor.firstName} {doctor.lastName}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Naslov</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    value={newMessage.subject}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Sadržaj</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"content\"\r\n                                    value={newMessage.content}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSendMessage}>Pošalji poruku</Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'doctorSearch' && (\r\n                    <div>\r\n                        <h3>Pronađi doktora</h3>\r\n                        <p>Pretražite doktore po imenu ili specijalnosti kako biste pronašli pravu njegu za vas.</p>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control type=\"text\" placeholder=\"Pretraži po imenu ili specijalnosti...\" />\r\n                        </Form.Group>\r\n                        {doctors.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Ime</th>\r\n                                        <th>Specijalnost</th>\r\n                                        <th>Kontakt</th>\r\n                                        <th>Ocjena</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {doctors.map(doctor => (\r\n                                        <tr key={doctor.id}>\r\n                                            <td>{doctor.firstName} {doctor.lastName}</td>\r\n                                            <td>{doctor.specialty || 'Opšti praktičar'}</td>\r\n                                            <td>{doctor.email} | {doctor.phone}</td>\r\n                                            <td>{doctor.ocjena ? doctor.ocjena.toFixed(1) : 'N/A'}</td>\r\n                                            <td>\r\n                                                <Button variant=\"primary\" size=\"sm\" onClick={() => {\r\n                                                    openAppointmentModal(null, doctor.id);\r\n                                                }}>Zakaži pregled</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih doktora.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'profileSettings' && (\r\n                    <div>\r\n                        <h3>Postavke profila</h3>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                                <Form.Label>Ime</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={patientProfile.firstName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                                <Form.Label>Prezime</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    value={patientProfile.lastName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={patientProfile.email || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formPhone\">\r\n                                <Form.Label>Telefon</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"phone\"\r\n                                    value={patientProfile.phone || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAddress\">\r\n                                <Form.Label>Adresa</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"adresa\"\r\n                                    value={patientProfile.adresa || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formDatumRodjenja\">\r\n                                <Form.Label>Datum rođenja</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    name=\"datumRodjenja\"\r\n                                    value={patientProfile.datumRodjenja || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSaveProfile}>\r\n                                Sačuvaj profil\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Appointment Modal */}\r\n            <Modal show={showAppointmentModal} onHide={closeAppointmentModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{editingAppointment ? 'Uredi pregled' : 'Zakaži novi pregled'}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formDoctor\">\r\n                            <Form.Label>Odaberite doktora</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"doctorId\"\r\n                                value={newAppointment.doctorId}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">-- Odaberite doktora --</option>\r\n                                {doctors.map(doctor => (\r\n                                    <option key={doctor.id} value={doctor.id}>{doctor.firstName} {doctor.lastName}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        {newAppointment.doctorId && (\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAvailableTerm\">\r\n                                <Form.Label>Odaberite slobodan termin</Form.Label>\r\n                                {loading ? (\r\n                                    <Spinner animation=\"border\" size=\"sm\" />\r\n                                ) : allDoctorAvailableTerms.length > 0 ? (\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"terminId\"\r\n                                        value={newAppointment.terminId}\r\n                                        onChange={handleNewAppointmentChange}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">-- Odaberite datum i vrijeme --</option>\r\n                                        {allDoctorAvailableTerms.map(term => (\r\n                                            <option key={term.terminID} value={term.terminID}>{term.display}</option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                ) : (\r\n                                    <Alert variant=\"info\">Nema dostupnih termina za ovog doktora.</Alert>\r\n                                )}\r\n                            </Form.Group>\r\n                        )}\r\n\r\n                        {/* Polja za datum i vrijeme koja će se automatski popuniti nakon odabira termina (mogu biti samo za prikaz) */}\r\n                        {newAppointment.terminId && (\r\n                            <>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formAppointmentDateDisplay\">\r\n                                    <Form.Label>Odabrani datum</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={newAppointment.appointmentDate}\r\n                                        readOnly\r\n                                        disabled\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formAppointmentTimeDisplay\">\r\n                                    <Form.Label>Odabrano vrijeme</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={newAppointment.appointmentTime ? newAppointment.appointmentTime.substring(0, 5) : ''}\r\n                                        readOnly\r\n                                        disabled\r\n                                    />\r\n                                </Form.Group>\r\n                            </>\r\n                        )}\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formReason\">\r\n                            <Form.Label>Razlog za pregled</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"reason\"\r\n                                value={newAppointment.reason}\r\n                                onChange={handleNewAppointmentChange}\r\n                                placeholder=\"npr. Opšti pregled, specifični simptomi...\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeAppointmentModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={handleScheduleAppointment}\r\n                        disabled={!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason || loading}\r\n                    >\r\n                        {editingAppointment ? 'Ažuriraj pregled' : 'Zakaži pregled'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Message Detail Modal */}\r\n            <Modal show={!!selectedMessage} onHide={closeMessageModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Poruka: {selectedMessage?.subject}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedMessage && (\r\n                        <>\r\n                            {/* Prikaz pošiljatelja poruke (Auth userId) */}\r\n                            <p><strong>Od:</strong> {selectedMessage.senderId === currentPatientUserId ? 'Ja' : (doctors.find(d => d.userId === selectedMessage.senderId)?.firstName + ' ' + doctors.find(d => d.userId === selectedMessage.senderId)?.lastName || `Doktor (${selectedMessage.senderId})`)}</p>\r\n                            <p><strong>Datum:</strong> {new Date(selectedMessage.timestamp).toLocaleString()}</p>\r\n                            <hr />\r\n                            <p>{selectedMessage.content}</p>\r\n\r\n                            {selectedMessage.replies && selectedMessage.replies.length > 0 && (\r\n                                <div className=\"mt-4\">\r\n                                    <h5>Odgovori:</h5>\r\n                                    {selectedMessage.replies.map((reply, index) => (\r\n                                        <div key={index} className=\"border p-2 mb-2 rounded bg-light\">\r\n                                            {/* Prikaz pošiljatelja odgovora (Auth userId) */}\r\n                                            <strong>{reply.senderId === currentPatientUserId ? 'Ja' : (doctors.find(d => d.userId === reply.senderId)?.firstName + ' ' + doctors.find(d => d.userId === reply.senderId)?.lastName || `Doktor (${reply.senderId})`)}:</strong> {reply.content}\r\n                                            <br />\r\n                                            <small>{new Date(reply.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            <Form.Group className=\"mt-4\">\r\n                                <Form.Label>Odgovor</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={2}\r\n                                    value={replyMessage.content}\r\n                                    onChange={handleReplyMessageChange}\r\n                                    placeholder=\"Upišite vaš odgovor ovdje...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" className=\"mt-2\" onClick={() => handleReply(selectedMessage.id)}>Pošalji odgovor</Button>\r\n                        </>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeMessageModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Rating Modal */}\r\n            <Modal show={showRatingModal} onHide={closeRatingModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Ocijeni doktora: {selectedDoctorForRating?.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formRating\">\r\n                            <Form.Label>Ocjena (1-5)</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"ocjena\"\r\n                                value={ratingData.ocjena}\r\n                                onChange={handleRatingChange}\r\n                                required\r\n                            >\r\n                                <option value=\"1\">1 - Vrlo loše</option>\r\n                                <option value=\"2\">2 - Loše</option>\r\n                                <option value=\"3\">3 - Prosječno</option>\r\n                                <option value=\"4\">4 - Dobro</option>\r\n                                <option value=\"5\">5 - Izvrsno</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formRatingComment\">\r\n                            <Form.Label>Komentar (opcionalno)</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"komentar\"\r\n                                value={ratingData.komentar}\r\n                                onChange={handleRatingChange}\r\n                                placeholder=\"Napišite komentar o svom iskustvu...\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeRatingModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSubmitRating}>\r\n                        Pošalji ocjenu\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}