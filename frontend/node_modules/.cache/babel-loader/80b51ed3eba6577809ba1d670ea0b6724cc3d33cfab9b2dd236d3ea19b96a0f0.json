{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs } from 'react-bootstrap';\n// No need for react-datepicker if your original version doesn't use it.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\n\n// Defining API prefixes for each microservice - WE USE THESE PREFIXES!\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`; // Assumed path for authentication, if used directly\n\nfunction PatientDashboard() {\n  _s();\n  var _doctors$find3, _doctors$find4;\n  // UPDATED: user object now contains authId (Long), id (email), patientId (Integer)\n  const {\n    token,\n    user\n  } = useAuth();\n  console.log(\"Current user object from useAuth (PatientDashboard):\", user);\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [appointments, setAppointments] = useState([]);\n  const [medicalHistory, setMedicalHistory] = useState([]);\n  const [patientProfile, setPatientProfile] = useState({}); // Kept as useState to allow updates\n  const [doctors, setDoctors] = useState([]); // This doctor list should also contain userId\n  const [allDoctorAvailableTerms, setAllDoctorAvailableTerms] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [bills, setBills] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState({\n    recipientId: '',\n    subject: '',\n    content: ''\n  });\n  const [replyMessage, setReplyMessage] = useState({\n    messageId: '',\n    content: ''\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [newAppointment, setNewAppointment] = useState({\n    doctorId: '',\n    appointmentDate: '',\n    appointmentTime: '',\n    terminId: '',\n    reason: ''\n  });\n  const [editingAppointment, setEditingAppointment] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // State for rating modal\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  const [selectedDoctorForRating, setSelectedDoctorForRating] = useState(null);\n  const [ratingData, setRatingData] = useState({\n    ocjena: 5,\n    komentar: ''\n  }); // Default rating 5\n\n  // NEW: State for bill details modal\n  const [showBillDetailsModal, setShowBillDetailsModal] = useState(false);\n  const [selectedBillDetails, setSelectedBillDetails] = useState(null);\n\n  // --- API Calls ---\n\n  const fetchPatientAppointments = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching appointments.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/zakazani/${user.pacijentId}`, authHeaders);\n      const transformedAppointments = response.data.map(app => ({\n        id: app.pregledID,\n        doktorID: app.doktorID,\n        pacijentID: app.pacijentID,\n        datumPregleda: app.datumPregleda,\n        vrijemePregleda: app.vrijemePregleda,\n        komentarPacijenta: app.komentarPacijenta,\n        status: app.status,\n        terminID: app.terminID,\n        doktorIme: app.doktorIme\n      }));\n      setAppointments(transformedAppointments);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching patient appointments:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setAlertMessage('Failed to fetch scheduled appointments.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMedicalHistory = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching medical history.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedHistory = response.data.map(record => ({\n        id: record.zapisID,\n        patientId: record.pacijentID,\n        doctorId: record.doktorID,\n        doctorName: record.doktorIme,\n        date: record.datumZapisivanja,\n        diagnosis: record.dijagnoza,\n        treatment: record.lijecenje,\n        notes: record.napomene\n      }));\n      setMedicalHistory(transformedHistory);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response2;\n      console.error('Error fetching medical history:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      setAlertMessage('Failed to fetch medical history.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchPatientProfile = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching patient profile.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, authHeaders);\n      setPatientProfile({\n        id: response.data.pacijentID,\n        firstName: response.data.ime,\n        lastName: response.data.prezime,\n        email: response.data.email,\n        phone: response.data.telefon,\n        datumRodjenja: response.data.datumRodjenja,\n        adresa: response.data.adresa,\n        userId: Number(response.data.userId) // Explicitly convert to Number\n      });\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response3;\n      console.error('Error fetching patient profile:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      setAlertMessage('Failed to fetch profile data.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: Number(doc.userId),\n        // Explicitly convert to Number\n        firstName: doc.ime,\n        lastName: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\n        email: doc.email,\n        phone: doc.telefon,\n        ocjena: doc.ocjena\n      }));\n      setDoctors(transformedDoctors);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response4;\n      console.error('Error fetching doctors:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      setAlertMessage('Failed to fetch doctor list.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctorAllAvailableTerms = async doktorId => {\n    if (!doktorId) {\n      setAllDoctorAvailableTerms([]);\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/slobodni/${doktorId}`, authHeaders);\n      const termsData = Array.isArray(response.data) ? response.data : [];\n      const available = termsData.map(term => ({\n        terminID: term.terminID,\n        datum: term.datum,\n        vrijeme: term.vrijeme,\n        display: `${term.datum} ${term.vrijeme.substring(0, 5)}`\n      })).sort((a, b) => {\n        const dateTimeA = `${a.datum}T${a.vrijeme}`;\n        const dateTimeB = `${b.datum}T${b.vrijeme}`;\n        return new Date(dateTimeA) - new Date(dateTimeB);\n      });\n      setAllDoctorAvailableTerms(available);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response5;\n      console.error('Error fetching doctor availability:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      setAlertMessage('Failed to fetch doctor availability.');\n      setAlertType('danger');\n      setShowAlert(true);\n      setAllDoctorAvailableTerms([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchDocuments = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching documents.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedDocuments = response.data.map(doc => ({\n        id: doc.dokumentID,\n        fileName: doc.nazivDokumenta,\n        documentType: doc.tipDokumenta,\n        uploadDate: doc.datumKreiranja,\n        pristup: doc.pristup\n      }));\n      setDocuments(transformedDocuments);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response6;\n      console.error('Error fetching documents:', ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      setAlertMessage('Failed to upload document.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchBills = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching bills.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedBills = response.data.map(bill => ({\n        id: bill.racunID,\n        billDate: bill.datumIzdavanja,\n        amount: bill.iznos,\n        status: bill.status,\n        dueDate: bill.datumDospijeca,\n        opis: bill.opis,\n        doktorIme: bill.doktorIme\n      }));\n      setBills(transformedBills);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response7;\n      console.error('Error fetching bills:', ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      setAlertMessage('Failed to fetch billing information.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMessages = async () => {\n    if (!user || !user.userId) {\n      // Use user.userId to fetch messages\n      console.warn(\"User ID not available for fetching messages.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=PACIJENT`, authHeaders);\n      const transformedMessages = response.data.map(msg => ({\n        id: msg.porukaID,\n        senderId: Number(msg.senderId),\n        // Explicitly convert to Number\n        senderType: msg.senderType,\n        senderIme: msg.senderIme,\n        receiverId: Number(msg.receiverId),\n        // Explicitly convert to Number\n        receiverType: msg.receiverType,\n        receiverIme: msg.receiverIme,\n        subject: msg.subject,\n        content: msg.content,\n        timestamp: msg.timestamp,\n        replies: msg.replies || [] // Ensure replies is always an array\n      }));\n      setMessages(transformedMessages);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response8;\n      console.error('Error fetching messages:', ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n      setAlertMessage('Failed to fetch messages.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- useEffect Hooks ---\n  useEffect(() => {\n    const loadAllData = async () => {\n      if (token && user) {\n        // Changed condition, now relies on user object and token\n        setLoading(true);\n        await Promise.all([fetchPatientAppointments(), fetchMedicalHistory(), fetchPatientProfile(), fetchDoctors(), fetchDocuments(), fetchBills(), fetchMessages() // Now will use user.userId\n        ]);\n        setLoading(false);\n      } else if (!token || user && !user.pacijentId && !user.doktorId) {\n        // If neither patient nor doctor (e.g., admin)\n        setLoading(false);\n        if (!token) {\n          console.warn(\"Token not available. User not logged in.\");\n        } else {\n          console.warn(\"User object available, but patientId nor doctorId are. User might be neither patient nor doctor.\");\n        }\n      }\n    };\n    loadAllData();\n  }, [token, user]);\n\n  // --- Appointment Scheduling/Cancellation ---\n\n  const openAppointmentModal = (appointment = null, doctorIdFromSearch = null) => {\n    if (appointment) {\n      setEditingAppointment(appointment);\n      setNewAppointment({\n        doctorId: appointment.doktorID,\n        appointmentDate: appointment.datumPregleda,\n        appointmentTime: appointment.vrijemePregleda,\n        terminId: appointment.terminID,\n        reason: appointment.komentarPacijenta\n      });\n      fetchDoctorAllAvailableTerms(appointment.doktorID);\n    } else {\n      setEditingAppointment(null);\n      setNewAppointment({\n        doctorId: doctorIdFromSearch || '',\n        appointmentDate: '',\n        appointmentTime: '',\n        terminId: '',\n        reason: ''\n      });\n      setAllDoctorAvailableTerms([]);\n      // If doctorIdFromSearch is present, immediately fetch terms\n      if (doctorIdFromSearch) {\n        fetchDoctorAllAvailableTerms(doctorIdFromSearch);\n      }\n    }\n    setShowAppointmentModal(true);\n  };\n  const closeAppointmentModal = () => {\n    setShowAppointmentModal(false);\n    setEditingAppointment(null);\n    setNewAppointment({\n      doctorId: '',\n      appointmentDate: '',\n      appointmentTime: '',\n      terminId: '',\n      reason: ''\n    });\n    setAllDoctorAvailableTerms([]);\n  };\n  const handleNewAppointmentChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let updatedAppointment = {\n      ...newAppointment,\n      [name]: value\n    };\n    if (name === 'doctorId') {\n      updatedAppointment.appointmentDate = '';\n      updatedAppointment.appointmentTime = '';\n      updatedAppointment.terminId = '';\n      if (value) {\n        await fetchDoctorAllAvailableTerms(value);\n      } else {\n        setAllDoctorAvailableTerms([]);\n      }\n    } else if (name === 'terminId') {\n      const selectedTerm = allDoctorAvailableTerms.find(term => term.terminID === parseInt(value));\n      if (selectedTerm) {\n        updatedAppointment.terminId = selectedTerm.terminID;\n        updatedAppointment.appointmentDate = selectedTerm.datum;\n        updatedAppointment.appointmentTime = selectedTerm.vrijeme;\n      } else {\n        updatedAppointment.terminId = '';\n        updatedAppointment.appointmentDate = '';\n        updatedAppointment.appointmentTime = '';\n      }\n    }\n    setNewAppointment(updatedAppointment);\n  };\n  const handleScheduleAppointment = async () => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('Patient ID not available. Cannot schedule appointment.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason) {\n      setAlertMessage('Please select a doctor, an available slot, and provide a reason.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n\n    // Updated payload for backend (using existing doktorID from newAppointment)\n    const appointmentData = {\n      pacijentID: user.pacijentId,\n      doktorID: parseInt(newAppointment.doctorId),\n      // Doctor ID (Integer) from users-doctors\n      terminID: newAppointment.terminId,\n      datumPregleda: newAppointment.appointmentDate,\n      vrijemePregleda: newAppointment.appointmentTime,\n      komentarPacijenta: newAppointment.reason,\n      status: editingAppointment ? editingAppointment.status : 'zakazan'\n    };\n    try {\n      // Now expecting 202 Accepted from backend\n      await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\n      setAlertMessage('Appointment scheduling request successfully accepted. You will be notified when it is processed.');\n      setAlertType('info'); // Set type to 'info' for asynchronous response\n      setShowAlert(true);\n      closeAppointmentModal();\n      // No direct call to fetchPatientAppointments() HERE,\n      // because the status changes asynchronously. The user will be notified by notification\n      // and will see the change when appointments are re-fetched (e.g., on page refresh\n      // or if fetchPatientAppointments is called after a timeout for demo).\n      // For now, let's keep fetchPatientAppointments() in the useEffect that runs on load.\n      // Optional: You can add setTimeout(() => fetchPatientAppointments(), 5000)\n      // for demo, to show data updates after some time.\n      // For now, we won't, as it's the \"true\" asynchronous approach.\n    } catch (error) {\n      var _error$response9, _error$response0, _error$response0$data;\n      console.error('Error scheduling/updating appointment:', ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n      let errorMessage = 'Failed to schedule/update appointment. Please try again.';\n      if ((_error$response0 = error.response) !== null && _error$response0 !== void 0 && (_error$response0$data = _error$response0.data) !== null && _error$response0$data !== void 0 && _error$response0$data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      setAlertMessage(errorMessage);\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleCancelAppointment = async appointmentId => {\n    if (window.confirm('Are you sure you want to cancel this appointment?')) {\n      if (!user || !user.pacijentId) {\n        setAlertMessage('Patient ID not available for cancellation. Please try again.');\n        setAlertType('danger');\n        setShowAlert(true);\n        return;\n      }\n      try {\n        const existingApp = appointments.find(app => app.id === appointmentId);\n        if (!existingApp) {\n          setAlertMessage(\"Appointment not found for cancellation.\");\n          setAlertType('danger');\n          setShowAlert(true);\n          return;\n        }\n        const cancelPayload = {\n          pregledID: existingApp.id,\n          pacijentID: user.pacijentId,\n          doktorID: existingApp.doktorID,\n          terminID: existingApp.terminID,\n          datumPregleda: existingApp.datumPregleda,\n          vrijemePregleda: existingApp.vrijemePregleda,\n          komentarPacijenta: existingApp.komentarPacijenta,\n          status: 'otkazan'\n        };\n        await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}`, cancelPayload, authHeaders);\n        setAlertMessage('Appointment successfully cancelled!');\n        setAlertType('success');\n        setShowAlert(true);\n        fetchPatientAppointments();\n      } catch (error) {\n        var _error$response1, _error$response10, _error$response10$dat;\n        console.error('Error cancelling appointment:', ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data) || error.message);\n        setAlertMessage('Failed to cancel appointment. Please try again. ' + (((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.message) || error.message));\n        setAlertType('danger');\n        setShowAlert(true);\n      }\n    }\n  };\n\n  // --- Profile Update ---\n  const handleProfileChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPatientProfile(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSaveProfile = async () => {\n    if (!user || !user.pacijentId || !user.userId) {\n      setAlertMessage('Patient ID or User ID not available. Cannot save profile.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const patientDetailsPayload = {\n        pacijentID: user.pacijentId,\n        ime: patientProfile.firstName,\n        prezime: patientProfile.lastName,\n        email: patientProfile.email,\n        telefon: patientProfile.phone,\n        datumRodjenja: patientProfile.datumRodjenja,\n        adresa: patientProfile.adresa,\n        userId: user.userId\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, patientDetailsPayload, authHeaders);\n      const authProfilePayload = {\n        email: patientProfile.email,\n        fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\n        telefon: patientProfile.phone\n      };\n      await axios.put(`${AUTH_API_PREFIX}/users/${user.userId}`, authProfilePayload, authHeaders);\n      setAlertMessage('Profile successfully updated!');\n      setAlertType('success');\n      setShowAlert(true);\n      fetchPatientProfile();\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response12$dat;\n      console.error('Error updating profile:', ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message);\n      setAlertMessage('Failed to update profile. Please try again. ' + (((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- Document Upload ---\n  const handleDocumentUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('pacijentID', user.pacijentId);\n    formData.append('tipDokumenta', 'Patient Upload');\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setAlertMessage('Document successfully uploaded!');\n      setAlertType('success');\n      setShowAlert(true);\n      fetchDocuments();\n    } catch (error) {\n      var _error$response13, _error$response14, _error$response14$dat;\n      console.error('Error uploading document:', ((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) || error.message);\n      setAlertMessage('Document upload failed. ' + (((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : (_error$response14$dat = _error$response14.data) === null || _error$response14$dat === void 0 ? void 0 : _error$response14$dat.message) || error.message), \"danger\");\n    }\n  };\n\n  // --- Secure Messaging ---\n  const handleNewMessageChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMessage(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleReplyMessageChange = e => {\n    setReplyMessage(prev => ({\n      ...prev,\n      content: e.target.value\n    }));\n  };\n  const handleSendMessage = async () => {\n    if (!user || !user.userId) {\n      // Use user.userId to send message\n      setAlertMessage('Your user ID is not available. Cannot send message.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\n      setAlertMessage('Please fill in all message fields.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const messageData = {\n        senderId: user.userId,\n        // SENDER is now user.userId (Long)\n        senderType: 'PACIJENT',\n        receiverId: Number(newMessage.recipientId),\n        // Convert to Number\n        receiverType: 'DOKTOR',\n        subject: newMessage.subject,\n        content: newMessage.content\n      };\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\n      setAlertMessage('Message successfully sent!');\n      setAlertType('success');\n      setShowAlert(true);\n      setNewMessage({\n        recipientId: '',\n        subject: '',\n        content: ''\n      });\n      fetchMessages(); // Refresh message list\n    } catch (error) {\n      var _error$response15, _error$response16, _error$response16$dat;\n      console.error('Error sending message:', ((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.data) || error.message);\n      setAlertMessage('Failed to send message. ' + (((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : (_error$response16$dat = _error$response16.data) === null || _error$response16$dat === void 0 ? void 0 : _error$response16$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleReply = async messageId => {\n    if (!user || !user.userId) {\n      // Use user.userId to send reply\n      setAlertMessage('Your user ID is not available. Cannot reply.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!replyMessage.content) {\n      setAlertMessage('Reply content cannot be empty.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\n        senderId: user.userId,\n        // Important: Use user.userId here\n        senderIme: user.fullName,\n        // Use fullName from useAuth\n        senderType: 'PACIJENT',\n        content: replyMessage.content,\n        timestamp: new Date().toISOString()\n      }, authHeaders);\n      setAlertMessage('Reply successfully sent!');\n      setAlertType('success');\n      setShowAlert(true);\n      setReplyMessage({\n        messageId: '',\n        content: ''\n      });\n      fetchMessages(); // Refresh message list\n      // Update local state for current reply display\n      setSelectedMessage(prev => {\n        if (!prev) return null;\n        return {\n          ...prev,\n          replies: [...(prev.replies || []), {\n            senderId: user.userId,\n            // Important: Use user.userId here\n            senderIme: user.fullName,\n            // Use fullName from useAuth\n            senderType: 'PACIJENT',\n            content: replyMessage.content,\n            timestamp: new Date().toISOString()\n          }]\n        };\n      });\n    } catch (error) {\n      var _error$response17, _error$response18, _error$response18$dat;\n      console.error('Error sending reply:', ((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : _error$response17.data) || error.message);\n      setAlertMessage('Failed to send reply. ' + (((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : (_error$response18$dat = _error$response18.data) === null || _error$response18$dat === void 0 ? void 0 : _error$response18$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleViewMessage = message => {\n    setSelectedMessage(message);\n  };\n  const closeMessageModal = () => {\n    setSelectedMessage(null);\n    setReplyMessage({\n      messageId: '',\n      content: ''\n    });\n  };\n\n  // --- Rating Functions ---\n  const openRatingModal = (doktorID, doktorIme) => {\n    setSelectedDoctorForRating({\n      id: doktorID,\n      name: doktorIme\n    });\n    setRatingData({\n      ocjena: 5,\n      komentar: ''\n    });\n    setShowRatingModal(true);\n  };\n  const closeRatingModal = () => {\n    setShowRatingModal(false);\n    setSelectedDoctorForRating(null);\n    setRatingData({\n      ocjena: 5,\n      komentar: ''\n    });\n  };\n  const handleRatingChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRatingData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmitRating = async () => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('Patient ID not available. Cannot submit rating.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!selectedDoctorForRating || ratingData.ocjena === null) {\n      setAlertMessage('Please select a rating.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const ratingPayload = {\n        pacijentID: user.pacijentId,\n        doktorID: selectedDoctorForRating.id,\n        ocjena: parseFloat(ratingData.ocjena),\n        komentar: ratingData.komentar\n      };\n      await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/ocjene`, ratingPayload, authHeaders);\n      setAlertMessage(`Rating successfully submitted for doctor ${selectedDoctorForRating.name}!`);\n      setAlertType('success');\n      setShowAlert(true);\n      closeRatingModal();\n      fetchPatientAppointments();\n      fetchDoctors();\n    } catch (error) {\n      var _error$response19, _error$response20, _error$response20$dat;\n      console.error('Error submitting rating:', ((_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : _error$response19.data) || error.message);\n      setAlertMessage('Failed to submit rating. ' + (((_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : (_error$response20$dat = _error$response20.data) === null || _error$response20$dat === void 0 ? void 0 : _error$response20$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // NEW: \"Pay Now\" functionality\n  const handlePayNow = async billId => {\n    if (window.confirm('Are you sure you want to mark this bill as paid?')) {\n      try {\n        // Call backend endpoint to update bill status\n        await axios.put(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/${billId}/oznaci-kao-placeno`, {}, authHeaders);\n        setAlertMessage('Bill successfully marked as paid!');\n        setAlertType('success');\n        setShowAlert(true);\n        fetchBills(); // Refresh bill list\n      } catch (error) {\n        var _error$response21, _error$response22, _error$response22$dat;\n        console.error('Error marking bill as paid:', ((_error$response21 = error.response) === null || _error$response21 === void 0 ? void 0 : _error$response21.data) || error.message);\n        setAlertMessage('Failed to mark bill as paid. ' + (((_error$response22 = error.response) === null || _error$response22 === void 0 ? void 0 : (_error$response22$dat = _error$response22.data) === null || _error$response22$dat === void 0 ? void 0 : _error$response22$dat.message) || error.message));\n        setAlertType('danger');\n        setShowAlert(true);\n      }\n    }\n  };\n\n  // NEW: \"View Details\" functionality\n  const handleViewBillDetails = bill => {\n    setSelectedBillDetails(bill);\n    setShowBillDetailsModal(true);\n  };\n  const closeBillDetailsModal = () => {\n    setShowBillDetailsModal(false);\n    setSelectedBillDetails(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-2\",\n        children: \"Loading dashboard data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 13\n    }, this);\n  }\n  const currentPatientUserId = user.userId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-white p-3\",\n      style: {\n        width: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-4\",\n        children: \"Patient Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('overview'),\n            children: \"Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('myAppointments'),\n            children: \"My Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('medicalHistory'),\n            children: \"Medical History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('documents'),\n            children: \"My Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('billing'),\n            children: \"Billing & Payments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('messages'),\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('doctorSearch'),\n            children: \"Find a Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('profileSettings'),\n            children: \"Profile Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 p-4 bg-light\",\n      children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: alertType,\n        onClose: () => setShowAlert(false),\n        dismissible: true,\n        className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n        style: {\n          zIndex: 1050\n        },\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: \"Patient Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 17\n      }, this), activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Welcome, \", patientProfile.firstName || (user ? user.fullName : 'Patient'), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is your patient overview. Here you can quickly see your upcoming appointments and recent activities.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: \"Upcoming Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 868,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-group list-group-flush\",\n                children: appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').length > 0 ? appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').map(app => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item d-flex justify-content-between align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [app.datumPregleda, \" at \", app.vrijemePregleda]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 876,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 877,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Reason: \", app.komentarPacijenta]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 878,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 879,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Doctor: \", app.doktorIme]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 880,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 875,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`,\n                    children: app.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 882,\n                    columnNumber: 53\n                  }, this)]\n                }, app.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 874,\n                  columnNumber: 49\n                }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: \"No upcoming appointments.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 886,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 871,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 21\n      }, this), activeTab === 'myAppointments' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => openAppointmentModal(),\n          children: \"Schedule New Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 25\n        }, this), appointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 907,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Reason\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: appointments.map(app => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.doktorIme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 916,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.datumPregleda\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 917,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.vrijemePregleda\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.komentarPacijenta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${app.status === 'obavljen' ? 'success' : app.status === 'zakazan' ? 'warning' : 'danger'}`,\n                  children: app.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 920,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.status === 'zakazan' || app.status === 'potvrđen' ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"sm\",\n                  onClick: () => handleCancelAppointment(app.id),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 923,\n                  columnNumber: 53\n                }, this) : app.status === 'obavljen' ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  onClick: () => openRatingModal(app.doktorID, app.doktorIme),\n                  children: \"Rate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 925,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"No available actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 45\n              }, this)]\n            }, app.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No appointment history found. Schedule your first appointment!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 21\n      }, this), activeTab === 'medicalHistory' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My Medical History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 25\n        }, this), medicalHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: medicalHistory.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 41\n            }, this), \" \", record.date, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 78\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Diagnosis:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 41\n            }, this), \" \", record.diagnosis, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 88\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Treatment:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 949,\n              columnNumber: 41\n            }, this), \" \", record.treatment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 949,\n              columnNumber: 88\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Doctor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 41\n            }, this), \" \", record.doctorName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 86\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Notes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 41\n            }, this), \" \", record.notes || 'N/A']\n          }, record.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No medical history records found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 21\n      }, this), activeTab === 'documents' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My Documents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formFile\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Upload New Document\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 965,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: handleDocumentUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 25\n        }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Document Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 974,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Upload Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 975,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Access\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 976,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.documentType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(doc.uploadDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`,\n                  children: doc.pristup\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 986,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 986,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  href: `${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${doc.id}`,\n                  target: \"_blank\",\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 988,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 987,\n                columnNumber: 45\n              }, this)]\n            }, doc.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No documents found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 21\n      }, this), activeTab === 'billing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Billing & Payments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 25\n        }, this), bills.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Bill ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Issue Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1009,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Issued By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1006,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: bills.map(bill => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1019,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(bill.billDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1020,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.amount ? bill.amount.toFixed(2) : 'N/A', \" KM\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1021,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${bill.status === 'PLACEN' ? 'success' : 'warning'}`,\n                  children: bill.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1022,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1022,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.opis\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1023,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.doktorIme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1024,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.status === 'NEPLACEN' && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  className: \"me-2\",\n                  onClick: () => handlePayNow(bill.id),\n                  children: \"Pay Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1027,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  onClick: () => handleViewBillDetails(bill),\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1029,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 45\n              }, this)]\n            }, bill.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1018,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No billing records found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 21\n      }, this), activeTab === 'messages' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => setNewMessage({\n            recipientId: '',\n            subject: '',\n            content: ''\n          }),\n          children: \"Compose New Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 25\n        }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: messages.map(msg => {\n            var _doctors$find, _doctors$find2;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"From: \", msg.senderId === currentPatientUserId ? 'Me' : ((_doctors$find = doctors.find(d => d.userId === msg.senderId)) === null || _doctors$find === void 0 ? void 0 : _doctors$find.firstName) + ' ' + ((_doctors$find2 = doctors.find(d => d.userId === msg.senderId)) === null || _doctors$find2 === void 0 ? void 0 : _doctors$find2.lastName) || `Doctor (${msg.senderId})`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1052,\n                  columnNumber: 45\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1052,\n                  columnNumber: 268\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Subject:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1053,\n                  columnNumber: 45\n                }, this), \" \", msg.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1053,\n                  columnNumber: 85\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(msg.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1054,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1050,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                size: \"sm\",\n                onClick: () => handleViewMessage(msg),\n                children: \"View Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1056,\n                columnNumber: 41\n              }, this)]\n            }, msg.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Compose New Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Recipient (Doctor)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1069,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"recipientId\",\n              value: newMessage.recipientId,\n              onChange: handleNewMessageChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a doctor --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 37\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.userId,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.userId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1079,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1070,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"subject\",\n              value: newMessage.subject,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1094,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"content\",\n              value: newMessage.content,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1095,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSendMessage,\n            children: \"Send Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1067,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 21\n      }, this), activeTab === 'doctorSearch' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Find a Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Search for doctors by name or specialty to find the right care for you.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Search by name or specialty...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 25\n        }, this), doctors.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1120,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Specialty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Contact\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1124,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1119,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1130,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.specialty || 'General Practitioner'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1131,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.email, \" | \", doctor.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1132,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.ocjena ? doctor.ocjena.toFixed(1) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1133,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"sm\",\n                  onClick: () => {\n                    openAppointmentModal(null, doctor.id);\n                  },\n                  children: \"Schedule Appointment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1135,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1134,\n                columnNumber: 45\n              }, this)]\n            }, doctor.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1129,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No doctors found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 21\n      }, this), activeTab === 'profileSettings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Profile Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formFirstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1154,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              value: patientProfile.firstName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1155,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1153,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formLastName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1163,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              value: patientProfile.lastName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1172,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: patientProfile.email || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1173,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formPhone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1181,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"phone\",\n              value: patientProfile.phone || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1182,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAddress\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1190,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"adresa\",\n              value: patientProfile.adresa || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1191,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDatumRodjenja\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1199,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"datumRodjenja\",\n              value: patientProfile.datumRodjenja || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1200,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSaveProfile,\n            children: \"Save Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1152,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1150,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAppointmentModal,\n      onHide: closeAppointmentModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: editingAppointment ? 'Edit Appointment' : 'Schedule New Appointment'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1218,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDoctor\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"doctorId\",\n              value: newAppointment.doctorId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a doctor --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1231,\n                columnNumber: 33\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.id,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1233,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1224,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1222,\n            columnNumber: 25\n          }, this), newAppointment.doctorId && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAvailableTerm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Available Slot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1240,\n              columnNumber: 33\n            }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 37\n            }, this) : allDoctorAvailableTerms.length > 0 ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"terminId\",\n              value: newAppointment.terminId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select date and time --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1251,\n                columnNumber: 41\n              }, this), allDoctorAvailableTerms.map(term => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term.terminID,\n                children: term.display\n              }, term.terminID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1253,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1244,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: \"No available slots for this doctor.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1257,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1239,\n            columnNumber: 29\n          }, this), newAppointment.terminId && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formAppointmentDateDisplay\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Selected Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1266,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: newAppointment.appointmentDate,\n                readOnly: true,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1267,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1265,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formAppointmentTimeDisplay\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Selected Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1275,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: newAppointment.appointmentTime ? newAppointment.appointmentTime.substring(0, 5) : '',\n                readOnly: true,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1276,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1274,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formReason\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Reason for Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1287,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"reason\",\n              value: newAppointment.reason,\n              onChange: handleNewAppointmentChange,\n              placeholder: \"e.g., General check-up, specific symptoms...\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1288,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1286,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1221,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeAppointmentModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleScheduleAppointment,\n          disabled: !newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason || loading,\n          children: editingAppointment ? 'Update Appointment' : 'Schedule Appointment'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1304,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1300,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: !!selectedMessage,\n      onHide: closeMessageModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Message: \", selectedMessage === null || selectedMessage === void 0 ? void 0 : selectedMessage.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1317,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1316,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1323,\n              columnNumber: 32\n            }, this), \" \", selectedMessage.senderId === currentPatientUserId ? 'Me' : ((_doctors$find3 = doctors.find(d => d.userId === selectedMessage.senderId)) === null || _doctors$find3 === void 0 ? void 0 : _doctors$find3.firstName) + ' ' + ((_doctors$find4 = doctors.find(d => d.userId === selectedMessage.senderId)) === null || _doctors$find4 === void 0 ? void 0 : _doctors$find4.lastName) || `Doctor (${selectedMessage.senderId})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1323,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1324,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedMessage.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1324,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1325,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1326,\n            columnNumber: 29\n          }, this), selectedMessage.replies && selectedMessage.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Replies:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 37\n            }, this), selectedMessage.replies.map((reply, index) => {\n              var _doctors$find5, _doctors$find6;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border p-2 mb-2 rounded bg-light\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [reply.senderId === currentPatientUserId ? 'Me' : ((_doctors$find5 = doctors.find(d => d.userId === reply.senderId)) === null || _doctors$find5 === void 0 ? void 0 : _doctors$find5.firstName) + ' ' + ((_doctors$find6 = doctors.find(d => d.userId === reply.senderId)) === null || _doctors$find6 === void 0 ? void 0 : _doctors$find6.lastName) || `Doctor (${reply.senderId})`, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1334,\n                  columnNumber: 45\n                }, this), \" \", reply.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1335,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(reply.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1336,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1332,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1343,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: replyMessage.content,\n              onChange: handleReplyMessageChange,\n              placeholder: \"Type your reply here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1344,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1342,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mt-2\",\n            onClick: () => handleReply(selectedMessage.id),\n            children: \"Send Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1352,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeMessageModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1357,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1356,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1315,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showRatingModal,\n      onHide: closeRatingModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Rate Doctor: \", selectedDoctorForRating === null || selectedDoctorForRating === void 0 ? void 0 : selectedDoctorForRating.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1366,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1365,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formRating\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Rating (1-5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1371,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"ocjena\",\n              value: ratingData.ocjena,\n              onChange: handleRatingChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"1 - Very Poor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1379,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"2 - Poor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1380,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"3 - Average\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1381,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"4 - Good\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1382,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5 - Excellent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1383,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1372,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1370,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formRatingComment\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Comment (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1387,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"komentar\",\n              value: ratingData.komentar,\n              onChange: handleRatingChange,\n              placeholder: \"Write a comment about your experience...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1388,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1386,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1368,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeRatingModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1400,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmitRating,\n          children: \"Submit Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1403,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1399,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1364,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showBillDetailsModal,\n      onHide: closeBillDetailsModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Bill Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1412,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1411,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedBillDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Bill ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1417,\n              columnNumber: 32\n            }, this), \" \", selectedBillDetails.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1417,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Issue Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1418,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedBillDetails.billDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1418,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1419,\n              columnNumber: 32\n            }, this), \" \", selectedBillDetails.amount ? selectedBillDetails.amount.toFixed(2) : 'N/A', \" KM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1419,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1420,\n              columnNumber: 32\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `badge bg-${selectedBillDetails.status === 'PLACEN' ? 'success' : 'warning'}`,\n              children: selectedBillDetails.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1420,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1420,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1421,\n              columnNumber: 32\n            }, this), \" \", selectedBillDetails.opis]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1421,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Issued By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1422,\n              columnNumber: 32\n            }, this), \" \", selectedBillDetails.doktorIme]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1422,\n            columnNumber: 29\n          }, this), selectedBillDetails.dueDate && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Due Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1424,\n              columnNumber: 36\n            }, this), \" \", new Date(selectedBillDetails.dueDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1424,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1416,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1414,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeBillDetailsModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1430,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1429,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1410,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 776,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDashboard, \"RlIgSlagI4Uju0cT8LEORdc1h6M=\", false, function () {\n  return [useAuth];\n});\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["axios","useAuth","React","useState","useEffect","useMemo","Modal","Button","Form","Alert","Spinner","Tab","Tabs","jsxDEV","_jsxDEV","Fragment","_Fragment","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","OBAVIJESTI_DOKUMENTI_API_PREFIX","AUTH_API_PREFIX","PatientDashboard","_s","_doctors$find3","_doctors$find4","token","user","console","log","authHeaders","headers","activeTab","setActiveTab","appointments","setAppointments","medicalHistory","setMedicalHistory","patientProfile","setPatientProfile","doctors","setDoctors","allDoctorAvailableTerms","setAllDoctorAvailableTerms","documents","setDocuments","bills","setBills","messages","setMessages","newMessage","setNewMessage","recipientId","subject","content","replyMessage","setReplyMessage","messageId","selectedMessage","setSelectedMessage","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","showAppointmentModal","setShowAppointmentModal","newAppointment","setNewAppointment","doctorId","appointmentDate","appointmentTime","terminId","reason","editingAppointment","setEditingAppointment","loading","setLoading","showRatingModal","setShowRatingModal","selectedDoctorForRating","setSelectedDoctorForRating","ratingData","setRatingData","ocjena","komentar","showBillDetailsModal","setShowBillDetailsModal","selectedBillDetails","setSelectedBillDetails","fetchPatientAppointments","pacijentId","warn","response","get","transformedAppointments","data","map","app","id","pregledID","doktorID","pacijentID","datumPregleda","vrijemePregleda","komentarPacijenta","status","terminID","doktorIme","error","_error$response","message","fetchMedicalHistory","transformedHistory","record","zapisID","patientId","doctorName","date","datumZapisivanja","diagnosis","dijagnoza","treatment","lijecenje","notes","napomene","_error$response2","fetchPatientProfile","firstName","ime","lastName","prezime","email","phone","telefon","datumRodjenja","adresa","userId","Number","_error$response3","fetchDoctors","transformedDoctors","doc","specialty","Array","isArray","specijalizacije","join","_error$response4","fetchDoctorAllAvailableTerms","doktorId","termsData","available","term","datum","vrijeme","display","substring","sort","a","b","dateTimeA","dateTimeB","Date","_error$response5","fetchDocuments","transformedDocuments","dokumentID","fileName","nazivDokumenta","documentType","tipDokumenta","uploadDate","datumKreiranja","pristup","_error$response6","fetchBills","transformedBills","bill","racunID","billDate","datumIzdavanja","amount","iznos","dueDate","datumDospijeca","opis","_error$response7","fetchMessages","transformedMessages","msg","porukaID","senderId","senderType","senderIme","receiverId","receiverType","receiverIme","timestamp","replies","_error$response8","loadAllData","Promise","all","openAppointmentModal","appointment","doctorIdFromSearch","closeAppointmentModal","handleNewAppointmentChange","e","name","value","target","updatedAppointment","selectedTerm","find","parseInt","handleScheduleAppointment","appointmentData","post","_error$response9","_error$response0","_error$response0$data","errorMessage","handleCancelAppointment","appointmentId","window","confirm","existingApp","cancelPayload","put","_error$response1","_error$response10","_error$response10$dat","handleProfileChange","prev","handleSaveProfile","patientDetailsPayload","authProfilePayload","fullName","_error$response11","_error$response12","_error$response12$dat","handleDocumentUpload","file","files","formData","FormData","append","_error$response13","_error$response14","_error$response14$dat","handleNewMessageChange","handleReplyMessageChange","handleSendMessage","messageData","_error$response15","_error$response16","_error$response16$dat","handleReply","toISOString","_error$response17","_error$response18","_error$response18$dat","handleViewMessage","closeMessageModal","openRatingModal","closeRatingModal","handleRatingChange","handleSubmitRating","ratingPayload","parseFloat","_error$response19","_error$response20","_error$response20$dat","handlePayNow","billId","_error$response21","_error$response22","_error$response22$dat","handleViewBillDetails","closeBillDetailsModal","className","style","minHeight","children","animation","role","_jsxFileName","lineNumber","columnNumber","currentPatientUserId","width","onClick","variant","onClose","dismissible","zIndex","filter","length","size","index","Group","controlId","Label","Control","type","onChange","toLocaleDateString","href","toFixed","_doctors$find","_doctors$find2","d","toLocaleString","as","required","doctor","rows","placeholder","show","onHide","Header","closeButton","Title","Body","readOnly","disabled","Footer","reply","_doctors$find5","_doctors$find6","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/PatientDashboard.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs } from 'react-bootstrap';\r\n// No need for react-datepicker if your original version doesn't use it.\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\n// Defining API prefixes for each microservice - WE USE THESE PREFIXES!\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`; // Assumed path for authentication, if used directly\r\n\r\nfunction PatientDashboard() {\r\n    // UPDATED: user object now contains authId (Long), id (email), patientId (Integer)\r\n    const { token, user } = useAuth();\r\n    console.log(\"Current user object from useAuth (PatientDashboard):\", user);\r\n\r\n    const authHeaders = useMemo(() => ({\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }), [token]);\r\n\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [medicalHistory, setMedicalHistory] = useState([]);\r\n    const [patientProfile, setPatientProfile] = useState({}); // Kept as useState to allow updates\r\n    const [doctors, setDoctors] = useState([]); // This doctor list should also contain userId\r\n    const [allDoctorAvailableTerms, setAllDoctorAvailableTerms] = useState([]);\r\n    const [documents, setDocuments] = useState([]);\r\n    const [bills, setBills] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState({ recipientId: '', subject: '', content: '' });\r\n    const [replyMessage, setReplyMessage] = useState({ messageId: '', content: '' });\r\n    const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('success');\r\n\r\n    const [showAppointmentModal, setShowAppointmentModal] = useState(false);\r\n    const [newAppointment, setNewAppointment] = useState({\r\n        doctorId: '',\r\n        appointmentDate: '',\r\n        appointmentTime: '',\r\n        terminId: '',\r\n        reason: ''\r\n    });\r\n    const [editingAppointment, setEditingAppointment] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // State for rating modal\r\n    const [showRatingModal, setShowRatingModal] = useState(false);\r\n    const [selectedDoctorForRating, setSelectedDoctorForRating] = useState(null);\r\n    const [ratingData, setRatingData] = useState({ ocjena: 5, komentar: '' }); // Default rating 5\r\n\r\n    // NEW: State for bill details modal\r\n    const [showBillDetailsModal, setShowBillDetailsModal] = useState(false);\r\n    const [selectedBillDetails, setSelectedBillDetails] = useState(null);\r\n\r\n\r\n    // --- API Calls ---\r\n\r\n    const fetchPatientAppointments = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching appointments.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/zakazani/${user.pacijentId}`, authHeaders);\r\n            const transformedAppointments = response.data.map(app => ({\r\n                id: app.pregledID,\r\n                doktorID: app.doktorID,\r\n                pacijentID: app.pacijentID,\r\n                datumPregleda: app.datumPregleda,\r\n                vrijemePregleda: app.vrijemePregleda,\r\n                komentarPacijenta: app.komentarPacijenta,\r\n                status: app.status,\r\n                terminID: app.terminID,\r\n                doktorIme: app.doktorIme\r\n            }));\r\n            setAppointments(transformedAppointments);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching patient appointments:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch scheduled appointments.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMedicalHistory = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching medical history.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedHistory = response.data.map(record => ({\r\n                id: record.zapisID,\r\n                patientId: record.pacijentID,\r\n                doctorId: record.doktorID,\r\n                doctorName: record.doktorIme,\r\n                date: record.datumZapisivanja,\r\n                diagnosis: record.dijagnoza,\r\n                treatment: record.lijecenje,\r\n                notes: record.napomene\r\n            }));\r\n            setMedicalHistory(transformedHistory);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching medical history:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch medical history.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchPatientProfile = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching patient profile.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, authHeaders);\r\n            setPatientProfile({\r\n                id: response.data.pacijentID,\r\n                firstName: response.data.ime,\r\n                lastName: response.data.prezime,\r\n                email: response.data.email,\r\n                phone: response.data.telefon,\r\n                datumRodjenja: response.data.datumRodjenja,\r\n                adresa: response.data.adresa,\r\n                userId: Number(response.data.userId) // Explicitly convert to Number\r\n            });\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching patient profile:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch profile data.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctors = async () => {\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n            const transformedDoctors = response.data.map(doc => ({\r\n                id: doc.doktorID,\r\n                userId: Number(doc.userId), // Explicitly convert to Number\r\n                firstName: doc.ime,\r\n                lastName: doc.prezime,\r\n                specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\r\n                email: doc.email,\r\n                phone: doc.telefon,\r\n                ocjena: doc.ocjena\r\n            }));\r\n            setDoctors(transformedDoctors);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching doctors:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch doctor list.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctorAllAvailableTerms = async (doktorId) => {\r\n        if (!doktorId) {\r\n            setAllDoctorAvailableTerms([]);\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/slobodni/${doktorId}`, authHeaders);\r\n            const termsData = Array.isArray(response.data) ? response.data : [];\r\n            const available = termsData\r\n                .map(term => ({\r\n                    terminID: term.terminID,\r\n                    datum: term.datum,\r\n                    vrijeme: term.vrijeme,\r\n                    display: `${term.datum} ${term.vrijeme.substring(0, 5)}`\r\n                }))\r\n                .sort((a, b) => {\r\n                    const dateTimeA = `${a.datum}T${a.vrijeme}`;\r\n                    const dateTimeB = `${b.datum}T${b.vrijeme}`;\r\n                    return new Date(dateTimeA) - new Date(dateTimeB);\r\n                });\r\n            setAllDoctorAvailableTerms(available);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching doctor availability:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch doctor availability.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            setAllDoctorAvailableTerms([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchDocuments = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching documents.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedDocuments = response.data.map(doc => ({\r\n                id: doc.dokumentID,\r\n                fileName: doc.nazivDokumenta,\r\n                documentType: doc.tipDokumenta,\r\n                uploadDate: doc.datumKreiranja,\r\n                pristup: doc.pristup\r\n            }));\r\n            setDocuments(transformedDocuments);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching documents:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to upload document.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchBills = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching bills.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedBills = response.data.map(bill => ({\r\n                id: bill.racunID,\r\n                billDate: bill.datumIzdavanja,\r\n                amount: bill.iznos,\r\n                status: bill.status,\r\n                dueDate: bill.datumDospijeca,\r\n                opis: bill.opis,\r\n                doktorIme: bill.doktorIme\r\n            }));\r\n            setBills(transformedBills);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching bills:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch billing information.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async () => {\r\n        if (!user || !user.userId) { // Use user.userId to fetch messages\r\n            console.warn(\"User ID not available for fetching messages.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=PACIJENT`, authHeaders);\r\n            const transformedMessages = response.data.map(msg => ({\r\n                id: msg.porukaID,\r\n                senderId: Number(msg.senderId), // Explicitly convert to Number\r\n                senderType: msg.senderType,\r\n                senderIme: msg.senderIme,\r\n                receiverId: Number(msg.receiverId), // Explicitly convert to Number\r\n                receiverType: msg.receiverType,\r\n                receiverIme: msg.receiverIme,\r\n                subject: msg.subject,\r\n                content: msg.content,\r\n                timestamp: msg.timestamp,\r\n                replies: msg.replies || [] // Ensure replies is always an array\r\n            }));\r\n            setMessages(transformedMessages);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching messages:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch messages.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- useEffect Hooks ---\r\n    useEffect(() => {\r\n        const loadAllData = async () => {\r\n            if (token && user) { // Changed condition, now relies on user object and token\r\n                setLoading(true);\r\n                await Promise.all([\r\n                    fetchPatientAppointments(),\r\n                    fetchMedicalHistory(),\r\n                    fetchPatientProfile(),\r\n                    fetchDoctors(),\r\n                    fetchDocuments(),\r\n                    fetchBills(),\r\n                    fetchMessages() // Now will use user.userId\r\n                ]);\r\n                setLoading(false);\r\n            } else if (!token || (user && !user.pacijentId && !user.doktorId)) { // If neither patient nor doctor (e.g., admin)\r\n                setLoading(false);\r\n                if (!token) {\r\n                    console.warn(\"Token not available. User not logged in.\");\r\n                } else {\r\n                    console.warn(\"User object available, but patientId nor doctorId are. User might be neither patient nor doctor.\");\r\n                }\r\n            }\r\n        };\r\n        loadAllData();\r\n    }, [token, user]);\r\n\r\n\r\n    // --- Appointment Scheduling/Cancellation ---\r\n\r\n    const openAppointmentModal = (appointment = null, doctorIdFromSearch = null) => {\r\n        if (appointment) {\r\n            setEditingAppointment(appointment);\r\n            setNewAppointment({\r\n                doctorId: appointment.doktorID,\r\n                appointmentDate: appointment.datumPregleda,\r\n                appointmentTime: appointment.vrijemePregleda,\r\n                terminId: appointment.terminID,\r\n                reason: appointment.komentarPacijenta\r\n            });\r\n            fetchDoctorAllAvailableTerms(appointment.doktorID);\r\n        } else {\r\n            setEditingAppointment(null);\r\n            setNewAppointment({\r\n                doctorId: doctorIdFromSearch || '',\r\n                appointmentDate: '',\r\n                appointmentTime: '',\r\n                terminId: '',\r\n                reason: ''\r\n            });\r\n            setAllDoctorAvailableTerms([]);\r\n            // If doctorIdFromSearch is present, immediately fetch terms\r\n            if (doctorIdFromSearch) {\r\n                fetchDoctorAllAvailableTerms(doctorIdFromSearch);\r\n            }\r\n        }\r\n        setShowAppointmentModal(true);\r\n    };\r\n\r\n    const closeAppointmentModal = () => {\r\n        setShowAppointmentModal(false);\r\n        setEditingAppointment(null);\r\n        setNewAppointment({\r\n            doctorId: '',\r\n            appointmentDate: '',\r\n            appointmentTime: '',\r\n            terminId: '',\r\n            reason: ''\r\n        });\r\n        setAllDoctorAvailableTerms([]);\r\n    };\r\n\r\n    const handleNewAppointmentChange = async (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        let updatedAppointment = { ...newAppointment, [name]: value };\r\n\r\n        if (name === 'doctorId') {\r\n            updatedAppointment.appointmentDate = '';\r\n            updatedAppointment.appointmentTime = '';\r\n            updatedAppointment.terminId = '';\r\n            if (value) {\r\n                await fetchDoctorAllAvailableTerms(value);\r\n            } else {\r\n                setAllDoctorAvailableTerms([]);\r\n            }\r\n        } else if (name === 'terminId') {\r\n            const selectedTerm = allDoctorAvailableTerms.find(term => term.terminID === parseInt(value));\r\n            if (selectedTerm) {\r\n                updatedAppointment.terminId = selectedTerm.terminID;\r\n                updatedAppointment.appointmentDate = selectedTerm.datum;\r\n                updatedAppointment.appointmentTime = selectedTerm.vrijeme;\r\n            } else {\r\n                updatedAppointment.terminId = '';\r\n                updatedAppointment.appointmentDate = '';\r\n                updatedAppointment.appointmentTime = '';\r\n            }\r\n        }\r\n        setNewAppointment(updatedAppointment);\r\n    };\r\n\r\n\r\n    const handleScheduleAppointment = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('Patient ID not available. Cannot schedule appointment.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        if (!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason) {\r\n            setAlertMessage('Please select a doctor, an available slot, and provide a reason.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        // Updated payload for backend (using existing doktorID from newAppointment)\r\n        const appointmentData = {\r\n            pacijentID: user.pacijentId,\r\n            doktorID: parseInt(newAppointment.doctorId), // Doctor ID (Integer) from users-doctors\r\n            terminID: newAppointment.terminId,\r\n            datumPregleda: newAppointment.appointmentDate,\r\n            vrijemePregleda: newAppointment.appointmentTime,\r\n            komentarPacijenta: newAppointment.reason,\r\n            status: editingAppointment ? editingAppointment.status : 'zakazan',\r\n        };\r\n\r\n        try {\r\n            // Now expecting 202 Accepted from backend\r\n            await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\r\n\r\n            setAlertMessage('Appointment scheduling request successfully accepted. You will be notified when it is processed.');\r\n            setAlertType('info'); // Set type to 'info' for asynchronous response\r\n            setShowAlert(true);\r\n\r\n            closeAppointmentModal();\r\n            // No direct call to fetchPatientAppointments() HERE,\r\n            // because the status changes asynchronously. The user will be notified by notification\r\n            // and will see the change when appointments are re-fetched (e.g., on page refresh\r\n            // or if fetchPatientAppointments is called after a timeout for demo).\r\n            // For now, let's keep fetchPatientAppointments() in the useEffect that runs on load.\r\n            // Optional: You can add setTimeout(() => fetchPatientAppointments(), 5000)\r\n            // for demo, to show data updates after some time.\r\n            // For now, we won't, as it's the \"true\" asynchronous approach.\r\n        } catch (error) {\r\n            console.error('Error scheduling/updating appointment:', error.response?.data || error.message);\r\n            let errorMessage = 'Failed to schedule/update appointment. Please try again.';\r\n            if (error.response?.data?.message) {\r\n                errorMessage = error.response.data.message;\r\n            } else if (error.message) {\r\n                errorMessage = error.message;\r\n            }\r\n            setAlertMessage(errorMessage);\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleCancelAppointment = async (appointmentId) => {\r\n        if (window.confirm('Are you sure you want to cancel this appointment?')) {\r\n            if (!user || !user.pacijentId) {\r\n                setAlertMessage('Patient ID not available for cancellation. Please try again.');\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n                return;\r\n            }\r\n            try {\r\n                const existingApp = appointments.find(app => app.id === appointmentId);\r\n                if (!existingApp) {\r\n                    setAlertMessage(\"Appointment not found for cancellation.\");\r\n                    setAlertType('danger');\r\n                    setShowAlert(true);\r\n                    return;\r\n                }\r\n\r\n                const cancelPayload = {\r\n                    pregledID: existingApp.id,\r\n                    pacijentID: user.pacijentId,\r\n                    doktorID: existingApp.doktorID,\r\n                    terminID: existingApp.terminID,\r\n                    datumPregleda: existingApp.datumPregleda,\r\n                    vrijemePregleda: existingApp.vrijemePregleda,\r\n                    komentarPacijenta: existingApp.komentarPacijenta,\r\n                    status: 'otkazan'\r\n                };\r\n\r\n                await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}`, cancelPayload, authHeaders);\r\n                setAlertMessage('Appointment successfully cancelled!');\r\n                setAlertType('success');\r\n                setShowAlert(true);\r\n                fetchPatientAppointments();\r\n            } catch (error) {\r\n                console.error('Error cancelling appointment:', error.response?.data || error.message);\r\n                setAlertMessage('Failed to cancel appointment. Please try again. ' + (error.response?.data?.message || error.message));\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    // --- Profile Update ---\r\n    const handleProfileChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPatientProfile(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSaveProfile = async () => {\r\n        if (!user || !user.pacijentId || !user.userId) {\r\n            setAlertMessage('Patient ID or User ID not available. Cannot save profile.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const patientDetailsPayload = {\r\n                pacijentID: user.pacijentId,\r\n                ime: patientProfile.firstName,\r\n                prezime: patientProfile.lastName,\r\n                email: patientProfile.email,\r\n                telefon: patientProfile.phone,\r\n                datumRodjenja: patientProfile.datumRodjenja,\r\n                adresa: patientProfile.adresa,\r\n                userId: user.userId\r\n            };\r\n            await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, patientDetailsPayload, authHeaders);\r\n\r\n            const authProfilePayload = {\r\n                email: patientProfile.email,\r\n                fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\r\n                telefon: patientProfile.phone,\r\n            };\r\n            await axios.put(`${AUTH_API_PREFIX}/users/${user.userId}`, authProfilePayload, authHeaders);\r\n\r\n\r\n            setAlertMessage('Profile successfully updated!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchPatientProfile();\r\n        } catch (error) {\r\n            console.error('Error updating profile:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to update profile. Please try again. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- Document Upload ---\r\n    const handleDocumentUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('pacijentID', user.pacijentId);\r\n        formData.append('tipDokumenta', 'Patient Upload');\r\n\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            setAlertMessage('Document successfully uploaded!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchDocuments();\r\n        }\r\n        catch (error) {\r\n            console.error('Error uploading document:', error.response?.data || error.message);\r\n            setAlertMessage('Document upload failed. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    // --- Secure Messaging ---\r\n    const handleNewMessageChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewMessage(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleReplyMessageChange = (e) => {\r\n        setReplyMessage(prev => ({ ...prev, content: e.target.value }));\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!user || !user.userId) { // Use user.userId to send message\r\n            setAlertMessage('Your user ID is not available. Cannot send message.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\r\n            setAlertMessage('Please fill in all message fields.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const messageData = {\r\n                senderId: user.userId, // SENDER is now user.userId (Long)\r\n                senderType: 'PACIJENT',\r\n                receiverId: Number(newMessage.recipientId), // Convert to Number\r\n                receiverType: 'DOKTOR',\r\n                subject: newMessage.subject,\r\n                content: newMessage.content\r\n            };\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\r\n            setAlertMessage('Message successfully sent!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setNewMessage({ recipientId: '', subject: '', content: '' });\r\n            fetchMessages(); // Refresh message list\r\n        } catch (error) {\r\n            console.error('Error sending message:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to send message. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleReply = async (messageId) => {\r\n        if (!user || !user.userId) { // Use user.userId to send reply\r\n            setAlertMessage('Your user ID is not available. Cannot reply.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!replyMessage.content) {\r\n            setAlertMessage('Reply content cannot be empty.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\r\n                senderId: user.userId, // Important: Use user.userId here\r\n                senderIme: user.fullName, // Use fullName from useAuth\r\n                senderType: 'PACIJENT',\r\n                content: replyMessage.content,\r\n                timestamp: new Date().toISOString()\r\n            }, authHeaders);\r\n            setAlertMessage('Reply successfully sent!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setReplyMessage({ messageId: '', content: '' });\r\n            fetchMessages(); // Refresh message list\r\n            // Update local state for current reply display\r\n            setSelectedMessage(prev => {\r\n                if (!prev) return null;\r\n                return {\r\n                    ...prev,\r\n                    replies: [...(prev.replies || []), {\r\n                        senderId: user.userId, // Important: Use user.userId here\r\n                        senderIme: user.fullName, // Use fullName from useAuth\r\n                        senderType: 'PACIJENT',\r\n                        content: replyMessage.content,\r\n                        timestamp: new Date().toISOString()\r\n                    }]\r\n                };\r\n            });\r\n        } catch (error) {\r\n            console.error('Error sending reply:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to send reply. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleViewMessage = (message) => {\r\n        setSelectedMessage(message);\r\n    };\r\n\r\n    const closeMessageModal = () => {\r\n        setSelectedMessage(null);\r\n        setReplyMessage({ messageId: '', content: '' });\r\n    };\r\n\r\n    // --- Rating Functions ---\r\n    const openRatingModal = (doktorID, doktorIme) => {\r\n        setSelectedDoctorForRating({ id: doktorID, name: doktorIme });\r\n        setRatingData({ ocjena: 5, komentar: '' });\r\n        setShowRatingModal(true);\r\n    };\r\n\r\n    const closeRatingModal = () => {\r\n        setShowRatingModal(false);\r\n        setSelectedDoctorForRating(null);\r\n        setRatingData({ ocjena: 5, komentar: '' });\r\n    };\r\n\r\n    const handleRatingChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setRatingData(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmitRating = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('Patient ID not available. Cannot submit rating.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!selectedDoctorForRating || ratingData.ocjena === null) {\r\n            setAlertMessage('Please select a rating.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const ratingPayload = {\r\n                pacijentID: user.pacijentId,\r\n                doktorID: selectedDoctorForRating.id,\r\n                ocjena: parseFloat(ratingData.ocjena),\r\n                komentar: ratingData.komentar\r\n            };\r\n\r\n            await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/ocjene`, ratingPayload, authHeaders);\r\n\r\n            setAlertMessage(`Rating successfully submitted for doctor ${selectedDoctorForRating.name}!`);\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            closeRatingModal();\r\n            fetchPatientAppointments();\r\n            fetchDoctors();\r\n        } catch (error) {\r\n            console.error('Error submitting rating:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to submit rating. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // NEW: \"Pay Now\" functionality\r\n    const handlePayNow = async (billId) => {\r\n        if (window.confirm('Are you sure you want to mark this bill as paid?')) {\r\n            try {\r\n                // Call backend endpoint to update bill status\r\n                await axios.put(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/${billId}/oznaci-kao-placeno`, {}, authHeaders);\r\n                setAlertMessage('Bill successfully marked as paid!');\r\n                setAlertType('success');\r\n                setShowAlert(true);\r\n                fetchBills(); // Refresh bill list\r\n            } catch (error) {\r\n                console.error('Error marking bill as paid:', error.response?.data || error.message);\r\n                setAlertMessage('Failed to mark bill as paid. ' + (error.response?.data?.message || error.message));\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    // NEW: \"View Details\" functionality\r\n    const handleViewBillDetails = (bill) => {\r\n        setSelectedBillDetails(bill);\r\n        setShowBillDetailsModal(true);\r\n    };\r\n\r\n    const closeBillDetailsModal = () => {\r\n        setShowBillDetailsModal(false);\r\n        setSelectedBillDetails(null);\r\n    };\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </Spinner>\r\n                <p className=\"ms-2\">Loading dashboard data...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const currentPatientUserId = user.userId;\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ minHeight: '100vh' }}>\r\n            {/* Sidebar */}\r\n            <div className=\"bg-dark text-white p-3\" style={{ width: '250px' }}>\r\n                <h4 className=\"mb-4\">Patient Dashboard</h4>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('overview')}\r\n                        >\r\n                            Overview\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('myAppointments')}\r\n                        >\r\n                            My Appointments\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('medicalHistory')}\r\n                        >\r\n                            Medical History\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('documents')}\r\n                        >\r\n                            My Documents\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('billing')}\r\n                        >\r\n                            Billing & Payments\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('messages')}\r\n                        >\r\n                            Messages\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('doctorSearch')}\r\n                        >\r\n                            Find a Doctor\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('profileSettings')}\r\n                        >\r\n                            Profile Settings\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            {/* Main Content Area */}\r\n            <div className=\"flex-grow-1 p-4 bg-light\">\r\n                {showAlert && (\r\n                    <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n                        {alertMessage}\r\n                    </Alert>\r\n                )}\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <h2 className=\"mb-0\">Patient Dashboard</h2>\r\n                </div>\r\n\r\n                {/* Content based on activeTab */}\r\n                {activeTab === 'overview' && (\r\n                    <div>\r\n                        <h3>Welcome, {patientProfile.firstName || (user ? user.fullName : 'Patient')}!</h3>\r\n                        <p>This is your patient overview. Here you can quickly see your upcoming appointments and recent activities.</p>\r\n                        <div className=\"row mt-4\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        Upcoming Appointments\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        {appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').length > 0 ? (\r\n                                            appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').map(app => (\r\n                                                <li key={app.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                    <div>\r\n                                                        <strong>{app.datumPregleda} at {app.vrijemePregleda}</strong>\r\n                                                        <br />\r\n                                                        <small>Reason: {app.komentarPacijenta}</small>\r\n                                                        <br />\r\n                                                        <small>Doctor: {app.doktorIme}</small>\r\n                                                    </div>\r\n                                                    <span className={`badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`}>{app.status}</span>\r\n                                                </li>\r\n                                            ))\r\n                                        ) : (\r\n                                            <li className=\"list-group-item\">No upcoming appointments.</li>\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'myAppointments' && (\r\n                    <div>\r\n                        <h3>My Appointments</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => openAppointmentModal()}>\r\n                            Schedule New Appointment\r\n                        </Button>\r\n                        {appointments.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Doctor</th>\r\n                                        <th>Date</th>\r\n                                        <th>Time</th>\r\n                                        <th>Reason</th>\r\n                                        <th>Status</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {appointments.map(app => (\r\n                                        <tr key={app.id}>\r\n                                            <td>{app.doktorIme}</td>\r\n                                            <td>{app.datumPregleda}</td>\r\n                                            <td>{app.vrijemePregleda}</td>\r\n                                            <td>{app.komentarPacijenta}</td>\r\n                                            <td><span className={`badge bg-${app.status === 'obavljen' ? 'success' : app.status === 'zakazan' ? 'warning' : 'danger'}`}>{app.status}</span></td>\r\n                                            <td>\r\n                                                {app.status === 'zakazan' || app.status === 'potvrđen' ? (\r\n                                                    <Button variant=\"danger\" size=\"sm\" onClick={() => handleCancelAppointment(app.id)}>Cancel</Button>\r\n                                                ) : app.status === 'obavljen' ? (\r\n                                                    <Button variant=\"success\" size=\"sm\" onClick={() => openRatingModal(app.doktorID, app.doktorIme)}>Rate</Button>\r\n                                                ) : (\r\n                                                    <small>No available actions</small>\r\n                                                )}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No appointment history found. Schedule your first appointment!</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'medicalHistory' && (\r\n                    <div>\r\n                        <h3>My Medical History</h3>\r\n                        {medicalHistory.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {medicalHistory.map((record, index) => (\r\n                                    <li key={record.id} className=\"list-group-item\">\r\n                                        <strong>Date:</strong> {record.date} <br />\r\n                                        <strong>Diagnosis:</strong> {record.diagnosis} <br />\r\n                                        <strong>Treatment:</strong> {record.treatment} <br />\r\n                                        <strong>Doctor:</strong> {record.doctorName} <br />\r\n                                        <strong>Notes:</strong> {record.notes || 'N/A'}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>No medical history records found.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'documents' && (\r\n                    <div>\r\n                        <h3>My Documents</h3>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Upload New Document</Form.Label>\r\n                            <Form.Control type=\"file\" onChange={handleDocumentUpload} />\r\n                        </Form.Group>\r\n\r\n                        {documents.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Document Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Upload Date</th>\r\n                                        <th>Access</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {documents.map(doc => (\r\n                                        <tr key={doc.id}>\r\n                                            <td>{doc.fileName}</td>\r\n                                            <td>{doc.documentType}</td>\r\n                                            <td>{new Date(doc.uploadDate).toLocaleDateString()}</td>\r\n                                            <td><span className={`badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`}>{doc.pristup}</span></td>\r\n                                            <td>\r\n                                                <Button variant=\"success\" size=\"sm\" href={`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${doc.id}`} target=\"_blank\">Download</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No documents found.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'billing' && (\r\n                    <div>\r\n                        <h3>Billing & Payments</h3>\r\n                        {bills.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Bill ID</th>\r\n                                        <th>Issue Date</th>\r\n                                        <th>Amount</th>\r\n                                        <th>Status</th>\r\n                                        <th>Description</th>\r\n                                        <th>Issued By</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {bills.map(bill => (\r\n                                        <tr key={bill.id}>\r\n                                            <td>{bill.id}</td>\r\n                                            <td>{new Date(bill.billDate).toLocaleDateString()}</td>\r\n                                            <td>{bill.amount ? bill.amount.toFixed(2) : 'N/A'} KM</td>\r\n                                            <td><span className={`badge bg-${bill.status === 'PLACEN' ? 'success' : 'warning'}`}>{bill.status}</span></td>\r\n                                            <td>{bill.opis}</td>\r\n                                            <td>{bill.doktorIme}</td>\r\n                                            <td>\r\n                                                {bill.status === 'NEPLACEN' && (\r\n                                                    <Button variant=\"success\" size=\"sm\" className=\"me-2\" onClick={() => handlePayNow(bill.id)}>Pay Now</Button>\r\n                                                )}\r\n                                                <Button variant=\"info\" size=\"sm\" onClick={() => handleViewBillDetails(bill)}>View Details</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No billing records found.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'messages' && (\r\n                    <div>\r\n                        <h3>My Messages</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => setNewMessage({ recipientId: '', subject: '', content: '' })}>Compose New Message</Button>\r\n\r\n                        {messages.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {messages.map(msg => (\r\n                                    <li key={msg.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            {/* Displays sender's name (Auth userId), checks if current user is patient or doctor */}\r\n                                            <strong>From: {msg.senderId === currentPatientUserId ? 'Me' : (doctors.find(d => d.userId === msg.senderId)?.firstName + ' ' + doctors.find(d => d.userId === msg.senderId)?.lastName || `Doctor (${msg.senderId})`)}</strong> <br />\r\n                                            <strong>Subject:</strong> {msg.subject} <br />\r\n                                            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                        <Button variant=\"info\" size=\"sm\" onClick={() => handleViewMessage(msg)}>View Message</Button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>No messages found.</p>\r\n                        )}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <h4>Compose New Message</h4>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Recipient (Doctor)</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"recipientId\"\r\n                                    value={newMessage.recipientId}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Select a doctor --</option>\r\n                                    {doctors.map(doctor => (\r\n                                        <option key={doctor.userId} value={doctor.userId}>{doctor.firstName} {doctor.lastName}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Subject</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    value={newMessage.subject}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Content</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"content\"\r\n                                    value={newMessage.content}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSendMessage}>Send Message</Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'doctorSearch' && (\r\n                    <div>\r\n                        <h3>Find a Doctor</h3>\r\n                        <p>Search for doctors by name or specialty to find the right care for you.</p>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control type=\"text\" placeholder=\"Search by name or specialty...\" />\r\n                        </Form.Group>\r\n                        {doctors.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Specialty</th>\r\n                                        <th>Contact</th>\r\n                                        <th>Rating</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {doctors.map(doctor => (\r\n                                        <tr key={doctor.id}>\r\n                                            <td>{doctor.firstName} {doctor.lastName}</td>\r\n                                            <td>{doctor.specialty || 'General Practitioner'}</td>\r\n                                            <td>{doctor.email} | {doctor.phone}</td>\r\n                                            <td>{doctor.ocjena ? doctor.ocjena.toFixed(1) : 'N/A'}</td>\r\n                                            <td>\r\n                                                <Button variant=\"primary\" size=\"sm\" onClick={() => {\r\n                                                    openAppointmentModal(null, doctor.id);\r\n                                                }}>Schedule Appointment</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No doctors found.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'profileSettings' && (\r\n                    <div>\r\n                        <h3>Profile Settings</h3>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                                <Form.Label>First Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={patientProfile.firstName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                                <Form.Label>Last Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    value={patientProfile.lastName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={patientProfile.email || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formPhone\">\r\n                                <Form.Label>Phone</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"phone\"\r\n                                    value={patientProfile.phone || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAddress\">\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"adresa\"\r\n                                    value={patientProfile.adresa || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formDatumRodjenja\">\r\n                                <Form.Label>Date of Birth</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    name=\"datumRodjenja\"\r\n                                    value={patientProfile.datumRodjenja || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSaveProfile}>\r\n                                Save Profile\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Appointment Modal */}\r\n            <Modal show={showAppointmentModal} onHide={closeAppointmentModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{editingAppointment ? 'Edit Appointment' : 'Schedule New Appointment'}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formDoctor\">\r\n                            <Form.Label>Select Doctor</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"doctorId\"\r\n                                value={newAppointment.doctorId}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">-- Select a doctor --</option>\r\n                                {doctors.map(doctor => (\r\n                                    <option key={doctor.id} value={doctor.id}>{doctor.firstName} {doctor.lastName}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        {newAppointment.doctorId && (\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAvailableTerm\">\r\n                                <Form.Label>Select Available Slot</Form.Label>\r\n                                {loading ? (\r\n                                    <Spinner animation=\"border\" size=\"sm\" />\r\n                                ) : allDoctorAvailableTerms.length > 0 ? (\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"terminId\"\r\n                                        value={newAppointment.terminId}\r\n                                        onChange={handleNewAppointmentChange}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">-- Select date and time --</option>\r\n                                        {allDoctorAvailableTerms.map(term => (\r\n                                            <option key={term.terminID} value={term.terminID}>{term.display}</option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                ) : (\r\n                                    <Alert variant=\"info\">No available slots for this doctor.</Alert>\r\n                                )}\r\n                            </Form.Group>\r\n                        )}\r\n\r\n                        {/* Fields for date and time that will be automatically populated after selecting a slot (can be display-only) */}\r\n                        {newAppointment.terminId && (\r\n                            <>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formAppointmentDateDisplay\">\r\n                                    <Form.Label>Selected Date</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={newAppointment.appointmentDate}\r\n                                        readOnly\r\n                                        disabled\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formAppointmentTimeDisplay\">\r\n                                    <Form.Label>Selected Time</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={newAppointment.appointmentTime ? newAppointment.appointmentTime.substring(0, 5) : ''}\r\n                                        readOnly\r\n                                        disabled\r\n                                    />\r\n                                </Form.Group>\r\n                            </>\r\n                        )}\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formReason\">\r\n                            <Form.Label>Reason for Appointment</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"reason\"\r\n                                value={newAppointment.reason}\r\n                                onChange={handleNewAppointmentChange}\r\n                                placeholder=\"e.g., General check-up, specific symptoms...\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeAppointmentModal}>\r\n                        Close\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={handleScheduleAppointment}\r\n                        disabled={!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason || loading}\r\n                    >\r\n                        {editingAppointment ? 'Update Appointment' : 'Schedule Appointment'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Message Detail Modal */}\r\n            <Modal show={!!selectedMessage} onHide={closeMessageModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Message: {selectedMessage?.subject}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedMessage && (\r\n                        <>\r\n                            {/* Display sender of the message (Auth userId) */}\r\n                            <p><strong>From:</strong> {selectedMessage.senderId === currentPatientUserId ? 'Me' : (doctors.find(d => d.userId === selectedMessage.senderId)?.firstName + ' ' + doctors.find(d => d.userId === selectedMessage.senderId)?.lastName || `Doctor (${selectedMessage.senderId})`)}</p>\r\n                            <p><strong>Date:</strong> {new Date(selectedMessage.timestamp).toLocaleString()}</p>\r\n                            <hr />\r\n                            <p>{selectedMessage.content}</p>\r\n\r\n                            {selectedMessage.replies && selectedMessage.replies.length > 0 && (\r\n                                <div className=\"mt-4\">\r\n                                    <h5>Replies:</h5>\r\n                                    {selectedMessage.replies.map((reply, index) => (\r\n                                        <div key={index} className=\"border p-2 mb-2 rounded bg-light\">\r\n                                            {/* Display sender of the reply (Auth userId) */}\r\n                                            <strong>{reply.senderId === currentPatientUserId ? 'Me' : (doctors.find(d => d.userId === reply.senderId)?.firstName + ' ' + doctors.find(d => d.userId === reply.senderId)?.lastName || `Doctor (${reply.senderId})`)}:</strong> {reply.content}\r\n                                            <br />\r\n                                            <small>{new Date(reply.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            <Form.Group className=\"mt-4\">\r\n                                <Form.Label>Reply</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={2}\r\n                                    value={replyMessage.content}\r\n                                    onChange={handleReplyMessageChange}\r\n                                    placeholder=\"Type your reply here...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" className=\"mt-2\" onClick={() => handleReply(selectedMessage.id)}>Send Reply</Button>\r\n                        </>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeMessageModal}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Rating Modal */}\r\n            <Modal show={showRatingModal} onHide={closeRatingModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Rate Doctor: {selectedDoctorForRating?.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formRating\">\r\n                            <Form.Label>Rating (1-5)</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"ocjena\"\r\n                                value={ratingData.ocjena}\r\n                                onChange={handleRatingChange}\r\n                                required\r\n                            >\r\n                                <option value=\"1\">1 - Very Poor</option>\r\n                                <option value=\"2\">2 - Poor</option>\r\n                                <option value=\"3\">3 - Average</option>\r\n                                <option value=\"4\">4 - Good</option>\r\n                                <option value=\"5\">5 - Excellent</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formRatingComment\">\r\n                            <Form.Label>Comment (optional)</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"komentar\"\r\n                                value={ratingData.komentar}\r\n                                onChange={handleRatingChange}\r\n                                placeholder=\"Write a comment about your experience...\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeRatingModal}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSubmitRating}>\r\n                        Submit Rating\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* NEW: Bill Details Modal */}\r\n            <Modal show={showBillDetailsModal} onHide={closeBillDetailsModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Bill Details</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedBillDetails && (\r\n                        <div>\r\n                            <p><strong>Bill ID:</strong> {selectedBillDetails.id}</p>\r\n                            <p><strong>Issue Date:</strong> {new Date(selectedBillDetails.billDate).toLocaleDateString()}</p>\r\n                            <p><strong>Amount:</strong> {selectedBillDetails.amount ? selectedBillDetails.amount.toFixed(2) : 'N/A'} KM</p>\r\n                            <p><strong>Status:</strong> <span className={`badge bg-${selectedBillDetails.status === 'PLACEN' ? 'success' : 'warning'}`}>{selectedBillDetails.status}</span></p>\r\n                            <p><strong>Description:</strong> {selectedBillDetails.opis}</p>\r\n                            <p><strong>Issued By:</strong> {selectedBillDetails.doktorIme}</p>\r\n                            {selectedBillDetails.dueDate && (\r\n                                <p><strong>Due Date:</strong> {new Date(selectedBillDetails.dueDate).toLocaleDateString()}</p>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeBillDetailsModal}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAEC,GAAG,EAAEC,IAAI,QAAQ,iBAAiB;AAChF;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,gBAAgB,GAAG,uBAAuB;;AAEhD;AACA,MAAMC,4BAA4B,GAAG,GAAGD,gBAAgB,wBAAwB;AAChF,MAAME,2BAA2B,GAAG,GAAGF,gBAAgB,uBAAuB;AAC9E,MAAMG,+BAA+B,GAAG,GAAGH,gBAAgB,+BAA+B;AAC1F,MAAMI,eAAe,GAAG,GAAGJ,gBAAgB,OAAO,CAAC,CAAC;;AAEpD,SAASK,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,cAAA,EAAAC,cAAA;EACxB;EACA,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAG1B,OAAO,CAAC,CAAC;EACjC2B,OAAO,CAACC,GAAG,CAAC,sDAAsD,EAAEF,IAAI,CAAC;EAEzE,MAAMG,WAAW,GAAGzB,OAAO,CAAC,OAAO;IAC/B0B,OAAO,EAAE;MACL,eAAe,EAAE,UAAUL,KAAK;IACpC;EACJ,CAAC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEZ,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,UAAU,CAAC;EACtD,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmC,cAAc,EAAEC,iBAAiB,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACqC,OAAO,EAAEC,UAAU,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACuC,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC1E,MAAM,CAACyC,SAAS,EAAEC,YAAY,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC2C,KAAK,EAAEC,QAAQ,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC6C,QAAQ,EAAEC,WAAW,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC+C,UAAU,EAAEC,aAAa,CAAC,GAAGhD,QAAQ,CAAC;IAAEiD,WAAW,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAC3F,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGrD,QAAQ,CAAC;IAAEsD,SAAS,EAAE,EAAE;IAAEH,OAAO,EAAE;EAAG,CAAC,CAAC;EAChF,MAAM,CAACI,eAAe,EAAEC,kBAAkB,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAM,CAACyD,SAAS,EAAEC,YAAY,CAAC,GAAG1D,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC2D,YAAY,EAAEC,eAAe,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC6D,SAAS,EAAEC,YAAY,CAAC,GAAG9D,QAAQ,CAAC,SAAS,CAAC;EAErD,MAAM,CAAC+D,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhE,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACiE,cAAc,EAAEC,iBAAiB,CAAC,GAAGlE,QAAQ,CAAC;IACjDmE,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE,EAAE;IACnBC,eAAe,EAAE,EAAE;IACnBC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGzE,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAM,CAAC0E,OAAO,EAAEC,UAAU,CAAC,GAAG3E,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM,CAAC4E,eAAe,EAAEC,kBAAkB,CAAC,GAAG7E,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC8E,uBAAuB,EAAEC,0BAA0B,CAAC,GAAG/E,QAAQ,CAAC,IAAI,CAAC;EAC5E,MAAM,CAACgF,UAAU,EAAEC,aAAa,CAAC,GAAGjF,QAAQ,CAAC;IAAEkF,MAAM,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC,CAAC,CAAC;;EAE3E;EACA,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGrF,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACsF,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGvF,QAAQ,CAAC,IAAI,CAAC;;EAGpE;;EAEA,MAAMwF,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI,CAAChE,IAAI,IAAI,CAACA,IAAI,CAACiE,UAAU,EAAE;MAC3BhE,OAAO,CAACiE,IAAI,CAAC,qDAAqD,CAAC;MACnE;IACJ;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM9F,KAAK,CAAC+F,GAAG,CAAC,GAAG5E,2BAA2B,0BAA0BQ,IAAI,CAACiE,UAAU,EAAE,EAAE9D,WAAW,CAAC;MACxH,MAAMkE,uBAAuB,GAAGF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;QACtDC,EAAE,EAAED,GAAG,CAACE,SAAS;QACjBC,QAAQ,EAAEH,GAAG,CAACG,QAAQ;QACtBC,UAAU,EAAEJ,GAAG,CAACI,UAAU;QAC1BC,aAAa,EAAEL,GAAG,CAACK,aAAa;QAChCC,eAAe,EAAEN,GAAG,CAACM,eAAe;QACpCC,iBAAiB,EAAEP,GAAG,CAACO,iBAAiB;QACxCC,MAAM,EAAER,GAAG,CAACQ,MAAM;QAClBC,QAAQ,EAAET,GAAG,CAACS,QAAQ;QACtBC,SAAS,EAAEV,GAAG,CAACU;MACnB,CAAC,CAAC,CAAC;MACH1E,eAAe,CAAC6D,uBAAuB,CAAC;MACxC/B,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOiD,KAAK,EAAE;MAAA,IAAAC,eAAA;MACZnF,OAAO,CAACkF,KAAK,CAAC,sCAAsC,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAAChB,QAAQ,cAAAiB,eAAA,uBAAdA,eAAA,CAAgBd,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MAC5FjD,eAAe,CAAC,yCAAyC,CAAC;MAC1DE,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,MAAMoD,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACtF,IAAI,IAAI,CAACA,IAAI,CAACiE,UAAU,EAAE;MAC3BhE,OAAO,CAACiE,IAAI,CAAC,wDAAwD,CAAC;MACtE;IACJ;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM9F,KAAK,CAAC+F,GAAG,CAAC,GAAG7E,4BAA4B,sCAAsCS,IAAI,CAACiE,UAAU,EAAE,EAAE9D,WAAW,CAAC;MACrI,MAAMoF,kBAAkB,GAAGpB,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACiB,MAAM,KAAK;QACpDf,EAAE,EAAEe,MAAM,CAACC,OAAO;QAClBC,SAAS,EAAEF,MAAM,CAACZ,UAAU;QAC5BjC,QAAQ,EAAE6C,MAAM,CAACb,QAAQ;QACzBgB,UAAU,EAAEH,MAAM,CAACN,SAAS;QAC5BU,IAAI,EAAEJ,MAAM,CAACK,gBAAgB;QAC7BC,SAAS,EAAEN,MAAM,CAACO,SAAS;QAC3BC,SAAS,EAAER,MAAM,CAACS,SAAS;QAC3BC,KAAK,EAAEV,MAAM,CAACW;MAClB,CAAC,CAAC,CAAC;MACHzF,iBAAiB,CAAC6E,kBAAkB,CAAC;MACrCjD,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOiD,KAAK,EAAE;MAAA,IAAAiB,gBAAA;MACZnG,OAAO,CAACkF,KAAK,CAAC,iCAAiC,EAAE,EAAAiB,gBAAA,GAAAjB,KAAK,CAAChB,QAAQ,cAAAiC,gBAAA,uBAAdA,gBAAA,CAAgB9B,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MACvFjD,eAAe,CAAC,kCAAkC,CAAC;MACnDE,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,MAAMmE,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACrG,IAAI,IAAI,CAACA,IAAI,CAACiE,UAAU,EAAE;MAC3BhE,OAAO,CAACiE,IAAI,CAAC,wDAAwD,CAAC;MACtE;IACJ;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM9F,KAAK,CAAC+F,GAAG,CAAC,GAAG7E,4BAA4B,kBAAkBS,IAAI,CAACiE,UAAU,EAAE,EAAE9D,WAAW,CAAC;MACjHS,iBAAiB,CAAC;QACd6D,EAAE,EAAEN,QAAQ,CAACG,IAAI,CAACM,UAAU;QAC5B0B,SAAS,EAAEnC,QAAQ,CAACG,IAAI,CAACiC,GAAG;QAC5BC,QAAQ,EAAErC,QAAQ,CAACG,IAAI,CAACmC,OAAO;QAC/BC,KAAK,EAAEvC,QAAQ,CAACG,IAAI,CAACoC,KAAK;QAC1BC,KAAK,EAAExC,QAAQ,CAACG,IAAI,CAACsC,OAAO;QAC5BC,aAAa,EAAE1C,QAAQ,CAACG,IAAI,CAACuC,aAAa;QAC1CC,MAAM,EAAE3C,QAAQ,CAACG,IAAI,CAACwC,MAAM;QAC5BC,MAAM,EAAEC,MAAM,CAAC7C,QAAQ,CAACG,IAAI,CAACyC,MAAM,CAAC,CAAC;MACzC,CAAC,CAAC;MACFzE,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOiD,KAAK,EAAE;MAAA,IAAA8B,gBAAA;MACZhH,OAAO,CAACkF,KAAK,CAAC,iCAAiC,EAAE,EAAA8B,gBAAA,GAAA9B,KAAK,CAAChB,QAAQ,cAAA8C,gBAAA,uBAAdA,gBAAA,CAAgB3C,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MACvFjD,eAAe,CAAC,+BAA+B,CAAC;MAChDE,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,MAAMgF,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAM/C,QAAQ,GAAG,MAAM9F,KAAK,CAAC+F,GAAG,CAAC,GAAG7E,4BAA4B,cAAc,EAAEY,WAAW,CAAC;MAC5F,MAAMgH,kBAAkB,GAAGhD,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAC6C,GAAG,KAAK;QACjD3C,EAAE,EAAE2C,GAAG,CAACzC,QAAQ;QAChBoC,MAAM,EAAEC,MAAM,CAACI,GAAG,CAACL,MAAM,CAAC;QAAE;QAC5BT,SAAS,EAAEc,GAAG,CAACb,GAAG;QAClBC,QAAQ,EAAEY,GAAG,CAACX,OAAO;QACrBY,SAAS,EAAEC,KAAK,CAACC,OAAO,CAACH,GAAG,CAACI,eAAe,CAAC,GAAGJ,GAAG,CAACI,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC,GAAGL,GAAG,CAACI,eAAe;QACpGd,KAAK,EAAEU,GAAG,CAACV,KAAK;QAChBC,KAAK,EAAES,GAAG,CAACR,OAAO;QAClBlD,MAAM,EAAE0D,GAAG,CAAC1D;MAChB,CAAC,CAAC,CAAC;MACH5C,UAAU,CAACqG,kBAAkB,CAAC;MAC9B7E,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOiD,KAAK,EAAE;MAAA,IAAAuC,gBAAA;MACZzH,OAAO,CAACkF,KAAK,CAAC,yBAAyB,EAAE,EAAAuC,gBAAA,GAAAvC,KAAK,CAAChB,QAAQ,cAAAuD,gBAAA,uBAAdA,gBAAA,CAAgBpD,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MAC/EjD,eAAe,CAAC,8BAA8B,CAAC;MAC/CE,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,MAAMyF,4BAA4B,GAAG,MAAOC,QAAQ,IAAK;IACrD,IAAI,CAACA,QAAQ,EAAE;MACX5G,0BAA0B,CAAC,EAAE,CAAC;MAC9B;IACJ;IACAmC,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMgB,QAAQ,GAAG,MAAM9F,KAAK,CAAC+F,GAAG,CAAC,GAAG5E,2BAA2B,yBAAyBoI,QAAQ,EAAE,EAAEzH,WAAW,CAAC;MAChH,MAAM0H,SAAS,GAAGP,KAAK,CAACC,OAAO,CAACpD,QAAQ,CAACG,IAAI,CAAC,GAAGH,QAAQ,CAACG,IAAI,GAAG,EAAE;MACnE,MAAMwD,SAAS,GAAGD,SAAS,CACtBtD,GAAG,CAACwD,IAAI,KAAK;QACV9C,QAAQ,EAAE8C,IAAI,CAAC9C,QAAQ;QACvB+C,KAAK,EAAED,IAAI,CAACC,KAAK;QACjBC,OAAO,EAAEF,IAAI,CAACE,OAAO;QACrBC,OAAO,EAAE,GAAGH,IAAI,CAACC,KAAK,IAAID,IAAI,CAACE,OAAO,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1D,CAAC,CAAC,CAAC,CACFC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACZ,MAAMC,SAAS,GAAG,GAAGF,CAAC,CAACL,KAAK,IAAIK,CAAC,CAACJ,OAAO,EAAE;QAC3C,MAAMO,SAAS,GAAG,GAAGF,CAAC,CAACN,KAAK,IAAIM,CAAC,CAACL,OAAO,EAAE;QAC3C,OAAO,IAAIQ,IAAI,CAACF,SAAS,CAAC,GAAG,IAAIE,IAAI,CAACD,SAAS,CAAC;MACpD,CAAC,CAAC;MACNxH,0BAA0B,CAAC8G,SAAS,CAAC;MACrCxF,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOiD,KAAK,EAAE;MAAA,IAAAuD,gBAAA;MACZzI,OAAO,CAACkF,KAAK,CAAC,qCAAqC,EAAE,EAAAuD,gBAAA,GAAAvD,KAAK,CAAChB,QAAQ,cAAAuE,gBAAA,uBAAdA,gBAAA,CAAgBpE,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MAC3FjD,eAAe,CAAC,sCAAsC,CAAC;MACvDE,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;MAClBlB,0BAA0B,CAAC,EAAE,CAAC;IAClC,CAAC,SAAS;MACNmC,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMwF,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAC3I,IAAI,IAAI,CAACA,IAAI,CAACiE,UAAU,EAAE;MAC3BhE,OAAO,CAACiE,IAAI,CAAC,kDAAkD,CAAC;MAChE;IACJ;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM9F,KAAK,CAAC+F,GAAG,CAAC,GAAG3E,+BAA+B,+BAA+BO,IAAI,CAACiE,UAAU,EAAE,EAAE9D,WAAW,CAAC;MACjI,MAAMyI,oBAAoB,GAAGzE,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAC6C,GAAG,KAAK;QACnD3C,EAAE,EAAE2C,GAAG,CAACyB,UAAU;QAClBC,QAAQ,EAAE1B,GAAG,CAAC2B,cAAc;QAC5BC,YAAY,EAAE5B,GAAG,CAAC6B,YAAY;QAC9BC,UAAU,EAAE9B,GAAG,CAAC+B,cAAc;QAC9BC,OAAO,EAAEhC,GAAG,CAACgC;MACjB,CAAC,CAAC,CAAC;MACHlI,YAAY,CAAC0H,oBAAoB,CAAC;MAClCtG,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOiD,KAAK,EAAE;MAAA,IAAAkE,gBAAA;MACZpJ,OAAO,CAACkF,KAAK,CAAC,2BAA2B,EAAE,EAAAkE,gBAAA,GAAAlE,KAAK,CAAChB,QAAQ,cAAAkF,gBAAA,uBAAdA,gBAAA,CAAgB/E,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MACjFjD,eAAe,CAAC,4BAA4B,CAAC;MAC7CE,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,MAAMoH,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACtJ,IAAI,IAAI,CAACA,IAAI,CAACiE,UAAU,EAAE;MAC3BhE,OAAO,CAACiE,IAAI,CAAC,8CAA8C,CAAC;MAC5D;IACJ;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM9F,KAAK,CAAC+F,GAAG,CAAC,GAAG3E,+BAA+B,wBAAwBO,IAAI,CAACiE,UAAU,EAAE,EAAE9D,WAAW,CAAC;MAC1H,MAAMoJ,gBAAgB,GAAGpF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACiF,IAAI,KAAK;QAChD/E,EAAE,EAAE+E,IAAI,CAACC,OAAO;QAChBC,QAAQ,EAAEF,IAAI,CAACG,cAAc;QAC7BC,MAAM,EAAEJ,IAAI,CAACK,KAAK;QAClB7E,MAAM,EAAEwE,IAAI,CAACxE,MAAM;QACnB8E,OAAO,EAAEN,IAAI,CAACO,cAAc;QAC5BC,IAAI,EAAER,IAAI,CAACQ,IAAI;QACf9E,SAAS,EAAEsE,IAAI,CAACtE;MACpB,CAAC,CAAC,CAAC;MACH9D,QAAQ,CAACmI,gBAAgB,CAAC;MAC1BjH,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOiD,KAAK,EAAE;MAAA,IAAA8E,gBAAA;MACZhK,OAAO,CAACkF,KAAK,CAAC,uBAAuB,EAAE,EAAA8E,gBAAA,GAAA9E,KAAK,CAAChB,QAAQ,cAAA8F,gBAAA,uBAAdA,gBAAA,CAAgB3F,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MAC7EjD,eAAe,CAAC,sCAAsC,CAAC;MACvDE,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,MAAMgI,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAAClK,IAAI,IAAI,CAACA,IAAI,CAAC+G,MAAM,EAAE;MAAE;MACzB9G,OAAO,CAACiE,IAAI,CAAC,8CAA8C,CAAC;MAC5D;IACJ;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM9F,KAAK,CAAC+F,GAAG,CAAC,GAAG3E,+BAA+B,4BAA4BO,IAAI,CAAC+G,MAAM,oBAAoB,EAAE5G,WAAW,CAAC;MAC5I,MAAMgK,mBAAmB,GAAGhG,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAC6F,GAAG,KAAK;QAClD3F,EAAE,EAAE2F,GAAG,CAACC,QAAQ;QAChBC,QAAQ,EAAEtD,MAAM,CAACoD,GAAG,CAACE,QAAQ,CAAC;QAAE;QAChCC,UAAU,EAAEH,GAAG,CAACG,UAAU;QAC1BC,SAAS,EAAEJ,GAAG,CAACI,SAAS;QACxBC,UAAU,EAAEzD,MAAM,CAACoD,GAAG,CAACK,UAAU,CAAC;QAAE;QACpCC,YAAY,EAAEN,GAAG,CAACM,YAAY;QAC9BC,WAAW,EAAEP,GAAG,CAACO,WAAW;QAC5BjJ,OAAO,EAAE0I,GAAG,CAAC1I,OAAO;QACpBC,OAAO,EAAEyI,GAAG,CAACzI,OAAO;QACpBiJ,SAAS,EAAER,GAAG,CAACQ,SAAS;QACxBC,OAAO,EAAET,GAAG,CAACS,OAAO,IAAI,EAAE,CAAC;MAC/B,CAAC,CAAC,CAAC;MACHvJ,WAAW,CAAC6I,mBAAmB,CAAC;MAChC7H,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOiD,KAAK,EAAE;MAAA,IAAA2F,gBAAA;MACZ7K,OAAO,CAACkF,KAAK,CAAC,0BAA0B,EAAE,EAAA2F,gBAAA,GAAA3F,KAAK,CAAChB,QAAQ,cAAA2G,gBAAA,uBAAdA,gBAAA,CAAgBxG,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MAChFjD,eAAe,CAAC,2BAA2B,CAAC;MAC5CE,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;;EAED;EACAzD,SAAS,CAAC,MAAM;IACZ,MAAMsM,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIhL,KAAK,IAAIC,IAAI,EAAE;QAAE;QACjBmD,UAAU,CAAC,IAAI,CAAC;QAChB,MAAM6H,OAAO,CAACC,GAAG,CAAC,CACdjH,wBAAwB,CAAC,CAAC,EAC1BsB,mBAAmB,CAAC,CAAC,EACrBe,mBAAmB,CAAC,CAAC,EACrBa,YAAY,CAAC,CAAC,EACdyB,cAAc,CAAC,CAAC,EAChBW,UAAU,CAAC,CAAC,EACZY,aAAa,CAAC,CAAC,CAAC;QAAA,CACnB,CAAC;QACF/G,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,MAAM,IAAI,CAACpD,KAAK,IAAKC,IAAI,IAAI,CAACA,IAAI,CAACiE,UAAU,IAAI,CAACjE,IAAI,CAAC4H,QAAS,EAAE;QAAE;QACjEzE,UAAU,CAAC,KAAK,CAAC;QACjB,IAAI,CAACpD,KAAK,EAAE;UACRE,OAAO,CAACiE,IAAI,CAAC,0CAA0C,CAAC;QAC5D,CAAC,MAAM;UACHjE,OAAO,CAACiE,IAAI,CAAC,kGAAkG,CAAC;QACpH;MACJ;IACJ,CAAC;IACD6G,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAAChL,KAAK,EAAEC,IAAI,CAAC,CAAC;;EAGjB;;EAEA,MAAMkL,oBAAoB,GAAGA,CAACC,WAAW,GAAG,IAAI,EAAEC,kBAAkB,GAAG,IAAI,KAAK;IAC5E,IAAID,WAAW,EAAE;MACblI,qBAAqB,CAACkI,WAAW,CAAC;MAClCzI,iBAAiB,CAAC;QACdC,QAAQ,EAAEwI,WAAW,CAACxG,QAAQ;QAC9B/B,eAAe,EAAEuI,WAAW,CAACtG,aAAa;QAC1ChC,eAAe,EAAEsI,WAAW,CAACrG,eAAe;QAC5ChC,QAAQ,EAAEqI,WAAW,CAAClG,QAAQ;QAC9BlC,MAAM,EAAEoI,WAAW,CAACpG;MACxB,CAAC,CAAC;MACF4C,4BAA4B,CAACwD,WAAW,CAACxG,QAAQ,CAAC;IACtD,CAAC,MAAM;MACH1B,qBAAqB,CAAC,IAAI,CAAC;MAC3BP,iBAAiB,CAAC;QACdC,QAAQ,EAAEyI,kBAAkB,IAAI,EAAE;QAClCxI,eAAe,EAAE,EAAE;QACnBC,eAAe,EAAE,EAAE;QACnBC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE;MACZ,CAAC,CAAC;MACF/B,0BAA0B,CAAC,EAAE,CAAC;MAC9B;MACA,IAAIoK,kBAAkB,EAAE;QACpBzD,4BAA4B,CAACyD,kBAAkB,CAAC;MACpD;IACJ;IACA5I,uBAAuB,CAAC,IAAI,CAAC;EACjC,CAAC;EAED,MAAM6I,qBAAqB,GAAGA,CAAA,KAAM;IAChC7I,uBAAuB,CAAC,KAAK,CAAC;IAC9BS,qBAAqB,CAAC,IAAI,CAAC;IAC3BP,iBAAiB,CAAC;MACdC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,eAAe,EAAE,EAAE;MACnBC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACZ,CAAC,CAAC;IACF/B,0BAA0B,CAAC,EAAE,CAAC;EAClC,CAAC;EAED,MAAMsK,0BAA0B,GAAG,MAAOC,CAAC,IAAK;IAC5C,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAEhC,IAAIC,kBAAkB,GAAG;MAAE,GAAGlJ,cAAc;MAAE,CAAC+I,IAAI,GAAGC;IAAM,CAAC;IAE7D,IAAID,IAAI,KAAK,UAAU,EAAE;MACrBG,kBAAkB,CAAC/I,eAAe,GAAG,EAAE;MACvC+I,kBAAkB,CAAC9I,eAAe,GAAG,EAAE;MACvC8I,kBAAkB,CAAC7I,QAAQ,GAAG,EAAE;MAChC,IAAI2I,KAAK,EAAE;QACP,MAAM9D,4BAA4B,CAAC8D,KAAK,CAAC;MAC7C,CAAC,MAAM;QACHzK,0BAA0B,CAAC,EAAE,CAAC;MAClC;IACJ,CAAC,MAAM,IAAIwK,IAAI,KAAK,UAAU,EAAE;MAC5B,MAAMI,YAAY,GAAG7K,uBAAuB,CAAC8K,IAAI,CAAC9D,IAAI,IAAIA,IAAI,CAAC9C,QAAQ,KAAK6G,QAAQ,CAACL,KAAK,CAAC,CAAC;MAC5F,IAAIG,YAAY,EAAE;QACdD,kBAAkB,CAAC7I,QAAQ,GAAG8I,YAAY,CAAC3G,QAAQ;QACnD0G,kBAAkB,CAAC/I,eAAe,GAAGgJ,YAAY,CAAC5D,KAAK;QACvD2D,kBAAkB,CAAC9I,eAAe,GAAG+I,YAAY,CAAC3D,OAAO;MAC7D,CAAC,MAAM;QACH0D,kBAAkB,CAAC7I,QAAQ,GAAG,EAAE;QAChC6I,kBAAkB,CAAC/I,eAAe,GAAG,EAAE;QACvC+I,kBAAkB,CAAC9I,eAAe,GAAG,EAAE;MAC3C;IACJ;IACAH,iBAAiB,CAACiJ,kBAAkB,CAAC;EACzC,CAAC;EAGD,MAAMI,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI,CAAC/L,IAAI,IAAI,CAACA,IAAI,CAACiE,UAAU,EAAE;MAC3B7B,eAAe,CAAC,wDAAwD,CAAC;MACzEE,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;MAClB;IACJ;IAEA,IAAI,CAACO,cAAc,CAACE,QAAQ,IAAI,CAACF,cAAc,CAACK,QAAQ,IAAI,CAACL,cAAc,CAACM,MAAM,EAAE;MAChFX,eAAe,CAAC,kEAAkE,CAAC;MACnFE,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;MAClB;IACJ;;IAEA;IACA,MAAM8J,eAAe,GAAG;MACpBpH,UAAU,EAAE5E,IAAI,CAACiE,UAAU;MAC3BU,QAAQ,EAAEmH,QAAQ,CAACrJ,cAAc,CAACE,QAAQ,CAAC;MAAE;MAC7CsC,QAAQ,EAAExC,cAAc,CAACK,QAAQ;MACjC+B,aAAa,EAAEpC,cAAc,CAACG,eAAe;MAC7CkC,eAAe,EAAErC,cAAc,CAACI,eAAe;MAC/CkC,iBAAiB,EAAEtC,cAAc,CAACM,MAAM;MACxCiC,MAAM,EAAEhC,kBAAkB,GAAGA,kBAAkB,CAACgC,MAAM,GAAG;IAC7D,CAAC;IAED,IAAI;MACA;MACA,MAAM3G,KAAK,CAAC4N,IAAI,CAAC,GAAGzM,2BAA2B,eAAe,EAAEwM,eAAe,EAAE7L,WAAW,CAAC;MAE7FiC,eAAe,CAAC,kGAAkG,CAAC;MACnHE,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;MAElBmJ,qBAAqB,CAAC,CAAC;MACvB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,CAAC,OAAOlG,KAAK,EAAE;MAAA,IAAA+G,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACZnM,OAAO,CAACkF,KAAK,CAAC,wCAAwC,EAAE,EAAA+G,gBAAA,GAAA/G,KAAK,CAAChB,QAAQ,cAAA+H,gBAAA,uBAAdA,gBAAA,CAAgB5H,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MAC9F,IAAIgH,YAAY,GAAG,0DAA0D;MAC7E,KAAAF,gBAAA,GAAIhH,KAAK,CAAChB,QAAQ,cAAAgI,gBAAA,gBAAAC,qBAAA,GAAdD,gBAAA,CAAgB7H,IAAI,cAAA8H,qBAAA,eAApBA,qBAAA,CAAsB/G,OAAO,EAAE;QAC/BgH,YAAY,GAAGlH,KAAK,CAAChB,QAAQ,CAACG,IAAI,CAACe,OAAO;MAC9C,CAAC,MAAM,IAAIF,KAAK,CAACE,OAAO,EAAE;QACtBgH,YAAY,GAAGlH,KAAK,CAACE,OAAO;MAChC;MACAjD,eAAe,CAACiK,YAAY,CAAC;MAC7B/J,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,MAAMoK,uBAAuB,GAAG,MAAOC,aAAa,IAAK;IACrD,IAAIC,MAAM,CAACC,OAAO,CAAC,mDAAmD,CAAC,EAAE;MACrE,IAAI,CAACzM,IAAI,IAAI,CAACA,IAAI,CAACiE,UAAU,EAAE;QAC3B7B,eAAe,CAAC,8DAA8D,CAAC;QAC/EE,YAAY,CAAC,QAAQ,CAAC;QACtBJ,YAAY,CAAC,IAAI,CAAC;QAClB;MACJ;MACA,IAAI;QACA,MAAMwK,WAAW,GAAGnM,YAAY,CAACsL,IAAI,CAACrH,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAK8H,aAAa,CAAC;QACtE,IAAI,CAACG,WAAW,EAAE;UACdtK,eAAe,CAAC,yCAAyC,CAAC;UAC1DE,YAAY,CAAC,QAAQ,CAAC;UACtBJ,YAAY,CAAC,IAAI,CAAC;UAClB;QACJ;QAEA,MAAMyK,aAAa,GAAG;UAClBjI,SAAS,EAAEgI,WAAW,CAACjI,EAAE;UACzBG,UAAU,EAAE5E,IAAI,CAACiE,UAAU;UAC3BU,QAAQ,EAAE+H,WAAW,CAAC/H,QAAQ;UAC9BM,QAAQ,EAAEyH,WAAW,CAACzH,QAAQ;UAC9BJ,aAAa,EAAE6H,WAAW,CAAC7H,aAAa;UACxCC,eAAe,EAAE4H,WAAW,CAAC5H,eAAe;UAC5CC,iBAAiB,EAAE2H,WAAW,CAAC3H,iBAAiB;UAChDC,MAAM,EAAE;QACZ,CAAC;QAED,MAAM3G,KAAK,CAACuO,GAAG,CAAC,GAAGpN,2BAA2B,iBAAiB+M,aAAa,EAAE,EAAEI,aAAa,EAAExM,WAAW,CAAC;QAC3GiC,eAAe,CAAC,qCAAqC,CAAC;QACtDE,YAAY,CAAC,SAAS,CAAC;QACvBJ,YAAY,CAAC,IAAI,CAAC;QAClB8B,wBAAwB,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOmB,KAAK,EAAE;QAAA,IAAA0H,gBAAA,EAAAC,iBAAA,EAAAC,qBAAA;QACZ9M,OAAO,CAACkF,KAAK,CAAC,+BAA+B,EAAE,EAAA0H,gBAAA,GAAA1H,KAAK,CAAChB,QAAQ,cAAA0I,gBAAA,uBAAdA,gBAAA,CAAgBvI,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;QACrFjD,eAAe,CAAC,kDAAkD,IAAI,EAAA0K,iBAAA,GAAA3H,KAAK,CAAChB,QAAQ,cAAA2I,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBxI,IAAI,cAAAyI,qBAAA,uBAApBA,qBAAA,CAAsB1H,OAAO,KAAIF,KAAK,CAACE,OAAO,CAAC,CAAC;QACtH/C,YAAY,CAAC,QAAQ,CAAC;QACtBJ,YAAY,CAAC,IAAI,CAAC;MACtB;IACJ;EACJ,CAAC;;EAED;EACA,MAAM8K,mBAAmB,GAAIzB,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC9K,iBAAiB,CAACqM,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACzB,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMyB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAAClN,IAAI,IAAI,CAACA,IAAI,CAACiE,UAAU,IAAI,CAACjE,IAAI,CAAC+G,MAAM,EAAE;MAC3C3E,eAAe,CAAC,2DAA2D,CAAC;MAC5EE,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;MAClB;IACJ;IAEA,IAAI;MACA,MAAMiL,qBAAqB,GAAG;QAC1BvI,UAAU,EAAE5E,IAAI,CAACiE,UAAU;QAC3BsC,GAAG,EAAE5F,cAAc,CAAC2F,SAAS;QAC7BG,OAAO,EAAE9F,cAAc,CAAC6F,QAAQ;QAChCE,KAAK,EAAE/F,cAAc,CAAC+F,KAAK;QAC3BE,OAAO,EAAEjG,cAAc,CAACgG,KAAK;QAC7BE,aAAa,EAAElG,cAAc,CAACkG,aAAa;QAC3CC,MAAM,EAAEnG,cAAc,CAACmG,MAAM;QAC7BC,MAAM,EAAE/G,IAAI,CAAC+G;MACjB,CAAC;MACD,MAAM1I,KAAK,CAACuO,GAAG,CAAC,GAAGrN,4BAA4B,kBAAkBS,IAAI,CAACiE,UAAU,EAAE,EAAEkJ,qBAAqB,EAAEhN,WAAW,CAAC;MAEvH,MAAMiN,kBAAkB,GAAG;QACvB1G,KAAK,EAAE/F,cAAc,CAAC+F,KAAK;QAC3B2G,QAAQ,EAAE,GAAG1M,cAAc,CAAC2F,SAAS,IAAI3F,cAAc,CAAC6F,QAAQ,EAAE;QAClEI,OAAO,EAAEjG,cAAc,CAACgG;MAC5B,CAAC;MACD,MAAMtI,KAAK,CAACuO,GAAG,CAAC,GAAGlN,eAAe,UAAUM,IAAI,CAAC+G,MAAM,EAAE,EAAEqG,kBAAkB,EAAEjN,WAAW,CAAC;MAG3FiC,eAAe,CAAC,+BAA+B,CAAC;MAChDE,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;MAClBmE,mBAAmB,CAAC,CAAC;IACzB,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAAmI,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACZvN,OAAO,CAACkF,KAAK,CAAC,yBAAyB,EAAE,EAAAmI,iBAAA,GAAAnI,KAAK,CAAChB,QAAQ,cAAAmJ,iBAAA,uBAAdA,iBAAA,CAAgBhJ,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MAC/EjD,eAAe,CAAC,8CAA8C,IAAI,EAAAmL,iBAAA,GAAApI,KAAK,CAAChB,QAAQ,cAAAoJ,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBjJ,IAAI,cAAAkJ,qBAAA,uBAApBA,qBAAA,CAAsBnI,OAAO,KAAIF,KAAK,CAACE,OAAO,CAAC,CAAC;MAClH/C,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;;EAED;EACA,MAAMuL,oBAAoB,GAAG,MAAOlC,CAAC,IAAK;IACtC,MAAMmC,IAAI,GAAGnC,CAAC,CAACG,MAAM,CAACiC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACD,IAAI,EAAE;IAEX,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;IAC7BE,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE9N,IAAI,CAACiE,UAAU,CAAC;IAC9C2J,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE,gBAAgB,CAAC;IAEjD,IAAI;MACA,MAAMzP,KAAK,CAAC4N,IAAI,CAAC,GAAGxM,+BAA+B,2BAA2B,EAAEmO,QAAQ,EAAE;QACtFxN,OAAO,EAAE;UACL,eAAe,EAAE,UAAUL,KAAK,EAAE;UAClC,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACFqC,eAAe,CAAC,iCAAiC,CAAC;MAClDE,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;MAClByG,cAAc,CAAC,CAAC;IACpB,CAAC,CACD,OAAOxD,KAAK,EAAE;MAAA,IAAA4I,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACVhO,OAAO,CAACkF,KAAK,CAAC,2BAA2B,EAAE,EAAA4I,iBAAA,GAAA5I,KAAK,CAAChB,QAAQ,cAAA4J,iBAAA,uBAAdA,iBAAA,CAAgBzJ,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MACjFjD,eAAe,CAAC,0BAA0B,IAAI,EAAA4L,iBAAA,GAAA7I,KAAK,CAAChB,QAAQ,cAAA6J,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgB1J,IAAI,cAAA2J,qBAAA,uBAApBA,qBAAA,CAAsB5I,OAAO,KAAIF,KAAK,CAACE,OAAO,CAAC,EAAE,QAAQ,CAAC;IAC5G;EACJ,CAAC;;EAED;EACA,MAAM6I,sBAAsB,GAAI3C,CAAC,IAAK;IAClC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChClK,aAAa,CAACyL,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACzB,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,MAAM0C,wBAAwB,GAAI5C,CAAC,IAAK;IACpC1J,eAAe,CAACoL,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEtL,OAAO,EAAE4J,CAAC,CAACG,MAAM,CAACD;IAAM,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,MAAM2C,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACpO,IAAI,IAAI,CAACA,IAAI,CAAC+G,MAAM,EAAE;MAAE;MACzB3E,eAAe,CAAC,qDAAqD,CAAC;MACtEE,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;MAClB;IACJ;IACA,IAAI,CAACX,UAAU,CAACE,WAAW,IAAI,CAACF,UAAU,CAACG,OAAO,IAAI,CAACH,UAAU,CAACI,OAAO,EAAE;MACvES,eAAe,CAAC,oCAAoC,CAAC;MACrDE,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;MAClB;IACJ;IAEA,IAAI;MACA,MAAMmM,WAAW,GAAG;QAChB/D,QAAQ,EAAEtK,IAAI,CAAC+G,MAAM;QAAE;QACvBwD,UAAU,EAAE,UAAU;QACtBE,UAAU,EAAEzD,MAAM,CAACzF,UAAU,CAACE,WAAW,CAAC;QAAE;QAC5CiJ,YAAY,EAAE,QAAQ;QACtBhJ,OAAO,EAAEH,UAAU,CAACG,OAAO;QAC3BC,OAAO,EAAEJ,UAAU,CAACI;MACxB,CAAC;MACD,MAAMtD,KAAK,CAAC4N,IAAI,CAAC,GAAGxM,+BAA+B,qBAAqB,EAAE4O,WAAW,EAAElO,WAAW,CAAC;MACnGiC,eAAe,CAAC,4BAA4B,CAAC;MAC7CE,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;MAClBV,aAAa,CAAC;QAAEC,WAAW,EAAE,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;MAC5DuI,aAAa,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAO/E,KAAK,EAAE;MAAA,IAAAmJ,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACZvO,OAAO,CAACkF,KAAK,CAAC,wBAAwB,EAAE,EAAAmJ,iBAAA,GAAAnJ,KAAK,CAAChB,QAAQ,cAAAmK,iBAAA,uBAAdA,iBAAA,CAAgBhK,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MAC9EjD,eAAe,CAAC,0BAA0B,IAAI,EAAAmM,iBAAA,GAAApJ,KAAK,CAAChB,QAAQ,cAAAoK,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBjK,IAAI,cAAAkK,qBAAA,uBAApBA,qBAAA,CAAsBnJ,OAAO,KAAIF,KAAK,CAACE,OAAO,CAAC,CAAC;MAC9F/C,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,MAAMuM,WAAW,GAAG,MAAO3M,SAAS,IAAK;IACrC,IAAI,CAAC9B,IAAI,IAAI,CAACA,IAAI,CAAC+G,MAAM,EAAE;MAAE;MACzB3E,eAAe,CAAC,8CAA8C,CAAC;MAC/DE,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;MAClB;IACJ;IACA,IAAI,CAACN,YAAY,CAACD,OAAO,EAAE;MACvBS,eAAe,CAAC,gCAAgC,CAAC;MACjDE,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;MAClB;IACJ;IACA,IAAI;MACA,MAAM7D,KAAK,CAAC4N,IAAI,CAAC,GAAGxM,+BAA+B,eAAeqC,SAAS,WAAW,EAAE;QACpFwI,QAAQ,EAAEtK,IAAI,CAAC+G,MAAM;QAAE;QACvByD,SAAS,EAAExK,IAAI,CAACqN,QAAQ;QAAE;QAC1B9C,UAAU,EAAE,UAAU;QACtB5I,OAAO,EAAEC,YAAY,CAACD,OAAO;QAC7BiJ,SAAS,EAAE,IAAInC,IAAI,CAAC,CAAC,CAACiG,WAAW,CAAC;MACtC,CAAC,EAAEvO,WAAW,CAAC;MACfiC,eAAe,CAAC,0BAA0B,CAAC;MAC3CE,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;MAClBL,eAAe,CAAC;QAAEC,SAAS,EAAE,EAAE;QAAEH,OAAO,EAAE;MAAG,CAAC,CAAC;MAC/CuI,aAAa,CAAC,CAAC,CAAC,CAAC;MACjB;MACAlI,kBAAkB,CAACiL,IAAI,IAAI;QACvB,IAAI,CAACA,IAAI,EAAE,OAAO,IAAI;QACtB,OAAO;UACH,GAAGA,IAAI;UACPpC,OAAO,EAAE,CAAC,IAAIoC,IAAI,CAACpC,OAAO,IAAI,EAAE,CAAC,EAAE;YAC/BP,QAAQ,EAAEtK,IAAI,CAAC+G,MAAM;YAAE;YACvByD,SAAS,EAAExK,IAAI,CAACqN,QAAQ;YAAE;YAC1B9C,UAAU,EAAE,UAAU;YACtB5I,OAAO,EAAEC,YAAY,CAACD,OAAO;YAC7BiJ,SAAS,EAAE,IAAInC,IAAI,CAAC,CAAC,CAACiG,WAAW,CAAC;UACtC,CAAC;QACL,CAAC;MACL,CAAC,CAAC;IACN,CAAC,CAAC,OAAOvJ,KAAK,EAAE;MAAA,IAAAwJ,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACZ5O,OAAO,CAACkF,KAAK,CAAC,sBAAsB,EAAE,EAAAwJ,iBAAA,GAAAxJ,KAAK,CAAChB,QAAQ,cAAAwK,iBAAA,uBAAdA,iBAAA,CAAgBrK,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MAC5EjD,eAAe,CAAC,wBAAwB,IAAI,EAAAwM,iBAAA,GAAAzJ,KAAK,CAAChB,QAAQ,cAAAyK,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBtK,IAAI,cAAAuK,qBAAA,uBAApBA,qBAAA,CAAsBxJ,OAAO,KAAIF,KAAK,CAACE,OAAO,CAAC,CAAC;MAC5F/C,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,MAAM4M,iBAAiB,GAAIzJ,OAAO,IAAK;IACnCrD,kBAAkB,CAACqD,OAAO,CAAC;EAC/B,CAAC;EAED,MAAM0J,iBAAiB,GAAGA,CAAA,KAAM;IAC5B/M,kBAAkB,CAAC,IAAI,CAAC;IACxBH,eAAe,CAAC;MAAEC,SAAS,EAAE,EAAE;MAAEH,OAAO,EAAE;IAAG,CAAC,CAAC;EACnD,CAAC;;EAED;EACA,MAAMqN,eAAe,GAAGA,CAACrK,QAAQ,EAAEO,SAAS,KAAK;IAC7C3B,0BAA0B,CAAC;MAAEkB,EAAE,EAAEE,QAAQ;MAAE6G,IAAI,EAAEtG;IAAU,CAAC,CAAC;IAC7DzB,aAAa,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;IAC1CN,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAM4L,gBAAgB,GAAGA,CAAA,KAAM;IAC3B5L,kBAAkB,CAAC,KAAK,CAAC;IACzBE,0BAA0B,CAAC,IAAI,CAAC;IAChCE,aAAa,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMuL,kBAAkB,GAAI3D,CAAC,IAAK;IAC9B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCjI,aAAa,CAACwJ,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACzB,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,MAAM0D,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACnP,IAAI,IAAI,CAACA,IAAI,CAACiE,UAAU,EAAE;MAC3B7B,eAAe,CAAC,iDAAiD,CAAC;MAClEE,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;MAClB;IACJ;IACA,IAAI,CAACoB,uBAAuB,IAAIE,UAAU,CAACE,MAAM,KAAK,IAAI,EAAE;MACxDtB,eAAe,CAAC,yBAAyB,CAAC;MAC1CE,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;MAClB;IACJ;IAEA,IAAI;MACA,MAAMkN,aAAa,GAAG;QAClBxK,UAAU,EAAE5E,IAAI,CAACiE,UAAU;QAC3BU,QAAQ,EAAErB,uBAAuB,CAACmB,EAAE;QACpCf,MAAM,EAAE2L,UAAU,CAAC7L,UAAU,CAACE,MAAM,CAAC;QACrCC,QAAQ,EAAEH,UAAU,CAACG;MACzB,CAAC;MAED,MAAMtF,KAAK,CAAC4N,IAAI,CAAC,GAAG1M,4BAA4B,aAAa,EAAE6P,aAAa,EAAEjP,WAAW,CAAC;MAE1FiC,eAAe,CAAC,4CAA4CkB,uBAAuB,CAACkI,IAAI,GAAG,CAAC;MAC5FlJ,YAAY,CAAC,SAAS,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;MAClB+M,gBAAgB,CAAC,CAAC;MAClBjL,wBAAwB,CAAC,CAAC;MAC1BkD,YAAY,CAAC,CAAC;IAClB,CAAC,CAAC,OAAO/B,KAAK,EAAE;MAAA,IAAAmK,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACZvP,OAAO,CAACkF,KAAK,CAAC,0BAA0B,EAAE,EAAAmK,iBAAA,GAAAnK,KAAK,CAAChB,QAAQ,cAAAmL,iBAAA,uBAAdA,iBAAA,CAAgBhL,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;MAChFjD,eAAe,CAAC,2BAA2B,IAAI,EAAAmN,iBAAA,GAAApK,KAAK,CAAChB,QAAQ,cAAAoL,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBjL,IAAI,cAAAkL,qBAAA,uBAApBA,qBAAA,CAAsBnK,OAAO,KAAIF,KAAK,CAACE,OAAO,CAAC,CAAC;MAC/F/C,YAAY,CAAC,QAAQ,CAAC;MACtBJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;;EAED;EACA,MAAMuN,YAAY,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAIlD,MAAM,CAACC,OAAO,CAAC,kDAAkD,CAAC,EAAE;MACpE,IAAI;QACA;QACA,MAAMpO,KAAK,CAACuO,GAAG,CAAC,GAAGnN,+BAA+B,eAAeiQ,MAAM,qBAAqB,EAAE,CAAC,CAAC,EAAEvP,WAAW,CAAC;QAC9GiC,eAAe,CAAC,mCAAmC,CAAC;QACpDE,YAAY,CAAC,SAAS,CAAC;QACvBJ,YAAY,CAAC,IAAI,CAAC;QAClBoH,UAAU,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,OAAOnE,KAAK,EAAE;QAAA,IAAAwK,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;QACZ5P,OAAO,CAACkF,KAAK,CAAC,6BAA6B,EAAE,EAAAwK,iBAAA,GAAAxK,KAAK,CAAChB,QAAQ,cAAAwL,iBAAA,uBAAdA,iBAAA,CAAgBrL,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;QACnFjD,eAAe,CAAC,+BAA+B,IAAI,EAAAwN,iBAAA,GAAAzK,KAAK,CAAChB,QAAQ,cAAAyL,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBtL,IAAI,cAAAuL,qBAAA,uBAApBA,qBAAA,CAAsBxK,OAAO,KAAIF,KAAK,CAACE,OAAO,CAAC,CAAC;QACnG/C,YAAY,CAAC,QAAQ,CAAC;QACtBJ,YAAY,CAAC,IAAI,CAAC;MACtB;IACJ;EACJ,CAAC;;EAED;EACA,MAAM4N,qBAAqB,GAAItG,IAAI,IAAK;IACpCzF,sBAAsB,CAACyF,IAAI,CAAC;IAC5B3F,uBAAuB,CAAC,IAAI,CAAC;EACjC,CAAC;EAED,MAAMkM,qBAAqB,GAAGA,CAAA,KAAM;IAChClM,uBAAuB,CAAC,KAAK,CAAC;IAC9BE,sBAAsB,CAAC,IAAI,CAAC;EAChC,CAAC;EAGD,IAAIb,OAAO,EAAE;IACT,oBACI/D,OAAA;MAAK6Q,SAAS,EAAC,kDAAkD;MAACC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAQ,CAAE;MAAAC,QAAA,gBAC5FhR,OAAA,CAACJ,OAAO;QAACqR,SAAS,EAAC,QAAQ;QAACC,IAAI,EAAC,QAAQ;QAAAF,QAAA,eACrChR,OAAA;UAAM6Q,SAAS,EAAC,iBAAiB;UAAAG,QAAA,EAAC;QAAU;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACVrR,OAAA;QAAG6Q,SAAS,EAAC,MAAM;QAAAG,QAAA,EAAC;MAAyB;QAAArH,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAA1H,QAAA,EAAAwH,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAEd;EAEA,MAAMC,oBAAoB,GAAGzQ,IAAI,CAAC+G,MAAM;EAGxC,oBACI5H,OAAA;IAAK6Q,SAAS,EAAC,QAAQ;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAElDhR,OAAA;MAAK6Q,SAAS,EAAC,wBAAwB;MAACC,KAAK,EAAE;QAAES,KAAK,EAAE;MAAQ,CAAE;MAAAP,QAAA,gBAC9DhR,OAAA;QAAI6Q,SAAS,EAAC,MAAM;QAAAG,QAAA,EAAC;MAAiB;QAAArH,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3CrR,OAAA;QAAI6Q,SAAS,EAAC,iBAAiB;QAAAG,QAAA,gBAC3BhR,OAAA;UAAI6Q,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBhR,OAAA;YACI6Q,SAAS,EAAE,iEAAiE3P,SAAS,KAAK,UAAU,GAAG,6BAA6B,GAAG,EAAE,EAAG;YAC5IsQ,OAAO,EAAEA,CAAA,KAAMrQ,YAAY,CAAC,UAAU,CAAE;YAAA6P,QAAA,EAC3C;UAED;YAAArH,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACLrR,OAAA;UAAI6Q,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBhR,OAAA;YACI6Q,SAAS,EAAE,iEAAiE3P,SAAS,KAAK,gBAAgB,GAAG,6BAA6B,GAAG,EAAE,EAAG;YAClJsQ,OAAO,EAAEA,CAAA,KAAMrQ,YAAY,CAAC,gBAAgB,CAAE;YAAA6P,QAAA,EACjD;UAED;YAAArH,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACLrR,OAAA;UAAI6Q,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBhR,OAAA;YACI6Q,SAAS,EAAE,iEAAiE3P,SAAS,KAAK,gBAAgB,GAAG,6BAA6B,GAAG,EAAE,EAAG;YAClJsQ,OAAO,EAAEA,CAAA,KAAMrQ,YAAY,CAAC,gBAAgB,CAAE;YAAA6P,QAAA,EACjD;UAED;YAAArH,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACLrR,OAAA;UAAI6Q,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBhR,OAAA;YACI6Q,SAAS,EAAE,iEAAiE3P,SAAS,KAAK,WAAW,GAAG,6BAA6B,GAAG,EAAE,EAAG;YAC7IsQ,OAAO,EAAEA,CAAA,KAAMrQ,YAAY,CAAC,WAAW,CAAE;YAAA6P,QAAA,EAC5C;UAED;YAAArH,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACLrR,OAAA;UAAI6Q,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBhR,OAAA;YACI6Q,SAAS,EAAE,iEAAiE3P,SAAS,KAAK,SAAS,GAAG,6BAA6B,GAAG,EAAE,EAAG;YAC3IsQ,OAAO,EAAEA,CAAA,KAAMrQ,YAAY,CAAC,SAAS,CAAE;YAAA6P,QAAA,EAC1C;UAED;YAAArH,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACLrR,OAAA;UAAI6Q,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBhR,OAAA;YACI6Q,SAAS,EAAE,iEAAiE3P,SAAS,KAAK,UAAU,GAAG,6BAA6B,GAAG,EAAE,EAAG;YAC5IsQ,OAAO,EAAEA,CAAA,KAAMrQ,YAAY,CAAC,UAAU,CAAE;YAAA6P,QAAA,EAC3C;UAED;YAAArH,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACLrR,OAAA;UAAI6Q,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBhR,OAAA;YACI6Q,SAAS,EAAE,iEAAiE3P,SAAS,KAAK,cAAc,GAAG,6BAA6B,GAAG,EAAE,EAAG;YAChJsQ,OAAO,EAAEA,CAAA,KAAMrQ,YAAY,CAAC,cAAc,CAAE;YAAA6P,QAAA,EAC/C;UAED;YAAArH,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACLrR,OAAA;UAAI6Q,SAAS,EAAC,eAAe;UAAAG,QAAA,eACzBhR,OAAA;YACI6Q,SAAS,EAAE,iEAAiE3P,SAAS,KAAK,iBAAiB,GAAG,6BAA6B,GAAG,EAAE,EAAG;YACnJsQ,OAAO,EAAEA,CAAA,KAAMrQ,YAAY,CAAC,iBAAiB,CAAE;YAAA6P,QAAA,EAClD;UAED;YAAArH,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAA1H,QAAA,EAAAwH,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGNrR,OAAA;MAAK6Q,SAAS,EAAC,0BAA0B;MAAAG,QAAA,GACpClO,SAAS,iBACN9C,OAAA,CAACL,KAAK;QAAC8R,OAAO,EAAEvO,SAAU;QAACwO,OAAO,EAAEA,CAAA,KAAM3O,YAAY,CAAC,KAAK,CAAE;QAAC4O,WAAW;QAACd,SAAS,EAAC,uDAAuD;QAACC,KAAK,EAAE;UAAEc,MAAM,EAAE;QAAK,CAAE;QAAAZ,QAAA,EAChKhO;MAAY;QAAA2G,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CACV,eAEDrR,OAAA;QAAK6Q,SAAS,EAAC,wDAAwD;QAAAG,QAAA,eACnEhR,OAAA;UAAI6Q,SAAS,EAAC,MAAM;UAAAG,QAAA,EAAC;QAAiB;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,EAGLnQ,SAAS,KAAK,UAAU,iBACrBlB,OAAA;QAAAgR,QAAA,gBACIhR,OAAA;UAAAgR,QAAA,GAAI,WAAS,EAACxP,cAAc,CAAC2F,SAAS,KAAKtG,IAAI,GAAGA,IAAI,CAACqN,QAAQ,GAAG,SAAS,CAAC,EAAC,GAAC;QAAA;UAAAvE,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnFrR,OAAA;UAAAgR,QAAA,EAAG;QAAyG;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAChHrR,OAAA;UAAK6Q,SAAS,EAAC,UAAU;UAAAG,QAAA,eACrBhR,OAAA;YAAK6Q,SAAS,EAAC,UAAU;YAAAG,QAAA,eACrBhR,OAAA;cAAK6Q,SAAS,EAAC,MAAM;cAAAG,QAAA,gBACjBhR,OAAA;gBAAK6Q,SAAS,EAAC,aAAa;gBAAAG,QAAA,EAAC;cAE7B;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACNrR,OAAA;gBAAI6Q,SAAS,EAAC,6BAA6B;gBAAAG,QAAA,EACtC5P,YAAY,CAACyQ,MAAM,CAACxM,GAAG,IAAIA,GAAG,CAACQ,MAAM,KAAK,SAAS,IAAIR,GAAG,CAACQ,MAAM,KAAK,UAAU,CAAC,CAACiM,MAAM,GAAG,CAAC,GACzF1Q,YAAY,CAACyQ,MAAM,CAACxM,GAAG,IAAIA,GAAG,CAACQ,MAAM,KAAK,SAAS,IAAIR,GAAG,CAACQ,MAAM,KAAK,UAAU,CAAC,CAACT,GAAG,CAACC,GAAG,iBACrFrF,OAAA;kBAAiB6Q,SAAS,EAAC,mEAAmE;kBAAAG,QAAA,gBAC1FhR,OAAA;oBAAAgR,QAAA,gBACIhR,OAAA;sBAAAgR,QAAA,GAAS3L,GAAG,CAACK,aAAa,EAAC,MAAI,EAACL,GAAG,CAACM,eAAe;oBAAA;sBAAAgE,QAAA,EAAAwH,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAS,CAAC,eAC7DrR,OAAA;sBAAA2J,QAAA,EAAAwH,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACNrR,OAAA;sBAAAgR,QAAA,GAAO,UAAQ,EAAC3L,GAAG,CAACO,iBAAiB;oBAAA;sBAAA+D,QAAA,EAAAwH,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eAC9CrR,OAAA;sBAAA2J,QAAA,EAAAwH,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACNrR,OAAA;sBAAAgR,QAAA,GAAO,UAAQ,EAAC3L,GAAG,CAACU,SAAS;oBAAA;sBAAA4D,QAAA,EAAAwH,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAA1H,QAAA,EAAAwH,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrC,CAAC,eACNrR,OAAA;oBAAM6Q,SAAS,EAAE,YAAYxL,GAAG,CAACQ,MAAM,KAAK,UAAU,GAAG,SAAS,GAAG,SAAS,EAAG;oBAAAmL,QAAA,EAAE3L,GAAG,CAACQ;kBAAM;oBAAA8D,QAAA,EAAAwH,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA,GARhGhM,GAAG,CAACC,EAAE;kBAAAqE,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OASX,CACP,CAAC,gBAEFrR,OAAA;kBAAI6Q,SAAS,EAAC,iBAAiB;kBAAAG,QAAA,EAAC;gBAAyB;kBAAArH,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAChE;gBAAA1H,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA;cAAA1H,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACR,EAEAnQ,SAAS,KAAK,gBAAgB,iBAC3BlB,OAAA;QAAAgR,QAAA,gBACIhR,OAAA;UAAAgR,QAAA,EAAI;QAAe;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBrR,OAAA,CAACP,MAAM;UAACgS,OAAO,EAAC,SAAS;UAACZ,SAAS,EAAC,MAAM;UAACW,OAAO,EAAEA,CAAA,KAAMzF,oBAAoB,CAAC,CAAE;UAAAiF,QAAA,EAAC;QAElF;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRjQ,YAAY,CAAC0Q,MAAM,GAAG,CAAC,gBACpB9R,OAAA;UAAO6Q,SAAS,EAAC,qBAAqB;UAAAG,QAAA,gBAClChR,OAAA;YAAAgR,QAAA,eACIhR,OAAA;cAAAgR,QAAA,gBACIhR,OAAA;gBAAAgR,QAAA,EAAI;cAAM;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfrR,OAAA;gBAAAgR,QAAA,EAAI;cAAI;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbrR,OAAA;gBAAAgR,QAAA,EAAI;cAAI;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbrR,OAAA;gBAAAgR,QAAA,EAAI;cAAM;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfrR,OAAA;gBAAAgR,QAAA,EAAI;cAAM;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfrR,OAAA;gBAAAgR,QAAA,EAAI;cAAO;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAA1H,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRrR,OAAA;YAAAgR,QAAA,EACK5P,YAAY,CAACgE,GAAG,CAACC,GAAG,iBACjBrF,OAAA;cAAAgR,QAAA,gBACIhR,OAAA;gBAAAgR,QAAA,EAAK3L,GAAG,CAACU;cAAS;gBAAA4D,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxBrR,OAAA;gBAAAgR,QAAA,EAAK3L,GAAG,CAACK;cAAa;gBAAAiE,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC5BrR,OAAA;gBAAAgR,QAAA,EAAK3L,GAAG,CAACM;cAAe;gBAAAgE,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC9BrR,OAAA;gBAAAgR,QAAA,EAAK3L,GAAG,CAACO;cAAiB;gBAAA+D,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAChCrR,OAAA;gBAAAgR,QAAA,eAAIhR,OAAA;kBAAM6Q,SAAS,EAAE,YAAYxL,GAAG,CAACQ,MAAM,KAAK,UAAU,GAAG,SAAS,GAAGR,GAAG,CAACQ,MAAM,KAAK,SAAS,GAAG,SAAS,GAAG,QAAQ,EAAG;kBAAAmL,QAAA,EAAE3L,GAAG,CAACQ;gBAAM;kBAAA8D,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAA1H,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpJrR,OAAA;gBAAAgR,QAAA,EACK3L,GAAG,CAACQ,MAAM,KAAK,SAAS,IAAIR,GAAG,CAACQ,MAAM,KAAK,UAAU,gBAClD7F,OAAA,CAACP,MAAM;kBAACgS,OAAO,EAAC,QAAQ;kBAACM,IAAI,EAAC,IAAI;kBAACP,OAAO,EAAEA,CAAA,KAAMrE,uBAAuB,CAAC9H,GAAG,CAACC,EAAE,CAAE;kBAAA0L,QAAA,EAAC;gBAAM;kBAAArH,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,GAClGhM,GAAG,CAACQ,MAAM,KAAK,UAAU,gBACzB7F,OAAA,CAACP,MAAM;kBAACgS,OAAO,EAAC,SAAS;kBAACM,IAAI,EAAC,IAAI;kBAACP,OAAO,EAAEA,CAAA,KAAM3B,eAAe,CAACxK,GAAG,CAACG,QAAQ,EAAEH,GAAG,CAACU,SAAS,CAAE;kBAAAiL,QAAA,EAAC;gBAAI;kBAAArH,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,gBAE9GrR,OAAA;kBAAAgR,QAAA,EAAO;gBAAoB;kBAAArH,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cACrC;gBAAA1H,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA,GAdAhM,GAAG,CAACC,EAAE;cAAAqE,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAeX,CACP;UAAC;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,gBAERrR,OAAA;UAAAgR,QAAA,EAAG;QAA8D;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACvE;MAAA;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACR,EAEAnQ,SAAS,KAAK,gBAAgB,iBAC3BlB,OAAA;QAAAgR,QAAA,gBACIhR,OAAA;UAAAgR,QAAA,EAAI;QAAkB;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC1B/P,cAAc,CAACwQ,MAAM,GAAG,CAAC,gBACtB9R,OAAA;UAAI6Q,SAAS,EAAC,YAAY;UAAAG,QAAA,EACrB1P,cAAc,CAAC8D,GAAG,CAAC,CAACiB,MAAM,EAAE2L,KAAK,kBAC9BhS,OAAA;YAAoB6Q,SAAS,EAAC,iBAAiB;YAAAG,QAAA,gBAC3ChR,OAAA;cAAAgR,QAAA,EAAQ;YAAK;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAChL,MAAM,CAACI,IAAI,EAAC,GAAC,eAAAzG,OAAA;cAAA2J,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3CrR,OAAA;cAAAgR,QAAA,EAAQ;YAAU;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAChL,MAAM,CAACM,SAAS,EAAC,GAAC,eAAA3G,OAAA;cAAA2J,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrDrR,OAAA;cAAAgR,QAAA,EAAQ;YAAU;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAChL,MAAM,CAACQ,SAAS,EAAC,GAAC,eAAA7G,OAAA;cAAA2J,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrDrR,OAAA;cAAAgR,QAAA,EAAQ;YAAO;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAChL,MAAM,CAACG,UAAU,EAAC,GAAC,eAAAxG,OAAA;cAAA2J,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnDrR,OAAA;cAAAgR,QAAA,EAAQ;YAAM;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAChL,MAAM,CAACU,KAAK,IAAI,KAAK;UAAA,GALzCV,MAAM,CAACf,EAAE;YAAAqE,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMd,CACP;QAAC;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,gBAELrR,OAAA;UAAAgR,QAAA,EAAG;QAAiC;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC1C;MAAA;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACR,EAEAnQ,SAAS,KAAK,WAAW,iBACtBlB,OAAA;QAAAgR,QAAA,gBACIhR,OAAA;UAAAgR,QAAA,EAAI;QAAY;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBrR,OAAA,CAACN,IAAI,CAACuS,KAAK;UAACC,SAAS,EAAC,UAAU;UAACrB,SAAS,EAAC,MAAM;UAAAG,QAAA,gBAC7ChR,OAAA,CAACN,IAAI,CAACyS,KAAK;YAAAnB,QAAA,EAAC;UAAmB;YAAArH,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC5CrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;YAACC,IAAI,EAAC,MAAM;YAACC,QAAQ,EAAEhE;UAAqB;YAAA3E,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,EAEZvP,SAAS,CAACgQ,MAAM,GAAG,CAAC,gBACjB9R,OAAA;UAAO6Q,SAAS,EAAC,qBAAqB;UAAAG,QAAA,gBAClChR,OAAA;YAAAgR,QAAA,eACIhR,OAAA;cAAAgR,QAAA,gBACIhR,OAAA;gBAAAgR,QAAA,EAAI;cAAa;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtBrR,OAAA;gBAAAgR,QAAA,EAAI;cAAI;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbrR,OAAA;gBAAAgR,QAAA,EAAI;cAAW;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpBrR,OAAA;gBAAAgR,QAAA,EAAI;cAAM;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfrR,OAAA;gBAAAgR,QAAA,EAAI;cAAO;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAA1H,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRrR,OAAA;YAAAgR,QAAA,EACKlP,SAAS,CAACsD,GAAG,CAAC6C,GAAG,iBACdjI,OAAA;cAAAgR,QAAA,gBACIhR,OAAA;gBAAAgR,QAAA,EAAK/I,GAAG,CAAC0B;cAAQ;gBAAAA,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvBrR,OAAA;gBAAAgR,QAAA,EAAK/I,GAAG,CAAC4B;cAAY;gBAAAF,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3BrR,OAAA;gBAAAgR,QAAA,EAAK,IAAI1H,IAAI,CAACrB,GAAG,CAAC8B,UAAU,CAAC,CAACwI,kBAAkB,CAAC;cAAC;gBAAA5I,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxDrR,OAAA;gBAAAgR,QAAA,eAAIhR,OAAA;kBAAM6Q,SAAS,EAAE,YAAY5I,GAAG,CAACgC,OAAO,KAAK,OAAO,GAAG,SAAS,GAAG,WAAW,EAAG;kBAAA+G,QAAA,EAAE/I,GAAG,CAACgC;gBAAO;kBAAAN,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAA1H,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC/GrR,OAAA;gBAAAgR,QAAA,eACIhR,OAAA,CAACP,MAAM;kBAACgS,OAAO,EAAC,SAAS;kBAACM,IAAI,EAAC,IAAI;kBAACS,IAAI,EAAE,GAAGlS,+BAA+B,+BAA+B2H,GAAG,CAAC3C,EAAE,EAAG;kBAACiH,MAAM,EAAC,QAAQ;kBAAAyE,QAAA,EAAC;gBAAQ;kBAAArH,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAA1H,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtJ,CAAC;YAAA,GAPApJ,GAAG,CAAC3C,EAAE;cAAAqE,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQX,CACP;UAAC;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,gBAERrR,OAAA;UAAAgR,QAAA,EAAG;QAAmB;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC5B;MAAA;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACR,EAEAnQ,SAAS,KAAK,SAAS,iBACpBlB,OAAA;QAAAgR,QAAA,gBACIhR,OAAA;UAAAgR,QAAA,EAAI;QAAkB;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC1BrP,KAAK,CAAC8P,MAAM,GAAG,CAAC,gBACb9R,OAAA;UAAO6Q,SAAS,EAAC,qBAAqB;UAAAG,QAAA,gBAClChR,OAAA;YAAAgR,QAAA,eACIhR,OAAA;cAAAgR,QAAA,gBACIhR,OAAA;gBAAAgR,QAAA,EAAI;cAAO;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChBrR,OAAA;gBAAAgR,QAAA,EAAI;cAAU;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACnBrR,OAAA;gBAAAgR,QAAA,EAAI;cAAM;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfrR,OAAA;gBAAAgR,QAAA,EAAI;cAAM;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfrR,OAAA;gBAAAgR,QAAA,EAAI;cAAW;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpBrR,OAAA;gBAAAgR,QAAA,EAAI;cAAS;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClBrR,OAAA;gBAAAgR,QAAA,EAAI;cAAO;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAA1H,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRrR,OAAA;YAAAgR,QAAA,EACKhP,KAAK,CAACoD,GAAG,CAACiF,IAAI,iBACXrK,OAAA;cAAAgR,QAAA,gBACIhR,OAAA;gBAAAgR,QAAA,EAAK3G,IAAI,CAAC/E;cAAE;gBAAAqE,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAClBrR,OAAA;gBAAAgR,QAAA,EAAK,IAAI1H,IAAI,CAACe,IAAI,CAACE,QAAQ,CAAC,CAACgI,kBAAkB,CAAC;cAAC;gBAAA5I,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvDrR,OAAA;gBAAAgR,QAAA,GAAK3G,IAAI,CAACI,MAAM,GAAGJ,IAAI,CAACI,MAAM,CAACgI,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,EAAC,KAAG;cAAA;gBAAA9I,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1DrR,OAAA;gBAAAgR,QAAA,eAAIhR,OAAA;kBAAM6Q,SAAS,EAAE,YAAYxG,IAAI,CAACxE,MAAM,KAAK,QAAQ,GAAG,SAAS,GAAG,SAAS,EAAG;kBAAAmL,QAAA,EAAE3G,IAAI,CAACxE;gBAAM;kBAAA8D,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAA1H,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC9GrR,OAAA;gBAAAgR,QAAA,EAAK3G,IAAI,CAACQ;cAAI;gBAAAlB,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpBrR,OAAA;gBAAAgR,QAAA,EAAK3G,IAAI,CAACtE;cAAS;gBAAA4D,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzBrR,OAAA;gBAAAgR,QAAA,GACK3G,IAAI,CAACxE,MAAM,KAAK,UAAU,iBACvB7F,OAAA,CAACP,MAAM;kBAACgS,OAAO,EAAC,SAAS;kBAACM,IAAI,EAAC,IAAI;kBAAClB,SAAS,EAAC,MAAM;kBAACW,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAACjG,IAAI,CAAC/E,EAAE,CAAE;kBAAA0L,QAAA,EAAC;gBAAO;kBAAArH,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAC7G,eACDrR,OAAA,CAACP,MAAM;kBAACgS,OAAO,EAAC,MAAM;kBAACM,IAAI,EAAC,IAAI;kBAACP,OAAO,EAAEA,CAAA,KAAMb,qBAAqB,CAACtG,IAAI,CAAE;kBAAA2G,QAAA,EAAC;gBAAY;kBAAArH,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAA1H,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClG,CAAC;YAAA,GAZAhH,IAAI,CAAC/E,EAAE;cAAAqE,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAaZ,CACP;UAAC;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,gBAERrR,OAAA;UAAAgR,QAAA,EAAG;QAAyB;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAClC;MAAA;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACR,EAEAnQ,SAAS,KAAK,UAAU,iBACrBlB,OAAA;QAAAgR,QAAA,gBACIhR,OAAA;UAAAgR,QAAA,EAAI;QAAW;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBrR,OAAA,CAACP,MAAM;UAACgS,OAAO,EAAC,SAAS;UAACZ,SAAS,EAAC,MAAM;UAACW,OAAO,EAAEA,CAAA,KAAMnP,aAAa,CAAC;YAAEC,WAAW,EAAE,EAAE;YAAEC,OAAO,EAAE,EAAE;YAAEC,OAAO,EAAE;UAAG,CAAC,CAAE;UAAAwO,QAAA,EAAC;QAAmB;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAEnJnP,QAAQ,CAAC4P,MAAM,GAAG,CAAC,gBAChB9R,OAAA;UAAI6Q,SAAS,EAAC,YAAY;UAAAG,QAAA,EACrB9O,QAAQ,CAACkD,GAAG,CAAC6F,GAAG;YAAA,IAAAyH,aAAA,EAAAC,cAAA;YAAA,oBACb3S,OAAA;cAAiB6Q,SAAS,EAAC,mEAAmE;cAAAG,QAAA,gBAC1FhR,OAAA;gBAAAgR,QAAA,gBAEIhR,OAAA;kBAAAgR,QAAA,GAAQ,QAAM,EAAC/F,GAAG,CAACE,QAAQ,KAAKmG,oBAAoB,GAAG,IAAI,GAAI,EAAAoB,aAAA,GAAAhR,OAAO,CAACgL,IAAI,CAACkG,CAAC,IAAIA,CAAC,CAAChL,MAAM,KAAKqD,GAAG,CAACE,QAAQ,CAAC,cAAAuH,aAAA,uBAA5CA,aAAA,CAA8CvL,SAAS,IAAG,GAAG,KAAAwL,cAAA,GAAGjR,OAAO,CAACgL,IAAI,CAACkG,CAAC,IAAIA,CAAC,CAAChL,MAAM,KAAKqD,GAAG,CAACE,QAAQ,CAAC,cAAAwH,cAAA,uBAA5CA,cAAA,CAA8CtL,QAAQ,KAAI,WAAW4D,GAAG,CAACE,QAAQ,GAAI;gBAAA;kBAAAxB,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC,KAAC,eAAArR,OAAA;kBAAA2J,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACrOrR,OAAA;kBAAAgR,QAAA,EAAQ;gBAAQ;kBAAArH,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAACpG,GAAG,CAAC1I,OAAO,EAAC,GAAC,eAAAvC,OAAA;kBAAA2J,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC9CrR,OAAA;kBAAAgR,QAAA,EAAQ,IAAI1H,IAAI,CAAC2B,GAAG,CAACQ,SAAS,CAAC,CAACoH,cAAc,CAAC;gBAAC;kBAAAlJ,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAA1H,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxD,CAAC,eACNrR,OAAA,CAACP,MAAM;gBAACgS,OAAO,EAAC,MAAM;gBAACM,IAAI,EAAC,IAAI;gBAACP,OAAO,EAAEA,CAAA,KAAM7B,iBAAiB,CAAC1E,GAAG,CAAE;gBAAA+F,QAAA,EAAC;cAAY;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAPxFpG,GAAG,CAAC3F,EAAE;cAAAqE,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQX,CAAC;UAAA,CACR;QAAC;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,gBAELrR,OAAA;UAAAgR,QAAA,EAAG;QAAkB;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC3B,eAEDrR,OAAA;UAAI6Q,SAAS,EAAC;QAAM;UAAAlH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEvBrR,OAAA;UAAAgR,QAAA,EAAI;QAAmB;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BrR,OAAA,CAACN,IAAI;UAAAsR,QAAA,gBACDhR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAAAG,QAAA,gBACxBhR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAkB;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC3CrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTU,EAAE,EAAC,QAAQ;cACXzG,IAAI,EAAC,aAAa;cAClBC,KAAK,EAAElK,UAAU,CAACE,WAAY;cAC9BgQ,QAAQ,EAAEvD,sBAAuB;cACjCgE,QAAQ;cAAA/B,QAAA,gBAERhR,OAAA;gBAAQsM,KAAK,EAAC,EAAE;gBAAA0E,QAAA,EAAC;cAAqB;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAC9C3P,OAAO,CAAC0D,GAAG,CAAC4N,MAAM,iBACfhT,OAAA;gBAA4BsM,KAAK,EAAE0G,MAAM,CAACpL,MAAO;gBAAAoJ,QAAA,GAAEgC,MAAM,CAAC7L,SAAS,EAAC,GAAC,EAAC6L,MAAM,CAAC3L,QAAQ;cAAA,GAAxE2L,MAAM,CAACpL,MAAM;gBAAA+B,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAoE,CACjG,CAAC;YAAA;cAAA1H,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACbrR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAAAG,QAAA,gBACxBhR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAO;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAChCrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTC,IAAI,EAAC,MAAM;cACXhG,IAAI,EAAC,SAAS;cACdC,KAAK,EAAElK,UAAU,CAACG,OAAQ;cAC1B+P,QAAQ,EAAEvD,sBAAuB;cACjCgE,QAAQ;YAAA;cAAApJ,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACbrR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAAAG,QAAA,gBACxBhR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAO;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAChCrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTU,EAAE,EAAC,UAAU;cACbG,IAAI,EAAE,CAAE;cACR5G,IAAI,EAAC,SAAS;cACdC,KAAK,EAAElK,UAAU,CAACI,OAAQ;cAC1B8P,QAAQ,EAAEvD,sBAAuB;cACjCgE,QAAQ;YAAA;cAAApJ,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACbrR,OAAA,CAACP,MAAM;YAACgS,OAAO,EAAC,SAAS;YAACD,OAAO,EAAEvC,iBAAkB;YAAA+B,QAAA,EAAC;UAAY;YAAArH,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC;MAAA;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACR,EAEAnQ,SAAS,KAAK,cAAc,iBACzBlB,OAAA;QAAAgR,QAAA,gBACIhR,OAAA;UAAAgR,QAAA,EAAI;QAAa;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBrR,OAAA;UAAAgR,QAAA,EAAG;QAAuE;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9ErR,OAAA,CAACN,IAAI,CAACuS,KAAK;UAACpB,SAAS,EAAC,MAAM;UAAAG,QAAA,eACxBhR,OAAA,CAACN,IAAI,CAAC0S,OAAO;YAACC,IAAI,EAAC,MAAM;YAACa,WAAW,EAAC;UAAgC;YAAAvJ,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC,EACZ3P,OAAO,CAACoQ,MAAM,GAAG,CAAC,gBACf9R,OAAA;UAAO6Q,SAAS,EAAC,qBAAqB;UAAAG,QAAA,gBAClChR,OAAA;YAAAgR,QAAA,eACIhR,OAAA;cAAAgR,QAAA,gBACIhR,OAAA;gBAAAgR,QAAA,EAAI;cAAI;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbrR,OAAA;gBAAAgR,QAAA,EAAI;cAAS;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClBrR,OAAA;gBAAAgR,QAAA,EAAI;cAAO;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChBrR,OAAA;gBAAAgR,QAAA,EAAI;cAAM;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfrR,OAAA;gBAAAgR,QAAA,EAAI;cAAO;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAA1H,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRrR,OAAA;YAAAgR,QAAA,EACKtP,OAAO,CAAC0D,GAAG,CAAC4N,MAAM,iBACfhT,OAAA;cAAAgR,QAAA,gBACIhR,OAAA;gBAAAgR,QAAA,GAAKgC,MAAM,CAAC7L,SAAS,EAAC,GAAC,EAAC6L,MAAM,CAAC3L,QAAQ;cAAA;gBAAAsC,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC7CrR,OAAA;gBAAAgR,QAAA,EAAKgC,MAAM,CAAC9K,SAAS,IAAI;cAAsB;gBAAAyB,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrDrR,OAAA;gBAAAgR,QAAA,GAAKgC,MAAM,CAACzL,KAAK,EAAC,KAAG,EAACyL,MAAM,CAACxL,KAAK;cAAA;gBAAAmC,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxCrR,OAAA;gBAAAgR,QAAA,EAAKgC,MAAM,CAACzO,MAAM,GAAGyO,MAAM,CAACzO,MAAM,CAACkO,OAAO,CAAC,CAAC,CAAC,GAAG;cAAK;gBAAA9I,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3DrR,OAAA;gBAAAgR,QAAA,eACIhR,OAAA,CAACP,MAAM;kBAACgS,OAAO,EAAC,SAAS;kBAACM,IAAI,EAAC,IAAI;kBAACP,OAAO,EAAEA,CAAA,KAAM;oBAC/CzF,oBAAoB,CAAC,IAAI,EAAEiH,MAAM,CAAC1N,EAAE,CAAC;kBACzC,CAAE;kBAAA0L,QAAA,EAAC;gBAAoB;kBAAArH,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAA1H,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC;YAAA,GATA2B,MAAM,CAAC1N,EAAE;cAAAqE,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAUd,CACP;UAAC;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,gBAERrR,OAAA;UAAAgR,QAAA,EAAG;QAAiB;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC1B;MAAA;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACR,EAEAnQ,SAAS,KAAK,iBAAiB,iBAC5BlB,OAAA;QAAAgR,QAAA,gBACIhR,OAAA;UAAAgR,QAAA,EAAI;QAAgB;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBrR,OAAA,CAACN,IAAI;UAAAsR,QAAA,gBACDhR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAACqB,SAAS,EAAC,eAAe;YAAAlB,QAAA,gBAClDhR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAU;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACnCrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTC,IAAI,EAAC,MAAM;cACXhG,IAAI,EAAC,WAAW;cAChBC,KAAK,EAAE9K,cAAc,CAAC2F,SAAS,IAAI,EAAG;cACtCmL,QAAQ,EAAEzE;YAAoB;cAAAlE,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACbrR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAACqB,SAAS,EAAC,cAAc;YAAAlB,QAAA,gBACjDhR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAS;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAClCrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTC,IAAI,EAAC,MAAM;cACXhG,IAAI,EAAC,UAAU;cACfC,KAAK,EAAE9K,cAAc,CAAC6F,QAAQ,IAAI,EAAG;cACrCiL,QAAQ,EAAEzE;YAAoB;cAAAlE,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACbrR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAACqB,SAAS,EAAC,WAAW;YAAAlB,QAAA,gBAC9ChR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAK;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC9BrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTC,IAAI,EAAC,OAAO;cACZhG,IAAI,EAAC,OAAO;cACZC,KAAK,EAAE9K,cAAc,CAAC+F,KAAK,IAAI,EAAG;cAClC+K,QAAQ,EAAEzE;YAAoB;cAAAlE,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACbrR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAACqB,SAAS,EAAC,WAAW;YAAAlB,QAAA,gBAC9ChR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAK;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC9BrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTC,IAAI,EAAC,MAAM;cACXhG,IAAI,EAAC,OAAO;cACZC,KAAK,EAAE9K,cAAc,CAACgG,KAAK,IAAI,EAAG;cAClC8K,QAAQ,EAAEzE;YAAoB;cAAAlE,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACbrR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAACqB,SAAS,EAAC,aAAa;YAAAlB,QAAA,gBAChDhR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAO;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAChCrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTC,IAAI,EAAC,MAAM;cACXhG,IAAI,EAAC,QAAQ;cACbC,KAAK,EAAE9K,cAAc,CAACmG,MAAM,IAAI,EAAG;cACnC2K,QAAQ,EAAEzE;YAAoB;cAAAlE,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACbrR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAACqB,SAAS,EAAC,mBAAmB;YAAAlB,QAAA,gBACtDhR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAa;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACtCrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTC,IAAI,EAAC,MAAM;cACXhG,IAAI,EAAC,eAAe;cACpBC,KAAK,EAAE9K,cAAc,CAACkG,aAAa,IAAI,EAAG;cAC1C4K,QAAQ,EAAEzE;YAAoB;cAAAlE,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACbrR,OAAA,CAACP,MAAM;YAACgS,OAAO,EAAC,SAAS;YAACD,OAAO,EAAEzD,iBAAkB;YAAAiD,QAAA,EAAC;UAEtD;YAAArH,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACR;IAAA;MAAA1H,QAAA,EAAAwH,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAGNrR,OAAA,CAACR,KAAK;MAAC2T,IAAI,EAAE/P,oBAAqB;MAACgQ,MAAM,EAAElH,qBAAsB;MAAA8E,QAAA,gBAC7DhR,OAAA,CAACR,KAAK,CAAC6T,MAAM;QAACC,WAAW;QAAAtC,QAAA,eACrBhR,OAAA,CAACR,KAAK,CAAC+T,KAAK;UAAAvC,QAAA,EAAEnN,kBAAkB,GAAG,kBAAkB,GAAG;QAA0B;UAAA8F,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc;MAAC;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC,eACfrR,OAAA,CAACR,KAAK,CAACgU,IAAI;QAAAxC,QAAA,eACPhR,OAAA,CAACN,IAAI;UAAAsR,QAAA,gBACDhR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAACqB,SAAS,EAAC,YAAY;YAAAlB,QAAA,gBAC/ChR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAa;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACtCrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTU,EAAE,EAAC,QAAQ;cACXzG,IAAI,EAAC,UAAU;cACfC,KAAK,EAAEhJ,cAAc,CAACE,QAAS;cAC/B8O,QAAQ,EAAEnG,0BAA2B;cACrC4G,QAAQ;cAAA/B,QAAA,gBAERhR,OAAA;gBAAQsM,KAAK,EAAC,EAAE;gBAAA0E,QAAA,EAAC;cAAqB;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAC9C3P,OAAO,CAAC0D,GAAG,CAAC4N,MAAM,iBACfhT,OAAA;gBAAwBsM,KAAK,EAAE0G,MAAM,CAAC1N,EAAG;gBAAA0L,QAAA,GAAEgC,MAAM,CAAC7L,SAAS,EAAC,GAAC,EAAC6L,MAAM,CAAC3L,QAAQ;cAAA,GAAhE2L,MAAM,CAAC1N,EAAE;gBAAAqE,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAgE,CACzF,CAAC;YAAA;cAAA1H,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,EAEZ/N,cAAc,CAACE,QAAQ,iBACpBxD,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAACqB,SAAS,EAAC,mBAAmB;YAAAlB,QAAA,gBACtDhR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAqB;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,EAC7CtN,OAAO,gBACJ/D,OAAA,CAACJ,OAAO;cAACqR,SAAS,EAAC,QAAQ;cAACc,IAAI,EAAC;YAAI;cAAApI,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,GACxCzP,uBAAuB,CAACkQ,MAAM,GAAG,CAAC,gBAClC9R,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTU,EAAE,EAAC,QAAQ;cACXzG,IAAI,EAAC,UAAU;cACfC,KAAK,EAAEhJ,cAAc,CAACK,QAAS;cAC/B2O,QAAQ,EAAEnG,0BAA2B;cACrC4G,QAAQ;cAAA/B,QAAA,gBAERhR,OAAA;gBAAQsM,KAAK,EAAC,EAAE;gBAAA0E,QAAA,EAAC;cAA0B;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACnDzP,uBAAuB,CAACwD,GAAG,CAACwD,IAAI,iBAC7B5I,OAAA;gBAA4BsM,KAAK,EAAE1D,IAAI,CAAC9C,QAAS;gBAAAkL,QAAA,EAAEpI,IAAI,CAACG;cAAO,GAAlDH,IAAI,CAAC9C,QAAQ;gBAAA6D,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA8C,CAC3E,CAAC;YAAA;cAAA1H,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ,CAAC,gBAEfrR,OAAA,CAACL,KAAK;cAAC8R,OAAO,EAAC,MAAM;cAAAT,QAAA,EAAC;YAAmC;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CACnE;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CACf,EAGA/N,cAAc,CAACK,QAAQ,iBACpB3D,OAAA,CAAAE,SAAA;YAAA8Q,QAAA,gBACIhR,OAAA,CAACN,IAAI,CAACuS,KAAK;cAACpB,SAAS,EAAC,MAAM;cAACqB,SAAS,EAAC,4BAA4B;cAAAlB,QAAA,gBAC/DhR,OAAA,CAACN,IAAI,CAACyS,KAAK;gBAAAnB,QAAA,EAAC;cAAa;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtCrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;gBACTC,IAAI,EAAC,MAAM;gBACX/F,KAAK,EAAEhJ,cAAc,CAACG,eAAgB;gBACtCgQ,QAAQ;gBACRC,QAAQ;cAAA;gBAAA/J,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC;YAAA;cAAA1H,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC,eACbrR,OAAA,CAACN,IAAI,CAACuS,KAAK;cAACpB,SAAS,EAAC,MAAM;cAACqB,SAAS,EAAC,4BAA4B;cAAAlB,QAAA,gBAC/DhR,OAAA,CAACN,IAAI,CAACyS,KAAK;gBAAAnB,QAAA,EAAC;cAAa;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtCrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;gBACTC,IAAI,EAAC,MAAM;gBACX/F,KAAK,EAAEhJ,cAAc,CAACI,eAAe,GAAGJ,cAAc,CAACI,eAAe,CAACsF,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAG;gBAC5FyK,QAAQ;gBACRC,QAAQ;cAAA;gBAAA/J,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC;YAAA;cAAA1H,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC;UAAA,eACf,CACL,eAEDrR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAACqB,SAAS,EAAC,YAAY;YAAAlB,QAAA,gBAC/ChR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAsB;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC/CrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTU,EAAE,EAAC,UAAU;cACbG,IAAI,EAAE,CAAE;cACR5G,IAAI,EAAC,QAAQ;cACbC,KAAK,EAAEhJ,cAAc,CAACM,MAAO;cAC7B0O,QAAQ,EAAEnG,0BAA2B;cACrC+G,WAAW,EAAC,8CAA8C;cAC1DH,QAAQ;YAAA;cAAApJ,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC;QAAA;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACbrR,OAAA,CAACR,KAAK,CAACmU,MAAM;QAAA3C,QAAA,gBACThR,OAAA,CAACP,MAAM;UAACgS,OAAO,EAAC,WAAW;UAACD,OAAO,EAAEtF,qBAAsB;UAAA8E,QAAA,EAAC;QAE5D;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTrR,OAAA,CAACP,MAAM;UACHgS,OAAO,EAAC,SAAS;UACjBD,OAAO,EAAE5E,yBAA0B;UACnC8G,QAAQ,EAAE,CAACpQ,cAAc,CAACE,QAAQ,IAAI,CAACF,cAAc,CAACK,QAAQ,IAAI,CAACL,cAAc,CAACM,MAAM,IAAIG,OAAQ;UAAAiN,QAAA,EAEnGnN,kBAAkB,GAAG,oBAAoB,GAAG;QAAsB;UAAA8F,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC;MAAA;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAA1H,QAAA,EAAAwH,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAGRrR,OAAA,CAACR,KAAK;MAAC2T,IAAI,EAAE,CAAC,CAACvQ,eAAgB;MAACwQ,MAAM,EAAExD,iBAAkB;MAAAoB,QAAA,gBACtDhR,OAAA,CAACR,KAAK,CAAC6T,MAAM;QAACC,WAAW;QAAAtC,QAAA,eACrBhR,OAAA,CAACR,KAAK,CAAC+T,KAAK;UAAAvC,QAAA,GAAC,WAAS,EAACpO,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEL,OAAO;QAAA;UAAAoH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc;MAAC;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eACfrR,OAAA,CAACR,KAAK,CAACgU,IAAI;QAAAxC,QAAA,EACNpO,eAAe,iBACZ5C,OAAA,CAAAE,SAAA;UAAA8Q,QAAA,gBAEIhR,OAAA;YAAAgR,QAAA,gBAAGhR,OAAA;cAAAgR,QAAA,EAAQ;YAAK;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACzO,eAAe,CAACuI,QAAQ,KAAKmG,oBAAoB,GAAG,IAAI,GAAI,EAAA5Q,cAAA,GAAAgB,OAAO,CAACgL,IAAI,CAACkG,CAAC,IAAIA,CAAC,CAAChL,MAAM,KAAKhF,eAAe,CAACuI,QAAQ,CAAC,cAAAzK,cAAA,uBAAxDA,cAAA,CAA0DyG,SAAS,IAAG,GAAG,KAAAxG,cAAA,GAAGe,OAAO,CAACgL,IAAI,CAACkG,CAAC,IAAIA,CAAC,CAAChL,MAAM,KAAKhF,eAAe,CAACuI,QAAQ,CAAC,cAAAxK,cAAA,uBAAxDA,cAAA,CAA0D0G,QAAQ,KAAI,WAAWzE,eAAe,CAACuI,QAAQ,GAAI;UAAA;YAAAxB,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrRrR,OAAA;YAAAgR,QAAA,gBAAGhR,OAAA;cAAAgR,QAAA,EAAQ;YAAK;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC,IAAI/H,IAAI,CAAC1G,eAAe,CAAC6I,SAAS,CAAC,CAACoH,cAAc,CAAC,CAAC;UAAA;YAAAlJ,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpFrR,OAAA;YAAA2J,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNrR,OAAA;YAAAgR,QAAA,EAAIpO,eAAe,CAACJ;UAAO;YAAAmH,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAE/BzO,eAAe,CAAC8I,OAAO,IAAI9I,eAAe,CAAC8I,OAAO,CAACoG,MAAM,GAAG,CAAC,iBAC1D9R,OAAA;YAAK6Q,SAAS,EAAC,MAAM;YAAAG,QAAA,gBACjBhR,OAAA;cAAAgR,QAAA,EAAI;YAAQ;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAChBzO,eAAe,CAAC8I,OAAO,CAACtG,GAAG,CAAC,CAACwO,KAAK,EAAE5B,KAAK;cAAA,IAAA6B,cAAA,EAAAC,cAAA;cAAA,oBACtC9T,OAAA;gBAAiB6Q,SAAS,EAAC,kCAAkC;gBAAAG,QAAA,gBAEzDhR,OAAA;kBAAAgR,QAAA,GAAS4C,KAAK,CAACzI,QAAQ,KAAKmG,oBAAoB,GAAG,IAAI,GAAI,EAAAuC,cAAA,GAAAnS,OAAO,CAACgL,IAAI,CAACkG,CAAC,IAAIA,CAAC,CAAChL,MAAM,KAAKgM,KAAK,CAACzI,QAAQ,CAAC,cAAA0I,cAAA,uBAA9CA,cAAA,CAAgD1M,SAAS,IAAG,GAAG,KAAA2M,cAAA,GAAGpS,OAAO,CAACgL,IAAI,CAACkG,CAAC,IAAIA,CAAC,CAAChL,MAAM,KAAKgM,KAAK,CAACzI,QAAQ,CAAC,cAAA2I,cAAA,uBAA9CA,cAAA,CAAgDzM,QAAQ,KAAI,WAAWuM,KAAK,CAACzI,QAAQ,GAAI,EAAC,GAAC;gBAAA;kBAAAxB,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAACuC,KAAK,CAACpR,OAAO,eAChPxC,OAAA;kBAAA2J,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACNrR,OAAA;kBAAAgR,QAAA,EAAQ,IAAI1H,IAAI,CAACsK,KAAK,CAACnI,SAAS,CAAC,CAACoH,cAAc,CAAC;gBAAC;kBAAAlJ,QAAA,EAAAwH,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GAJrDW,KAAK;gBAAArI,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKV,CAAC;YAAA,CACT,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CACR,eAEDrR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAAAG,QAAA,gBACxBhR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAK;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC9BrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTU,EAAE,EAAC,UAAU;cACbG,IAAI,EAAE,CAAE;cACR3G,KAAK,EAAE7J,YAAY,CAACD,OAAQ;cAC5B8P,QAAQ,EAAEtD,wBAAyB;cACnCkE,WAAW,EAAC;YAAyB;cAAAvJ,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACbrR,OAAA,CAACP,MAAM;YAACgS,OAAO,EAAC,SAAS;YAACZ,SAAS,EAAC,MAAM;YAACW,OAAO,EAAEA,CAAA,KAAMlC,WAAW,CAAC1M,eAAe,CAAC0C,EAAE,CAAE;YAAA0L,QAAA,EAAC;UAAU;YAAArH,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eAChH;MACL;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eACbrR,OAAA,CAACR,KAAK,CAACmU,MAAM;QAAA3C,QAAA,eACThR,OAAA,CAACP,MAAM;UAACgS,OAAO,EAAC,WAAW;UAACD,OAAO,EAAE5B,iBAAkB;UAAAoB,QAAA,EAAC;QAExD;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAA1H,QAAA,EAAAwH,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAGRrR,OAAA,CAACR,KAAK;MAAC2T,IAAI,EAAElP,eAAgB;MAACmP,MAAM,EAAEtD,gBAAiB;MAAAkB,QAAA,gBACnDhR,OAAA,CAACR,KAAK,CAAC6T,MAAM;QAACC,WAAW;QAAAtC,QAAA,eACrBhR,OAAA,CAACR,KAAK,CAAC+T,KAAK;UAAAvC,QAAA,GAAC,eAAa,EAAC7M,uBAAuB,aAAvBA,uBAAuB,uBAAvBA,uBAAuB,CAAEkI,IAAI;QAAA;UAAA1C,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc;MAAC;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eACfrR,OAAA,CAACR,KAAK,CAACgU,IAAI;QAAAxC,QAAA,eACPhR,OAAA,CAACN,IAAI;UAAAsR,QAAA,gBACDhR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAACqB,SAAS,EAAC,YAAY;YAAAlB,QAAA,gBAC/ChR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAY;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACrCrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTU,EAAE,EAAC,QAAQ;cACXzG,IAAI,EAAC,QAAQ;cACbC,KAAK,EAAEjI,UAAU,CAACE,MAAO;cACzB+N,QAAQ,EAAEvC,kBAAmB;cAC7BgD,QAAQ;cAAA/B,QAAA,gBAERhR,OAAA;gBAAQsM,KAAK,EAAC,GAAG;gBAAA0E,QAAA,EAAC;cAAa;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACxCrR,OAAA;gBAAQsM,KAAK,EAAC,GAAG;gBAAA0E,QAAA,EAAC;cAAQ;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACnCrR,OAAA;gBAAQsM,KAAK,EAAC,GAAG;gBAAA0E,QAAA,EAAC;cAAW;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtCrR,OAAA;gBAAQsM,KAAK,EAAC,GAAG;gBAAA0E,QAAA,EAAC;cAAQ;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACnCrR,OAAA;gBAAQsM,KAAK,EAAC,GAAG;gBAAA0E,QAAA,EAAC;cAAa;gBAAArH,QAAA,EAAAwH,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAA1H,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACbrR,OAAA,CAACN,IAAI,CAACuS,KAAK;YAACpB,SAAS,EAAC,MAAM;YAACqB,SAAS,EAAC,mBAAmB;YAAAlB,QAAA,gBACtDhR,OAAA,CAACN,IAAI,CAACyS,KAAK;cAAAnB,QAAA,EAAC;YAAkB;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC3CrR,OAAA,CAACN,IAAI,CAAC0S,OAAO;cACTU,EAAE,EAAC,UAAU;cACbG,IAAI,EAAE,CAAE;cACR5G,IAAI,EAAC,UAAU;cACfC,KAAK,EAAEjI,UAAU,CAACG,QAAS;cAC3B8N,QAAQ,EAAEvC,kBAAmB;cAC7BmD,WAAW,EAAC;YAA0C;cAAAvJ,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzD,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC;QAAA;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACbrR,OAAA,CAACR,KAAK,CAACmU,MAAM;QAAA3C,QAAA,gBACThR,OAAA,CAACP,MAAM;UAACgS,OAAO,EAAC,WAAW;UAACD,OAAO,EAAE1B,gBAAiB;UAAAkB,QAAA,EAAC;QAEvD;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTrR,OAAA,CAACP,MAAM;UAACgS,OAAO,EAAC,SAAS;UAACD,OAAO,EAAExB,kBAAmB;UAAAgB,QAAA,EAAC;QAEvD;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAA1H,QAAA,EAAAwH,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAGRrR,OAAA,CAACR,KAAK;MAAC2T,IAAI,EAAE1O,oBAAqB;MAAC2O,MAAM,EAAExC,qBAAsB;MAAAI,QAAA,gBAC7DhR,OAAA,CAACR,KAAK,CAAC6T,MAAM;QAACC,WAAW;QAAAtC,QAAA,eACrBhR,OAAA,CAACR,KAAK,CAAC+T,KAAK;UAAAvC,QAAA,EAAC;QAAY;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACfrR,OAAA,CAACR,KAAK,CAACgU,IAAI;QAAAxC,QAAA,EACNrM,mBAAmB,iBAChB3E,OAAA;UAAAgR,QAAA,gBACIhR,OAAA;YAAAgR,QAAA,gBAAGhR,OAAA;cAAAgR,QAAA,EAAQ;YAAQ;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC1M,mBAAmB,CAACW,EAAE;UAAA;YAAAqE,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzDrR,OAAA;YAAAgR,QAAA,gBAAGhR,OAAA;cAAAgR,QAAA,EAAQ;YAAW;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC,IAAI/H,IAAI,CAAC3E,mBAAmB,CAAC4F,QAAQ,CAAC,CAACgI,kBAAkB,CAAC,CAAC;UAAA;YAAA5I,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjGrR,OAAA;YAAAgR,QAAA,gBAAGhR,OAAA;cAAAgR,QAAA,EAAQ;YAAO;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC1M,mBAAmB,CAAC8F,MAAM,GAAG9F,mBAAmB,CAAC8F,MAAM,CAACgI,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,EAAC,KAAG;UAAA;YAAA9I,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC/GrR,OAAA;YAAAgR,QAAA,gBAAGhR,OAAA;cAAAgR,QAAA,EAAQ;YAAO;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,eAAArR,OAAA;cAAM6Q,SAAS,EAAE,YAAYlM,mBAAmB,CAACkB,MAAM,KAAK,QAAQ,GAAG,SAAS,GAAG,SAAS,EAAG;cAAAmL,QAAA,EAAErM,mBAAmB,CAACkB;YAAM;cAAA8D,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAA1H,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACnKrR,OAAA;YAAAgR,QAAA,gBAAGhR,OAAA;cAAAgR,QAAA,EAAQ;YAAY;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC1M,mBAAmB,CAACkG,IAAI;UAAA;YAAAlB,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/DrR,OAAA;YAAAgR,QAAA,gBAAGhR,OAAA;cAAAgR,QAAA,EAAQ;YAAU;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC1M,mBAAmB,CAACoB,SAAS;UAAA;YAAA4D,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACjE1M,mBAAmB,CAACgG,OAAO,iBACxB3K,OAAA;YAAAgR,QAAA,gBAAGhR,OAAA;cAAAgR,QAAA,EAAQ;YAAS;cAAArH,QAAA,EAAAwH,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC,IAAI/H,IAAI,CAAC3E,mBAAmB,CAACgG,OAAO,CAAC,CAAC4H,kBAAkB,CAAC,CAAC;UAAA;YAAA5I,QAAA,EAAAwH,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAChG;QAAA;UAAA1H,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MACR;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eACbrR,OAAA,CAACR,KAAK,CAACmU,MAAM;QAAA3C,QAAA,eACThR,OAAA,CAACP,MAAM;UAACgS,OAAO,EAAC,WAAW;UAACD,OAAO,EAAEZ,qBAAsB;UAAAI,QAAA,EAAC;QAE5D;UAAArH,QAAA,EAAAwH,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAA1H,QAAA,EAAAwH,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAA1H,QAAA,EAAAwH,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAA1H,QAAA,EAAAwH,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEP,CAAC;AAEd;AAAC5Q,EAAA,CA94CQD,gBAAgB;EAAA,QAEGrB,OAAO;AAAA;AAAA4U,EAAA,GAF1BvT,gBAAgB;AAg5CzB,eAAeA,gBAAgB;AAAC,IAAAuT,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}