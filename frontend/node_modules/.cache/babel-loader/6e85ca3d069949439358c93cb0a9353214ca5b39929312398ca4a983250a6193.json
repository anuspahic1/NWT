{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\PatientProfileForDoctorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n// Uklonjen direktan import Bootstrap CSS-a iz JS-a.\n// Pretpostavlja se da će se Bootstrap CSS učitati putem CDN-a u public/index.html.\nimport { useAuth } from '../contexts/AuthContext'; // VAŽNO: Provjerite da li je putanja do AuthContext.js ispravna!\n// Uklonjen import za lokalnu sliku, koristi se direktan URL za placeholder.\n// import patientPlaceholderImage from '../images/image_6c9a36.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientProfileForDoctorPage() {\n  _s();\n  const {\n    patientId\n  } = useParams(); // Dohvaća ID pacijenta iz URL-a\n  const {\n    isAuthenticated,\n    hasRole,\n    doktorId\n  } = useAuth(); // Provjera uloge i autentičnosti\n  const [patient, setPatient] = useState(null);\n  const [medicalDocuments, setMedicalDocuments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadMessage, setUploadMessage] = useState('');\n\n  // Mock podaci za pacijenta\n  const mockPatients = {\n    1: {\n      id: 1,\n      name: 'Petar Petrović',\n      email: 'petar.p@example.com',\n      dob: '1990-01-15',\n      gender: 'Male',\n      phone: '+387 61 111 222',\n      address: 'Ulica Prva 1, Sarajevo',\n      image: 'https://placehold.co/180x180/F06292/FFFFFF?text=Patient'\n    },\n    // Ažuriran URL slike\n    2: {\n      id: 2,\n      name: 'Ana Anić',\n      email: 'ana.a@example.com',\n      dob: '1985-03-20',\n      gender: 'Female',\n      phone: '+387 62 333 444',\n      address: 'Ulica Druga 2, Mostar',\n      image: 'https://placehold.co/180x180/F06292/FFFFFF?text=Patient'\n    },\n    // Ažuriran URL slike\n    3: {\n      id: 3,\n      name: 'Marko Marković',\n      email: 'marko.m@example.com',\n      dob: '2000-07-01',\n      gender: 'Male',\n      phone: '+387 63 555 666',\n      address: 'Ulica Treća 3, Banja Luka',\n      image: 'https://placehold.co/180x180/F06292/FFFFFF?text=Patient'\n    },\n    // Ažuriran URL slike\n    4: {\n      id: 4,\n      name: 'Jelena Jelić',\n      email: 'jelena.j@example.com',\n      dob: '1978-11-10',\n      gender: 'Female',\n      phone: '+387 61 777 888',\n      address: 'Ulica Četvrta 4, Tuzla',\n      image: 'https://placehold.co/180x180/F06292/FFFFFF?text=Patient'\n    },\n    // Ažuriran URL slike\n    5: {\n      id: 5,\n      name: 'Ivan Ivanović',\n      email: 'ivan.i@example.com',\n      dob: '1995-05-25',\n      gender: 'Male',\n      phone: '+387 62 999 000',\n      address: 'Ulica Peta 5, Zenica',\n      image: 'https://placehold.co/180x180/F06292/FFFFFF?text=Patient'\n    },\n    // Ažuriran URL slike\n    6: {\n      id: 6,\n      name: 'Milica Milić',\n      email: 'milica.m@example.com',\n      dob: '1988-09-05',\n      gender: 'Female',\n      phone: '+387 63 123 789',\n      address: 'Ulica Šesta 6, Bihać',\n      image: 'https://placehold.co/180x180/F06292/FFFFFF?text=Patient'\n    } // Ažuriran URL slike\n  };\n\n  // Mock podaci za medicinsku dokumentaciju\n  const mockMedicalDocuments = {\n    1: [{\n      id: 1,\n      name: 'Blood Test Results - 2024-01-10.pdf',\n      url: 'https://www.africau.edu/images/default/sample.pdf',\n      uploadDate: '2024-01-10'\n    }, {\n      id: 2,\n      name: 'X-Ray Scan - 2023-11-20.pdf',\n      url: 'https://www.africau.edu/images/default/sample.pdf',\n      uploadDate: '2023-11-20'\n    }],\n    2: [{\n      id: 3,\n      name: 'Dermatology Report - 2024-02-15.pdf',\n      url: 'https://www.africau.edu/images/default/sample.pdf',\n      uploadDate: '2024-02-15'\n    }]\n    // Dodajte više dokumenata za druge pacijente po potrebi\n  };\n  useEffect(() => {\n    // Provjera da li je doktor ulogovan i ima odgovarajuću ulogu\n    if (!isAuthenticated || !hasRole('ROLE_DOCTOR')) {\n      setError(new Error(\"Access Denied. You must be a logged-in doctor to view patient profiles.\"));\n      setLoading(false);\n      return;\n    }\n\n    // Simulacija dohvaćanja pacijentovih podataka\n    setTimeout(() => {\n      const patientData = mockPatients[parseInt(patientId)];\n      if (patientData) {\n        setPatient(patientData);\n        setMedicalDocuments(mockMedicalDocuments[parseInt(patientId)] || []);\n        setError(null);\n      } else {\n        setError(new Error(\"Patient not found.\"));\n      }\n      setLoading(false);\n    }, 500);\n\n    // U stvarnoj aplikaciji, ovdje biste dohvatili podatke s backenda:\n    // const fetchPatientData = async () => {\n    //   try {\n    //     const patientResponse = await fetch(`http://localhost:8080/api/patients/${patientId}`);\n    //     if (!patientResponse.ok) throw new Error('Failed to fetch patient data');\n    //     const patientData = await patientResponse.json();\n    //     setPatient(patientData);\n\n    //     const docsResponse = await fetch(`http://localhost:8080/api/patients/${patientId}/documents`);\n    //     if (!docsResponse.ok) throw new Error('Failed to fetch medical documents');\n    //     const docsData = await docsResponse.json();\n    //     setMedicalDocuments(docsData);\n\n    //   } catch (err) {\n    //     setError(err);\n    //   } finally {\n    //     setLoading(false);\n    //   }\n    // };\n    // fetchPatientData();\n  }, [patientId, isAuthenticated, hasRole]); // Zavisnosti za useEffect\n\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    setUploadMessage('');\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      setUploadMessage('Molimo odaberite PDF datoteku za upload.');\n      return;\n    }\n    if (selectedFile.type !== 'application/pdf') {\n      setUploadMessage('Molimo odaberite validnu PDF datoteku.');\n      return;\n    }\n    setUploadMessage('Uploading file...');\n    // Simulacija uploada\n    setTimeout(() => {\n      const newDoc = {\n        id: medicalDocuments.length + 1,\n        name: selectedFile.name,\n        url: URL.createObjectURL(selectedFile),\n        // Privremeni URL za prikaz\n        uploadDate: new Date().toISOString().split('T')[0]\n      };\n      setMedicalDocuments([...medicalDocuments, newDoc]);\n      setUploadMessage(`Datoteka \"${selectedFile.name}\" uspješno uploadana!`);\n      setSelectedFile(null); // Očisti odabranu datoteku\n    }, 1500);\n\n    // U stvarnoj aplikaciji, ovdje biste poslali datoteku na backend:\n    // const formData = new FormData();\n    // formData.append('file', selectedFile);\n    // formData.append('patientId', patientId);\n    // formData.append('doktorId', doktorId); // ID ulogovanog doktora\n\n    // try {\n    //   const response = await fetch(`http://localhost:8080/api/documents/upload`, {\n    //     method: 'POST',\n    //     body: formData,\n    //     // Headers kao 'Content-Type': 'multipart/form-data' obično nisu potrebni kada koristite FormData\n    //   });\n\n    //   if (!response.ok) {\n    //     throw new Error('Failed to upload document.');\n    //   }\n    //   const uploadedDoc = await response.json(); // Očekujemo podatke o uploadanom dokumentu\n    //   setMedicalDocuments([...medicalDocuments, uploadedDoc]);\n    //   setUploadMessage(`Datoteka \"${selectedFile.name}\" uspješno uploadana!`);\n    //   setSelectedFile(null);\n    // } catch (err) {\n    //   setUploadMessage(`Greška pri uploadu: ${err.message}`);\n    //   console.error('Upload error:', err);\n    // }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"U\\u010Ditavanje pacijentovog profila...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-danger\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead text-danger\",\n        children: [\"Gre\\u0161ka: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Molimo provjerite da li ste ulogovani kao doktor i da li pacijent postoji.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  }\n  if (!patient) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center py-5\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Pacijent nije prona\\u0111en.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title text-center mb-4 text-danger\",\n          children: [\"Patient Profile: \", patient.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-muted mb-5\",\n          children: [\"Detailed information and medical documentation for \", patient.name, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: patient.image // Koristi se URL iz mockPatients\n              ,\n              alt: patient.name,\n              className: \"rounded-circle border border-5 border-light shadow-sm\",\n              style: {\n                width: '180px',\n                height: '180px',\n                objectFit: 'cover'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mt-3 text-dark\",\n              children: patient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted\",\n              children: patient.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-danger mb-3\",\n              children: \"Patient Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Date of Birth:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 49\n                }, this), \" \", patient.dob]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Gender:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 49\n                }, this), \" \", patient.gender]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Phone:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 49\n                }, this), \" \", patient.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 49\n                }, this), \" \", patient.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-danger mb-3\",\n            children: \"Medical Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), medicalDocuments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: medicalDocuments.map(doc => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-file-earmark-pdf-fill text-danger me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this), doc.name, \" (Uploaded: \", doc.uploadDate, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: doc.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"btn btn-outline-primary btn-sm\",\n                children: \"View PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)]\n            }, doc.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: \"No medical documents found for this patient.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-4 rounded bg-light shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-danger mb-3\",\n            children: \"Upload New Medical Document (PDF)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pdfUpload\",\n              className: \"form-label\",\n              children: \"Select PDF File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"form-control\",\n              id: \"pdfUpload\",\n              accept: \".pdf\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: handleFileUpload,\n            disabled: !selectedFile,\n            children: \"Upload PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), uploadMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mt-3 alert ${uploadMessage.includes('uspješno') ? 'alert-success' : 'alert-info'}`,\n            role: \"alert\",\n            children: uploadMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientProfileForDoctorPage, \"KuVavyLaQKblQbEV/0Q2GTkIbZc=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = PatientProfileForDoctorPage;\nexport default PatientProfileForDoctorPage;\nvar _c;\n$RefreshReg$(_c, \"PatientProfileForDoctorPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useAuth","jsxDEV","_jsxDEV","PatientProfileForDoctorPage","_s","patientId","isAuthenticated","hasRole","doktorId","patient","setPatient","medicalDocuments","setMedicalDocuments","loading","setLoading","error","setError","selectedFile","setSelectedFile","uploadMessage","setUploadMessage","mockPatients","id","name","email","dob","gender","phone","address","image","mockMedicalDocuments","url","uploadDate","Error","setTimeout","patientData","parseInt","handleFileChange","event","target","files","handleFileUpload","type","newDoc","length","URL","createObjectURL","Date","toISOString","split","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","message","src","alt","style","width","height","objectFit","map","doc","href","rel","htmlFor","accept","onChange","onClick","disabled","includes","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/PatientProfileForDoctorPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n// Uklonjen direktan import Bootstrap CSS-a iz JS-a.\r\n// Pretpostavlja se da će se Bootstrap CSS učitati putem CDN-a u public/index.html.\r\nimport { useAuth } from '../contexts/AuthContext'; // VAŽNO: Provjerite da li je putanja do AuthContext.js ispravna!\r\n// Uklonjen import za lokalnu sliku, koristi se direktan URL za placeholder.\r\n// import patientPlaceholderImage from '../images/image_6c9a36.png';\r\n\r\nfunction PatientProfileForDoctorPage() {\r\n  const { patientId } = useParams(); // Dohvaća ID pacijenta iz URL-a\r\n  const { isAuthenticated, hasRole, doktorId } = useAuth(); // Provjera uloge i autentičnosti\r\n  const [patient, setPatient] = useState(null);\r\n  const [medicalDocuments, setMedicalDocuments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadMessage, setUploadMessage] = useState('');\r\n\r\n  // Mock podaci za pacijenta\r\n  const mockPatients = {\r\n    1: { id: 1, name: 'Petar Petrović', email: 'petar.p@example.com', dob: '1990-01-15', gender: 'Male', phone: '+387 61 111 222', address: 'Ulica Prva 1, Sarajevo', image: 'https://placehold.co/180x180/F06292/FFFFFF?text=Patient' }, // Ažuriran URL slike\r\n    2: { id: 2, name: 'Ana Anić', email: 'ana.a@example.com', dob: '1985-03-20', gender: 'Female', phone: '+387 62 333 444', address: 'Ulica Druga 2, Mostar', image: 'https://placehold.co/180x180/F06292/FFFFFF?text=Patient' }, // Ažuriran URL slike\r\n    3: { id: 3, name: 'Marko Marković', email: 'marko.m@example.com', dob: '2000-07-01', gender: 'Male', phone: '+387 63 555 666', address: 'Ulica Treća 3, Banja Luka', image: 'https://placehold.co/180x180/F06292/FFFFFF?text=Patient' }, // Ažuriran URL slike\r\n    4: { id: 4, name: 'Jelena Jelić', email: 'jelena.j@example.com', dob: '1978-11-10', gender: 'Female', phone: '+387 61 777 888', address: 'Ulica Četvrta 4, Tuzla', image: 'https://placehold.co/180x180/F06292/FFFFFF?text=Patient' }, // Ažuriran URL slike\r\n    5: { id: 5, name: 'Ivan Ivanović', email: 'ivan.i@example.com', dob: '1995-05-25', gender: 'Male', phone: '+387 62 999 000', address: 'Ulica Peta 5, Zenica', image: 'https://placehold.co/180x180/F06292/FFFFFF?text=Patient' }, // Ažuriran URL slike\r\n    6: { id: 6, name: 'Milica Milić', email: 'milica.m@example.com', dob: '1988-09-05', gender: 'Female', phone: '+387 63 123 789', address: 'Ulica Šesta 6, Bihać', image: 'https://placehold.co/180x180/F06292/FFFFFF?text=Patient' }, // Ažuriran URL slike\r\n  };\r\n\r\n  // Mock podaci za medicinsku dokumentaciju\r\n  const mockMedicalDocuments = {\r\n    1: [\r\n      { id: 1, name: 'Blood Test Results - 2024-01-10.pdf', url: 'https://www.africau.edu/images/default/sample.pdf', uploadDate: '2024-01-10' },\r\n      { id: 2, name: 'X-Ray Scan - 2023-11-20.pdf', url: 'https://www.africau.edu/images/default/sample.pdf', uploadDate: '2023-11-20' },\r\n    ],\r\n    2: [\r\n      { id: 3, name: 'Dermatology Report - 2024-02-15.pdf', url: 'https://www.africau.edu/images/default/sample.pdf', uploadDate: '2024-02-15' },\r\n    ],\r\n    // Dodajte više dokumenata za druge pacijente po potrebi\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Provjera da li je doktor ulogovan i ima odgovarajuću ulogu\r\n    if (!isAuthenticated || !hasRole('ROLE_DOCTOR')) {\r\n      setError(new Error(\"Access Denied. You must be a logged-in doctor to view patient profiles.\"));\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Simulacija dohvaćanja pacijentovih podataka\r\n    setTimeout(() => {\r\n      const patientData = mockPatients[parseInt(patientId)];\r\n      if (patientData) {\r\n        setPatient(patientData);\r\n        setMedicalDocuments(mockMedicalDocuments[parseInt(patientId)] || []);\r\n        setError(null);\r\n      } else {\r\n        setError(new Error(\"Patient not found.\"));\r\n      }\r\n      setLoading(false);\r\n    }, 500);\r\n\r\n    // U stvarnoj aplikaciji, ovdje biste dohvatili podatke s backenda:\r\n    // const fetchPatientData = async () => {\r\n    //   try {\r\n    //     const patientResponse = await fetch(`http://localhost:8080/api/patients/${patientId}`);\r\n    //     if (!patientResponse.ok) throw new Error('Failed to fetch patient data');\r\n    //     const patientData = await patientResponse.json();\r\n    //     setPatient(patientData);\r\n\r\n    //     const docsResponse = await fetch(`http://localhost:8080/api/patients/${patientId}/documents`);\r\n    //     if (!docsResponse.ok) throw new Error('Failed to fetch medical documents');\r\n    //     const docsData = await docsResponse.json();\r\n    //     setMedicalDocuments(docsData);\r\n\r\n    //   } catch (err) {\r\n    //     setError(err);\r\n    //   } finally {\r\n    //     setLoading(false);\r\n    //   }\r\n    // };\r\n    // fetchPatientData();\r\n  }, [patientId, isAuthenticated, hasRole]); // Zavisnosti za useEffect\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n    setUploadMessage('');\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile) {\r\n      setUploadMessage('Molimo odaberite PDF datoteku za upload.');\r\n      return;\r\n    }\r\n\r\n    if (selectedFile.type !== 'application/pdf') {\r\n      setUploadMessage('Molimo odaberite validnu PDF datoteku.');\r\n      return;\r\n    }\r\n\r\n    setUploadMessage('Uploading file...');\r\n    // Simulacija uploada\r\n    setTimeout(() => {\r\n      const newDoc = {\r\n        id: medicalDocuments.length + 1,\r\n        name: selectedFile.name,\r\n        url: URL.createObjectURL(selectedFile), // Privremeni URL za prikaz\r\n        uploadDate: new Date().toISOString().split('T')[0],\r\n      };\r\n      setMedicalDocuments([...medicalDocuments, newDoc]);\r\n      setUploadMessage(`Datoteka \"${selectedFile.name}\" uspješno uploadana!`);\r\n      setSelectedFile(null); // Očisti odabranu datoteku\r\n    }, 1500);\r\n\r\n    // U stvarnoj aplikaciji, ovdje biste poslali datoteku na backend:\r\n    // const formData = new FormData();\r\n    // formData.append('file', selectedFile);\r\n    // formData.append('patientId', patientId);\r\n    // formData.append('doktorId', doktorId); // ID ulogovanog doktora\r\n\r\n    // try {\r\n    //   const response = await fetch(`http://localhost:8080/api/documents/upload`, {\r\n    //     method: 'POST',\r\n    //     body: formData,\r\n    //     // Headers kao 'Content-Type': 'multipart/form-data' obično nisu potrebni kada koristite FormData\r\n    //   });\r\n\r\n    //   if (!response.ok) {\r\n    //     throw new Error('Failed to upload document.');\r\n    //   }\r\n    //   const uploadedDoc = await response.json(); // Očekujemo podatke o uploadanom dokumentu\r\n    //   setMedicalDocuments([...medicalDocuments, uploadedDoc]);\r\n    //   setUploadMessage(`Datoteka \"${selectedFile.name}\" uspješno uploadana!`);\r\n    //   setSelectedFile(null);\r\n    // } catch (err) {\r\n    //   setUploadMessage(`Greška pri uploadu: ${err.message}`);\r\n    //   console.error('Upload error:', err);\r\n    // }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container text-center py-5\">\r\n        <p className=\"lead\">Učitavanje pacijentovog profila...</p>\r\n        <div className=\"spinner-border text-danger\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"container text-center py-5\">\r\n        <p className=\"lead text-danger\">Greška: {error.message}</p>\r\n        <p>Molimo provjerite da li ste ulogovani kao doktor i da li pacijent postoji.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!patient) {\r\n    return (\r\n      <div className=\"container text-center py-5\">\r\n        <p className=\"lead\">Pacijent nije pronađen.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <div className=\"card shadow-lg p-4\">\r\n        <div className=\"card-body\">\r\n          <h2 className=\"card-title text-center mb-4 text-danger\">Patient Profile: {patient.name}</h2>\r\n          <p className=\"text-center text-muted mb-5\">\r\n            Detailed information and medical documentation for {patient.name}.\r\n          </p>\r\n\r\n          <div className=\"row mb-5\">\r\n            <div className=\"col-md-4 text-center\">\r\n              <img\r\n                src={patient.image} // Koristi se URL iz mockPatients\r\n                alt={patient.name}\r\n                className=\"rounded-circle border border-5 border-light shadow-sm\"\r\n                style={{ width: '180px', height: '180px', objectFit: 'cover' }}\r\n              />\r\n              <h4 className=\"mt-3 text-dark\">{patient.name}</h4>\r\n              <p className=\"text-muted\">{patient.email}</p>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <h4 className=\"text-danger mb-3\">Patient Details</h4>\r\n              <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item\"><strong>Date of Birth:</strong> {patient.dob}</li>\r\n                <li className=\"list-group-item\"><strong>Gender:</strong> {patient.gender}</li>\r\n                <li className=\"list-group-item\"><strong>Phone:</strong> {patient.phone}</li>\r\n                <li className=\"list-group-item\"><strong>Address:</strong> {patient.address}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"my-5\" />\r\n\r\n          {/* Medical Documents Section */}\r\n          <div className=\"mb-5\">\r\n            <h4 className=\"text-danger mb-3\">Medical Documents</h4>\r\n            {medicalDocuments.length > 0 ? (\r\n              <ul className=\"list-group\">\r\n                {medicalDocuments.map(doc => (\r\n                  <li key={doc.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    <span>\r\n                      <i className=\"bi bi-file-earmark-pdf-fill text-danger me-2\"></i>\r\n                      {doc.name} (Uploaded: {doc.uploadDate})\r\n                    </span>\r\n                    <a href={doc.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-outline-primary btn-sm\">View PDF</a>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p className=\"text-muted\">No medical documents found for this patient.</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Upload PDF Section */}\r\n          <div className=\"mb-4 p-4 rounded bg-light shadow-sm\">\r\n            <h4 className=\"text-danger mb-3\">Upload New Medical Document (PDF)</h4>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"pdfUpload\" className=\"form-label\">Select PDF File</label>\r\n              <input\r\n                type=\"file\"\r\n                className=\"form-control\"\r\n                id=\"pdfUpload\"\r\n                accept=\".pdf\"\r\n                onChange={handleFileChange}\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={handleFileUpload}\r\n              disabled={!selectedFile}\r\n            >\r\n              Upload PDF\r\n            </button>\r\n            {uploadMessage && (\r\n              <div className={`mt-3 alert ${uploadMessage.includes('uspješno') ? 'alert-success' : 'alert-info'}`} role=\"alert\">\r\n                {uploadMessage}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientProfileForDoctorPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}