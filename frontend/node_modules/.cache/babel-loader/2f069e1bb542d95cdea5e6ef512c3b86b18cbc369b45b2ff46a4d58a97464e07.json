{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs } from 'react-bootstrap';\n// No need for react-datepicker if your original version doesn't use it.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\n\n// Defining API prefixes for each microservice - WE USE THESE PREFIXES!\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`; // Assumed path for authentication, if used directly\n\nfunction PatientDashboard() {\n  _s();\n  var _doctors$find3, _doctors$find4;\n  // UPDATED: user object now contains authId (Long), id (email), patientId (Integer)\n  const {\n    token,\n    user\n  } = useAuth();\n  console.log(\"Current user object from useAuth (PatientDashboard):\", user);\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [appointments, setAppointments] = useState([]);\n  const [medicalHistory, setMedicalHistory] = useState([]);\n  const [patientProfile, setPatientProfile] = useState({});\n  const [doctors, setDoctors] = useState([]); // This doctor list should also contain userId\n  const [allDoctorAvailableTerms, setAllDoctorAvailableTerms] = useState([]);\n  // const [documents, setDocuments] = useState([]); // REMOVED: No longer needed\n  const [bills, setBills] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState({\n    recipientId: '',\n    subject: '',\n    content: ''\n  });\n  const [replyMessage, setReplyMessage] = useState({\n    messageId: '',\n    content: ''\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [newAppointment, setNewAppointment] = useState({\n    doctorId: '',\n    appointmentDate: '',\n    appointmentTime: '',\n    terminId: '',\n    reason: ''\n  });\n  const [editingAppointment, setEditingAppointment] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // State for rating modal\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  const [selectedDoctorForRating, setSelectedDoctorForRating] = useState(null);\n  const [ratingData, setRatingData] = useState({\n    ocjena: 5,\n    komentar: ''\n  }); // Default rating 5\n\n  // NEW: State for bill details modal\n  const [showBillDetailsModal, setShowBillDetailsModal] = useState(false);\n  const [selectedBillDetails, setSelectedBillDetails] = useState(null);\n\n  // --- API Calls ---\n\n  const fetchPatientAppointments = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching appointments.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/zakazani/${user.pacijentId}`, authHeaders);\n      const transformedAppointments = response.data.map(app => ({\n        id: app.pregledID,\n        doktorID: app.doktorID,\n        pacijentID: app.pacijentID,\n        datumPregleda: app.datumPregleda,\n        vrijemePregleda: app.vrijemePregleda,\n        komentarPacijenta: app.komentarPacijenta,\n        status: app.status,\n        terminID: app.terminID,\n        doktorIme: app.doktorIme\n      }));\n      setAppointments(transformedAppointments);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching patient appointments:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setAlertMessage('Failed to fetch scheduled appointments.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMedicalHistory = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching medical history.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedHistory = response.data.map(record => ({\n        id: record.zapisID,\n        patientId: record.pacijentID,\n        doctorId: record.doktorID,\n        doctorName: record.doktorIme,\n        date: record.datumZapisivanja,\n        diagnosis: record.dijagnoza,\n        treatment: record.lijecenje,\n        notes: record.napomene\n      }));\n      setMedicalHistory(transformedHistory);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response2;\n      console.error('Error fetching medical history:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      setAlertMessage('Failed to fetch medical history.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchPatientProfile = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching patient profile.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, authHeaders);\n      setPatientProfile({\n        id: response.data.pacijentID,\n        firstName: response.data.ime,\n        lastName: response.data.prezime,\n        email: response.data.email,\n        phone: response.data.telefon,\n        datumRodjenja: response.data.datumRodjenja,\n        adresa: response.data.adresa,\n        userId: Number(response.data.userId) // Explicitly convert to Number\n      });\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response3;\n      console.error('Error fetching patient profile:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      setAlertMessage('Failed to fetch profile data.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: Number(doc.userId),\n        // Explicitly convert to Number\n        firstName: doc.ime,\n        lastName: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\n        email: doc.email,\n        phone: doc.telefon,\n        ocjena: doc.ocjena\n      }));\n      setDoctors(transformedDoctors);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response4;\n      console.error('Error fetching doctors:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      setAlertMessage('Failed to fetch doctor list.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctorAllAvailableTerms = async doktorId => {\n    if (!doktorId) {\n      setAllDoctorAvailableTerms([]);\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/slobodni/${doktorId}`, authHeaders);\n      const termsData = Array.isArray(response.data) ? response.data : [];\n      const available = termsData.map(term => ({\n        terminID: term.terminID,\n        datum: term.datum,\n        vrijeme: term.vrijeme,\n        display: `${term.datum} ${term.vrijeme.substring(0, 5)}`\n      })).sort((a, b) => {\n        const dateTimeA = `${a.datum}T${a.vrijeme}`;\n        const dateTimeB = `${b.datum}T${b.vrijeme}`;\n        return new Date(dateTimeA) - new Date(dateTimeB);\n      });\n      setAllDoctorAvailableTerms(available);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response5;\n      console.error('Error fetching doctor availability:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      setAlertMessage('Failed to fetch doctor availability.');\n      setAlertType('danger');\n      setShowAlert(true);\n      setAllDoctorAvailableTerms([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // REMOVED: fetchDocuments and handleDocumentUpload are no longer part of PatientDashboard\n  // const fetchDocuments = async () => { ... }\n  // const handleDocumentUpload = async (e) => { ... }\n\n  const fetchBills = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"Patient ID not available for fetching bills.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedBills = response.data.map(bill => ({\n        id: bill.racunID,\n        billDate: bill.datumIzdavanja,\n        amount: bill.iznos,\n        status: bill.status,\n        dueDate: bill.datumDospijeca,\n        opis: bill.opis,\n        doktorIme: bill.doktorIme\n      }));\n      setBills(transformedBills);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response6;\n      console.error('Error fetching bills:', ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      setAlertMessage('Failed to fetch billing information.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMessages = async () => {\n    if (!user || !user.userId) {\n      // Use user.userId to fetch messages\n      console.warn(\"User ID not available for fetching messages.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=PACIJENT`, authHeaders);\n      const transformedMessages = response.data.map(msg => ({\n        id: msg.porukaID,\n        senderId: Number(msg.senderId),\n        // Explicitly convert to Number\n        senderType: msg.senderType,\n        senderIme: msg.senderIme,\n        receiverId: Number(msg.receiverId),\n        // Explicitly convert to Number\n        receiverType: msg.receiverType,\n        receiverIme: msg.receiverIme,\n        subject: msg.subject,\n        content: msg.content,\n        timestamp: msg.timestamp,\n        replies: msg.replies || [] // Ensure replies is always an array\n      }));\n      setMessages(transformedMessages);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response7;\n      console.error('Error fetching messages:', ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      setAlertMessage('Failed to fetch messages.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- useEffect Hooks ---\n  useEffect(() => {\n    const loadAllData = async () => {\n      if (token && user) {\n        setLoading(true);\n        await Promise.all([fetchPatientAppointments(), fetchMedicalHistory(), fetchPatientProfile(), fetchDoctors(),\n        // fetchDocuments(), // REMOVED\n        fetchBills(), fetchMessages()]);\n        setLoading(false);\n      } else if (!token || user && !user.pacijentId && !user.doktorId) {\n        setLoading(false);\n        if (!token) {\n          console.warn(\"Token not available. User not logged in.\");\n        } else {\n          console.warn(\"User object available, but patientId nor doctorId are. User might be neither patient nor doctor.\");\n        }\n      }\n    };\n    loadAllData();\n  }, [token, user]);\n\n  // --- Appointment Scheduling/Cancellation ---\n\n  const openAppointmentModal = (appointment = null, doctorIdFromSearch = null) => {\n    if (appointment) {\n      setEditingAppointment(appointment);\n      setNewAppointment({\n        doctorId: appointment.doktorID,\n        appointmentDate: appointment.datumPregleda,\n        appointmentTime: appointment.vrijemePregleda,\n        terminId: appointment.terminID,\n        reason: appointment.komentarPacijenta\n      });\n      fetchDoctorAllAvailableTerms(appointment.doktorID);\n    } else {\n      setEditingAppointment(null);\n      setNewAppointment({\n        doctorId: doctorIdFromSearch || '',\n        appointmentDate: '',\n        appointmentTime: '',\n        terminId: '',\n        reason: ''\n      });\n      setAllDoctorAvailableTerms([]);\n      if (doctorIdFromSearch) {\n        fetchDoctorAllAvailableTerms(doctorIdFromSearch);\n      }\n    }\n    setShowAppointmentModal(true);\n  };\n  const closeAppointmentModal = () => {\n    setShowAppointmentModal(false);\n    setEditingAppointment(null);\n    setNewAppointment({\n      doctorId: '',\n      appointmentDate: '',\n      appointmentTime: '',\n      terminId: '',\n      reason: ''\n    });\n    setAllDoctorAvailableTerms([]);\n  };\n  const handleNewAppointmentChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let updatedAppointment = {\n      ...newAppointment,\n      [name]: value\n    };\n    if (name === 'doctorId') {\n      updatedAppointment.appointmentDate = '';\n      updatedAppointment.appointmentTime = '';\n      updatedAppointment.terminId = '';\n      if (value) {\n        await fetchDoctorAllAvailableTerms(value);\n      } else {\n        setAllDoctorAvailableTerms([]);\n      }\n    } else if (name === 'terminId') {\n      const selectedTerm = allDoctorAvailableTerms.find(term => term.terminID === parseInt(value));\n      if (selectedTerm) {\n        updatedAppointment.terminId = selectedTerm.terminID;\n        updatedAppointment.appointmentDate = selectedTerm.datum;\n        updatedAppointment.appointmentTime = selectedTerm.vrijeme;\n      } else {\n        updatedAppointment.terminId = '';\n        updatedAppointment.appointmentDate = '';\n        updatedAppointment.appointmentTime = '';\n      }\n    }\n    setNewAppointment(updatedAppointment);\n  };\n  const handleScheduleAppointment = async () => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('Patient ID not available. Cannot schedule appointment.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason) {\n      setAlertMessage('Please select a doctor, an available slot, and provide a reason.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    const appointmentData = {\n      pacijentID: user.pacijentId,\n      doktorID: parseInt(newAppointment.doctorId),\n      terminID: newAppointment.terminId,\n      datumPregleda: newAppointment.appointmentDate,\n      vrijemePregleda: newAppointment.appointmentTime,\n      komentarPacijenta: newAppointment.reason,\n      status: editingAppointment ? editingAppointment.status : 'zakazan'\n    };\n    try {\n      await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\n      setAlertMessage('Appointment scheduling request successfully accepted. You will be notified when it is processed.');\n      setAlertType('info');\n      setShowAlert(true);\n      closeAppointmentModal();\n    } catch (error) {\n      var _error$response8, _error$response9, _error$response9$data;\n      console.error('Error scheduling/updating appointment:', ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n      let errorMessage = 'Failed to schedule/update appointment. Please try again.';\n      if ((_error$response9 = error.response) !== null && _error$response9 !== void 0 && (_error$response9$data = _error$response9.data) !== null && _error$response9$data !== void 0 && _error$response9$data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      setAlertMessage(errorMessage);\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleCancelAppointment = async appointmentId => {\n    if (window.confirm('Are you sure you want to cancel this appointment?')) {\n      if (!user || !user.pacijentId) {\n        setAlertMessage('Patient ID not available for cancellation. Please try again.');\n        setAlertType('danger');\n        setShowAlert(true);\n        return;\n      }\n      try {\n        const existingApp = appointments.find(app => app.id === appointmentId);\n        if (!existingApp) {\n          setAlertMessage(\"Appointment not found for cancellation.\");\n          setAlertType('danger');\n          setShowAlert(true);\n          return;\n        }\n        const cancelPayload = {\n          pregledID: existingApp.id,\n          pacijentID: user.pacijentId,\n          doktorID: existingApp.doktorID,\n          terminID: existingApp.terminID,\n          datumPregleda: existingApp.datumPregleda,\n          vrijemePregleda: existingApp.vrijemePregleda,\n          komentarPacijenta: existingApp.komentarPacijenta,\n          status: 'otkazan'\n        };\n        await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}`, cancelPayload, authHeaders);\n        setAlertMessage('Appointment successfully cancelled!');\n        setAlertType('success');\n        setShowAlert(true);\n        fetchPatientAppointments();\n      } catch (error) {\n        var _error$response0, _error$response1, _error$response1$data;\n        console.error('Error cancelling appointment:', ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error.message);\n        setAlertMessage('Failed to cancel appointment. Please try again. ' + (((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || error.message));\n        setAlertType('danger');\n        setShowAlert(true);\n      }\n    }\n  };\n\n  // --- Profile Update ---\n  const handleProfileChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPatientProfile(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSaveProfile = async () => {\n    if (!user || !user.pacijentId || !user.userId) {\n      setAlertMessage('Patient ID or User ID not available. Cannot save profile.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const patientDetailsPayload = {\n        pacijentID: user.pacijentId,\n        ime: patientProfile.firstName,\n        prezime: patientProfile.lastName,\n        email: patientProfile.email,\n        telefon: patientProfile.phone,\n        datumRodjenja: patientProfile.datumRodjenja,\n        adresa: patientProfile.adresa,\n        userId: user.userId\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, patientDetailsPayload, authHeaders);\n      const authProfilePayload = {\n        email: patientProfile.email,\n        fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\n        telefon: patientProfile.phone\n      };\n      await axios.put(`${AUTH_API_PREFIX}/users/${user.userId}`, authProfilePayload, authHeaders);\n      setAlertMessage('Profile successfully updated!');\n      setAlertType('success');\n      setShowAlert(true);\n      fetchPatientProfile();\n    } catch (error) {\n      var _error$response10, _error$response11, _error$response11$dat;\n      console.error('Error updating profile:', ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message);\n      setAlertMessage('Failed to update profile. Please try again. ' + (((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : (_error$response11$dat = _error$response11.data) === null || _error$response11$dat === void 0 ? void 0 : _error$response11$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- Secure Messaging ---\n  const handleNewMessageChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMessage(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleReplyMessageChange = e => {\n    setReplyMessage(prev => ({\n      ...prev,\n      content: e.target.value\n    }));\n  };\n  const handleSendMessage = async () => {\n    if (!user || !user.userId) {\n      // Use user.userId to send message\n      setAlertMessage('Your user ID is not available. Cannot send message.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\n      setAlertMessage('Please fill in all message fields.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const messageData = {\n        senderId: user.userId,\n        // SENDER is now user.userId (Long)\n        senderType: 'PACIJENT',\n        receiverId: Number(newMessage.recipientId),\n        // Convert to Number\n        receiverType: 'DOKTOR',\n        subject: newMessage.subject,\n        content: newMessage.content\n      };\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\n      setAlertMessage('Message successfully sent!');\n      setAlertType('success');\n      setShowAlert(true);\n      setNewMessage({\n        recipientId: '',\n        subject: '',\n        content: ''\n      });\n      fetchMessages(); // Refresh message list\n    } catch (error) {\n      var _error$response12, _error$response13, _error$response13$dat;\n      console.error('Error sending message:', ((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : _error$response12.data) || error.message);\n      setAlertMessage('Failed to send message. ' + (((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : (_error$response13$dat = _error$response13.data) === null || _error$response13$dat === void 0 ? void 0 : _error$response13$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleReply = async messageId => {\n    if (!user || !user.userId) {\n      // Use user.userId to send reply\n      setAlertMessage('Your user ID is not available. Cannot reply.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!replyMessage.content) {\n      setAlertMessage('Reply content cannot be empty.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\n        senderId: user.userId,\n        // Important: Use user.userId here\n        senderIme: user.fullName,\n        // Use fullName from useAuth\n        senderType: 'PACIJENT',\n        content: replyMessage.content,\n        timestamp: new Date().toISOString()\n      }, authHeaders);\n      setAlertMessage('Reply successfully sent!', 'success');\n      setAlertType('success');\n      setShowAlert(true);\n      setReplyMessage({\n        messageId: '',\n        content: ''\n      });\n      fetchMessages(); // Refresh message list\n      // Update local state for current reply display\n      setSelectedMessage(prev => {\n        if (!prev) return null;\n        return {\n          ...prev,\n          replies: [...(prev.replies || []), {\n            senderId: user.userId,\n            // Important: Use user.userId here\n            senderIme: user.fullName,\n            // Use fullName from useAuth\n            senderType: 'PACIJENT',\n            content: replyMessage.content,\n            timestamp: new Date().toISOString()\n          }]\n        };\n      });\n    } catch (error) {\n      var _error$response14, _error$response15, _error$response15$dat;\n      console.error('Error sending reply:', ((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : _error$response14.data) || error.message);\n      setAlertMessage('Failed to send reply. ' + (((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : (_error$response15$dat = _error$response15.data) === null || _error$response15$dat === void 0 ? void 0 : _error$response15$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleViewMessage = message => {\n    setSelectedMessage(message);\n  };\n  const closeMessageModal = () => {\n    setSelectedMessage(null);\n    setReplyMessage({\n      messageId: '',\n      content: ''\n    });\n  };\n\n  // --- Rating Functions ---\n  const openRatingModal = (doktorID, doktorIme) => {\n    setSelectedDoctorForRating({\n      id: doktorID,\n      name: doktorIme\n    });\n    setRatingData({\n      ocjena: 5,\n      komentar: ''\n    });\n    setShowRatingModal(true);\n  };\n  const closeRatingModal = () => {\n    setShowRatingModal(false);\n    setSelectedDoctorForRating(null);\n    setRatingData({\n      ocjena: 5,\n      komentar: ''\n    });\n  };\n  const handleRatingChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRatingData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmitRating = async () => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('Patient ID not available. Cannot submit rating.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!selectedDoctorForRating || ratingData.ocjena === null) {\n      setAlertMessage('Please select a rating.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const ratingPayload = {\n        pacijentID: user.pacijentId,\n        doktorID: selectedDoctorForRating.id,\n        ocjena: parseFloat(ratingData.ocjena),\n        komentar: ratingData.komentar\n      };\n      await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/ocjene`, ratingPayload, authHeaders);\n      setAlertMessage(`Rating successfully submitted for doctor ${selectedDoctorForRating.name}!`);\n      setAlertType('success');\n      setShowAlert(true);\n      closeRatingModal();\n      fetchPatientAppointments();\n      fetchDoctors();\n    } catch (error) {\n      var _error$response16, _error$response17, _error$response17$dat;\n      console.error('Error submitting rating:', ((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : _error$response16.data) || error.message);\n      setAlertMessage('Failed to submit rating. ' + (((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : (_error$response17$dat = _error$response17.data) === null || _error$response17$dat === void 0 ? void 0 : _error$response17$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // NEW: \"Pay Now\" functionality\n  const handlePayNow = async billId => {\n    if (window.confirm('Are you sure you want to mark this bill as paid?')) {\n      try {\n        // Call backend endpoint to update bill status\n        await axios.put(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/${billId}/oznaci-kao-placeno`, {}, authHeaders);\n        setAlertMessage('Bill successfully marked as paid!');\n        setAlertType('success');\n        setShowAlert(true);\n        fetchBills(); // Refresh bill list\n      } catch (error) {\n        var _error$response18, _error$response19, _error$response19$dat;\n        console.error('Error marking bill as paid:', ((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : _error$response18.data) || error.message);\n        setAlertMessage('Failed to mark bill as paid. ' + (((_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : (_error$response19$dat = _error$response19.data) === null || _error$response19$dat === void 0 ? void 0 : _error$response19$dat.message) || error.message));\n        setAlertType('danger');\n        setShowAlert(true);\n      }\n    }\n  };\n\n  // NEW: \"View Details\" functionality\n  const handleViewBillDetails = bill => {\n    setSelectedBillDetails(bill);\n    setShowBillDetailsModal(true);\n  };\n  const closeBillDetailsModal = () => {\n    setShowBillDetailsModal(false);\n    setSelectedBillDetails(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-2\",\n        children: \"Loading dashboard data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 13\n    }, this);\n  }\n  const currentPatientUserId = user.userId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-white p-3\",\n      style: {\n        width: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-4\",\n        children: \"Patient Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('overview'),\n            children: \"Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('myAppointments'),\n            children: \"My Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('medicalHistory'),\n            children: \"Medical History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('billing'),\n            children: \"Billing & Payments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('messages'),\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('doctorSearch'),\n            children: \"Find a Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('profileSettings'),\n            children: \"Profile Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 p-4 bg-light\",\n      children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: alertType,\n        onClose: () => setShowAlert(false),\n        dismissible: true,\n        className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n        style: {\n          zIndex: 1050\n        },\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: \"Patient Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 17\n      }, this), activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Welcome, \", patientProfile.firstName || (user ? user.fullName : 'Patient'), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is your patient overview. Here you can quickly see your upcoming appointments and recent activities.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: \"Upcoming Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-group list-group-flush\",\n                children: appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').length > 0 ? appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').map(app => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item d-flex justify-content-between align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [app.datumPregleda, \" at \", app.vrijemePregleda]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 817,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 818,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Reason: \", app.komentarPacijenta]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 819,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 820,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Doctor: \", app.doktorIme]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 821,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 816,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`,\n                    children: app.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 823,\n                    columnNumber: 53\n                  }, this)]\n                }, app.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 815,\n                  columnNumber: 49\n                }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: \"No upcoming appointments.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 827,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 21\n      }, this), activeTab === 'myAppointments' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => openAppointmentModal(),\n          children: \"Schedule New Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 25\n        }, this), appointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 846,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Reason\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 850,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 845,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: appointments.map(app => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.doktorIme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.datumPregleda\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.vrijemePregleda\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.komentarPacijenta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${app.status === 'obavljen' ? 'success' : app.status === 'zakazan' ? 'warning' : 'danger'}`,\n                  children: app.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 861,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 861,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.status === 'zakazan' || app.status === 'potvrđen' ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"sm\",\n                  onClick: () => handleCancelAppointment(app.id),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 864,\n                  columnNumber: 53\n                }, this) : app.status === 'obavljen' ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  onClick: () => openRatingModal(app.doktorID, app.doktorIme),\n                  children: \"Rate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 866,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"No available actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 868,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 45\n              }, this)]\n            }, app.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No appointment history found. Schedule your first appointment!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 21\n      }, this), activeTab === 'medicalHistory' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My Medical History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 25\n        }, this), medicalHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: medicalHistory.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 41\n            }, this), \" \", record.date, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 78\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Diagnosis:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 41\n            }, this), \" \", record.diagnosis, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 88\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Treatment:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 890,\n              columnNumber: 41\n            }, this), \" \", record.treatment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 890,\n              columnNumber: 88\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Doctor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 891,\n              columnNumber: 41\n            }, this), \" \", record.doctorName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 891,\n              columnNumber: 86\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Notes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 41\n            }, this), \" \", record.notes || 'N/A']\n          }, record.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No medical history records found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 21\n      }, this), activeTab === 'billing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Billing & Payments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 25\n        }, this), bills.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Bill ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 948,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Issue Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 950,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 951,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Issued By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: bills.map(bill => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 960,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(bill.billDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.amount ? bill.amount.toFixed(2) : 'N/A', \" KM\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${bill.status === 'PLACEN' ? 'success' : 'warning'}`,\n                  children: bill.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 963,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 963,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.opis\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.doktorIme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.status === 'NEPLACEN' && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  className: \"me-2\",\n                  onClick: () => handlePayNow(bill.id),\n                  children: \"Pay Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 968,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  onClick: () => handleViewBillDetails(bill),\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 970,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 45\n              }, this)]\n            }, bill.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No billing records found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 21\n      }, this), activeTab === 'messages' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => setNewMessage({\n            recipientId: '',\n            subject: '',\n            content: ''\n          }),\n          children: \"Compose New Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 25\n        }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: messages.map(msg => {\n            var _doctors$find, _doctors$find2;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"From: \", msg.senderId === currentPatientUserId ? 'Me' : ((_doctors$find = doctors.find(d => d.userId === msg.senderId)) === null || _doctors$find === void 0 ? void 0 : _doctors$find.firstName) + ' ' + ((_doctors$find2 = doctors.find(d => d.userId === msg.senderId)) === null || _doctors$find2 === void 0 ? void 0 : _doctors$find2.lastName) || `Doctor (${msg.senderId})`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 993,\n                  columnNumber: 45\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 993,\n                  columnNumber: 268\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Subject:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 994,\n                  columnNumber: 45\n                }, this), \" \", msg.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 994,\n                  columnNumber: 85\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(msg.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 995,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 991,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                size: \"sm\",\n                onClick: () => handleViewMessage(msg),\n                children: \"View Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 41\n              }, this)]\n            }, msg.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 990,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Compose New Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Recipient (Doctor)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"recipientId\",\n              value: newMessage.recipientId,\n              onChange: handleNewMessageChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a doctor --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 37\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.userId,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.userId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1020,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"subject\",\n              value: newMessage.subject,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"content\",\n              value: newMessage.content,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1036,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSendMessage,\n            children: \"Send Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1045,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 21\n      }, this), activeTab === 'doctorSearch' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Find a Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Search for doctors by name or specialty to find the right care for you.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Search by name or specialty...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 25\n        }, this), doctors.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Specialty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Contact\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1063,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1064,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1065,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1071,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.specialty || 'General Practitioner'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1072,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.email, \" | \", doctor.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1073,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.ocjena ? doctor.ocjena.toFixed(1) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1074,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"sm\",\n                  onClick: () => {\n                    openAppointmentModal(null, doctor.id);\n                  },\n                  children: \"Schedule Appointment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1076,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1075,\n                columnNumber: 45\n              }, this)]\n            }, doctor.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1070,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1058,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No doctors found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1051,\n        columnNumber: 21\n      }, this), activeTab === 'profileSettings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Profile Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formFirstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1095,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              value: patientProfile.firstName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1094,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formLastName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              value: patientProfile.lastName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1105,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: patientProfile.email || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formPhone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1122,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"phone\",\n              value: patientProfile.phone || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAddress\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"adresa\",\n              value: patientProfile.adresa || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1132,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDatumRodjenja\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"datumRodjenja\",\n              value: patientProfile.datumRodjenja || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1141,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSaveProfile,\n            children: \"Save Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAppointmentModal,\n      onHide: closeAppointmentModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: editingAppointment ? 'Edit Appointment' : 'Schedule New Appointment'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDoctor\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"doctorId\",\n              value: newAppointment.doctorId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a doctor --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1172,\n                columnNumber: 33\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.id,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1174,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1165,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1163,\n            columnNumber: 25\n          }, this), newAppointment.doctorId && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAvailableTerm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Available Slot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1181,\n              columnNumber: 33\n            }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1183,\n              columnNumber: 37\n            }, this) : allDoctorAvailableTerms.length > 0 ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"terminId\",\n              value: newAppointment.terminId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select date and time --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1192,\n                columnNumber: 41\n              }, this), allDoctorAvailableTerms.map(term => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term.terminID,\n                children: term.display\n              }, term.terminID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1194,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1185,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: \"No available slots for this doctor.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1198,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1180,\n            columnNumber: 29\n          }, this), newAppointment.terminId && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formAppointmentDateDisplay\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Selected Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1207,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: newAppointment.appointmentDate,\n                readOnly: true,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1208,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formAppointmentTimeDisplay\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Selected Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1216,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: newAppointment.appointmentTime ? newAppointment.appointmentTime.substring(0, 5) : '',\n                readOnly: true,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1217,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1215,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formReason\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Reason for Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1228,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"reason\",\n              value: newAppointment.reason,\n              onChange: handleNewAppointmentChange,\n              placeholder: \"e.g., General check-up, specific symptoms...\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1229,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1227,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeAppointmentModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleScheduleAppointment,\n          disabled: !newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason || loading,\n          children: editingAppointment ? 'Update Appointment' : 'Schedule Appointment'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: !!selectedMessage,\n      onHide: closeMessageModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Message: \", selectedMessage === null || selectedMessage === void 0 ? void 0 : selectedMessage.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1258,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1264,\n              columnNumber: 32\n            }, this), \" \", selectedMessage.senderId === currentPatientUserId ? 'Me' : ((_doctors$find3 = doctors.find(d => d.userId === selectedMessage.senderId)) === null || _doctors$find3 === void 0 ? void 0 : _doctors$find3.firstName) + ' ' + ((_doctors$find4 = doctors.find(d => d.userId === selectedMessage.senderId)) === null || _doctors$find4 === void 0 ? void 0 : _doctors$find4.lastName) || `Doctor (${selectedMessage.senderId})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1265,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedMessage.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1265,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1266,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1267,\n            columnNumber: 29\n          }, this), selectedMessage.replies && selectedMessage.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Replies:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1271,\n              columnNumber: 37\n            }, this), selectedMessage.replies.map((reply, index) => {\n              var _doctors$find5, _doctors$find6;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border p-2 mb-2 rounded bg-light\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [reply.senderId === currentPatientUserId ? 'Me' : ((_doctors$find5 = doctors.find(d => d.userId === reply.senderId)) === null || _doctors$find5 === void 0 ? void 0 : _doctors$find5.firstName) + ' ' + ((_doctors$find6 = doctors.find(d => d.userId === reply.senderId)) === null || _doctors$find6 === void 0 ? void 0 : _doctors$find6.lastName) || `Doctor (${reply.senderId})`, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1275,\n                  columnNumber: 45\n                }, this), \" \", reply.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1276,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(reply.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1277,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1273,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1270,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1284,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: replyMessage.content,\n              onChange: handleReplyMessageChange,\n              placeholder: \"Type your reply here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1285,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1283,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mt-2\",\n            onClick: () => handleReply(selectedMessage.id),\n            children: \"Send Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1293,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeMessageModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1298,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1297,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showRatingModal,\n      onHide: closeRatingModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Rate Doctor: \", selectedDoctorForRating === null || selectedDoctorForRating === void 0 ? void 0 : selectedDoctorForRating.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1307,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formRating\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Rating (1-5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"ocjena\",\n              value: ratingData.ocjena,\n              onChange: handleRatingChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"1 - Very Poor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1320,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"2 - Poor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1321,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"3 - Average\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1322,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"4 - Good\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1323,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5 - Excellent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1324,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1313,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formRatingComment\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Comment (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1328,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"komentar\",\n              value: ratingData.komentar,\n              onChange: handleRatingChange,\n              placeholder: \"Write a comment about your experience...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1329,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1327,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1310,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1309,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeRatingModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1341,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmitRating,\n          children: \"Submit Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1344,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1305,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showBillDetailsModal,\n      onHide: closeBillDetailsModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Bill Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1352,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedBillDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Bill ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1358,\n              columnNumber: 32\n            }, this), \" \", selectedBillDetails.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1358,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Issue Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1359,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedBillDetails.billDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1359,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1360,\n              columnNumber: 32\n            }, this), \" \", selectedBillDetails.amount ? selectedBillDetails.amount.toFixed(2) : 'N/A', \" KM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1360,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1361,\n              columnNumber: 32\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `badge bg-${selectedBillDetails.status === 'PLACEN' ? 'success' : 'warning'}`,\n              children: selectedBillDetails.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1361,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1361,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1362,\n              columnNumber: 32\n            }, this), \" \", selectedBillDetails.opis]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1362,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Issued By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1363,\n              columnNumber: 32\n            }, this), \" \", selectedBillDetails.doktorIme]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1363,\n            columnNumber: 29\n          }, this), selectedBillDetails.dueDate && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Due Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1365,\n              columnNumber: 36\n            }, this), \" \", new Date(selectedBillDetails.dueDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1365,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1357,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeBillDetailsModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1371,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1370,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1351,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 716,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDashboard, \"B1lamPm1K96QBexCfffZtmYFecs=\", false, function () {\n  return [useAuth];\n});\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["axios","useAuth","React","useState","useEffect","useMemo","Modal","Button","Form","Alert","Spinner","Tab","Tabs","jsxDEV","_jsxDEV","Fragment","_Fragment","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","OBAVIJESTI_DOKUMENTI_API_PREFIX","AUTH_API_PREFIX","PatientDashboard","_s","_doctors$find3","_doctors$find4","token","user","console","log","authHeaders","headers","activeTab","setActiveTab","appointments","setAppointments","medicalHistory","setMedicalHistory","patientProfile","setPatientProfile","doctors","setDoctors","allDoctorAvailableTerms","setAllDoctorAvailableTerms","bills","setBills","messages","setMessages","newMessage","setNewMessage","recipientId","subject","content","replyMessage","setReplyMessage","messageId","selectedMessage","setSelectedMessage","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","showAppointmentModal","setShowAppointmentModal","newAppointment","setNewAppointment","doctorId","appointmentDate","appointmentTime","terminId","reason","editingAppointment","setEditingAppointment","loading","setLoading","showRatingModal","setShowRatingModal","selectedDoctorForRating","setSelectedDoctorForRating","ratingData","setRatingData","ocjena","komentar","showBillDetailsModal","setShowBillDetailsModal","selectedBillDetails","setSelectedBillDetails","fetchPatientAppointments","pacijentId","warn","response","get","transformedAppointments","data","map","app","id","pregledID","doktorID","pacijentID","datumPregleda","vrijemePregleda","komentarPacijenta","status","terminID","doktorIme","error","_error$response","message","fetchMedicalHistory","transformedHistory","record","zapisID","patientId","doctorName","date","datumZapisivanja","diagnosis","dijagnoza","treatment","lijecenje","notes","napomene","_error$response2","fetchPatientProfile","firstName","ime","lastName","prezime","email","phone","telefon","datumRodjenja","adresa","userId","Number","_error$response3","fetchDoctors","transformedDoctors","doc","specialty","Array","isArray","specijalizacije","join","_error$response4","fetchDoctorAllAvailableTerms","doktorId","termsData","available","term","datum","vrijeme","display","substring","sort","a","b","dateTimeA","dateTimeB","Date","_error$response5","fetchBills","transformedBills","bill","racunID","billDate","datumIzdavanja","amount","iznos","dueDate","datumDospijeca","opis","_error$response6","fetchMessages","transformedMessages","msg","porukaID","senderId","senderType","senderIme","receiverId","receiverType","receiverIme","timestamp","replies","_error$response7","loadAllData","Promise","all","openAppointmentModal","appointment","doctorIdFromSearch","closeAppointmentModal","handleNewAppointmentChange","e","name","value","target","updatedAppointment","selectedTerm","find","parseInt","handleScheduleAppointment","appointmentData","post","_error$response8","_error$response9","_error$response9$data","errorMessage","handleCancelAppointment","appointmentId","window","confirm","existingApp","cancelPayload","put","_error$response0","_error$response1","_error$response1$data","handleProfileChange","prev","handleSaveProfile","patientDetailsPayload","authProfilePayload","fullName","_error$response10","_error$response11","_error$response11$dat","handleNewMessageChange","handleReplyMessageChange","handleSendMessage","messageData","_error$response12","_error$response13","_error$response13$dat","handleReply","toISOString","_error$response14","_error$response15","_error$response15$dat","handleViewMessage","closeMessageModal","openRatingModal","closeRatingModal","handleRatingChange","handleSubmitRating","ratingPayload","parseFloat","_error$response16","_error$response17","_error$response17$dat","handlePayNow","billId","_error$response18","_error$response19","_error$response19$dat","handleViewBillDetails","closeBillDetailsModal","className","style","minHeight","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","currentPatientUserId","width","onClick","variant","onClose","dismissible","zIndex","filter","length","size","index","toLocaleDateString","toFixed","_doctors$find","_doctors$find2","d","toLocaleString","Group","Label","Control","as","onChange","required","doctor","type","rows","placeholder","controlId","show","onHide","Header","closeButton","Title","Body","readOnly","disabled","Footer","reply","_doctors$find5","_doctors$find6","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/PatientDashboard.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs } from 'react-bootstrap';\r\n// No need for react-datepicker if your original version doesn't use it.\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\n// Defining API prefixes for each microservice - WE USE THESE PREFIXES!\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`; // Assumed path for authentication, if used directly\r\n\r\nfunction PatientDashboard() {\r\n    // UPDATED: user object now contains authId (Long), id (email), patientId (Integer)\r\n    const { token, user } = useAuth();\r\n    console.log(\"Current user object from useAuth (PatientDashboard):\", user);\r\n\r\n    const authHeaders = useMemo(() => ({\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }), [token]);\r\n\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [medicalHistory, setMedicalHistory] = useState([]);\r\n    const [patientProfile, setPatientProfile] = useState({});\r\n    const [doctors, setDoctors] = useState([]); // This doctor list should also contain userId\r\n    const [allDoctorAvailableTerms, setAllDoctorAvailableTerms] = useState([]);\r\n    // const [documents, setDocuments] = useState([]); // REMOVED: No longer needed\r\n    const [bills, setBills] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState({ recipientId: '', subject: '', content: '' });\r\n    const [replyMessage, setReplyMessage] = useState({ messageId: '', content: '' });\r\n    const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('success');\r\n\r\n    const [showAppointmentModal, setShowAppointmentModal] = useState(false);\r\n    const [newAppointment, setNewAppointment] = useState({\r\n        doctorId: '',\r\n        appointmentDate: '',\r\n        appointmentTime: '',\r\n        terminId: '',\r\n        reason: ''\r\n    });\r\n    const [editingAppointment, setEditingAppointment] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // State for rating modal\r\n    const [showRatingModal, setShowRatingModal] = useState(false);\r\n    const [selectedDoctorForRating, setSelectedDoctorForRating] = useState(null);\r\n    const [ratingData, setRatingData] = useState({ ocjena: 5, komentar: '' }); // Default rating 5\r\n\r\n    // NEW: State for bill details modal\r\n    const [showBillDetailsModal, setShowBillDetailsModal] = useState(false);\r\n    const [selectedBillDetails, setSelectedBillDetails] = useState(null);\r\n\r\n\r\n    // --- API Calls ---\r\n\r\n    const fetchPatientAppointments = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching appointments.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/zakazani/${user.pacijentId}`, authHeaders);\r\n            const transformedAppointments = response.data.map(app => ({\r\n                id: app.pregledID,\r\n                doktorID: app.doktorID,\r\n                pacijentID: app.pacijentID,\r\n                datumPregleda: app.datumPregleda,\r\n                vrijemePregleda: app.vrijemePregleda,\r\n                komentarPacijenta: app.komentarPacijenta,\r\n                status: app.status,\r\n                terminID: app.terminID,\r\n                doktorIme: app.doktorIme\r\n            }));\r\n            setAppointments(transformedAppointments);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching patient appointments:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch scheduled appointments.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMedicalHistory = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching medical history.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedHistory = response.data.map(record => ({\r\n                id: record.zapisID,\r\n                patientId: record.pacijentID,\r\n                doctorId: record.doktorID,\r\n                doctorName: record.doktorIme,\r\n                date: record.datumZapisivanja,\r\n                diagnosis: record.dijagnoza,\r\n                treatment: record.lijecenje,\r\n                notes: record.napomene\r\n            }));\r\n            setMedicalHistory(transformedHistory);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching medical history:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch medical history.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchPatientProfile = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching patient profile.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, authHeaders);\r\n            setPatientProfile({\r\n                id: response.data.pacijentID,\r\n                firstName: response.data.ime,\r\n                lastName: response.data.prezime,\r\n                email: response.data.email,\r\n                phone: response.data.telefon,\r\n                datumRodjenja: response.data.datumRodjenja,\r\n                adresa: response.data.adresa,\r\n                userId: Number(response.data.userId) // Explicitly convert to Number\r\n            });\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching patient profile:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch profile data.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctors = async () => {\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n            const transformedDoctors = response.data.map(doc => ({\r\n                id: doc.doktorID,\r\n                userId: Number(doc.userId), // Explicitly convert to Number\r\n                firstName: doc.ime,\r\n                lastName: doc.prezime,\r\n                specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\r\n                email: doc.email,\r\n                phone: doc.telefon,\r\n                ocjena: doc.ocjena\r\n            }));\r\n            setDoctors(transformedDoctors);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching doctors:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch doctor list.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctorAllAvailableTerms = async (doktorId) => {\r\n        if (!doktorId) {\r\n            setAllDoctorAvailableTerms([]);\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/slobodni/${doktorId}`, authHeaders);\r\n            const termsData = Array.isArray(response.data) ? response.data : [];\r\n            const available = termsData\r\n                .map(term => ({\r\n                    terminID: term.terminID,\r\n                    datum: term.datum,\r\n                    vrijeme: term.vrijeme,\r\n                    display: `${term.datum} ${term.vrijeme.substring(0, 5)}`\r\n                }))\r\n                .sort((a, b) => {\r\n                    const dateTimeA = `${a.datum}T${a.vrijeme}`;\r\n                    const dateTimeB = `${b.datum}T${b.vrijeme}`;\r\n                    return new Date(dateTimeA) - new Date(dateTimeB);\r\n                });\r\n            setAllDoctorAvailableTerms(available);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching doctor availability:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch doctor availability.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            setAllDoctorAvailableTerms([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // REMOVED: fetchDocuments and handleDocumentUpload are no longer part of PatientDashboard\r\n    // const fetchDocuments = async () => { ... }\r\n    // const handleDocumentUpload = async (e) => { ... }\r\n\r\n    const fetchBills = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"Patient ID not available for fetching bills.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedBills = response.data.map(bill => ({\r\n                id: bill.racunID,\r\n                billDate: bill.datumIzdavanja,\r\n                amount: bill.iznos,\r\n                status: bill.status,\r\n                dueDate: bill.datumDospijeca,\r\n                opis: bill.opis,\r\n                doktorIme: bill.doktorIme\r\n            }));\r\n            setBills(transformedBills);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching bills:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch billing information.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async () => {\r\n        if (!user || !user.userId) { // Use user.userId to fetch messages\r\n            console.warn(\"User ID not available for fetching messages.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=PACIJENT`, authHeaders);\r\n            const transformedMessages = response.data.map(msg => ({\r\n                id: msg.porukaID,\r\n                senderId: Number(msg.senderId), // Explicitly convert to Number\r\n                senderType: msg.senderType,\r\n                senderIme: msg.senderIme,\r\n                receiverId: Number(msg.receiverId), // Explicitly convert to Number\r\n                receiverType: msg.receiverType,\r\n                receiverIme: msg.receiverIme,\r\n                subject: msg.subject,\r\n                content: msg.content,\r\n                timestamp: msg.timestamp,\r\n                replies: msg.replies || [] // Ensure replies is always an array\r\n            }));\r\n            setMessages(transformedMessages);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Error fetching messages:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to fetch messages.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- useEffect Hooks ---\r\n    useEffect(() => {\r\n        const loadAllData = async () => {\r\n            if (token && user) {\r\n                setLoading(true);\r\n                await Promise.all([\r\n                    fetchPatientAppointments(),\r\n                    fetchMedicalHistory(),\r\n                    fetchPatientProfile(),\r\n                    fetchDoctors(),\r\n                    // fetchDocuments(), // REMOVED\r\n                    fetchBills(),\r\n                    fetchMessages()\r\n                ]);\r\n                setLoading(false);\r\n            } else if (!token || (user && !user.pacijentId && !user.doktorId)) {\r\n                setLoading(false);\r\n                if (!token) {\r\n                    console.warn(\"Token not available. User not logged in.\");\r\n                } else {\r\n                    console.warn(\"User object available, but patientId nor doctorId are. User might be neither patient nor doctor.\");\r\n                }\r\n            }\r\n        };\r\n        loadAllData();\r\n    }, [token, user]);\r\n\r\n\r\n    // --- Appointment Scheduling/Cancellation ---\r\n\r\n    const openAppointmentModal = (appointment = null, doctorIdFromSearch = null) => {\r\n        if (appointment) {\r\n            setEditingAppointment(appointment);\r\n            setNewAppointment({\r\n                doctorId: appointment.doktorID,\r\n                appointmentDate: appointment.datumPregleda,\r\n                appointmentTime: appointment.vrijemePregleda,\r\n                terminId: appointment.terminID,\r\n                reason: appointment.komentarPacijenta\r\n            });\r\n            fetchDoctorAllAvailableTerms(appointment.doktorID);\r\n        } else {\r\n            setEditingAppointment(null);\r\n            setNewAppointment({\r\n                doctorId: doctorIdFromSearch || '',\r\n                appointmentDate: '',\r\n                appointmentTime: '',\r\n                terminId: '',\r\n                reason: ''\r\n            });\r\n            setAllDoctorAvailableTerms([]);\r\n            if (doctorIdFromSearch) {\r\n                fetchDoctorAllAvailableTerms(doctorIdFromSearch);\r\n            }\r\n        }\r\n        setShowAppointmentModal(true);\r\n    };\r\n\r\n    const closeAppointmentModal = () => {\r\n        setShowAppointmentModal(false);\r\n        setEditingAppointment(null);\r\n        setNewAppointment({\r\n            doctorId: '',\r\n            appointmentDate: '',\r\n            appointmentTime: '',\r\n            terminId: '',\r\n            reason: ''\r\n        });\r\n        setAllDoctorAvailableTerms([]);\r\n    };\r\n\r\n    const handleNewAppointmentChange = async (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        let updatedAppointment = { ...newAppointment, [name]: value };\r\n\r\n        if (name === 'doctorId') {\r\n            updatedAppointment.appointmentDate = '';\r\n            updatedAppointment.appointmentTime = '';\r\n            updatedAppointment.terminId = '';\r\n            if (value) {\r\n                await fetchDoctorAllAvailableTerms(value);\r\n            } else {\r\n                setAllDoctorAvailableTerms([]);\r\n            }\r\n        } else if (name === 'terminId') {\r\n            const selectedTerm = allDoctorAvailableTerms.find(term => term.terminID === parseInt(value));\r\n            if (selectedTerm) {\r\n                updatedAppointment.terminId = selectedTerm.terminID;\r\n                updatedAppointment.appointmentDate = selectedTerm.datum;\r\n                updatedAppointment.appointmentTime = selectedTerm.vrijeme;\r\n            } else {\r\n                updatedAppointment.terminId = '';\r\n                updatedAppointment.appointmentDate = '';\r\n                updatedAppointment.appointmentTime = '';\r\n            }\r\n        }\r\n        setNewAppointment(updatedAppointment);\r\n    };\r\n\r\n\r\n    const handleScheduleAppointment = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('Patient ID not available. Cannot schedule appointment.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        if (!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason) {\r\n            setAlertMessage('Please select a doctor, an available slot, and provide a reason.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        const appointmentData = {\r\n            pacijentID: user.pacijentId,\r\n            doktorID: parseInt(newAppointment.doctorId),\r\n            terminID: newAppointment.terminId,\r\n            datumPregleda: newAppointment.appointmentDate,\r\n            vrijemePregleda: newAppointment.appointmentTime,\r\n            komentarPacijenta: newAppointment.reason,\r\n            status: editingAppointment ? editingAppointment.status : 'zakazan',\r\n        };\r\n\r\n        try {\r\n            await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\r\n\r\n            setAlertMessage('Appointment scheduling request successfully accepted. You will be notified when it is processed.');\r\n            setAlertType('info');\r\n            setShowAlert(true);\r\n\r\n            closeAppointmentModal();\r\n        } catch (error) {\r\n            console.error('Error scheduling/updating appointment:', error.response?.data || error.message);\r\n            let errorMessage = 'Failed to schedule/update appointment. Please try again.';\r\n            if (error.response?.data?.message) {\r\n                errorMessage = error.response.data.message;\r\n            } else if (error.message) {\r\n                errorMessage = error.message;\r\n            }\r\n            setAlertMessage(errorMessage);\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleCancelAppointment = async (appointmentId) => {\r\n        if (window.confirm('Are you sure you want to cancel this appointment?')) {\r\n            if (!user || !user.pacijentId) {\r\n                setAlertMessage('Patient ID not available for cancellation. Please try again.');\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n                return;\r\n            }\r\n            try {\r\n                const existingApp = appointments.find(app => app.id === appointmentId);\r\n                if (!existingApp) {\r\n                    setAlertMessage(\"Appointment not found for cancellation.\");\r\n                    setAlertType('danger');\r\n                    setShowAlert(true);\r\n                    return;\r\n                }\r\n\r\n                const cancelPayload = {\r\n                    pregledID: existingApp.id,\r\n                    pacijentID: user.pacijentId,\r\n                    doktorID: existingApp.doktorID,\r\n                    terminID: existingApp.terminID,\r\n                    datumPregleda: existingApp.datumPregleda,\r\n                    vrijemePregleda: existingApp.vrijemePregleda,\r\n                    komentarPacijenta: existingApp.komentarPacijenta,\r\n                    status: 'otkazan'\r\n                };\r\n\r\n                await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}`, cancelPayload, authHeaders);\r\n                setAlertMessage('Appointment successfully cancelled!');\r\n                setAlertType('success');\r\n                setShowAlert(true);\r\n                fetchPatientAppointments();\r\n            } catch (error) {\r\n                console.error('Error cancelling appointment:', error.response?.data || error.message);\r\n                setAlertMessage('Failed to cancel appointment. Please try again. ' + (error.response?.data?.message || error.message));\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    // --- Profile Update ---\r\n    const handleProfileChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPatientProfile(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSaveProfile = async () => {\r\n        if (!user || !user.pacijentId || !user.userId) {\r\n            setAlertMessage('Patient ID or User ID not available. Cannot save profile.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const patientDetailsPayload = {\r\n                pacijentID: user.pacijentId,\r\n                ime: patientProfile.firstName,\r\n                prezime: patientProfile.lastName,\r\n                email: patientProfile.email,\r\n                telefon: patientProfile.phone,\r\n                datumRodjenja: patientProfile.datumRodjenja,\r\n                adresa: patientProfile.adresa,\r\n                userId: user.userId\r\n            };\r\n            await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, patientDetailsPayload, authHeaders);\r\n\r\n            const authProfilePayload = {\r\n                email: patientProfile.email,\r\n                fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\r\n                telefon: patientProfile.phone,\r\n            };\r\n            await axios.put(`${AUTH_API_PREFIX}/users/${user.userId}`, authProfilePayload, authHeaders);\r\n\r\n\r\n            setAlertMessage('Profile successfully updated!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchPatientProfile();\r\n        } catch (error) {\r\n            console.error('Error updating profile:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to update profile. Please try again. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- Secure Messaging ---\r\n    const handleNewMessageChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewMessage(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleReplyMessageChange = (e) => {\r\n        setReplyMessage(prev => ({ ...prev, content: e.target.value }));\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!user || !user.userId) { // Use user.userId to send message\r\n            setAlertMessage('Your user ID is not available. Cannot send message.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\r\n            setAlertMessage('Please fill in all message fields.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const messageData = {\r\n                senderId: user.userId, // SENDER is now user.userId (Long)\r\n                senderType: 'PACIJENT',\r\n                receiverId: Number(newMessage.recipientId), // Convert to Number\r\n                receiverType: 'DOKTOR',\r\n                subject: newMessage.subject,\r\n                content: newMessage.content\r\n            };\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\r\n            setAlertMessage('Message successfully sent!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setNewMessage({ recipientId: '', subject: '', content: '' });\r\n            fetchMessages(); // Refresh message list\r\n        } catch (error) {\r\n            console.error('Error sending message:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to send message. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleReply = async (messageId) => {\r\n        if (!user || !user.userId) { // Use user.userId to send reply\r\n            setAlertMessage('Your user ID is not available. Cannot reply.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!replyMessage.content) {\r\n            setAlertMessage('Reply content cannot be empty.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\r\n                senderId: user.userId, // Important: Use user.userId here\r\n                senderIme: user.fullName, // Use fullName from useAuth\r\n                senderType: 'PACIJENT',\r\n                content: replyMessage.content,\r\n                timestamp: new Date().toISOString()\r\n            }, authHeaders);\r\n            setAlertMessage('Reply successfully sent!', 'success');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setReplyMessage({ messageId: '', content: '' });\r\n            fetchMessages(); // Refresh message list\r\n            // Update local state for current reply display\r\n            setSelectedMessage(prev => {\r\n                if (!prev) return null;\r\n                return {\r\n                    ...prev,\r\n                    replies: [...(prev.replies || []), {\r\n                        senderId: user.userId, // Important: Use user.userId here\r\n                        senderIme: user.fullName, // Use fullName from useAuth\r\n                        senderType: 'PACIJENT',\r\n                        content: replyMessage.content,\r\n                        timestamp: new Date().toISOString()\r\n                    }]\r\n                };\r\n            });\r\n        } catch (error) {\r\n            console.error('Error sending reply:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to send reply. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleViewMessage = (message) => {\r\n        setSelectedMessage(message);\r\n    };\r\n\r\n    const closeMessageModal = () => {\r\n        setSelectedMessage(null);\r\n        setReplyMessage({ messageId: '', content: '' });\r\n    };\r\n\r\n    // --- Rating Functions ---\r\n    const openRatingModal = (doktorID, doktorIme) => {\r\n        setSelectedDoctorForRating({ id: doktorID, name: doktorIme });\r\n        setRatingData({ ocjena: 5, komentar: '' });\r\n        setShowRatingModal(true);\r\n    };\r\n\r\n    const closeRatingModal = () => {\r\n        setShowRatingModal(false);\r\n        setSelectedDoctorForRating(null);\r\n        setRatingData({ ocjena: 5, komentar: '' });\r\n    };\r\n\r\n    const handleRatingChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setRatingData(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmitRating = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('Patient ID not available. Cannot submit rating.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!selectedDoctorForRating || ratingData.ocjena === null) {\r\n            setAlertMessage('Please select a rating.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const ratingPayload = {\r\n                pacijentID: user.pacijentId,\r\n                doktorID: selectedDoctorForRating.id,\r\n                ocjena: parseFloat(ratingData.ocjena),\r\n                komentar: ratingData.komentar\r\n            };\r\n\r\n            await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/ocjene`, ratingPayload, authHeaders);\r\n\r\n            setAlertMessage(`Rating successfully submitted for doctor ${selectedDoctorForRating.name}!`);\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            closeRatingModal();\r\n            fetchPatientAppointments();\r\n            fetchDoctors();\r\n        } catch (error) {\r\n            console.error('Error submitting rating:', error.response?.data || error.message);\r\n            setAlertMessage('Failed to submit rating. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // NEW: \"Pay Now\" functionality\r\n    const handlePayNow = async (billId) => {\r\n        if (window.confirm('Are you sure you want to mark this bill as paid?')) {\r\n            try {\r\n                // Call backend endpoint to update bill status\r\n                await axios.put(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/${billId}/oznaci-kao-placeno`, {}, authHeaders);\r\n                setAlertMessage('Bill successfully marked as paid!');\r\n                setAlertType('success');\r\n                setShowAlert(true);\r\n                fetchBills(); // Refresh bill list\r\n            } catch (error) {\r\n                console.error('Error marking bill as paid:', error.response?.data || error.message);\r\n                setAlertMessage('Failed to mark bill as paid. ' + (error.response?.data?.message || error.message));\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    // NEW: \"View Details\" functionality\r\n    const handleViewBillDetails = (bill) => {\r\n        setSelectedBillDetails(bill);\r\n        setShowBillDetailsModal(true);\r\n    };\r\n\r\n    const closeBillDetailsModal = () => {\r\n        setShowBillDetailsModal(false);\r\n        setSelectedBillDetails(null);\r\n    };\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </Spinner>\r\n                <p className=\"ms-2\">Loading dashboard data...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const currentPatientUserId = user.userId;\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ minHeight: '100vh' }}>\r\n            {/* Sidebar */}\r\n            <div className=\"bg-dark text-white p-3\" style={{ width: '250px' }}>\r\n                <h4 className=\"mb-4\">Patient Dashboard</h4>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('overview')}\r\n                        >\r\n                            Overview\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('myAppointments')}\r\n                        >\r\n                            My Appointments\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('medicalHistory')}\r\n                        >\r\n                            Medical History\r\n                        </button>\r\n                    </li>\r\n                    {/* REMOVED: My Documents tab */}\r\n                    {/* <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('documents')}\r\n                        >\r\n                            My Documents\r\n                        </button>\r\n                    </li> */}\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('billing')}\r\n                        >\r\n                            Billing & Payments\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('messages')}\r\n                        >\r\n                            Messages\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('doctorSearch')}\r\n                        >\r\n                            Find a Doctor\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('profileSettings')}\r\n                        >\r\n                            Profile Settings\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            {/* Main Content Area */}\r\n            <div className=\"flex-grow-1 p-4 bg-light\">\r\n                {showAlert && (\r\n                    <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n                        {alertMessage}\r\n                    </Alert>\r\n                )}\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <h2 className=\"mb-0\">Patient Dashboard</h2>\r\n                </div>\r\n\r\n                {/* Content based on activeTab */}\r\n                {activeTab === 'overview' && (\r\n                    <div>\r\n                        <h3>Welcome, {patientProfile.firstName || (user ? user.fullName : 'Patient')}!</h3>\r\n                        <p>This is your patient overview. Here you can quickly see your upcoming appointments and recent activities.</p>\r\n                        <div className=\"row mt-4\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        Upcoming Appointments\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        {appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').length > 0 ? (\r\n                                            appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').map(app => (\r\n                                                <li key={app.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                    <div>\r\n                                                        <strong>{app.datumPregleda} at {app.vrijemePregleda}</strong>\r\n                                                        <br />\r\n                                                        <small>Reason: {app.komentarPacijenta}</small>\r\n                                                        <br />\r\n                                                        <small>Doctor: {app.doktorIme}</small>\r\n                                                    </div>\r\n                                                    <span className={`badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`}>{app.status}</span>\r\n                                                </li>\r\n                                            ))\r\n                                        ) : (\r\n                                            <li className=\"list-group-item\">No upcoming appointments.</li>\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'myAppointments' && (\r\n                    <div>\r\n                        <h3>My Appointments</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => openAppointmentModal()}>\r\n                            Schedule New Appointment\r\n                        </Button>\r\n                        {appointments.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Doctor</th>\r\n                                        <th>Date</th>\r\n                                        <th>Time</th>\r\n                                        <th>Reason</th>\r\n                                        <th>Status</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {appointments.map(app => (\r\n                                        <tr key={app.id}>\r\n                                            <td>{app.doktorIme}</td>\r\n                                            <td>{app.datumPregleda}</td>\r\n                                            <td>{app.vrijemePregleda}</td>\r\n                                            <td>{app.komentarPacijenta}</td>\r\n                                            <td><span className={`badge bg-${app.status === 'obavljen' ? 'success' : app.status === 'zakazan' ? 'warning' : 'danger'}`}>{app.status}</span></td>\r\n                                            <td>\r\n                                                {app.status === 'zakazan' || app.status === 'potvrđen' ? (\r\n                                                    <Button variant=\"danger\" size=\"sm\" onClick={() => handleCancelAppointment(app.id)}>Cancel</Button>\r\n                                                ) : app.status === 'obavljen' ? (\r\n                                                    <Button variant=\"success\" size=\"sm\" onClick={() => openRatingModal(app.doktorID, app.doktorIme)}>Rate</Button>\r\n                                                ) : (\r\n                                                    <small>No available actions</small>\r\n                                                )}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No appointment history found. Schedule your first appointment!</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'medicalHistory' && (\r\n                    <div>\r\n                        <h3>My Medical History</h3>\r\n                        {medicalHistory.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {medicalHistory.map((record, index) => (\r\n                                    <li key={record.id} className=\"list-group-item\">\r\n                                        <strong>Date:</strong> {record.date} <br />\r\n                                        <strong>Diagnosis:</strong> {record.diagnosis} <br />\r\n                                        <strong>Treatment:</strong> {record.treatment} <br />\r\n                                        <strong>Doctor:</strong> {record.doctorName} <br />\r\n                                        <strong>Notes:</strong> {record.notes || 'N/A'}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>No medical history records found.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {/* REMOVED: Documents tab content */}\r\n                {/* {activeTab === 'documents' && (\r\n                    <div>\r\n                        <h3>My Documents</h3>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Upload New Document</Form.Label>\r\n                            <Form.Control type=\"file\" onChange={handleDocumentUpload} />\r\n                        </Form.Group>\r\n\r\n                        {documents.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Document Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Upload Date</th>\r\n                                        <th>Access</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {documents.map(doc => (\r\n                                        <tr key={doc.id}>\r\n                                            <td>{doc.fileName}</td>\r\n                                            <td>{new Date(doc.uploadDate).toLocaleDateString()}</td>\r\n                                            <td><span className={`badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`}>{doc.pristup}</span></td>\r\n                                            <td>\r\n                                                <Button variant=\"success\" size=\"sm\" href={`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${doc.id}`} target=\"_blank\">Download</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No documents found.</p>\r\n                        )}\r\n                    </div>\r\n                )} */}\r\n\r\n                {activeTab === 'billing' && (\r\n                    <div>\r\n                        <h3>Billing & Payments</h3>\r\n                        {bills.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Bill ID</th>\r\n                                        <th>Issue Date</th>\r\n                                        <th>Amount</th>\r\n                                        <th>Status</th>\r\n                                        <th>Description</th>\r\n                                        <th>Issued By</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {bills.map(bill => (\r\n                                        <tr key={bill.id}>\r\n                                            <td>{bill.id}</td>\r\n                                            <td>{new Date(bill.billDate).toLocaleDateString()}</td>\r\n                                            <td>{bill.amount ? bill.amount.toFixed(2) : 'N/A'} KM</td>\r\n                                            <td><span className={`badge bg-${bill.status === 'PLACEN' ? 'success' : 'warning'}`}>{bill.status}</span></td>\r\n                                            <td>{bill.opis}</td>\r\n                                            <td>{bill.doktorIme}</td>\r\n                                            <td>\r\n                                                {bill.status === 'NEPLACEN' && (\r\n                                                    <Button variant=\"success\" size=\"sm\" className=\"me-2\" onClick={() => handlePayNow(bill.id)}>Pay Now</Button>\r\n                                                )}\r\n                                                <Button variant=\"info\" size=\"sm\" onClick={() => handleViewBillDetails(bill)}>View Details</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No billing records found.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'messages' && (\r\n                    <div>\r\n                        <h3>My Messages</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => setNewMessage({ recipientId: '', subject: '', content: '' })}>Compose New Message</Button>\r\n\r\n                        {messages.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {messages.map(msg => (\r\n                                    <li key={msg.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            {/* Displays sender's name (Auth userId), checks if current user is patient or doctor */}\r\n                                            <strong>From: {msg.senderId === currentPatientUserId ? 'Me' : (doctors.find(d => d.userId === msg.senderId)?.firstName + ' ' + doctors.find(d => d.userId === msg.senderId)?.lastName || `Doctor (${msg.senderId})`)}</strong> <br />\r\n                                            <strong>Subject:</strong> {msg.subject} <br />\r\n                                            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                        <Button variant=\"info\" size=\"sm\" onClick={() => handleViewMessage(msg)}>View Message</Button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>No messages found.</p>\r\n                        )}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <h4>Compose New Message</h4>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Recipient (Doctor)</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"recipientId\"\r\n                                    value={newMessage.recipientId}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Select a doctor --</option>\r\n                                    {doctors.map(doctor => (\r\n                                        <option key={doctor.userId} value={doctor.userId}>{doctor.firstName} {doctor.lastName}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Subject</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    value={newMessage.subject}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Content</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"content\"\r\n                                    value={newMessage.content}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSendMessage}>Send Message</Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'doctorSearch' && (\r\n                    <div>\r\n                        <h3>Find a Doctor</h3>\r\n                        <p>Search for doctors by name or specialty to find the right care for you.</p>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control type=\"text\" placeholder=\"Search by name or specialty...\" />\r\n                        </Form.Group>\r\n                        {doctors.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Specialty</th>\r\n                                        <th>Contact</th>\r\n                                        <th>Rating</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {doctors.map(doctor => (\r\n                                        <tr key={doctor.id}>\r\n                                            <td>{doctor.firstName} {doctor.lastName}</td>\r\n                                            <td>{doctor.specialty || 'General Practitioner'}</td>\r\n                                            <td>{doctor.email} | {doctor.phone}</td>\r\n                                            <td>{doctor.ocjena ? doctor.ocjena.toFixed(1) : 'N/A'}</td>\r\n                                            <td>\r\n                                                <Button variant=\"primary\" size=\"sm\" onClick={() => {\r\n                                                    openAppointmentModal(null, doctor.id);\r\n                                                }}>Schedule Appointment</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No doctors found.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'profileSettings' && (\r\n                    <div>\r\n                        <h3>Profile Settings</h3>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                                <Form.Label>First Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={patientProfile.firstName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                                <Form.Label>Last Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    value={patientProfile.lastName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={patientProfile.email || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formPhone\">\r\n                                <Form.Label>Phone</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"phone\"\r\n                                    value={patientProfile.phone || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAddress\">\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"adresa\"\r\n                                    value={patientProfile.adresa || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formDatumRodjenja\">\r\n                                <Form.Label>Date of Birth</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    name=\"datumRodjenja\"\r\n                                    value={patientProfile.datumRodjenja || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSaveProfile}>\r\n                                Save Profile\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Appointment Modal */}\r\n            <Modal show={showAppointmentModal} onHide={closeAppointmentModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{editingAppointment ? 'Edit Appointment' : 'Schedule New Appointment'}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formDoctor\">\r\n                            <Form.Label>Select Doctor</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"doctorId\"\r\n                                value={newAppointment.doctorId}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">-- Select a doctor --</option>\r\n                                {doctors.map(doctor => (\r\n                                    <option key={doctor.id} value={doctor.id}>{doctor.firstName} {doctor.lastName}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        {newAppointment.doctorId && (\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAvailableTerm\">\r\n                                <Form.Label>Select Available Slot</Form.Label>\r\n                                {loading ? (\r\n                                    <Spinner animation=\"border\" size=\"sm\" />\r\n                                ) : allDoctorAvailableTerms.length > 0 ? (\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"terminId\"\r\n                                        value={newAppointment.terminId}\r\n                                        onChange={handleNewAppointmentChange}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">-- Select date and time --</option>\r\n                                        {allDoctorAvailableTerms.map(term => (\r\n                                            <option key={term.terminID} value={term.terminID}>{term.display}</option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                ) : (\r\n                                    <Alert variant=\"info\">No available slots for this doctor.</Alert>\r\n                                )}\r\n                            </Form.Group>\r\n                        )}\r\n\r\n                        {/* Fields for date and time that will be automatically populated after selecting a slot (can be display-only) */}\r\n                        {newAppointment.terminId && (\r\n                            <>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formAppointmentDateDisplay\">\r\n                                    <Form.Label>Selected Date</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={newAppointment.appointmentDate}\r\n                                        readOnly\r\n                                        disabled\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formAppointmentTimeDisplay\">\r\n                                    <Form.Label>Selected Time</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={newAppointment.appointmentTime ? newAppointment.appointmentTime.substring(0, 5) : ''}\r\n                                        readOnly\r\n                                        disabled\r\n                                    />\r\n                                </Form.Group>\r\n                            </>\r\n                        )}\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formReason\">\r\n                            <Form.Label>Reason for Appointment</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"reason\"\r\n                                value={newAppointment.reason}\r\n                                onChange={handleNewAppointmentChange}\r\n                                placeholder=\"e.g., General check-up, specific symptoms...\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeAppointmentModal}>\r\n                        Close\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={handleScheduleAppointment}\r\n                        disabled={!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason || loading}\r\n                    >\r\n                        {editingAppointment ? 'Update Appointment' : 'Schedule Appointment'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Message Detail Modal */}\r\n            <Modal show={!!selectedMessage} onHide={closeMessageModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Message: {selectedMessage?.subject}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedMessage && (\r\n                        <>\r\n                            {/* Display sender of the message (Auth userId) */}\r\n                            <p><strong>From:</strong> {selectedMessage.senderId === currentPatientUserId ? 'Me' : (doctors.find(d => d.userId === selectedMessage.senderId)?.firstName + ' ' + doctors.find(d => d.userId === selectedMessage.senderId)?.lastName || `Doctor (${selectedMessage.senderId})`)}</p>\r\n                            <p><strong>Date:</strong> {new Date(selectedMessage.timestamp).toLocaleString()}</p>\r\n                            <hr />\r\n                            <p>{selectedMessage.content}</p>\r\n\r\n                            {selectedMessage.replies && selectedMessage.replies.length > 0 && (\r\n                                <div className=\"mt-4\">\r\n                                    <h5>Replies:</h5>\r\n                                    {selectedMessage.replies.map((reply, index) => (\r\n                                        <div key={index} className=\"border p-2 mb-2 rounded bg-light\">\r\n                                            {/* Display sender of the reply (Auth userId) */}\r\n                                            <strong>{reply.senderId === currentPatientUserId ? 'Me' : (doctors.find(d => d.userId === reply.senderId)?.firstName + ' ' + doctors.find(d => d.userId === reply.senderId)?.lastName || `Doctor (${reply.senderId})`)}:</strong> {reply.content}\r\n                                            <br />\r\n                                            <small>{new Date(reply.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            <Form.Group className=\"mt-4\">\r\n                                <Form.Label>Reply</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={2}\r\n                                    value={replyMessage.content}\r\n                                    onChange={handleReplyMessageChange}\r\n                                    placeholder=\"Type your reply here...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" className=\"mt-2\" onClick={() => handleReply(selectedMessage.id)}>Send Reply</Button>\r\n                        </>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeMessageModal}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Rating Modal */}\r\n            <Modal show={showRatingModal} onHide={closeRatingModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Rate Doctor: {selectedDoctorForRating?.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formRating\">\r\n                            <Form.Label>Rating (1-5)</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"ocjena\"\r\n                                value={ratingData.ocjena}\r\n                                onChange={handleRatingChange}\r\n                                required\r\n                            >\r\n                                <option value=\"1\">1 - Very Poor</option>\r\n                                <option value=\"2\">2 - Poor</option>\r\n                                <option value=\"3\">3 - Average</option>\r\n                                <option value=\"4\">4 - Good</option>\r\n                                <option value=\"5\">5 - Excellent</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formRatingComment\">\r\n                            <Form.Label>Comment (optional)</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"komentar\"\r\n                                value={ratingData.komentar}\r\n                                onChange={handleRatingChange}\r\n                                placeholder=\"Write a comment about your experience...\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeRatingModal}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSubmitRating}>\r\n                        Submit Rating\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* NEW: Bill Details Modal */}\r\n            <Modal show={showBillDetailsModal} onHide={closeBillDetailsModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Bill Details</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedBillDetails && (\r\n                        <div>\r\n                            <p><strong>Bill ID:</strong> {selectedBillDetails.id}</p>\r\n                            <p><strong>Issue Date:</strong> {new Date(selectedBillDetails.billDate).toLocaleDateString()}</p>\r\n                            <p><strong>Amount:</strong> {selectedBillDetails.amount ? selectedBillDetails.amount.toFixed(2) : 'N/A'} KM</p>\r\n                            <p><strong>Status:</strong> <span className={`badge bg-${selectedBillDetails.status === 'PLACEN' ? 'success' : 'warning'}`}>{selectedBillDetails.status}</span></p>\r\n                            <p><strong>Description:</strong> {selectedBillDetails.opis}</p>\r\n                            <p><strong>Issued By:</strong> {selectedBillDetails.doktorIme}</p>\r\n                            {selectedBillDetails.dueDate && (\r\n                                <p><strong>Due Date:</strong> {new Date(selectedBillDetails.dueDate).toLocaleDateString()}</p>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeBillDetailsModal}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}