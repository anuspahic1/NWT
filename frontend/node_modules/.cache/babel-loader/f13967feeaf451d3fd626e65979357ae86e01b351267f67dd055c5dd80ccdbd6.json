{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\nfunction AdminDashboard() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    token\n  } = useAuth();\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const [loadingInitial, setLoadingInitial] = useState(true);\n  const [isAuthChecked, setIsAuthChecked] = useState(false);\n  const [activeTab, setActiveTab] = useState(() => {\n    const savedTab = localStorage.getItem('adminActiveTab');\n    return savedTab || 'overview';\n  });\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [examinations, setExaminations] = useState([]);\n  const [terms, setTerms] = useState([]);\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\n  const [editingDoctor, setEditingDoctor] = useState(null);\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n  const [showTermModal, setShowTermModal] = useState(false);\n  const [editingTerm, setEditingTerm] = useState(null);\n  const [showExaminationModal, setShowExaminationModal] = useState(false);\n  const [editingExamination, setEditingExamination] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n  const [termSearchTerm, setTermSearchTerm] = useState('');\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\n  const [termsCurrentPage, setTermsCurrentPage] = useState(1);\n  const [examinationsCurrentPage, setExaminationsCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: doc.userId,\n        name: `${doc.ime} ${doc.prezime}`,\n        ime: doc.ime,\n        prezime: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        specijalizacije: doc.specijalizacije,\n        city: doc.grad || 'N/A',\n        grad: doc.grad,\n        email: doc.email || 'N/A',\n        telefon: doc.telefon || 'N/A',\n        radnoVrijeme: doc.radnoVrijeme || '',\n        // Osiguraj da je string\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : '',\n        // Osiguraj da je broj ili prazan string\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 0.0\n      }));\n      setDoctors(transformedDoctors);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Greška prilikom dohvaćanja doktora:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\n      const transformedPatients = response.data.map(pat => ({\n        id: pat.pacijentID,\n        userId: pat.userId,\n        name: `${pat.ime} ${pat.prezime}`,\n        ime: pat.ime,\n        prezime: pat.prezime,\n        email: pat.email || 'N/A',\n        phone: pat.telefon || 'N/A',\n        telefon: pat.telefon\n      }));\n      setPatients(transformedPatients);\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\n    }\n  };\n  const fetchTerms = async () => {\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, authHeaders);\n      const transformedTerms = response.data.map(term => ({\n        id: term.terminID,\n        doktorID: term.doktorID,\n        datum: term.datum,\n        vrijeme: term.vrijeme,\n        dostupnost: term.dostupnost\n      }));\n      setTerms(transformedTerms);\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Greška prilikom dohvaćanja termina:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\n    }\n  };\n  const fetchExaminations = async () => {\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\n      const transformedExaminations = response.data.map(app => ({\n        id: app.pregledID,\n        pacijentID: app.pacijentID,\n        doktorID: app.doktorID,\n        patientName: app.pacijentIme || 'N/A',\n        doctorName: app.doktorIme || 'N/A',\n        datumPregleda: app.datumPregleda,\n        vrijemePregleda: app.vrijemePregleda,\n        status: app.status,\n        komentarPacijenta: app.komentarPacijenta || '',\n        ocjenaDoktora: app.ocjenaDoktora || null,\n        terminID: app.terminID !== null && app.terminID !== undefined ? app.terminID : 'N/A'\n      }));\n      setExaminations(transformedExaminations);\n    } catch (error) {\n      var _error$response4;\n      console.error(\"Greška prilikom dohvaćanja pregleda:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja pregleda sa servera.\", \"danger\");\n    }\n  };\n  useEffect(() => {\n    if (token !== undefined && !isAuthChecked) {\n      setIsAuthChecked(true);\n    }\n    const initializeDashboard = async () => {\n      if (isAuthChecked) {\n        if (token) {\n          try {\n            await Promise.all([fetchDoctors(), fetchPatients(), fetchTerms(), fetchExaminations()]);\n          } catch (error) {\n            console.error(\"Greška prilikom inicijalnog dohvaćanja podataka:\", error);\n            showNotification(\"Greška prilikom učitavanja početnih podataka.\", \"danger\");\n          } finally {\n            setLoadingInitial(false);\n          }\n        } else {\n          setLoadingInitial(false);\n          console.warn(\"Provjera autentifikacije završena, ali token nije dostupan. Korisnik nije ulogovan/autorizovan.\");\n        }\n      }\n    };\n    initializeDashboard();\n  }, [token, isAuthChecked]);\n  useEffect(() => {\n    localStorage.setItem('adminActiveTab', activeTab);\n  }, [activeTab]);\n  const handleAddDoctor = async newDoctorData => {\n    try {\n      const registerPayload = {\n        email: newDoctorData.email,\n        password: newDoctorData.password,\n        fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\n        telefon: newDoctorData.telefon,\n        roles: [\"ROLE_DOKTOR\"],\n        grad: newDoctorData.grad,\n        specijalizacije: newDoctorData.specijalizacije,\n        radnoVrijeme: newDoctorData.radnoVrijeme,\n        // Dodaj ova polja u payload\n        iskustvo: newDoctorData.iskustvo,\n        // Dodaj ova polja u payload\n        ocjena: newDoctorData.ocjena || 0.0 // Dodaj ova polja u payload\n      };\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      console.log(\"Auth Service Register Response Data:\", authResponse.data);\n\n      // AŽURIRANO: Sada koristimo authResponse.data.userId (prema AuthResponse DTO-u)\n      const userId = authResponse.data.userId || null;\n      if (!userId) {\n        throw new Error(\"Korisnički ID nije dobiven iz Auth servisa.\");\n      }\n\n      // Auth servis emituje event koji ce kreirati detalje doktora u korisnici-doktori servisu.\n      // Ne treba ručno slati PUT ili POST na /api/doktori/user-details/{userId}\n      // setTimeout se koristi da se omogući back-endu da obradi event\n      setTimeout(() => {\n        fetchDoctors(); // Osvježi listu doktora nakon kratkog kašnjenja\n      }, 1000); // Povećano na 1000ms da se osigura vrijeme za event-obradu\n\n      setShowDoctorModal(false);\n      showNotification('Novi doktor uspješno registrovan!');\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response6$data;\n      console.error(\"Greška prilikom dodavanja doktora:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      // Bolja poruka za korisnika\n      let errorMessage = 'Greška prilikom dodavanja doktora. Provjerite da li email već postoji ili konzolu za više detalja.';\n      if ((_error$response6 = error.response) !== null && _error$response6 !== void 0 && (_error$response6$data = _error$response6.data) !== null && _error$response6$data !== void 0 && _error$response6$data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      showNotification(errorMessage, \"danger\");\n    }\n  };\n  const handleUpdateDoctor = async updatedDoctor => {\n    try {\n      if (!updatedDoctor.id) {\n        showNotification('ID doktora nedostaje za ažuriranje.', 'danger');\n        console.error('ID doktora nedostaje za ažuriranje:', updatedDoctor);\n        return;\n      }\n      const doctorUpdatePayload = {\n        ime: updatedDoctor.ime,\n        prezime: updatedDoctor.prezime,\n        email: updatedDoctor.email,\n        telefon: updatedDoctor.telefon,\n        grad: updatedDoctor.grad,\n        specijalizacije: updatedDoctor.specijalizacije,\n        radnoVrijeme: updatedDoctor.radnoVrijeme || '',\n        iskustvo: updatedDoctor.iskustvo !== null && updatedDoctor.iskustvo !== undefined ? updatedDoctor.iskustvo : 0,\n        ocjena: updatedDoctor.ocjena || 0.0\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\n      const userUpdatePayload = {\n        email: updatedDoctor.email,\n        fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\n        telefon: updatedDoctor.telefon\n        // Dodajte i radnoVrijeme, iskustvo, ocjena ako ih Auth servis treba ažurirati.\n        // Trenutno UserUpdateDTO ne sadrži ova polja. Ako je potrebno, dodajte ih u UserUpdateDTO\n        // grad: updatedDoctor.grad,\n        // specijalizacije: updatedDoctor.specijalizacije\n      };\n      if (updatedDoctor.userId) {\n        // userId je Long ID iz Auth servisa\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchDoctors();\n      setShowDoctorModal(false);\n      setEditingDoctor(null);\n      showNotification('Doktor uspješno ažuriran!', 'success');\n    } catch (error) {\n      var _error$response7, _error$response8, _error$response8$data;\n      console.error(\"Greška prilikom ažuriranja doktora:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      showNotification(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Greška prilikom ažuriranja doktora.', \"danger\");\n    }\n  };\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(() => () => {});\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\n  const [confirmTitle, setConfirmTitle] = useState(\"Potvrda\");\n  const showCustomConfirm = (message, action, title = \"Potvrda\") => {\n    setConfirmMessage(message);\n    setConfirmAction(() => action);\n    setConfirmTitle(title);\n    setShowConfirmModal(true);\n  };\n  const handleConfirmAction = () => {\n    confirmAction();\n    setShowConfirmModal(false);\n  };\n  const handleDeleteDoctor = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.', async () => {\n      try {\n        const doctorToDelete = doctors.find(doc => doc.id === id);\n        if (!doctorToDelete || !doctorToDelete.userId) {\n          showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\n          return;\n        }\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\n        await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\n        fetchDoctors();\n        showNotification('Doktor uspješno obrisan!', 'danger');\n      } catch (error) {\n        var _error$response9, _error$response0, _error$response0$data;\n        console.error(\"Greška prilikom brisanja doktora:\", ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n        showNotification(((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || 'Greška prilikom brisanja doktora.', \"danger\");\n      }\n    }, \"Potvrdi brisanje doktora\");\n  };\n  const openDoctorModal = (doctor = null) => {\n    setEditingDoctor(doctor);\n    setShowDoctorModal(true);\n  };\n  const filteredDoctors = doctors.filter(doctor => doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()));\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\n  const handleAddPatient = async newPatient => {\n    try {\n      console.log(\"handleAddPatient: Počinjem proces dodavanja pacijenta.\");\n      const registerPayload = {\n        email: newPatient.email,\n        password: newPatient.password,\n        fullName: `${newPatient.ime} ${newPatient.prezime}`,\n        telefon: newPatient.telefon,\n        roles: [\"ROLE_PACIJENT\"],\n        grad: null,\n        // Pacijent nema grad iz forme, ako nema, neka bude null\n        specijalizacije: null,\n        // Pacijent nema specijalizacije\n        ocjena: null,\n        iskustvo: null,\n        radnoVrijeme: null\n      };\n      console.log(\"handleAddPatient: Slanje registerPayload-a Auth servisu:\", registerPayload);\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      console.log(\"Auth Service Register Response Data (for patient):\", authResponse.data);\n\n      // AŽURIRANO: Sada koristimo authResponse.data.userId\n      const userId = authResponse.data.userId || null;\n      if (!userId) {\n        throw new Error(\"Korisnički ID nije dobiven iz Auth servisa za pacijenta.\");\n      }\n\n      // Očekujemo da Korisnici-Doktori servis kreira Pacijent entitet putem UserRegisteredEvent-a\n      // Zato ne šaljemo direktno POST/PUT zahtjev ovdje.\n      console.log(\"handleAddPatient: Očekujem da UserRegisteredEvent obradi kreiranje detalja pacijenta.\");\n      setTimeout(() => {\n        fetchPatients(); // Osvježi listu pacijenata nakon kratkog kašnjenja\n      }, 1000); // Povećano na 1000ms\n\n      setShowPatientModal(false);\n      showNotification('Novi pacijent uspješno registrovan!', 'success');\n      console.log(\"handleAddPatient: Proces dodavanja pacijenta uspješno završen (registracija i event obrada).\");\n    } catch (error) {\n      var _error$response1, _error$response10, _error$response10$dat;\n      console.error(\"Greška prilikom dodavanja pacijenta:\", ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data) || error.message);\n      let errorMessage = 'Greška prilikom dodavanja pacijenta. Provjerite da li email već postoji ili konzolu za više detalja.';\n      if ((_error$response10 = error.response) !== null && _error$response10 !== void 0 && (_error$response10$dat = _error$response10.data) !== null && _error$response10$dat !== void 0 && _error$response10$dat.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      showNotification(errorMessage, \"danger\");\n    }\n  };\n  const handleUpdatePatient = async updatedPatient => {\n    try {\n      const patientUpdatePayload = {\n        ime: updatedPatient.ime,\n        prezime: updatedPatient.prezime,\n        email: updatedPatient.email,\n        telefon: updatedPatient.telefon\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\n      const userUpdatePayload = {\n        email: updatedPatient.email,\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\n        telefon: updatedPatient.telefon\n      };\n      if (updatedPatient.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchPatients();\n      setShowPatientModal(false);\n      setEditingPatient(null);\n      showNotification('Pacijent uspješno ažuriran!', 'success');\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response12$dat;\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message);\n      showNotification(((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.message) || 'Greška prilikom ažuriranja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\n    }\n  };\n  const handleDeletePatient = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.', async () => {\n      try {\n        const patientToDelete = patients.find(pat => pat.id === id);\n        if (!patientToDelete || !patientToDelete.userId) {\n          showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\n          return;\n        }\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`, authHeaders);\n        await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\n        fetchPatients();\n        showNotification('Pacijent uspješno obrisan!', 'success');\n      } catch (error) {\n        var _error$response13, _error$response14, _error$response14$dat;\n        console.error(\"Greška prilikom brisanja pacijenta:\", ((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) || error.message);\n        showNotification(((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : (_error$response14$dat = _error$response14.data) === null || _error$response14$dat === void 0 ? void 0 : _error$response14$dat.message) || 'Greška prilikom brisanja pacijenta.', \"danger\");\n      }\n    }, \"Potvrdi brisanje pacijenta\");\n  };\n  const openPatientModal = (patient = null) => {\n    setEditingPatient(patient);\n    setShowPatientModal(true);\n  };\n  const filteredPatients = patients.filter(patient => patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\n  const handleAddTerm = async newTermData => {\n    try {\n      console.log('handleAddTerm - Podaci koji se šalju:', newTermData);\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, newTermData, authHeaders);\n      showNotification('Novi termin uspješno dodan!', 'success');\n      fetchTerms();\n      setShowTermModal(false);\n    } catch (error) {\n      var _error$response15, _error$response16, _error$response16$dat;\n      console.error(\"Greška prilikom dodavanja termina:\", ((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.data) || error.message);\n      showNotification(((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : (_error$response16$dat = _error$response16.data) === null || _error$response16$dat === void 0 ? void 0 : _error$response16$dat.message) || 'Greška prilikom dodavanja termina.', \"danger\");\n    }\n  };\n  const handleUpdateTerm = async updatedTerm => {\n    try {\n      const termPayload = {\n        doktorID: updatedTerm.doktorID,\n        datum: updatedTerm.datum,\n        vrijeme: updatedTerm.vrijeme,\n        dostupnost: updatedTerm.dostupnost\n      };\n      console.log('handleUpdateTerm - Podaci koji se šalju:', termPayload);\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${updatedTerm.id}`, termPayload, authHeaders);\n      showNotification('Termin uspješno ažuriran!', 'success');\n      fetchTerms();\n      setShowTermModal(false);\n      setEditingTerm(null);\n    } catch (error) {\n      var _error$response17, _error$response18, _error$response18$dat;\n      console.error(\"Greška prilikom ažuriranja termina:\", ((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : _error$response17.data) || error.message);\n      showNotification(((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : (_error$response18$dat = _error$response18.data) === null || _error$response18$dat === void 0 ? void 0 : _error$response18$dat.message) || 'Greška prilikom ažuriranja termina.', \"danger\");\n    }\n  };\n  const handleDeleteTerm = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovaj termin?', async () => {\n      try {\n        await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${id}`, authHeaders);\n        showNotification('Termin uspješno obrisan!', 'success');\n        fetchTerms();\n      } catch (error) {\n        var _error$response19, _error$response20, _error$response20$dat;\n        console.error(\"Greška prilikom brisanja termina:\", ((_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : _error$response19.data) || error.message);\n        showNotification(((_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : (_error$response20$dat = _error$response20.data) === null || _error$response20$dat === void 0 ? void 0 : _error$response20$dat.message) || 'Greška prilikom brisanja termina.', \"danger\");\n      }\n    }, \"Potvrdi brisanje termina\");\n  };\n  const openTermModal = (term = null) => {\n    if (term) {\n      setEditingTerm({\n        ...term,\n        doktorID: term.doktorID,\n        dostupnost: term.dostupnost\n      });\n    } else {\n      setEditingTerm(null);\n    }\n    setShowTermModal(true);\n  };\n  const filteredTerms = terms.filter(term => term.doktorID != null && term.doktorID.toString().toLowerCase().includes(termSearchTerm.toLowerCase()) || term.datum && term.datum.toLowerCase().includes(termSearchTerm.toLowerCase()) || term.vrijeme && term.vrijeme.toLowerCase().includes(termSearchTerm.toLowerCase()) || term.dostupnost !== undefined && (term.dostupnost ? 'dostupan' : 'zauzet').includes(termSearchTerm.toLowerCase()));\n  const indexOfLastTerm = termsCurrentPage * itemsPerPage;\n  const indexOfFirstTerm = indexOfLastTerm - itemsPerPage;\n  const currentTerms = filteredTerms.slice(indexOfFirstTerm, indexOfLastTerm);\n  const totalTermPages = Math.ceil(filteredTerms.length / itemsPerPage);\n  const handleAddExamination = async newExaminationData => {\n    console.log('Attempting to add new examination with data:', newExaminationData);\n    try {\n      const payload = {\n        pacijentID: newExaminationData.pacijentID,\n        doktorID: newExaminationData.doktorID,\n        terminID: newExaminationData.terminID,\n        datumPregleda: newExaminationData.datumPregleda,\n        vrijemePregleda: newExaminationData.vrijemePregleda,\n        status: newExaminationData.status,\n        komentarPacijenta: newExaminationData.komentarPacijenta,\n        ocjenaDoktora: newExaminationData.ocjenaDoktora\n      };\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, payload, authHeaders);\n      console.log('Backend response:', response.data);\n      fetchExaminations();\n      setShowExaminationModal(false);\n      showNotification('Novi pregled uspješno dodan!', 'success');\n    } catch (error) {\n      var _error$response21, _error$response22, _error$response22$dat;\n      console.error(\"Greška prilikom dodavanja pregleda:\", ((_error$response21 = error.response) === null || _error$response21 === void 0 ? void 0 : _error$response21.data) || error.message);\n      const errorMessage = ((_error$response22 = error.response) === null || _error$response22 === void 0 ? void 0 : (_error$response22$dat = _error$response22.data) === null || _error$response22$dat === void 0 ? void 0 : _error$response22$dat.message) || error.message || 'Nepoznata greška prilikom dodavanja pregleda.';\n      showNotification(errorMessage, \"danger\");\n    }\n  };\n  const handleUpdateExamination = async updatedExamination => {\n    try {\n      if (!updatedExamination.id) {\n        showNotification('ID pregleda nedostaje za ažuriranje.', 'danger');\n        console.error('ID pregleda nedostaje za ažuriranje:', updatedExamination);\n        return;\n      }\n      const payload = {\n        pacijentID: updatedExamination.pacijentID,\n        doktorID: updatedExamination.doktorID,\n        terminID: updatedExamination.terminID,\n        datumPregleda: updatedExamination.datumPregleda,\n        vrijemePregleda: updatedExamination.vrijemePregleda,\n        status: updatedExamination.status,\n        komentarPacijenta: updatedExamination.komentarPacijenta,\n        ocjenaDoktora: updatedExamination.ocjenaDoktora\n      };\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${updatedExamination.id}`, payload, authHeaders);\n      fetchExaminations();\n      setShowExaminationModal(false);\n      showNotification('Pregled uspješno ažuriran!', 'success');\n    } catch (error) {\n      var _error$response23, _error$response24, _error$response24$dat;\n      console.error(\"Greška prilikom ažuriranja pregleda:\", ((_error$response23 = error.response) === null || _error$response23 === void 0 ? void 0 : _error$response23.data) || error.message);\n      const errorMessage = ((_error$response24 = error.response) === null || _error$response24 === void 0 ? void 0 : (_error$response24$dat = _error$response24.data) === null || _error$response24$dat === void 0 ? void 0 : _error$response24$dat.message) || error.message || 'Nepoznata greška prilikom ažuriranja pregleda.';\n      showNotification(errorMessage, \"danger\");\n    }\n  };\n  const handleDeleteExamination = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovaj pregled?', async () => {\n      try {\n        await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, authHeaders);\n        showNotification('Pregled uspješno obrisan!', 'success');\n        fetchExaminations();\n      } catch (error) {\n        var _error$response25, _error$response26, _error$response26$dat;\n        console.error(\"Greška prilikom brisanja pregleda:\", ((_error$response25 = error.response) === null || _error$response25 === void 0 ? void 0 : _error$response25.data) || error.message);\n        showNotification(((_error$response26 = error.response) === null || _error$response26 === void 0 ? void 0 : (_error$response26$dat = _error$response26.data) === null || _error$response26$dat === void 0 ? void 0 : _error$response26$dat.message) || 'Greška prilikom brisanja pregleda.', \"danger\");\n      }\n    }, \"Potvrdi brisanje pregleda\");\n  };\n  const openExaminationModal = (examination = null) => {\n    console.log(\"[AdminDashboard] openExaminationModal called. Initial examination data:\", examination);\n    if (examination) {\n      setEditingExamination({\n        ...examination,\n        pacijentID: examination.pacijentID,\n        doktorID: examination.doktorID,\n        terminID: examination.terminID,\n        datumPregleda: examination.datumPregleda,\n        vrijemePregleda: examination.vrijemePregleda\n      });\n    } else {\n      setEditingExamination(null);\n    }\n    setShowExaminationModal(true);\n    console.log(\"[AdminDashboard] After setting editingExamination and showExaminationModal. Next render will show DataModal.\");\n  };\n  const filteredExaminations = examinations.filter(exam => exam.patientName && exam.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.doctorName && exam.doctorName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.status && exam.status.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.datumPregleda && exam.datumPregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || exam.vrijemePregleda && exam.vrijemePregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()));\n  const indexOfLastExamination = examinationsCurrentPage * itemsPerPage;\n  const indexOfFirstExamination = indexOfLastExamination - itemsPerPage;\n  const currentExaminations = filteredExaminations.slice(indexOfFirstExamination, indexOfLastExamination);\n  const totalExaminationPages = Math.ceil(filteredExaminations.length / itemsPerPage);\n  const addDoctorFields = [{\n    name: 'ime',\n    label: 'Ime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Prezime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Lozinka',\n    type: 'password',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Telefon',\n    type: 'text',\n    required: true\n  }, {\n    name: 'grad',\n    label: 'Grad',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specijalizacija',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Radno Vrijeme',\n    type: 'text'\n  }, {\n    name: 'iskustvo',\n    label: 'Godine Iskustva',\n    type: 'number'\n  }];\n  const editDoctorFields = [{\n    name: 'id',\n    label: 'ID Doktora',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'ime',\n    label: 'Ime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Prezime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Telefon',\n    type: 'text',\n    required: true\n  }, {\n    name: 'grad',\n    label: 'Grad',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specijalizacija',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Radno Vrijeme',\n    type: 'text'\n  }, {\n    name: 'iskustvo',\n    label: 'Godine Iskustva',\n    type: 'number'\n  }, {\n    name: 'ocjena',\n    label: 'Ocjena',\n    type: 'number',\n    readOnly: true\n  }];\n  const addPatientFields = [{\n    name: 'ime',\n    label: 'Ime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Prezime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Lozinka',\n    type: 'password',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Telefon',\n    type: 'text',\n    required: true\n  }];\n  const editPatientFields = [{\n    name: 'id',\n    label: 'ID Pacijenta',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'ime',\n    label: 'Ime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Prezime',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Telefon',\n    type: 'text',\n    required: true\n  }];\n  const addTermFields = [{\n    name: 'doktorID',\n    label: 'ID Doktora',\n    type: 'number',\n    required: true\n  }, {\n    name: 'datum',\n    label: 'Datum',\n    type: 'date',\n    required: true\n  }, {\n    name: 'vrijeme',\n    label: 'Vrijeme (HH:mm)',\n    type: 'time',\n    required: true\n  }, {\n    name: 'dostupnost',\n    label: 'Dostupnost',\n    type: 'checkbox'\n  }];\n  const editTermFields = [{\n    name: 'id',\n    label: 'ID Termina',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'doktorID',\n    label: 'ID Doktora',\n    type: 'number',\n    required: true\n  }, {\n    name: 'datum',\n    label: 'Datum',\n    type: 'date',\n    required: true\n  }, {\n    name: 'vrijeme',\n    label: 'Vrijeme (HH:mm)',\n    type: 'time',\n    required: true\n  }, {\n    name: 'dostupnost',\n    label: 'Dostupnost',\n    type: 'checkbox'\n  }];\n  const addExaminationFields = [{\n    name: 'pacijentID',\n    label: 'ID Pacijenta',\n    type: 'number',\n    required: true\n  }, {\n    name: 'terminID',\n    label: 'ID Termina',\n    type: 'number',\n    required: true\n  }, {\n    name: 'doktorID',\n    label: 'ID Doktora',\n    type: 'number',\n    required: true,\n    readOnly: false\n  }, {\n    name: 'datumPregleda',\n    label: 'Datum Pregleda',\n    type: 'date',\n    required: true,\n    readOnly: false\n  }, {\n    name: 'vrijemePregleda',\n    label: 'Vrijeme Pregleda',\n    type: 'time',\n    required: true,\n    readOnly: false\n  }, {\n    name: 'status',\n    label: 'Status',\n    type: 'select',\n    options: ['zakazan', 'obavljen', 'otkazan'],\n    required: true\n  }, {\n    name: 'komentarPacijenta',\n    label: 'Komentar Pacijenta',\n    type: 'textarea'\n  }, {\n    name: 'ocjenaDoktora',\n    label: 'Ocjena Doktora',\n    type: 'number'\n  }];\n  const editExaminationFields = [{\n    name: 'id',\n    label: 'ID Pregleda',\n    type: 'text',\n    readOnly: true\n  }, {\n    name: 'pacijentID',\n    label: 'ID Pacijenta',\n    type: 'number',\n    required: true\n  }, {\n    name: 'terminID',\n    label: 'ID Termina',\n    type: 'number',\n    required: true\n  }, {\n    name: 'doktorID',\n    label: 'ID Doktora',\n    type: 'number',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'datumPregleda',\n    label: 'Datum Pregleda',\n    type: 'date',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'vrijemePregleda',\n    label: 'Vrijeme Pregleda',\n    type: 'time',\n    required: true,\n    readOnly: true\n  }, {\n    name: 'status',\n    label: 'Status',\n    type: 'select',\n    options: ['zakazan', 'obavljen', 'otkazan'],\n    required: true\n  }, {\n    name: 'komentarPacijenta',\n    label: 'Komentar Pacijenta',\n    type: 'textarea'\n  }, {\n    name: 'ocjenaDoktora',\n    label: 'Ocjena Doktora',\n    type: 'number'\n  }];\n  const DataModal = ({\n    show,\n    onClose,\n    data,\n    onSave,\n    fields,\n    title,\n    idPrefix,\n    authHeaders,\n    showNotification\n  }) => {\n    _s();\n    const prevTerminIDRef = useRef(null);\n    const [shouldFetchTermDetails, setShouldFetchTermDetails] = useState(false);\n    const [formData, setFormData] = useState({});\n    useEffect(() => {\n      console.log(`[DataModal ${idPrefix}] useEffect 1 (data/fields/idPrefix change): data prop changed:`, data);\n      const newFormData = {};\n      fields.forEach(field => {\n        if (data === null || data[field.name] === undefined || data[field.name] === null) {\n          if (field.name === 'specijalizacije') {\n            newFormData[field.name] = '';\n          } else if (field.type === 'number') {\n            newFormData[field.name] = null;\n          } else if (field.type === 'checkbox') {\n            newFormData[field.name] = false;\n          } else {\n            newFormData[field.name] = '';\n          }\n        } else {\n          let value = data[field.name];\n          if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\n            value = value.split('T')[0];\n          } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\n            value = value.substring(0, 8);\n          } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\n            // Za polje 'specijalizacije', ako je niz, uzmi prvu vrijednost ili prazan string\n            value = value[0] || '';\n          } else if (field.type === 'checkbox') {\n            value = Boolean(value);\n          }\n          newFormData[field.name] = value;\n        }\n      });\n      setFormData(newFormData);\n      prevTerminIDRef.current = idPrefix === 'examination' && data && typeof data.terminID === 'number' && data.terminID > 0 ? data.terminID : null;\n      setShouldFetchTermDetails(false);\n      console.log(`[DataModal ${idPrefix}] useEffect 1: Set formData to:`, newFormData);\n      console.log(`[DataModal ${idPrefix}] useEffect 1: prevTerminIDRef.current set to:`, prevTerminIDRef.current);\n    }, [data, fields, idPrefix]);\n    const handleTerminIDBlur = () => {\n      if (idPrefix === 'examination') {\n        const currentTerminID = formData.terminID;\n        const isNumericAndValidTerminID = typeof currentTerminID === 'number' && currentTerminID > 0;\n        console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: currentTerminID: ${currentTerminID}, isNumericAndValidTerminID: ${isNumericAndValidTerminID}, prevTerminIDRef.current: ${prevTerminIDRef.current}`);\n        if (isNumericAndValidTerminID && currentTerminID !== prevTerminIDRef.current) {\n          console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: Valid NEW Termin ID detected. Setting shouldFetchTermDetails to true.`);\n          setShouldFetchTermDetails(true);\n        } else if (!isNumericAndValidTerminID && prevTerminIDRef.current !== null) {\n          console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: Termin ID became invalid (${currentTerminID}) after being valid. Resetting associated fields.`);\n          setFormData(prev => ({\n            ...prev,\n            doktorID: null,\n            datumPregleda: '',\n            vrijemePregleda: ''\n          }));\n          prevTerminIDRef.current = null;\n          setShouldFetchTermDetails(false);\n        } else if (currentTerminID === null || currentTerminID === 0 || currentTerminID === '') {\n          console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: Termin ID is null/0/empty. Resetting associated fields if they were populated by a previous term.`);\n          if (formData.doktorID !== null || formData.datumPregleda !== '' || formData.vrijemePregleda !== '') {\n            setFormData(prev => ({\n              ...prev,\n              doktorID: null,\n              datumPregleda: '',\n              vrijemePregleda: ''\n            }));\n          }\n          prevTerminIDRef.current = null;\n          setShouldFetchTermDetails(false);\n        }\n      }\n    };\n    useEffect(() => {\n      if (shouldFetchTermDetails && idPrefix === 'examination') {\n        const terminIDToFetch = formData.terminID;\n        if (!(typeof terminIDToFetch === 'number' && terminIDToFetch > 0)) {\n          console.warn(`[DataModal ${idPrefix}] useEffect Fetcher: Invalid terminID for fetching:`, terminIDToFetch);\n          setShouldFetchTermDetails(false);\n          return;\n        }\n        const fetchTermDetails = async () => {\n          console.log(`[DataModal ${idPrefix}] useEffect Fetcher: Attempting to fetch details for ID: ${terminIDToFetch}`);\n          try {\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${terminIDToFetch}`, authHeaders);\n            const fetchedTerm = response.data;\n            console.log(`[DataModal ${idPrefix}] useEffect Fetcher SUCCESS: Term details fetched:`, fetchedTerm);\n            setFormData(prev => {\n              const newState = {\n                ...prev,\n                doktorID: fetchedTerm.doktorID,\n                datumPregleda: fetchedTerm.datum,\n                vrijemePregleda: fetchedTerm.vrijeme.substring(0, 8)\n              };\n              console.log(`[DataModal ${idPrefix}] useEffect Fetcher SUCCESS: Setting formData to:`, newState);\n              return newState;\n            });\n            prevTerminIDRef.current = terminIDToFetch;\n            showNotification('Detalji termina uspješno popunjeni!', 'info');\n          } catch (error) {\n            var _error$response27;\n            console.error(`[DataModal ${idPrefix}] useEffect Fetcher ERROR: Greška prilikom dohvaćanja detalja termina:`, ((_error$response27 = error.response) === null || _error$response27 === void 0 ? void 0 : _error$response27.data) || error.message);\n            showNotification('Greška prilikom dohvaćanja detalja termina. Provjerite Term ID.', \"danger\");\n            setFormData(prev => {\n              const newState = {\n                ...prev,\n                doktorID: null,\n                datumPregleda: '',\n                vrijemePregleda: ''\n              };\n              console.log(`[DataModal ${idPrefix}] useEffect Fetcher ERROR: Resetting formData due to fetch error:`, newState);\n              return newState;\n            });\n            prevTerminIDRef.current = null;\n          } finally {\n            setShouldFetchTermDetails(false);\n          }\n        };\n        fetchTermDetails();\n      }\n    }, [shouldFetchTermDetails, idPrefix, authHeaders, showNotification, TERMINI_PREGLEDI_API_PREFIX]);\n    const handleChange = e => {\n      const {\n        name,\n        value,\n        type,\n        checked\n      } = e.target;\n      console.log(`[DataModal ${idPrefix}] handleChange: Field: ${name}, Value: \"${value}\", Type: ${type}`);\n      console.log(`[DataModal ${idPrefix}] handleChange: Current formData BEFORE update for ${name}:`, formData);\n      setFormData(prev => {\n        let newValue = value;\n        if (name === 'specijalizacije') {\n          newValue = value; // Vrijednost će biti string\n        } else if (type === 'number') {\n          newValue = value === '' ? null : Number(value);\n          if (isNaN(newValue)) {\n            newValue = null;\n          }\n        } else if (type === 'checkbox') {\n          newValue = checked;\n        }\n        const newState = {\n          ...prev,\n          [name]: newValue\n        };\n        console.log(`[DataModal ${idPrefix}] handleChange: New formData state for ${name}:`, newState);\n        return newState;\n      });\n    };\n    const handleSubmit = e => {\n      e.preventDefault();\n      const finalFormData = {\n        ...formData\n      };\n\n      // Prilagodi 'specijalizacije' za doktora (šalje se kao niz stringova)\n      if (idPrefix === 'doctor' && typeof finalFormData.specijalizacije === 'string') {\n        finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\n      } else if (idPrefix === 'doctor' && finalFormData.specijalizacije === null) {\n        finalFormData.specijalizacije = []; // Osiguraj da je prazan niz ako je null\n      }\n      let validationErrors = [];\n      fields.forEach(field => {\n        if (field.required) {\n          if (field.type === 'text' || field.type === 'textarea' || field.type === 'date' || field.type === 'time' || field.type === 'select') {\n            if (!finalFormData[field.name] || finalFormData[field.name].toString().trim() === '') {\n              validationErrors.push(`${field.label} je obavezno polje.`);\n            }\n          } else if (field.type === 'number') {\n            if (finalFormData[field.name] === null || finalFormData[field.name] === undefined || typeof finalFormData[field.name] !== 'number' || finalFormData[field.name] < (field.name === 'iskustvo' ? 0 : 1)) {\n              // Izmijenjeno: iskustvo može biti 0, ali ostali brojevi > 0\n              validationErrors.push(`${field.label} je obavezno polje i mora biti validan broj.`);\n            }\n          } else if (field.type === 'email') {\n            if (!finalFormData[field.name] || !/\\S+@\\S+\\.\\S+/.test(finalFormData[field.name])) {\n              validationErrors.push(`Email adresa mora biti validna.`);\n            }\n          } else if (field.name === 'password' && idPrefix !== 'doctor' && idPrefix !== 'patient') {\n            // Password je required samo za add Doctor/Patient\n            if (!finalFormData[field.name] || finalFormData[field.name].toString().length < 6) {\n              validationErrors.push(`Lozinka mora imati barem 6 karaktera.`);\n            }\n          }\n        }\n      });\n      if (validationErrors.length > 0) {\n        showNotification(`Molimo popunite sva obavezna polja:\\n- ${validationErrors.join('\\n- ')}`, 'danger');\n        return;\n      }\n\n      // Ako brojčana polja nisu popunjena, postavi ih na 0 ili null, ovisno o backend očekivanju\n      fields.forEach(field => {\n        if (field.type === 'number' && (finalFormData[field.name] === null || finalFormData[field.name] === undefined || finalFormData[field.name] === '')) {\n          if (field.name === 'iskustvo' || field.name === 'ocjena') {\n            finalFormData[field.name] = 0; // Postavi na 0 ako su brojčana i nepopunjena\n          } else {\n            finalFormData[field.name] = null; // Inače null\n          }\n        }\n      });\n      if (idPrefix === 'term' && finalFormData.vrijeme) {\n        if (finalFormData.vrijeme.length === 5) {\n          finalFormData.vrijeme += ':00';\n        }\n      } else if (idPrefix === 'examination' && finalFormData.vrijemePregleda) {\n        if (finalFormData.vrijemePregleda.length === 5) {\n          finalFormData.vrijemePregleda += ':00';\n        }\n      }\n      console.log(`[DataModal ${idPrefix}] handleSubmit: Final payload for submission:`, finalFormData);\n      onSave(finalFormData);\n    };\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: onClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: fields.map(field => /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: `${idPrefix}-${field.name}`,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 17\n            }, this), field.type === 'select' ? /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: field.name,\n              value: formData[field.name] === null ? '' : formData[field.name],\n              onChange: handleChange,\n              required: field.required,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: [\"Odaberi \", field.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 21\n              }, this), field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 963,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 19\n            }, this) : field.type === 'textarea' ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 967,\n              columnNumber: 19\n            }, this) : field.type === 'checkbox' ? /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              name: field.name,\n              checked: formData[field.name] || false,\n              onChange: handleChange,\n              label: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: field.type || 'text',\n              name: field.name,\n              value: formData[field.name] === null || formData[field.name] === undefined || formData[field.name] === 'N/A' ? '' : formData[field.name],\n              onChange: handleChange,\n              required: field.required,\n              readOnly: !!data && (field.name === 'doktorID' || field.name === 'datumPregleda' || field.name === 'vrijemePregleda'),\n              onBlur: field.name === 'terminID' && idPrefix === 'examination' ? handleTerminIDBlur : undefined\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 19\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: onClose,\n            children: \"Zatvori\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Sa\\u010Duvaj promjene\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 945,\n      columnNumber: 7\n    }, this);\n  };\n  _s(DataModal, \"kyKr2IBQX7x0VN9nM5BVeEgn0ao=\");\n  const Pagination = ({\n    itemsPerPage,\n    totalItems,\n    currentPage,\n    paginate\n  }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center mt-4\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === number ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 15\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1021,\n      columnNumber: 7\n    }, this);\n  };\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Pregled nadzorne plo\\u010De\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-primary mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Ukupno doktora\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1044,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: doctors.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1046,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1045,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1042,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-success mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Ukupno pacijenata\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1052,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: patients.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1054,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1053,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1051,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-info mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Dostupni termini\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1060,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: terms.filter(t => t.dostupnost === true).length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1062,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1061,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-warning mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Pregledi na \\u010Dekanju\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1068,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: examinations.filter(exam => exam.status === 'zakazan').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1070,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1069,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1067,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1066,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1041,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Brze akcije\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1076,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2 flex-wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => openDoctorModal(),\n                children: \"Dodaj novog doktora\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-success\",\n                onClick: () => openPatientModal(),\n                children: \"Dodaj novog pacijenta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1079,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-info\",\n                onClick: () => openTermModal(),\n                children: \"Dodaj novi termin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1080,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-warning\",\n                onClick: () => openExaminationModal(),\n                children: \"Dodaj novi pregled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1081,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 11\n        }, this);\n      case 'doctors':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Upravljanje doktorima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openDoctorModal(),\n              children: \"Dodaj novog doktora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Pretra\\u017Ei doktore...\",\n              value: doctorSearchTerm,\n              onChange: e => setDoctorSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1104,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Ime\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1105,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Specijalnost\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1106,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Grad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1107,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1108,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Telefon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1109,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Radno Vrijeme\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1110,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Iskustvo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1111,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Ocjena\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1112,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Akcije\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1113,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1103,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentDoctors.length > 0 ? currentDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1120,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1121,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.specialty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1122,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.city\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1123,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1124,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.telefon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1125,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.radnoVrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1126,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.iskustvo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1127,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.ocjena\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1128,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openDoctorModal(doctor),\n                      children: \"Uredi\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1130,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteDoctor(doctor.id),\n                      children: \"Obri\\u0161i\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1131,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1129,\n                    columnNumber: 25\n                  }, this)]\n                }, doctor.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1119,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"10\",\n                    className: \"text-center\",\n                    children: \"Nema prona\\u0111enih doktora.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1137,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1136,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredDoctors.length,\n            currentPage: doctorsCurrentPage,\n            paginate: setDoctorsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 11\n        }, this);\n      case 'patients':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Upravljanje pacijentima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openPatientModal(),\n              children: \"Dodaj novog pacijenta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Pretra\\u017Ei pacijente...\",\n              value: patientSearchTerm,\n              onChange: e => setPatientSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1169,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Ime\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1170,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1171,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Telefon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1172,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Akcije\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1173,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1168,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentPatients.length > 0 ? currentPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1180,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1181,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1182,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.telefon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1183,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openPatientModal(patient),\n                      children: \"Uredi\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1185,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeletePatient(patient.id),\n                      children: \"Obri\\u0161i\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1186,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1184,\n                    columnNumber: 25\n                  }, this)]\n                }, patient.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1179,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"Nema prona\\u0111enih pacijenata.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1192,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1191,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1176,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredPatients.length,\n            currentPage: patientsCurrentPage,\n            paginate: setPatientsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 11\n        }, this);\n      case 'terms':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Upravljanje terminima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openTermModal(),\n              children: \"Dodaj novi termin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Pretra\\u017Ei termine...\",\n              value: termSearchTerm,\n              onChange: e => setTermSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1224,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID Doktora\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1225,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Datum\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1226,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Vrijeme\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1227,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Dostupnost\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1228,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Akcije\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1229,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1223,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentTerms.length > 0 ? currentTerms.map(term => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1236,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.doktorID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1237,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.datum\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1238,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.vrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1239,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.dostupnost ? 'Dostupan' : 'Zauzet'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1240,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openTermModal(term),\n                      children: \"Uredi\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1242,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteTerm(term.id),\n                      children: \"Obri\\u0161i\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1243,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1241,\n                    columnNumber: 25\n                  }, this)]\n                }, term.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1235,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: \"text-center\",\n                    children: \"Nema prona\\u0111enih termina.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1249,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1248,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1232,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredTerms.length,\n            currentPage: termsCurrentPage,\n            paginate: setTermsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 11\n        }, this);\n      case 'examinations':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Upravljanje pregledima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openExaminationModal(),\n              children: \"Dodaj novi pregled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Pretra\\u017Ei preglede...\",\n              value: examinationSearchTerm,\n              onChange: e => setExaminationSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1281,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Pacijent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1282,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doktor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1283,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID Termina\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1284,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Datum\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1285,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Vrijeme\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1286,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1287,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Komentar Pacijenta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1288,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Ocjena Doktora\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1289,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Akcije\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1290,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1280,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentExaminations.length > 0 ? currentExaminations.map(examination => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1297,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.patientName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1298,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.doctorName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1299,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.terminID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1300,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.datumPregleda\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1301,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.vrijemePregleda\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1302,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select\",\n                      value: examination.status,\n                      onChange: e => handleUpdateExamination({\n                        ...examination,\n                        status: e.target.value,\n                        datumPregleda: examination.datumPregleda,\n                        vrijemePregleda: examination.vrijemePregleda\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"zakazan\",\n                        children: \"Zakazan\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1316,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"obavljen\",\n                        children: \"Obavljen\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1317,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"otkazan\",\n                        children: \"Otkazan\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1318,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1304,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1303,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.komentarPacijenta\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1321,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: examination.ocjenaDoktora\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1322,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openExaminationModal(examination),\n                      children: \"Uredi\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1324,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteExamination(examination.id),\n                      children: \"Obri\\u0161i\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1325,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1323,\n                    columnNumber: 25\n                  }, this)]\n                }, examination.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1296,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"10\",\n                    className: \"text-center\",\n                    children: \"Nema prona\\u0111enih pregleda.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1331,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1330,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1293,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredExaminations.length,\n            currentPage: examinationsCurrentPage,\n            paginate: setExaminationsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Odaberite karticu za prikaz sadr\\u017Eaja.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1346,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  if (loadingInitial) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje administratorskog panela...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1355,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1354,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1353,\n      columnNumber: 7\n    }, this);\n  }\n  if (!loadingInitial && !token && isAuthChecked) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-danger\",\n          children: \"Pristup odbijen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead\",\n          children: \"Niste autorizovani za pristup ovoj stranici. Molimo prijavite se kao administrator.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1364,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1363,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alertType,\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n      style: {\n        zIndex: 1050\n      },\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1375,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showConfirmModal,\n      onHide: () => setShowConfirmModal(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: confirmTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1382,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: confirmMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowConfirmModal(false),\n          children: \"Poni\\u0161ti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleConfirmAction,\n          children: \"Potvrdi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1380,\n      columnNumber: 7\n    }, this), showDoctorModal && /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showDoctorModal,\n      onClose: () => {\n        setShowDoctorModal(false);\n        setEditingDoctor(null);\n      },\n      data: editingDoctor,\n      onSave: editingDoctor ? handleUpdateDoctor : handleAddDoctor,\n      title: editingDoctor ? 'Uredi Doktora' : 'Dodaj Novog Doktora',\n      idPrefix: \"doctor\",\n      fields: editingDoctor ? editDoctorFields : addDoctorFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification\n    }, editingDoctor ? `edit-doctor-${editingDoctor.id}` : 'add-doctor', false, {\n      fileName: _jsxFileName,\n      lineNumber: 1398,\n      columnNumber: 9\n    }, this), showPatientModal && /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showPatientModal,\n      onClose: () => {\n        setShowPatientModal(false);\n        setEditingPatient(null);\n      },\n      data: editingPatient,\n      onSave: editingPatient ? handleUpdatePatient : handleAddPatient,\n      title: editingPatient ? 'Uredi Pacijenta' : 'Dodaj Novog Pacijenta',\n      idPrefix: \"patient\",\n      fields: editingPatient ? editPatientFields : addPatientFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification\n    }, editingPatient ? `edit-patient-${editingPatient.id}` : 'add-patient', false, {\n      fileName: _jsxFileName,\n      lineNumber: 1413,\n      columnNumber: 9\n    }, this), showTermModal && /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showTermModal,\n      onClose: () => {\n        setShowTermModal(false);\n        setEditingTerm(null);\n      },\n      data: editingTerm,\n      onSave: editingTerm ? handleUpdateTerm : handleAddTerm,\n      title: editingTerm ? 'Uredi Termin' : 'Dodaj Novi Termin',\n      idPrefix: \"term\",\n      fields: editingTerm ? editTermFields : addTermFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification\n    }, editingTerm ? `edit-term-${editingTerm.id}` : 'add-term', false, {\n      fileName: _jsxFileName,\n      lineNumber: 1428,\n      columnNumber: 9\n    }, this), showExaminationModal && /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showExaminationModal,\n      onClose: () => {\n        setShowExaminationModal(false);\n        setEditingExamination(null);\n      },\n      data: editingExamination,\n      onSave: editingExamination ? handleUpdateExamination : handleAddExamination,\n      title: editingExamination ? 'Uredi Pregled' : 'Dodaj Novi Pregled',\n      idPrefix: \"examination\",\n      fields: editingExamination ? editExaminationFields : addExaminationFields,\n      authHeaders: authHeaders,\n      showNotification: showNotification\n    }, editingExamination ? `edit-examination-${editingExamination.id}` : 'add-examination', false, {\n      fileName: _jsxFileName,\n      lineNumber: 1443,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\",\n        style: {\n          minHeight: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky pt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'overview' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('overview'),\n                children: \"Pregled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1462,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'doctors' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('doctors'),\n                children: \"Doktori\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1467,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1466,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'patients' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('patients'),\n                children: \"Pacijenti\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1472,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1471,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'terms' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('terms'),\n                children: \"Termini\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1477,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1476,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'examinations' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('examinations'),\n                children: \"Pregledi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1482,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1481,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1460,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1459,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1490,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1457,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1373,\n    columnNumber: 5\n  }, this);\n}\n_s2(AdminDashboard, \"afq1K7bojrsB5rih4YDmr06H6ZE=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","axios","useAuth","Modal","Button","Form","Alert","jsxDEV","_jsxDEV","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","AUTH_API_PREFIX","AdminDashboard","_s2","_s","$RefreshSig$","token","authHeaders","headers","loadingInitial","setLoadingInitial","isAuthChecked","setIsAuthChecked","activeTab","setActiveTab","savedTab","localStorage","getItem","doctors","setDoctors","patients","setPatients","examinations","setExaminations","terms","setTerms","showDoctorModal","setShowDoctorModal","editingDoctor","setEditingDoctor","showPatientModal","setShowPatientModal","editingPatient","setEditingPatient","showTermModal","setShowTermModal","editingTerm","setEditingTerm","showExaminationModal","setShowExaminationModal","editingExamination","setEditingExamination","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","doctorSearchTerm","setDoctorSearchTerm","patientSearchTerm","setPatientSearchTerm","termSearchTerm","setTermSearchTerm","examinationSearchTerm","setExaminationSearchTerm","doctorsCurrentPage","setDoctorsCurrentPage","patientsCurrentPage","setPatientsCurrentPage","termsCurrentPage","setTermsCurrentPage","examinationsCurrentPage","setExaminationsCurrentPage","itemsPerPage","showNotification","message","type","setTimeout","fetchDoctors","response","get","transformedDoctors","data","map","doc","id","doktorID","userId","name","ime","prezime","specialty","Array","isArray","specijalizacije","length","join","city","grad","email","telefon","radnoVrijeme","iskustvo","undefined","ocjena","error","_error$response","console","fetchPatients","transformedPatients","pat","pacijentID","phone","_error$response2","fetchTerms","transformedTerms","term","terminID","datum","vrijeme","dostupnost","_error$response3","fetchExaminations","transformedExaminations","app","pregledID","patientName","pacijentIme","doctorName","doktorIme","datumPregleda","vrijemePregleda","status","komentarPacijenta","ocjenaDoktora","_error$response4","initializeDashboard","Promise","all","warn","setItem","handleAddDoctor","newDoctorData","registerPayload","password","fullName","roles","authResponse","post","log","Error","_error$response5","_error$response6","_error$response6$data","errorMessage","handleUpdateDoctor","updatedDoctor","doctorUpdatePayload","put","userUpdatePayload","_error$response7","_error$response8","_error$response8$data","showConfirmModal","setShowConfirmModal","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","confirmTitle","setConfirmTitle","showCustomConfirm","action","title","handleConfirmAction","handleDeleteDoctor","doctorToDelete","find","delete","_error$response9","_error$response0","_error$response0$data","openDoctorModal","doctor","filteredDoctors","filter","toLowerCase","includes","indexOfLastDoctor","indexOfFirstDoctor","currentDoctors","slice","totalDoctorPages","Math","ceil","handleAddPatient","newPatient","_error$response1","_error$response10","_error$response10$dat","handleUpdatePatient","updatedPatient","patientUpdatePayload","_error$response11","_error$response12","_error$response12$dat","handleDeletePatient","patientToDelete","_error$response13","_error$response14","_error$response14$dat","openPatientModal","patient","filteredPatients","indexOfLastPatient","indexOfFirstPatient","currentPatients","totalPatientPages","handleAddTerm","newTermData","_error$response15","_error$response16","_error$response16$dat","handleUpdateTerm","updatedTerm","termPayload","_error$response17","_error$response18","_error$response18$dat","handleDeleteTerm","_error$response19","_error$response20","_error$response20$dat","openTermModal","filteredTerms","toString","indexOfLastTerm","indexOfFirstTerm","currentTerms","totalTermPages","handleAddExamination","newExaminationData","payload","_error$response21","_error$response22","_error$response22$dat","handleUpdateExamination","updatedExamination","_error$response23","_error$response24","_error$response24$dat","handleDeleteExamination","_error$response25","_error$response26","_error$response26$dat","openExaminationModal","examination","filteredExaminations","exam","indexOfLastExamination","indexOfFirstExamination","currentExaminations","totalExaminationPages","addDoctorFields","label","required","options","editDoctorFields","readOnly","addPatientFields","editPatientFields","addTermFields","editTermFields","addExaminationFields","editExaminationFields","DataModal","show","onClose","onSave","fields","idPrefix","prevTerminIDRef","shouldFetchTermDetails","setShouldFetchTermDetails","formData","setFormData","newFormData","forEach","field","value","split","substring","Boolean","current","handleTerminIDBlur","currentTerminID","isNumericAndValidTerminID","prev","terminIDToFetch","fetchTermDetails","fetchedTerm","newState","_error$response27","handleChange","e","checked","target","newValue","Number","isNaN","handleSubmit","preventDefault","finalFormData","validationErrors","trim","push","test","onHide","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Body","Group","className","controlId","Label","Select","onChange","option","Control","as","rows","Check","onBlur","Footer","variant","onClick","Pagination","totalItems","currentPage","paginate","pageNumbers","i","number","renderContent","t","placeholder","colSpan","style","minHeight","role","dismissible","zIndex","href","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\r\n\r\nfunction AdminDashboard() {\r\n  const { token } = useAuth();\r\n\r\n  const authHeaders = useMemo(() => ({\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  }), [token]);\r\n\r\n  const [loadingInitial, setLoadingInitial] = useState(true);\r\n  const [isAuthChecked, setIsAuthChecked] = useState(false);\r\n\r\n  const [activeTab, setActiveTab] = useState(() => {\r\n    const savedTab = localStorage.getItem('adminActiveTab');\r\n    return savedTab || 'overview';\r\n  });\r\n\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [examinations, setExaminations] = useState([]);\r\n  const [terms, setTerms] = useState([]);\r\n\r\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\r\n  const [editingDoctor, setEditingDoctor] = useState(null);\r\n  const [showPatientModal, setShowPatientModal] = useState(false);\r\n  const [editingPatient, setEditingPatient] = useState(null);\r\n  const [showTermModal, setShowTermModal] = useState(false);\r\n  const [editingTerm, setEditingTerm] = useState(null);\r\n  const [showExaminationModal, setShowExaminationModal] = useState(false);\r\n  const [editingExamination, setEditingExamination] = useState(null);\r\n\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [alertType, setAlertType] = useState('success');\r\n\r\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\r\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n  const [termSearchTerm, setTermSearchTerm] = useState('');\r\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\r\n\r\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\r\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\r\n  const [termsCurrentPage, setTermsCurrentPage] = useState(1);\r\n  const [examinationsCurrentPage, setExaminationsCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const showNotification = (message, type = 'success') => {\r\n    setAlertMessage(message);\r\n    setAlertType(type);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n      setAlertMessage('');\r\n    }, 3000);\r\n  };\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n      const transformedDoctors = response.data.map(doc => ({\r\n        id: doc.doktorID,\r\n        userId: doc.userId,\r\n        name: `${doc.ime} ${doc.prezime}`,\r\n        ime: doc.ime,\r\n        prezime: doc.prezime,\r\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                   ? doc.specijalizacije.join(', ')\r\n                   : 'N/A',\r\n        specijalizacije: doc.specijalizacije,\r\n        city: doc.grad || 'N/A',\r\n        grad: doc.grad,\r\n        email: doc.email || 'N/A',\r\n        telefon: doc.telefon || 'N/A',\r\n        radnoVrijeme: doc.radnoVrijeme || '', // Osiguraj da je string\r\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : '', // Osiguraj da je broj ili prazan string\r\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 0.0,\r\n      }));\r\n      setDoctors(transformedDoctors);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja doktora:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\r\n      const transformedPatients = response.data.map(pat => ({\r\n        id: pat.pacijentID,\r\n        userId: pat.userId,\r\n        name: `${pat.ime} ${pat.prezime}`,\r\n        ime: pat.ime,\r\n        prezime: pat.prezime,\r\n        email: pat.email || 'N/A',\r\n        phone: pat.telefon || 'N/A',\r\n        telefon: pat.telefon,\r\n      }));\r\n      setPatients(transformedPatients);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchTerms = async () => {\r\n    try {\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, authHeaders);\r\n      const transformedTerms = response.data.map(term => ({\r\n        id: term.terminID,\r\n        doktorID: term.doktorID,\r\n        datum: term.datum,\r\n        vrijeme: term.vrijeme,\r\n        dostupnost: term.dostupnost,\r\n      }));\r\n      setTerms(transformedTerms);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja termina:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchExaminations = async () => {\r\n    try {\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\r\n      const transformedExaminations = response.data.map(app => ({\r\n        id: app.pregledID,\r\n        pacijentID: app.pacijentID,\r\n        doktorID: app.doktorID,\r\n        patientName: app.pacijentIme || 'N/A',\r\n        doctorName: app.doktorIme || 'N/A',\r\n        datumPregleda: app.datumPregleda,\r\n        vrijemePregleda: app.vrijemePregleda,\r\n        status: app.status,\r\n        komentarPacijenta: app.komentarPacijenta || '',\r\n        ocjenaDoktora: app.ocjenaDoktora || null,\r\n        terminID: app.terminID !== null && app.terminID !== undefined ? app.terminID : 'N/A',\r\n      }));\r\n      setExaminations(transformedExaminations);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja pregleda:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja pregleda sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token !== undefined && !isAuthChecked) {\r\n      setIsAuthChecked(true);\r\n    }\r\n\r\n    const initializeDashboard = async () => {\r\n      if (isAuthChecked) {\r\n        if (token) {\r\n          try {\r\n            await Promise.all([\r\n              fetchDoctors(),\r\n              fetchPatients(),\r\n              fetchTerms(),\r\n              fetchExaminations()\r\n            ]);\r\n          } catch (error) {\r\n            console.error(\"Greška prilikom inicijalnog dohvaćanja podataka:\", error);\r\n            showNotification(\"Greška prilikom učitavanja početnih podataka.\", \"danger\");\r\n          } finally {\r\n            setLoadingInitial(false);\r\n          }\r\n        } else {\r\n          setLoadingInitial(false);\r\n          console.warn(\"Provjera autentifikacije završena, ali token nije dostupan. Korisnik nije ulogovan/autorizovan.\");\r\n        }\r\n      }\r\n    };\r\n\r\n    initializeDashboard();\r\n  }, [token, isAuthChecked]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('adminActiveTab', activeTab);\r\n  }, [activeTab]);\r\n\r\n  const handleAddDoctor = async (newDoctorData) => {\r\n        try {\r\n          const registerPayload = {\r\n            email: newDoctorData.email,\r\n            password: newDoctorData.password,\r\n            fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\r\n            telefon: newDoctorData.telefon,\r\n            roles: [\"ROLE_DOKTOR\"],\r\n            grad: newDoctorData.grad,\r\n            specijalizacije: newDoctorData.specijalizacije,\r\n            radnoVrijeme: newDoctorData.radnoVrijeme, // Dodaj ova polja u payload\r\n            iskustvo: newDoctorData.iskustvo,       // Dodaj ova polja u payload\r\n            ocjena: newDoctorData.ocjena || 0.0,    // Dodaj ova polja u payload\r\n          };\r\n\r\n          const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n          console.log(\"Auth Service Register Response Data:\", authResponse.data);\r\n\r\n          // AŽURIRANO: Sada koristimo authResponse.data.userId (prema AuthResponse DTO-u)\r\n          const userId = authResponse.data.userId || null;\r\n\r\n          if (!userId) {\r\n              throw new Error(\"Korisnički ID nije dobiven iz Auth servisa.\");\r\n          }\r\n\r\n          // Auth servis emituje event koji ce kreirati detalje doktora u korisnici-doktori servisu.\r\n          // Ne treba ručno slati PUT ili POST na /api/doktori/user-details/{userId}\r\n          // setTimeout se koristi da se omogući back-endu da obradi event\r\n          setTimeout(() => {\r\n              fetchDoctors(); // Osvježi listu doktora nakon kratkog kašnjenja\r\n          }, 1000); // Povećano na 1000ms da se osigura vrijeme za event-obradu\r\n\r\n          setShowDoctorModal(false);\r\n          showNotification('Novi doktor uspješno registrovan!');\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom dodavanja doktora:\", error.response?.data || error.message);\r\n          // Bolja poruka za korisnika\r\n          let errorMessage = 'Greška prilikom dodavanja doktora. Provjerite da li email već postoji ili konzolu za više detalja.';\r\n          if (error.response?.data?.message) {\r\n              errorMessage = error.response.data.message;\r\n          } else if (error.message) {\r\n              errorMessage = error.message;\r\n          }\r\n          showNotification(errorMessage, \"danger\");\r\n        }\r\n      };\r\n\r\n       const handleUpdateDoctor = async (updatedDoctor) => {\r\n           try {\r\n             if (!updatedDoctor.id) {\r\n                 showNotification('ID doktora nedostaje za ažuriranje.', 'danger');\r\n                 console.error('ID doktora nedostaje za ažuriranje:', updatedDoctor);\r\n                 return;\r\n             }\r\n\r\n             const doctorUpdatePayload = {\r\n               ime: updatedDoctor.ime,\r\n               prezime: updatedDoctor.prezime,\r\n               email: updatedDoctor.email,\r\n               telefon: updatedDoctor.telefon,\r\n               grad: updatedDoctor.grad,\r\n               specijalizacije: updatedDoctor.specijalizacije,\r\n               radnoVrijeme: updatedDoctor.radnoVrijeme || '',\r\n               iskustvo: updatedDoctor.iskustvo !== null && updatedDoctor.iskustvo !== undefined ? updatedDoctor.iskustvo : 0,\r\n               ocjena: updatedDoctor.ocjena || 0.0,\r\n             };\r\n             await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\r\n\r\n             const userUpdatePayload = {\r\n               email: updatedDoctor.email,\r\n               fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\r\n               telefon: updatedDoctor.telefon,\r\n               // Dodajte i radnoVrijeme, iskustvo, ocjena ako ih Auth servis treba ažurirati.\r\n               // Trenutno UserUpdateDTO ne sadrži ova polja. Ako je potrebno, dodajte ih u UserUpdateDTO\r\n               // grad: updatedDoctor.grad,\r\n               // specijalizacije: updatedDoctor.specijalizacije\r\n             };\r\n             if (updatedDoctor.userId) { // userId je Long ID iz Auth servisa\r\n                 await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\r\n             } else {\r\n                 console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n             }\r\n\r\n             fetchDoctors();\r\n             setShowDoctorModal(false);\r\n             setEditingDoctor(null);\r\n             showNotification('Doktor uspješno ažuriran!', 'success');\r\n           } catch (error) {\r\n             console.error(\"Greška prilikom ažuriranja doktora:\", error.response?.data || error.message);\r\n             showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja doktora.', \"danger\");\r\n           }\r\n         };\r\n\r\n         const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n         const [confirmAction, setConfirmAction] = useState(() => () => {});\r\n         const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n         const [confirmTitle, setConfirmTitle] = useState(\"Potvrda\");\r\n\r\n         const showCustomConfirm = (message, action, title = \"Potvrda\") => {\r\n           setConfirmMessage(message);\r\n           setConfirmAction(() => action);\r\n           setConfirmTitle(title);\r\n           setShowConfirmModal(true);\r\n         };\r\n\r\n         const handleConfirmAction = () => {\r\n           confirmAction();\r\n           setShowConfirmModal(false);\r\n         };\r\n\r\n         const handleDeleteDoctor = async (id) => {\r\n           showCustomConfirm(\r\n             'Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.',\r\n             async () => {\r\n               try {\r\n                 const doctorToDelete = doctors.find(doc => doc.id === id);\r\n                 if (!doctorToDelete || !doctorToDelete.userId) {\r\n                   showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\r\n                   return;\r\n                 }\r\n\r\n                 await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\r\n                 await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\r\n\r\n                 fetchDoctors();\r\n                 showNotification('Doktor uspješno obrisan!', 'danger');\r\n               } catch (error) {\r\n                 console.error(\"Greška prilikom brisanja doktora:\", error.response?.data || error.message);\r\n                 showNotification(error.response?.data?.message || 'Greška prilikom brisanja doktora.', \"danger\");\r\n               }\r\n             },\r\n             \"Potvrdi brisanje doktora\"\r\n           );\r\n         };\r\n\r\n         const openDoctorModal = (doctor = null) => {\r\n           setEditingDoctor(doctor);\r\n           setShowDoctorModal(true);\r\n         };\r\n\r\n         const filteredDoctors = doctors.filter(doctor =>\r\n           doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n           (doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n           (doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n           (doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()))\r\n         );\r\n         const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\r\n         const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\r\n         const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\r\n         const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\r\n\r\n       const handleAddPatient = async (newPatient) => {\r\n         try {\r\n           console.log(\"handleAddPatient: Počinjem proces dodavanja pacijenta.\");\r\n           const registerPayload = {\r\n             email: newPatient.email,\r\n             password: newPatient.password,\r\n             fullName: `${newPatient.ime} ${newPatient.prezime}`,\r\n             telefon: newPatient.telefon,\r\n             roles: [\"ROLE_PACIJENT\"],\r\n             grad: null, // Pacijent nema grad iz forme, ako nema, neka bude null\r\n             specijalizacije: null, // Pacijent nema specijalizacije\r\n             ocjena: null,\r\n             iskustvo: null,\r\n             radnoVrijeme: null,\r\n           };\r\n           console.log(\"handleAddPatient: Slanje registerPayload-a Auth servisu:\", registerPayload);\r\n           const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n\r\n           console.log(\"Auth Service Register Response Data (for patient):\", authResponse.data);\r\n\r\n           // AŽURIRANO: Sada koristimo authResponse.data.userId\r\n           const userId = authResponse.data.userId || null;\r\n\r\n           if (!userId) {\r\n               throw new Error(\"Korisnički ID nije dobiven iz Auth servisa za pacijenta.\");\r\n           }\r\n\r\n           // Očekujemo da Korisnici-Doktori servis kreira Pacijent entitet putem UserRegisteredEvent-a\r\n           // Zato ne šaljemo direktno POST/PUT zahtjev ovdje.\r\n           console.log(\"handleAddPatient: Očekujem da UserRegisteredEvent obradi kreiranje detalja pacijenta.\");\r\n\r\n           setTimeout(() => {\r\n               fetchPatients(); // Osvježi listu pacijenata nakon kratkog kašnjenja\r\n           }, 1000); // Povećano na 1000ms\r\n\r\n           setShowPatientModal(false);\r\n           showNotification('Novi pacijent uspješno registrovan!', 'success');\r\n           console.log(\"handleAddPatient: Proces dodavanja pacijenta uspješno završen (registracija i event obrada).\");\r\n\r\n         } catch (error) {\r\n           console.error(\"Greška prilikom dodavanja pacijenta:\", error.response?.data || error.message);\r\n           let errorMessage = 'Greška prilikom dodavanja pacijenta. Provjerite da li email već postoji ili konzolu za više detalja.';\r\n           if (error.response?.data?.message) {\r\n               errorMessage = error.response.data.message;\r\n           } else if (error.message) {\r\n               errorMessage = error.message;\r\n           }\r\n           showNotification(errorMessage, \"danger\");\r\n         }\r\n       };\r\n\r\n\r\n  const handleUpdatePatient = async (updatedPatient) => {\r\n    try {\r\n      const patientUpdatePayload = {\r\n        ime: updatedPatient.ime,\r\n        prezime: updatedPatient.prezime,\r\n        email: updatedPatient.email,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\r\n\r\n      const userUpdatePayload = {\r\n        email: updatedPatient.email,\r\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      if (updatedPatient.userId) {\r\n          await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\r\n      } else {\r\n          console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n      }\r\n\r\n      fetchPatients();\r\n      setShowPatientModal(false);\r\n      setEditingPatient(null);\r\n      showNotification('Pacijent uspješno ažuriran!', 'success');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja pacijenta. Molimo provjerite konzolu za više detalja.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleDeletePatient = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.',\r\n      async () => {\r\n        try {\r\n          const patientToDelete = patients.find(pat => pat.id === id);\r\n          if (!patientToDelete || !patientToDelete.userId) {\r\n            showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\r\n            return;\r\n          }\r\n\r\n          await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`, authHeaders);\r\n          await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\r\n\r\n          fetchPatients();\r\n          showNotification('Pacijent uspješno obrisan!', 'success');\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja pacijenta:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja pacijenta.', \"danger\");\r\n        }\r\n      },\r\n      \"Potvrdi brisanje pacijenta\"\r\n    );\r\n  };\r\n\r\n  const openPatientModal = (patient = null) => {\r\n    setEditingPatient(patient);\r\n    setShowPatientModal(true);\r\n  };\r\n\r\n  const filteredPatients = patients.filter(patient =>\r\n    patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\r\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\r\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\r\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\r\n\r\n\r\n  const handleAddTerm = async (newTermData) => {\r\n    try {\r\n      console.log('handleAddTerm - Podaci koji se šalju:', newTermData);\r\n      const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, newTermData, authHeaders);\r\n      showNotification('Novi termin uspješno dodan!', 'success');\r\n      fetchTerms();\r\n      setShowTermModal(false);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja termina:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja termina.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateTerm = async (updatedTerm) => {\r\n    try {\r\n      const termPayload = {\r\n        doktorID: updatedTerm.doktorID,\r\n        datum: updatedTerm.datum,\r\n        vrijeme: updatedTerm.vrijeme,\r\n        dostupnost: updatedTerm.dostupnost,\r\n      };\r\n      console.log('handleUpdateTerm - Podaci koji se šalju:', termPayload);\r\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${updatedTerm.id}`, termPayload, authHeaders);\r\n      showNotification('Termin uspješno ažuriran!', 'success');\r\n      fetchTerms();\r\n      setShowTermModal(false);\r\n      setEditingTerm(null);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja termina:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja termina.', \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteTerm = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovaj termin?',\r\n      async () => {\r\n        try {\r\n          await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${id}`, authHeaders);\r\n          showNotification('Termin uspješno obrisan!', 'success');\r\n          fetchTerms();\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja termina:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja termina.', \"danger\");\r\n        }\r\n      },\r\n      \"Potvrdi brisanje termina\"\r\n    );\r\n  };\r\n\r\n  const openTermModal = (term = null) => {\r\n    if (term) {\r\n        setEditingTerm({ ...term, doktorID: term.doktorID, dostupnost: term.dostupnost });\r\n    } else {\r\n        setEditingTerm(null);\r\n    }\r\n    setShowTermModal(true);\r\n  };\r\n\r\n  const filteredTerms = terms.filter(term =>\r\n    (term.doktorID != null && term.doktorID.toString().toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.datum && term.datum.toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.vrijeme && term.vrijeme.toLowerCase().includes(termSearchTerm.toLowerCase())) ||\r\n    (term.dostupnost !== undefined && (term.dostupnost ? 'dostupan' : 'zauzet').includes(termSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastTerm = termsCurrentPage * itemsPerPage;\r\n  const indexOfFirstTerm = indexOfLastTerm - itemsPerPage;\r\n  const currentTerms = filteredTerms.slice(indexOfFirstTerm, indexOfLastTerm);\r\n  const totalTermPages = Math.ceil(filteredTerms.length / itemsPerPage);\r\n\r\n\r\n  const handleAddExamination = async (newExaminationData) => {\r\n    console.log('Attempting to add new examination with data:', newExaminationData);\r\n    try {\r\n        const payload = {\r\n            pacijentID: newExaminationData.pacijentID,\r\n            doktorID: newExaminationData.doktorID,\r\n            terminID: newExaminationData.terminID,\r\n            datumPregleda: newExaminationData.datumPregleda,\r\n            vrijemePregleda: newExaminationData.vrijemePregleda,\r\n            status: newExaminationData.status,\r\n            komentarPacijenta: newExaminationData.komentarPacijenta,\r\n            ocjenaDoktora: newExaminationData.ocjenaDoktora\r\n        };\r\n        const response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, payload, authHeaders);\r\n        console.log('Backend response:', response.data);\r\n        fetchExaminations();\r\n        setShowExaminationModal(false);\r\n        showNotification('Novi pregled uspješno dodan!', 'success');\r\n    } catch (error) {\r\n        console.error(\"Greška prilikom dodavanja pregleda:\", error.response?.data || error.message);\r\n        const errorMessage = error.response?.data?.message || error.message || 'Nepoznata greška prilikom dodavanja pregleda.';\r\n        showNotification(errorMessage, \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleUpdateExamination = async (updatedExamination) => {\r\n    try {\r\n      if (!updatedExamination.id) {\r\n        showNotification('ID pregleda nedostaje za ažuriranje.', 'danger');\r\n        console.error('ID pregleda nedostaje za ažuriranje:', updatedExamination);\r\n        return;\r\n      }\r\n      const payload = {\r\n        pacijentID: updatedExamination.pacijentID,\r\n        doktorID: updatedExamination.doktorID,\r\n        terminID: updatedExamination.terminID,\r\n        datumPregleda: updatedExamination.datumPregleda,\r\n        vrijemePregleda: updatedExamination.vrijemePregleda,\r\n        status: updatedExamination.status,\r\n        komentarPacijenta: updatedExamination.komentarPacijenta,\r\n        ocjenaDoktora: updatedExamination.ocjenaDoktora\r\n      };\r\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${updatedExamination.id}`, payload, authHeaders);\r\n      fetchExaminations();\r\n      setShowExaminationModal(false);\r\n      showNotification('Pregled uspješno ažuriran!', 'success');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja pregleda:\", error.response?.data || error.message);\r\n      const errorMessage = error.response?.data?.message || error.message || 'Nepoznata greška prilikom ažuriranja pregleda.';\r\n      showNotification(errorMessage, \"danger\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteExamination = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovaj pregled?',\r\n      async () => {\r\n        try {\r\n          await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, authHeaders);\r\n          showNotification('Pregled uspješno obrisan!', 'success');\r\n          fetchExaminations();\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja pregleda:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja pregleda.', \"danger\");\r\n        }\r\n      },\r\n      \"Potvrdi brisanje pregleda\"\r\n    );\r\n  };\r\n\r\n  const openExaminationModal = (examination = null) => {\r\n    console.log(\"[AdminDashboard] openExaminationModal called. Initial examination data:\", examination);\r\n    if (examination) {\r\n        setEditingExamination({\r\n            ...examination,\r\n            pacijentID: examination.pacijentID,\r\n            doktorID: examination.doktorID,\r\n            terminID: examination.terminID,\r\n            datumPregleda: examination.datumPregleda,\r\n            vrijemePregleda: examination.vrijemePregleda\r\n        });\r\n    } else {\r\n        setEditingExamination(null);\r\n    }\r\n    setShowExaminationModal(true);\r\n    console.log(\"[AdminDashboard] After setting editingExamination and showExaminationModal. Next render will show DataModal.\");\r\n  };\r\n\r\n  const filteredExaminations = examinations.filter(exam =>\r\n    (exam.patientName && exam.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.doctorName && exam.doctorName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.status && exam.status.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.datumPregleda && exam.datumPregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n    (exam.vrijemePregleda && exam.vrijemePregleda.toLowerCase().includes(examinationSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastExamination = examinationsCurrentPage * itemsPerPage;\r\n  const indexOfFirstExamination = indexOfLastExamination - itemsPerPage;\r\n  const currentExaminations = filteredExaminations.slice(indexOfFirstExamination, indexOfLastExamination);\r\n  const totalExaminationPages = Math.ceil(filteredExaminations.length / itemsPerPage);\r\n\r\n\r\n  const addDoctorFields = [\r\n      { name: 'ime', label: 'Ime', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Prezime', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Lozinka', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Telefon', type: 'text', required: true },\r\n      { name: 'grad', label: 'Grad', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specijalizacija', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Radno Vrijeme', type: 'text' },\r\n      { name: 'iskustvo', label: 'Godine Iskustva', type: 'number' },\r\n  ];\r\n\r\n  const editDoctorFields = [\r\n      { name: 'id', label: 'ID Doktora', type: 'text', readOnly: true },\r\n      { name: 'ime', label: 'Ime', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Prezime', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Telefon', type: 'text', required: true },\r\n      { name: 'grad', label: 'Grad', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specijalizacija', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Radno Vrijeme', type: 'text' },\r\n      { name: 'iskustvo', label: 'Godine Iskustva', type: 'number' },\r\n      { name: 'ocjena', label: 'Ocjena', type: 'number', readOnly: true },\r\n  ];\r\n\r\n  const addPatientFields = [\r\n      { name: 'ime', label: 'Ime', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Prezime', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Lozinka', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Telefon', type: 'text', required: true },\r\n  ];\r\n\r\n  const editPatientFields = [\r\n      { name: 'id', label: 'ID Pacijenta', type: 'text', readOnly: true },\r\n      { name: 'ime', label: 'Ime', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Prezime', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Telefon', type: 'text', required: true },\r\n  ];\r\n\r\n  const addTermFields = [\r\n      { name: 'doktorID', label: 'ID Doktora', type: 'number', required: true },\r\n      { name: 'datum', label: 'Datum', type: 'date', required: true },\r\n      { name: 'vrijeme', label: 'Vrijeme (HH:mm)', type: 'time', required: true },\r\n      { name: 'dostupnost', label: 'Dostupnost', type: 'checkbox' },\r\n  ];\r\n\r\n  const editTermFields = [\r\n      { name: 'id', label: 'ID Termina', type: 'text', readOnly: true },\r\n      { name: 'doktorID', label: 'ID Doktora', type: 'number', required: true },\r\n      { name: 'datum', label: 'Datum', type: 'date', required: true },\r\n      { name: 'vrijeme', label: 'Vrijeme (HH:mm)', type: 'time', required: true },\r\n      { name: 'dostupnost', label: 'Dostupnost', type: 'checkbox' },\r\n  ];\r\n\r\n  const addExaminationFields = [\r\n      { name: 'pacijentID', label: 'ID Pacijenta', type: 'number', required: true },\r\n      { name: 'terminID', label: 'ID Termina', type: 'number', required: true },\r\n      { name: 'doktorID', label: 'ID Doktora', type: 'number', required: true, readOnly: false },\r\n      { name: 'datumPregleda', label: 'Datum Pregleda', type: 'date', required: true, readOnly: false },\r\n      { name: 'vrijemePregleda', label: 'Vrijeme Pregleda', type: 'time', required: true, readOnly: false },\r\n      { name: 'status', label: 'Status', type: 'select', options: ['zakazan', 'obavljen', 'otkazan'], required: true },\r\n      { name: 'komentarPacijenta', label: 'Komentar Pacijenta', type: 'textarea' },\r\n      { name: 'ocjenaDoktora', label: 'Ocjena Doktora', type: 'number' },\r\n  ];\r\n\r\n  const editExaminationFields = [\r\n      { name: 'id', label: 'ID Pregleda', type: 'text', readOnly: true },\r\n      { name: 'pacijentID', label: 'ID Pacijenta', type: 'number', required: true },\r\n      { name: 'terminID', label: 'ID Termina', type: 'number', required: true },\r\n      { name: 'doktorID', label: 'ID Doktora', type: 'number', required: true, readOnly: true },\r\n      { name: 'datumPregleda', label: 'Datum Pregleda', type: 'date', required: true, readOnly: true },\r\n      { name: 'vrijemePregleda', label: 'Vrijeme Pregleda', type: 'time', required: true, readOnly: true },\r\n      { name: 'status', label: 'Status', type: 'select', options: ['zakazan', 'obavljen', 'otkazan'], required: true },\r\n      { name: 'komentarPacijenta', label: 'Komentar Pacijenta', type: 'textarea' },\r\n      { name: 'ocjenaDoktora', label: 'Ocjena Doktora', type: 'number' },\r\n  ];\r\n\r\n\r\n  const DataModal = ({ show, onClose, data, onSave, fields, title, idPrefix, authHeaders, showNotification }) => {\r\n    const prevTerminIDRef = useRef(null);\r\n    const [shouldFetchTermDetails, setShouldFetchTermDetails] = useState(false);\r\n\r\n     const [formData, setFormData] = useState({});\r\n\r\n    useEffect(() => {\r\n        console.log(`[DataModal ${idPrefix}] useEffect 1 (data/fields/idPrefix change): data prop changed:`, data);\r\n        const newFormData = {};\r\n        fields.forEach(field => {\r\n            if (data === null || data[field.name] === undefined || data[field.name] === null) {\r\n                if (field.name === 'specijalizacije') {\r\n                    newFormData[field.name] = '';\r\n                } else if (field.type === 'number') {\r\n                    newFormData[field.name] = null;\r\n                } else if (field.type === 'checkbox') {\r\n                    newFormData[field.name] = false;\r\n                } else {\r\n                    newFormData[field.name] = '';\r\n                }\r\n            } else {\r\n\r\n                let value = data[field.name];\r\n                if (field.type === 'date' && typeof value === 'string' && value.includes('T')) {\r\n                    value = value.split('T')[0];\r\n                } else if (field.type === 'time' && typeof value === 'string' && value.length > 8) {\r\n                    value = value.substring(0, 8);\r\n                } else if (field.name === 'specijalizacije' && Array.isArray(value)) {\r\n                    // Za polje 'specijalizacije', ako je niz, uzmi prvu vrijednost ili prazan string\r\n                    value = value[0] || '';\r\n                } else if (field.type === 'checkbox') {\r\n                    value = Boolean(value);\r\n                }\r\n                newFormData[field.name] = value;\r\n            }\r\n        });\r\n        setFormData(newFormData);\r\n        prevTerminIDRef.current = (idPrefix === 'examination' && data && typeof data.terminID === 'number' && data.terminID > 0) ? data.terminID : null;\r\n        setShouldFetchTermDetails(false);\r\n        console.log(`[DataModal ${idPrefix}] useEffect 1: Set formData to:`, newFormData);\r\n        console.log(`[DataModal ${idPrefix}] useEffect 1: prevTerminIDRef.current set to:`, prevTerminIDRef.current);\r\n    }, [data, fields, idPrefix]);\r\n\r\n    const handleTerminIDBlur = () => {\r\n        if (idPrefix === 'examination') {\r\n            const currentTerminID = formData.terminID;\r\n            const isNumericAndValidTerminID = typeof currentTerminID === 'number' && currentTerminID > 0;\r\n\r\n            console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: currentTerminID: ${currentTerminID}, isNumericAndValidTerminID: ${isNumericAndValidTerminID}, prevTerminIDRef.current: ${prevTerminIDRef.current}`);\r\n\r\n            if (isNumericAndValidTerminID && currentTerminID !== prevTerminIDRef.current) {\r\n                console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: Valid NEW Termin ID detected. Setting shouldFetchTermDetails to true.`);\r\n                setShouldFetchTermDetails(true);\r\n            } else if (!isNumericAndValidTerminID && prevTerminIDRef.current !== null) {\r\n                console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: Termin ID became invalid (${currentTerminID}) after being valid. Resetting associated fields.`);\r\n                setFormData(prev => ({\r\n                    ...prev,\r\n                    doktorID: null,\r\n                    datumPregleda: '',\r\n                    vrijemePregleda: '',\r\n                }));\r\n                prevTerminIDRef.current = null;\r\n                setShouldFetchTermDetails(false);\r\n            } else if (currentTerminID === null || currentTerminID === 0 || currentTerminID === '') {\r\n                console.log(`[DataModal ${idPrefix}] handleTerminIDBlur: Termin ID is null/0/empty. Resetting associated fields if they were populated by a previous term.`);\r\n                if (formData.doktorID !== null || formData.datumPregleda !== '' || formData.vrijemePregleda !== '') {\r\n                    setFormData(prev => ({\r\n                        ...prev,\r\n                        doktorID: null,\r\n                        datumPregleda: '',\r\n                        vrijemePregleda: '',\r\n                    }));\r\n                }\r\n                prevTerminIDRef.current = null;\r\n                setShouldFetchTermDetails(false);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (shouldFetchTermDetails && idPrefix === 'examination') {\r\n            const terminIDToFetch = formData.terminID;\r\n            if (!(typeof terminIDToFetch === 'number' && terminIDToFetch > 0)) {\r\n                console.warn(`[DataModal ${idPrefix}] useEffect Fetcher: Invalid terminID for fetching:`, terminIDToFetch);\r\n                setShouldFetchTermDetails(false);\r\n                return;\r\n            }\r\n\r\n            const fetchTermDetails = async () => {\r\n                console.log(`[DataModal ${idPrefix}] useEffect Fetcher: Attempting to fetch details for ID: ${terminIDToFetch}`);\r\n                try {\r\n                    const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${terminIDToFetch}`, authHeaders);\r\n                    const fetchedTerm = response.data;\r\n                    console.log(`[DataModal ${idPrefix}] useEffect Fetcher SUCCESS: Term details fetched:`, fetchedTerm);\r\n\r\n                    setFormData(prev => {\r\n                        const newState = {\r\n                            ...prev,\r\n                            doktorID: fetchedTerm.doktorID,\r\n                            datumPregleda: fetchedTerm.datum,\r\n                            vrijemePregleda: fetchedTerm.vrijeme.substring(0, 8),\r\n                        };\r\n                        console.log(`[DataModal ${idPrefix}] useEffect Fetcher SUCCESS: Setting formData to:`, newState);\r\n                        return newState;\r\n                    });\r\n                    prevTerminIDRef.current = terminIDToFetch;\r\n                    showNotification('Detalji termina uspješno popunjeni!', 'info');\r\n                } catch (error) {\r\n                    console.error(`[DataModal ${idPrefix}] useEffect Fetcher ERROR: Greška prilikom dohvaćanja detalja termina:`, error.response?.data || error.message);\r\n                    showNotification('Greška prilikom dohvaćanja detalja termina. Provjerite Term ID.', \"danger\");\r\n                    setFormData(prev => {\r\n                        const newState = {\r\n                            ...prev,\r\n                            doktorID: null,\r\n                            datumPregleda: '',\r\n                            vrijemePregleda: '',\r\n                        };\r\n                        console.log(`[DataModal ${idPrefix}] useEffect Fetcher ERROR: Resetting formData due to fetch error:`, newState);\r\n                        return newState;\r\n                    });\r\n                    prevTerminIDRef.current = null;\r\n                } finally {\r\n                    setShouldFetchTermDetails(false);\r\n                }\r\n            };\r\n            fetchTermDetails();\r\n        }\r\n    }, [shouldFetchTermDetails, idPrefix, authHeaders, showNotification, TERMINI_PREGLEDI_API_PREFIX]);\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value, type, checked } = e.target;\r\n      console.log(`[DataModal ${idPrefix}] handleChange: Field: ${name}, Value: \"${value}\", Type: ${type}`);\r\n      console.log(`[DataModal ${idPrefix}] handleChange: Current formData BEFORE update for ${name}:`, formData);\r\n\r\n      setFormData(prev => {\r\n        let newValue = value;\r\n\r\n        if (name === 'specijalizacije') {\r\n            newValue = value; // Vrijednost će biti string\r\n        } else if (type === 'number') {\r\n            newValue = value === '' ? null : Number(value);\r\n            if (isNaN(newValue)) {\r\n                newValue = null;\r\n            }\r\n        } else if (type === 'checkbox') {\r\n            newValue = checked;\r\n        }\r\n        const newState = { ...prev, [name]: newValue };\r\n        console.log(`[DataModal ${idPrefix}] handleChange: New formData state for ${name}:`, newState);\r\n        return newState;\r\n      });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const finalFormData = { ...formData };\r\n\r\n      // Prilagodi 'specijalizacije' za doktora (šalje se kao niz stringova)\r\n      if (idPrefix === 'doctor' && typeof finalFormData.specijalizacije === 'string') {\r\n          finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\r\n      } else if (idPrefix === 'doctor' && finalFormData.specijalizacije === null) {\r\n          finalFormData.specijalizacije = []; // Osiguraj da je prazan niz ako je null\r\n      }\r\n\r\n\r\n      let validationErrors = [];\r\n      fields.forEach(field => {\r\n        if (field.required) {\r\n          if (field.type === 'text' || field.type === 'textarea' || field.type === 'date' || field.type === 'time' || field.type === 'select') {\r\n            if (!finalFormData[field.name] || finalFormData[field.name].toString().trim() === '') {\r\n              validationErrors.push(`${field.label} je obavezno polje.`);\r\n            }\r\n          } else if (field.type === 'number') {\r\n            if (finalFormData[field.name] === null || finalFormData[field.name] === undefined || typeof finalFormData[field.name] !== 'number' || finalFormData[field.name] < (field.name === 'iskustvo' ? 0 : 1)) {\r\n              // Izmijenjeno: iskustvo može biti 0, ali ostali brojevi > 0\r\n              validationErrors.push(`${field.label} je obavezno polje i mora biti validan broj.`);\r\n            }\r\n          } else if (field.type === 'email') {\r\n              if (!finalFormData[field.name] || !/\\S+@\\S+\\.\\S+/.test(finalFormData[field.name])) {\r\n                  validationErrors.push(`Email adresa mora biti validna.`);\r\n              }\r\n          } else if (field.name === 'password' && idPrefix !== 'doctor' && idPrefix !== 'patient') { // Password je required samo za add Doctor/Patient\r\n             if (!finalFormData[field.name] || finalFormData[field.name].toString().length < 6) {\r\n                 validationErrors.push(`Lozinka mora imati barem 6 karaktera.`);\r\n             }\r\n          }\r\n        }\r\n      });\r\n\r\n      if (validationErrors.length > 0) {\r\n        showNotification(`Molimo popunite sva obavezna polja:\\n- ${validationErrors.join('\\n- ')}`, 'danger');\r\n        return;\r\n      }\r\n\r\n      // Ako brojčana polja nisu popunjena, postavi ih na 0 ili null, ovisno o backend očekivanju\r\n      fields.forEach(field => {\r\n          if (field.type === 'number' && (finalFormData[field.name] === null || finalFormData[field.name] === undefined || finalFormData[field.name] === '')) {\r\n              if (field.name === 'iskustvo' || field.name === 'ocjena') {\r\n                  finalFormData[field.name] = 0; // Postavi na 0 ako su brojčana i nepopunjena\r\n              } else {\r\n                  finalFormData[field.name] = null; // Inače null\r\n              }\r\n          }\r\n      });\r\n\r\n\r\n      if (idPrefix === 'term' && finalFormData.vrijeme) {\r\n          if (finalFormData.vrijeme.length === 5) {\r\n              finalFormData.vrijeme += ':00';\r\n          }\r\n      } else if (idPrefix === 'examination' && finalFormData.vrijemePregleda) {\r\n          if (finalFormData.vrijemePregleda.length === 5) {\r\n              finalFormData.vrijemePregleda += ':00';\r\n          }\r\n      }\r\n\r\n      console.log(`[DataModal ${idPrefix}] handleSubmit: Final payload for submission:`, finalFormData);\r\n\r\n      onSave(finalFormData);\r\n    };\r\n\r\n    return (\r\n      <Modal show={show} onHide={onClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body>\r\n            {fields.map(field => (\r\n              <Form.Group className=\"mb-3\" controlId={`${idPrefix}-${field.name}`} key={field.name}>\r\n                <Form.Label>{field.label}</Form.Label>\r\n                {field.type === 'select' ? (\r\n                  <Form.Select\r\n                    name={field.name}\r\n                    value={formData[field.name] === null ? '' : formData[field.name]}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  >\r\n                    <option value=\"\">Odaberi {field.label}</option>\r\n                    {field.options.map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                ) : field.type === 'textarea' ? (\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    name={field.name}\r\n                    value={formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  />\r\n                ) : field.type === 'checkbox' ? (\r\n                    <Form.Check\r\n                        type=\"checkbox\"\r\n                        name={field.name}\r\n                        checked={formData[field.name] || false}\r\n                        onChange={handleChange}\r\n                        label={field.label}\r\n                    />\r\n                ) : (\r\n                  <Form.Control\r\n                    type={field.type || 'text'}\r\n                    name={field.name}\r\n                    value={\r\n                        (formData[field.name] === null || formData[field.name] === undefined || formData[field.name] === 'N/A')\r\n                        ? ''\r\n                        : formData[field.name]\r\n                    }\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                    readOnly={!!data && (field.name === 'doktorID' || field.name === 'datumPregleda' || field.name === 'vrijemePregleda')}\r\n                    onBlur={field.name === 'terminID' && idPrefix === 'examination' ? handleTerminIDBlur : undefined}\r\n                  />\r\n                )}\r\n              </Form.Group>\r\n            ))}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onClose}>\r\n              Zatvori\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Sačuvaj promjene\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination justify-content-center mt-4\">\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n              <button onClick={() => paginate(number)} className=\"page-link\">\r\n                {number}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (activeTab) {\r\n      case 'overview':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Pregled nadzorne ploče</h4>\r\n            <div className=\"row g-4\">\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-primary mb-3\">\r\n                  <div className=\"card-header\">Ukupno doktora</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{doctors.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-success mb-3\">\r\n                  <div className=\"card-header\">Ukupno pacijenata</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{patients.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-info mb-3\">\r\n                  <div className=\"card-header\">Dostupni termini</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{terms.filter(t => t.dostupnost === true).length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"card text-white bg-warning mb-3\">\r\n                  <div className=\"card-header\">Pregledi na čekanju</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{examinations.filter(exam => exam.status === 'zakazan').length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h5>Brze akcije</h5>\r\n              <div className=\"d-flex gap-2 flex-wrap\">\r\n                <button className=\"btn btn-outline-primary\" onClick={() => openDoctorModal()}>Dodaj novog doktora</button>\r\n                <button className=\"btn btn-outline-success\" onClick={() => openPatientModal()}>Dodaj novog pacijenta</button>\r\n                <button className=\"btn btn-outline-info\" onClick={() => openTermModal()}>Dodaj novi termin</button>\r\n                <button className=\"btn btn-outline-warning\" onClick={() => openExaminationModal()}>Dodaj novi pregled</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'doctors':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Upravljanje doktorima</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openDoctorModal()}>Dodaj novog doktora</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Pretraži doktore...\"\r\n                value={doctorSearchTerm}\r\n                onChange={(e) => setDoctorSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Ime</th>\r\n                    <th>Specijalnost</th>\r\n                    <th>Grad</th>\r\n                    <th>Email</th>\r\n                    <th>Telefon</th>\r\n                    <th>Radno Vrijeme</th>\r\n                    <th>Iskustvo</th>\r\n                    <th>Ocjena</th>\r\n                    <th>Akcije</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentDoctors.length > 0 ? (\r\n                    currentDoctors.map(doctor => (\r\n                      <tr key={doctor.id}>\r\n                        <td>{doctor.id}</td>\r\n                        <td>{doctor.name}</td>\r\n                        <td>{doctor.specialty}</td>\r\n                        <td>{doctor.city}</td>\r\n                        <td>{doctor.email}</td>\r\n                        <td>{doctor.telefon}</td>\r\n                        <td>{doctor.radnoVrijeme}</td>\r\n                        <td>{doctor.iskustvo}</td>\r\n                        <td>{doctor.ocjena}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openDoctorModal(doctor)}>Uredi</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteDoctor(doctor.id)}>Obriši</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"10\" className=\"text-center\">Nema pronađenih doktora.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredDoctors.length}\r\n              currentPage={doctorsCurrentPage}\r\n              paginate={setDoctorsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'patients':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Upravljanje pacijentima</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openPatientModal()}>Dodaj novog pacijenta</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Pretraži pacijente...\"\r\n                value={patientSearchTerm}\r\n                onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Ime</th>\r\n                    <th>Email</th>\r\n                    <th>Telefon</th>\r\n                    <th>Akcije</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentPatients.length > 0 ? (\r\n                    currentPatients.map(patient => (\r\n                      <tr key={patient.id}>\r\n                        <td>{patient.id}</td>\r\n                        <td>{patient.name}</td>\r\n                        <td>{patient.email}</td>\r\n                        <td>{patient.telefon}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openPatientModal(patient)}>Uredi</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeletePatient(patient.id)}>Obriši</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"text-center\">Nema pronađenih pacijenata.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredPatients.length}\r\n              currentPage={patientsCurrentPage}\r\n              paginate={setPatientsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'terms':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Upravljanje terminima</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openTermModal()}>Dodaj novi termin</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Pretraži termine...\"\r\n                value={termSearchTerm}\r\n                onChange={(e) => setTermSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>ID Doktora</th>\r\n                    <th>Datum</th>\r\n                    <th>Vrijeme</th>\r\n                    <th>Dostupnost</th>\r\n                    <th>Akcije</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentTerms.length > 0 ? (\r\n                    currentTerms.map(term => (\r\n                      <tr key={term.id}>\r\n                        <td>{term.id}</td>\r\n                        <td>{term.doktorID}</td>\r\n                        <td>{term.datum}</td>\r\n                        <td>{term.vrijeme}</td>\r\n                        <td>{term.dostupnost ? 'Dostupan' : 'Zauzet'}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openTermModal(term)}>Uredi</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteTerm(term.id)}>Obriši</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"6\" className=\"text-center\">Nema pronađenih termina.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredTerms.length}\r\n              currentPage={termsCurrentPage}\r\n              paginate={setTermsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'examinations':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Upravljanje pregledima</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openExaminationModal()}>Dodaj novi pregled</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Pretraži preglede...\"\r\n                value={examinationSearchTerm}\r\n                onChange={(e) => setExaminationSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Pacijent</th>\r\n                    <th>Doktor</th>\r\n                    <th>ID Termina</th>\r\n                    <th>Datum</th>\r\n                    <th>Vrijeme</th>\r\n                    <th>Status</th>\r\n                    <th>Komentar Pacijenta</th>\r\n                    <th>Ocjena Doktora</th>\r\n                    <th>Akcije</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentExaminations.length > 0 ? (\r\n                    currentExaminations.map(examination => (\r\n                      <tr key={examination.id}>\r\n                        <td>{examination.id}</td>\r\n                        <td>{examination.patientName}</td>\r\n                        <td>{examination.doctorName}</td>\r\n                        <td>{examination.terminID}</td>\r\n                        <td>{examination.datumPregleda}</td>\r\n                        <td>{examination.vrijemePregleda}</td>\r\n                        <td>\r\n                          <select\r\n                            className=\"form-select\"\r\n                            value={examination.status}\r\n                            onChange={(e) => handleUpdateExamination(\r\n                                {\r\n                                  ...examination,\r\n                                  status: e.target.value,\r\n                                  datumPregleda: examination.datumPregleda,\r\n                                  vrijemePregleda: examination.vrijemePregleda\r\n                                }\r\n                            )}\r\n                          >\r\n                            <option value=\"zakazan\">Zakazan</option>\r\n                            <option value=\"obavljen\">Obavljen</option>\r\n                            <option value=\"otkazan\">Otkazan</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>{examination.komentarPacijenta}</td>\r\n                        <td>{examination.ocjenaDoktora}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openExaminationModal(examination)}>Uredi</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteExamination(examination.id)}>Obriši</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"10\" className=\"text-center\">Nema pronađenih pregleda.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredExaminations.length}\r\n              currentPage={examinationsCurrentPage}\r\n              paginate={setExaminationsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return <p>Odaberite karticu za prikaz sadržaja.</p>;\r\n    }\r\n  };\r\n\r\n\r\n  if (loadingInitial) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Učitavanje administratorskog panela...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadingInitial && !token && isAuthChecked) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-danger\">Pristup odbijen</h2>\r\n          <p className=\"lead\">Niste autorizovani za pristup ovoj stranici. Molimo prijavite se kao administrator.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {showAlert && (\r\n        <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      <Modal show={showConfirmModal} onHide={() => setShowConfirmModal(false)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{confirmTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {confirmMessage}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowConfirmModal(false)}>\r\n            Poništi\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleConfirmAction}>\r\n            Potvrdi\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {showDoctorModal && (\r\n        <DataModal\r\n          show={showDoctorModal}\r\n          onClose={() => {setShowDoctorModal(false); setEditingDoctor(null);}}\r\n          data={editingDoctor}\r\n          onSave={editingDoctor ? handleUpdateDoctor : handleAddDoctor}\r\n          title={editingDoctor ? 'Uredi Doktora' : 'Dodaj Novog Doktora'}\r\n          idPrefix=\"doctor\"\r\n          fields={editingDoctor ? editDoctorFields : addDoctorFields}\r\n          authHeaders={authHeaders}\r\n          showNotification={showNotification}\r\n          key={editingDoctor ? `edit-doctor-${editingDoctor.id}` : 'add-doctor'}\r\n        />\r\n      )}\r\n\r\n      {showPatientModal && (\r\n        <DataModal\r\n          show={showPatientModal}\r\n          onClose={() => {setShowPatientModal(false); setEditingPatient(null);}}\r\n          data={editingPatient}\r\n          onSave={editingPatient ? handleUpdatePatient : handleAddPatient}\r\n          title={editingPatient ? 'Uredi Pacijenta' : 'Dodaj Novog Pacijenta'}\r\n          idPrefix=\"patient\"\r\n          fields={editingPatient ? editPatientFields : addPatientFields}\r\n          authHeaders={authHeaders}\r\n          showNotification={showNotification}\r\n          key={editingPatient ? `edit-patient-${editingPatient.id}` : 'add-patient'}\r\n        />\r\n      )}\r\n\r\n      {showTermModal && (\r\n        <DataModal\r\n          show={showTermModal}\r\n          onClose={() => {setShowTermModal(false); setEditingTerm(null);}}\r\n          data={editingTerm}\r\n          onSave={editingTerm ? handleUpdateTerm : handleAddTerm}\r\n          title={editingTerm ? 'Uredi Termin' : 'Dodaj Novi Termin'}\r\n          idPrefix=\"term\"\r\n          fields={editingTerm ? editTermFields : addTermFields}\r\n          authHeaders={authHeaders}\r\n          showNotification={showNotification}\r\n          key={editingTerm ? `edit-term-${editingTerm.id}` : 'add-term'}\r\n        />\r\n      )}\r\n\r\n      {showExaminationModal && (\r\n        <DataModal\r\n          show={showExaminationModal}\r\n          onClose={() => {setShowExaminationModal(false); setEditingExamination(null);}}\r\n          data={editingExamination}\r\n          onSave={editingExamination ? handleUpdateExamination : handleAddExamination}\r\n          title={editingExamination ? 'Uredi Pregled' : 'Dodaj Novi Pregled'}\r\n          idPrefix=\"examination\"\r\n          fields={editingExamination ? editExaminationFields : addExaminationFields}\r\n          authHeaders={authHeaders}\r\n          showNotification={showNotification}\r\n          key={editingExamination ? `edit-examination-${editingExamination.id}` : 'add-examination'}\r\n        />\r\n      )}\r\n\r\n      <div className=\"row\">\r\n        <nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" style={{ minHeight: '100vh' }}>\r\n          <div className=\"position-sticky pt-3\">\r\n            <ul className=\"nav flex-column\">\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'overview' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('overview')}>\r\n                  Pregled\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'doctors' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('doctors')}>\r\n                  Doktori\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'patients' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('patients')}>\r\n                  Pacijenti\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'terms' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('terms')}>\r\n                  Termini\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'examinations' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('examinations')}>\r\n                  Pregledi\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\">\r\n          {renderContent()}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}