{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\n\n// Definisanje baznih URL-ova za svaki mikroservis preko API Gatewaya\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081'; // Port tvog API Gatewaya\n\n// Putanje za mikroservise preko Gatewaya\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api`; // Ovo će se koristiti za /api/appointments\nconst OBAVIJESTI_DOKUMENTACIJA_API_PREFIX = `${GATEWAY_BASE_URL}/api`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\nfunction AdminDashboard() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    token\n  } = useAuth();\n  const authHeaders = {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  const [activeTab, setActiveTab] = useState('overview');\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [users, setUsers] = useState([]); // NOVO: State za korisnike\n  const [blogPosts, setBlogPosts] = useState([]);\n  const [activityLog, setActivityLog] = useState([]);\n  const [specializations, setSpecializations] = useState([]); // NOVO: State za specijalizacije\n\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\n  const [editingDoctor, setEditingDoctor] = useState(null);\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n  const [showUserModal, setShowUserModal] = useState(false); // NOVO: State za modal korisnika\n  const [editingUser, setEditingUser] = useState(null); // NOVO: State za uređivanje korisnika\n  const [showBlogPostModal, setShowBlogPostModal] = useState(false);\n  const [editingBlogPost, setEditingBlogPost] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\n  const [appointmentsCurrentPage, setAppointmentsCurrentPage] = useState(1);\n  const [usersCurrentPage, setUsersCurrentPage] = useState(1); // NOVO: Paginacija za korisnike\n  const [blogPostsCurrentPage, setBlogPostsCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n\n  // --- Fetch functions for each entity ---\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        name: `${doc.ime} ${doc.prezime}`,\n        // 'specijalizacije' je sada lista stringova iz DTO-a\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        city: doc.grad || 'N/A',\n        // Email se više ne dohvaća direktno iz Doktor entiteta.\n        // Ako ti je email potreban ovdje, morat ćeš ga dohvatiti iz Auth servisa koristeći doc.userId\n        // Za sada, ostavljamo ga kao N/A ili ga ukloni iz prikaza.\n        email: 'N/A',\n        // Privremeno N/A, dok se ne implementira dohvat iz Auth servisa\n        userId: doc.userId // Dodaj userId ako ga trebaš za buduće dohvate\n      }));\n      setDoctors(transformedDoctors);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja doktora:\", error);\n      showNotification(\"Greška prilikom dohvaćanja doktora s servera.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\n      const transformedPatients = response.data.map(pat => ({\n        id: pat.pacijentID,\n        name: `${pat.ime} ${pat.prezime}`,\n        // Email se više ne dohvaća direktno iz Pacijent entiteta.\n        // Ako ti je email potreban ovdje, morat ćeš ga dohvatiti iz Auth servisa koristeći pat.userId\n        email: 'N/A',\n        // Privremeno N/A, dok se ne implementira dohvat iz Auth servisa\n        phone: pat.telefon || 'N/A',\n        userId: pat.userId // Dodaj userId ako ga trebaš za buduće dohvate\n      }));\n      setPatients(transformedPatients);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", error);\n      showNotification(\"Greška prilikom dohvaćanja pacijenata s servera.\", \"danger\");\n    }\n  };\n  const fetchAppointments = async () => {\n    try {\n      // NAPOMENA: URL za preglede bi trebao biti TERMINI_PREGLEDI_API_PREFIX + '/pregledi' ili slično,\n      // ovisno o tvojoj Gateway konfiguraciji i context-pathu Termini-Pregledi servisa.\n      // Trenutno koristiš 'http://localhost:8081/termini-pregledi/api/pregledi'\n      // Ako je Gateway ruta /api/appointments, onda bi URL trebao biti `${TERMINI_PREGLEDI_API_PREFIX}/appointments`\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/appointments`, authHeaders); // Ispravan URL preko Gatewaya\n      const rawAppointments = response.data;\n\n      // Kreiraj mape za brzo pronalaženje imena doktora i pacijenata po ID-u\n      // Koristimo već dohvaćene liste 'doctors' i 'patients'\n      const doctorMap = new Map(doctors.map(doc => [doc.id, doc.name]));\n      const patientMap = new Map(patients.map(pat => [pat.id, pat.name]));\n\n      // Transformiši preglede, dodajući imena\n      const transformedAppointments = rawAppointments.map(app => ({\n        id: app.pregledID,\n        // Koristi pregledID iz DTO-a\n        patientName: patientMap.get(app.pacijentID) || 'N/A',\n        // Dohvati ime pacijenta po ID-u\n        doctorName: doctorMap.get(app.doktorID) || 'N/A',\n        // Dohvati ime doktora po ID-u\n        date: app.datumPregleda,\n        // Koristi datumPregleda iz DTO-a\n        time: app.vrijemePregleda,\n        // Koristi vrijemePregleda iz DTO-a\n        status: app.status\n      }));\n      setAppointments(transformedAppointments);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja termina:\", error);\n      showNotification(\"Greška prilikom dohvaćanja termina s servera.\", \"danger\");\n    }\n  };\n  const fetchUsers = async () => {\n    // NOVO: Funkcija za dohvat korisnika iz Auth servisa\n    try {\n      const response = await axios.get(`${AUTH_API_PREFIX}/users`, authHeaders);\n      const transformedUsers = response.data.map(user => ({\n        id: user.id,\n        name: user.fullName,\n        email: user.email,\n        roles: user.roles.join(', ') // Pretpostavka da su uloge Set<String>\n      }));\n      setUsers(transformedUsers);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja korisnika:\", error);\n      showNotification(\"Greška prilikom dohvaćanja korisnika s servera.\", \"danger\");\n    }\n  };\n  const fetchBlogPosts = async () => {\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTACIJA_API_PREFIX}/blog-posts`, authHeaders);\n      const transformedPosts = response.data.map(post => ({\n        id: post.postID,\n        title: post.naslov,\n        author: post.autor,\n        date: post.datumKreiranja\n      }));\n      setBlogPosts(transformedPosts);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja blog postova:\", error);\n      showNotification(\"Greška prilikom dohvaćanja blog postova s servera.\", \"danger\");\n    }\n  };\n  const fetchActivityLog = async () => {\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTACIJA_API_PREFIX}/activity-log`, authHeaders);\n      const transformedLog = response.data.map(log => ({\n        id: log.logID,\n        timestamp: log.timestamp,\n        action: log.akcija\n      }));\n      setActivityLog(transformedLog);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja loga aktivnosti:\", error);\n      showNotification(\"Greška prilikom dohvaćanja loga aktivnosti.\", \"danger\");\n    }\n  };\n  const fetchSpecializations = async () => {\n    // NOVO: Funkcija za dohvat specijalizacija\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/specijalizacije`, authHeaders);\n      const specializationNames = response.data.map(spec => spec.nazivSpecijalizacije);\n      setSpecializations(specializationNames);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja specijalizacija:\", error);\n      showNotification(\"Greška prilikom dohvaćanja specijalizacija s servera.\", \"danger\");\n    }\n  };\n\n  // Koristimo useEffect da osiguramo da se podaci o doktorima i pacijentima\n  // dohvate PRIJE nego što pokušamo dohvatiti preglede, jer preglede mapiramo\n  // koristeći podatke o doktorima i pacijentima.\n  useEffect(() => {\n    if (!token) {\n      console.warn(\"Nema tokena, preskačem dohvaćanje podataka.\");\n      return;\n    }\n    const loadAllData = async () => {\n      await fetchDoctors(); // Dohvati doktore\n      await fetchPatients(); // Dohvati pacijente\n      // Sada kada su doktori i pacijenti u state-u, možemo dohvatiti preglede\n      await fetchAppointments();\n      await fetchUsers(); // Dohvati korisnike\n      await fetchBlogPosts();\n      await fetchActivityLog();\n      await fetchSpecializations(); // Dohvati specijalizacije pri učitavanju\n    };\n    loadAllData();\n  }, [token]);\n\n  // --- Doctor Management Functions ---\n  const handleAddDoctor = async newDoctor => {\n    try {\n      // KLJUČNA IZMJENA: Ako je polje 'specijalizacija' (koje je string iz selecta),\n      // pretvori ga u listu stringova prije slanja na backend (ako backend očekuje listu)\n      // MapStruct bi trebao automatski mapirati List<String> na List<DoktorSpecijalizacija>\n      // ako je SpecijalizacijaMapper ispravno konfigurisan.\n      const dataToSend = {\n        ...newDoctor\n      };\n      if (dataToSend.specijalizacija && typeof dataToSend.specijalizacija === 'string') {\n        dataToSend.specijalizacije = [dataToSend.specijalizacija]; // Kreiraj listu od jednog elementa\n        delete dataToSend.specijalizacija; // Ukloni singularno polje\n      }\n      // NAPOMENA: userId se obično NE šalje pri dodavanju/ažuriranju doktora preko Admin panela.\n      // userId se postavlja kada se korisnik registruje preko Auth servisa.\n      // Ako admin dodaje doktora koji već postoji kao korisnik, trebala bi postojati logika za povezivanje.\n      // Za sada, pretpostavljamo da backend zna kako da rukuje sa ovim.\n\n      const response = await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, dataToSend, authHeaders);\n      fetchDoctors(); // Ponovo dohvati listu da se ažurira prikaz\n      fetchActivityLog();\n      setShowDoctorModal(false);\n      showNotification('Doktor uspješno dodan!');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Greška prilikom dodavanja doktora:\", error);\n      showNotification(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Greška prilikom dodavanja doktora.', 'danger');\n    }\n  };\n  const handleUpdateDoctor = async updatedDoctor => {\n    try {\n      const dataToSend = {\n        ...updatedDoctor\n      };\n      if (dataToSend.specijalizacija && typeof dataToSend.specijalizacija === 'string') {\n        dataToSend.specijalizacije = [dataToSend.specijalizacija];\n        delete dataToSend.specijalizacija;\n      }\n      const response = await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, dataToSend, authHeaders);\n      fetchDoctors();\n      fetchActivityLog();\n      setShowDoctorModal(false);\n      setEditingDoctor(null);\n      showNotification('Doktor uspješno ažuriran!');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Greška prilikom ažuriranja doktora:\", error);\n      showNotification(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Greška prilikom ažuriranja doktora.', 'danger');\n    }\n  };\n  const handleDeleteDoctor = async id => {\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog doktora?');\n    if (!confirmed) {\n      return;\n    }\n    try {\n      await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\n      fetchDoctors();\n      fetchActivityLog();\n      showNotification('Doktor uspješno obrisan!', 'danger');\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"Greška prilikom brisanja doktora:\", error);\n      showNotification(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Greška prilikom brisanja doktora.', 'danger');\n    }\n  };\n  const openDoctorModal = (doctor = null) => {\n    // KLJUČNA IZMJENA: Ako uređuješ doktora, pretvori listu specijalizacija u string za prikaz u selectu\n    // jer select element očekuje string za value, a ne listu.\n    if (doctor && Array.isArray(doctor.specialty)) {\n      // Ako doktor ima više specijalizacija, uzmi prvu za prikaz u selectu ili prilagodi logiku\n      setEditingDoctor({\n        ...doctor,\n        specijalizacija: doctor.specialty[0] || ''\n      });\n    } else {\n      setEditingDoctor(doctor);\n    }\n    setShowDoctorModal(true);\n  };\n  const filteredDoctors = doctors.filter(doctor => doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\n  // Ovo je sada string\n  doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()));\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\n\n  // --- Patient Management Functions ---\n  const handleAddPatient = async newPatient => {\n    try {\n      // NAPOMENA: userId se obično NE šalje pri dodavanju/ažuriranju pacijenta preko Admin panela.\n      // userId se postavlja kada se korisnik registruje preko Auth servisa.\n      // Ako admin dodaje pacijenta koji već postoji kao korisnik, trebala bi postojati logika za povezivanje.\n      const response = await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, newPatient, authHeaders);\n      fetchPatients(); // Ponovo dohvati pacijente\n      fetchActivityLog();\n      setShowPatientModal(false);\n      showNotification('Pacijent uspješno dodan!');\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error(\"Greška prilikom dodavanja pacijenta:\", error);\n      showNotification(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Greška prilikom dodavanja pacijenta.', 'danger');\n    }\n  };\n  const handleUpdatePatient = async updatedPatient => {\n    try {\n      const response = await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, updatedPatient, authHeaders);\n      fetchPatients(); // Ponovo dohvati pacijente\n      fetchActivityLog();\n      setShowPatientModal(false);\n      setEditingPatient(null);\n      showNotification('Pacijent uspješno ažuriran!');\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", error);\n      showNotification(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Greška prilikom ažuriranja pacijenta.', 'danger');\n    }\n  };\n  const handleDeletePatient = async id => {\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog pacijenta?');\n    if (!confirmed) {\n      return;\n    }\n    try {\n      await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`, authHeaders);\n      fetchPatients(); // Ponovo dohvati pacijente\n      fetchActivityLog();\n      showNotification('Pacijent uspješno obrisan!', 'danger');\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      console.error(\"Greška prilikom brisanja pacijenta:\", error);\n      showNotification(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Greška prilikom brisanja pacijenta.', 'danger');\n    }\n  };\n  const openPatientModal = (patient = null) => {\n    setEditingPatient(patient);\n    setShowPatientModal(true);\n  };\n  const filteredPatients = patients.filter(patient => patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\n\n  // --- Appointment Management Functions ---\n  const handleUpdateAppointmentStatus = async (id, newStatus) => {\n    try {\n      // Pretpostavljamo da je endpoint za ažuriranje statusa: /api/appointments/{id}/status\n      const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/appointments/${id}/status`, {\n        status: newStatus\n      }, authHeaders);\n      fetchAppointments(); // Ponovo dohvati preglede da se ažurira status\n      fetchActivityLog();\n      showNotification(`Status termina ažuriran na ${newStatus}!`, 'info');\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      console.error(\"Greška prilikom ažuriranja statusa termina:\", error);\n      showNotification(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Greška prilikom ažuriranja statusa termina.', 'danger');\n    }\n  };\n  const indexOfLastAppointment = appointmentsCurrentPage * itemsPerPage;\n  const indexOfFirstAppointment = indexOfLastAppointment - itemsPerPage;\n  const currentAppointments = appointments.slice(indexOfFirstAppointment, indexOfLastAppointment);\n  const totalAppointmentPages = Math.ceil(appointments.length / itemsPerPage);\n\n  // --- User Management Functions ---\n  const handleAddUser = async newUser => {\n    try {\n      // NAPOMENA: Ovdje se dodaje korisnik u Auth servis.\n      // Nakon uspješne registracije, Auth servis bi trebao obavijestiti Korisnici-Doktori servis\n      // da kreira odgovarajući profil (Doktor/Pacijent) sa userId-om.\n      const response = await axios.post(`${AUTH_API_PREFIX}/register`, newUser, authHeaders); // Koristi /register endpoint\n      fetchUsers(); // Ponovo dohvati korisnike\n      fetchActivityLog();\n      setShowUserModal(false);\n      showNotification('Korisnik uspješno dodan!');\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      console.error(\"Greška prilikom dodavanja korisnika:\", error);\n      showNotification(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Greška prilikom dodavanja korisnika.', 'danger');\n    }\n  };\n  const handleUpdateUser = async updatedUser => {\n    try {\n      // NAPOMENA: Ažuriranje korisnika u Auth servisu.\n      // Ako se mijenjaju uloge, Auth servis bi trebao obavijestiti Korisnici-Doktori servis\n      // da ažurira ili kreira/briše profile.\n      const response = await axios.put(`${AUTH_API_PREFIX}/users/${updatedUser.id}`, updatedUser, authHeaders);\n      fetchUsers(); // Ponovo dohvati korisnike\n      fetchActivityLog();\n      setShowUserModal(false);\n      setEditingUser(null);\n      showNotification('Korisnik uspješno ažuriran!');\n    } catch (error) {\n      var _error$response9, _error$response9$data;\n      console.error(\"Greška prilikom ažuriranja korisnika:\", error);\n      showNotification(((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Greška prilikom ažuriranja korisnika.', 'danger');\n    }\n  };\n  const handleDeleteUser = async id => {\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog korisnika?');\n    if (!confirmed) {\n      return;\n    }\n    try {\n      // NAPOMENA: Brisanje korisnika iz Auth servisa.\n      // Auth servis bi trebao obavijestiti Korisnici-Doktori servis da obriše odgovarajući profil.\n      await axios.delete(`${AUTH_API_PREFIX}/users/${id}`, authHeaders);\n      fetchUsers(); // Ponovo dohvati korisnike\n      fetchActivityLog();\n      showNotification('Korisnik uspješno obrisan!', 'danger');\n    } catch (error) {\n      var _error$response0, _error$response0$data;\n      console.error(\"Greška prilikom brisanja korisnika:\", error);\n      showNotification(((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || 'Greška prilikom brisanja korisnika.', 'danger');\n    }\n  };\n  const openUserModal = (user = null) => {\n    setEditingUser(user);\n    setShowUserModal(true);\n  };\n  const indexOfLastUser = usersCurrentPage * itemsPerPage;\n  const indexOfFirstUser = indexOfLastUser - itemsPerPage;\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\n  const totalUserPages = Math.ceil(users.length / itemsPerPage);\n\n  // --- Blog Post Management Functions ---\n  const handleAddBlogPost = async newPost => {\n    try {\n      const response = await axios.post(`${OBAVIJESTI_DOKUMENTACIJA_API_PREFIX}/blog-posts`, newPost, authHeaders);\n      fetchBlogPosts();\n      fetchActivityLog();\n      setShowBlogPostModal(false);\n      showNotification('Blog post uspješno dodan!');\n    } catch (error) {\n      var _error$response1, _error$response1$data;\n      console.error(\"Greška prilikom dodavanja blog posta:\", error);\n      showNotification(((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || 'Greška prilikom dodavanja blog posta.', 'danger');\n    }\n  };\n  const handleUpdateBlogPost = async updatedPost => {\n    try {\n      const response = await axios.put(`${OBAVIJESTI_DOKUMENTACIJA_API_PREFIX}/blog-posts/${updatedPost.id}`, updatedPost, authHeaders);\n      fetchBlogPosts();\n      fetchActivityLog();\n      setShowBlogPostModal(false);\n      setEditingBlogPost(null);\n      showNotification('Blog post uspješno ažuriran!');\n    } catch (error) {\n      var _error$response10, _error$response10$dat;\n      console.error(\"Greška prilikom ažuriranja blog posta:\", error);\n      showNotification(((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.message) || 'Greška prilikom ažuriranja blog posta.', 'danger');\n    }\n  };\n  const handleDeleteBlogPost = async id => {\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovaj blog post?');\n    if (!confirmed) {\n      return;\n    }\n    try {\n      await axios.delete(`${OBAVIJESTI_DOKUMENTACIJA_API_PREFIX}/blog-posts/${id}`, authHeaders);\n      fetchBlogPosts();\n      fetchActivityLog();\n      showNotification('Blog post uspješno obrisan!', 'danger');\n    } catch (error) {\n      var _error$response11, _error$response11$dat;\n      console.error(\"Greška prilikom brisanja blog posta:\", error);\n      showNotification(((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : (_error$response11$dat = _error$response11.data) === null || _error$response11$dat === void 0 ? void 0 : _error$response11$dat.message) || 'Greška prilikom brisanja blog posta.', 'danger');\n    }\n  };\n  const openBlogPostModal = (post = null) => {\n    setEditingBlogPost(post);\n    setShowBlogPostModal(true);\n  };\n  const indexOfLastBlogPost = blogPostsCurrentPage * itemsPerPage;\n  const indexOfFirstBlogPost = indexOfLastBlogPost - itemsPerPage;\n  const currentBlogPosts = blogPosts.slice(indexOfFirstBlogPost, indexOfLastBlogPost);\n  const totalBlogPostPages = Math.ceil(blogPosts.length / itemsPerPage);\n  const DataModal = ({\n    show,\n    onClose,\n    data,\n    onSave,\n    fields,\n    title,\n    idPrefix\n  }) => {\n    _s();\n    const [formData, setFormData] = useState(data || {});\n    useEffect(() => {\n      setFormData(data || {});\n    }, [data]);\n    const handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    };\n    const handleSubmit = e => {\n      e.preventDefault();\n      // KLJUČNA IZMJENA: Ako je polje 'specijalizacija' (koje je string iz selecta),\n      // pretvori ga u listu stringova prije slanja na backend\n      const dataToSend = {\n        ...formData\n      };\n      if (dataToSend.specijalizacija && typeof dataToSend.specijalizacija === 'string') {\n        dataToSend.specijalizacije = [dataToSend.specijalizacija]; // Kreiraj listu od jednog elementa\n        delete dataToSend.specijalizacija; // Ukloni singularno polje\n      }\n      onSave(dataToSend);\n    };\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: onClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: fields.map(field => /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: `${idPrefix}-${field.name}`,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this), field.type === 'select' ? /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: [\"Select \", field.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 21\n              }, this), field.name === 'specijalizacija' && specializations.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 23\n              }, this)), field.name !== 'specijalizacija' && field.options && field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 19\n            }, this) : field.type === 'textarea' ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: field.type || 'text',\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 19\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 7\n    }, this);\n  };\n  _s(DataModal, \"JPolC2XS0g7tYnXkmRHL767uIww=\");\n  const Pagination = ({\n    itemsPerPage,\n    totalItems,\n    currentPage,\n    paginate\n  }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center mt-4\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === number ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 15\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 7\n    }, this);\n  };\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Dashboard Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-primary mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Doctors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: doctors.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-success mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Patients\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: patients.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 632,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-warning mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Pending Appointments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: appointments.filter(app => app.status === 'Pending').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 640,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Quick Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => openDoctorModal(),\n                children: \"Add New Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-success\",\n                onClick: () => openPatientModal(),\n                children: \"Add New Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-info\",\n                onClick: () => setActiveTab('appointments'),\n                children: \"View Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Recent Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: activityLog.slice(-5).reverse().map(log => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item d-flex justify-content-between align-items-center\",\n                children: [log.action, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"badge bg-light text-dark\",\n                  children: new Date(log.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 21\n                }, this)]\n              }, log.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this);\n      case 'doctors':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Doctors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openDoctorModal(),\n              children: \"Add New Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search doctors...\",\n              value: doctorSearchTerm,\n              onChange: e => setDoctorSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 684,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Specialty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"City\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 690,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentDoctors.length > 0 ? currentDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 697,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 698,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.specialty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 699,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.city\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openDoctorModal(doctor),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 704,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteDoctor(doctor.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 705,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 703,\n                    columnNumber: 25\n                  }, this)]\n                }, doctor.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"No doctors found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 23\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredDoctors.length,\n            currentPage: doctorsCurrentPage,\n            paginate: setDoctorsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n            show: showDoctorModal,\n            onClose: () => setShowDoctorModal(false),\n            data: editingDoctor,\n            onSave: editingDoctor ? handleUpdateDoctor : handleAddDoctor,\n            title: editingDoctor ? 'Edit Doctor' : 'Add New Doctor',\n            idPrefix: \"doctor\",\n            fields: [{\n              name: 'ime',\n              label: 'First Name',\n              type: 'text',\n              required: true\n            }, {\n              name: 'prezime',\n              label: 'Last Name',\n              type: 'text',\n              required: true\n            },\n            // Ovdje koristimo dinamički dohvaćene specijalizacije\n            {\n              name: 'specijalizacija',\n              label: 'Specialty',\n              type: 'select',\n              required: true,\n              options: specializations\n            }, {\n              name: 'grad',\n              label: 'City',\n              type: 'select',\n              required: true,\n              options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla']\n            },\n            // KLJUČNA IZMJENA: Uklonjeno polje za Email iz forme\n            // { name: 'email', label: 'Email', type: 'email', required: true },\n            {\n              name: 'telefon',\n              label: 'Phone',\n              type: 'text',\n              required: true\n            } // Dodano polje za telefon\n            ]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this);\n      case 'patients':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openPatientModal(),\n              children: \"Add New Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search patients...\",\n              value: patientSearchTerm,\n              onChange: e => setPatientSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 761,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 762,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 765,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 766,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentPatients.length > 0 ? currentPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 773,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 774,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 777,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openPatientModal(patient),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 779,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeletePatient(patient.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 780,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 778,\n                    columnNumber: 25\n                  }, this)]\n                }, patient.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"4\",\n                    className: \"text-center\",\n                    children: \"No patients found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 786,\n                    columnNumber: 23\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredPatients.length,\n            currentPage: patientsCurrentPage,\n            paginate: setPatientsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n            show: showPatientModal,\n            onClose: () => setShowPatientModal(false),\n            data: editingPatient,\n            onSave: editingPatient ? handleUpdatePatient : handleAddPatient,\n            title: editingPatient ? 'Edit Patient' : 'Add New Patient',\n            idPrefix: \"patient\",\n            fields: [{\n              name: 'ime',\n              label: 'First Name',\n              type: 'text',\n              required: true\n            }, {\n              name: 'prezime',\n              label: 'Last Name',\n              type: 'text',\n              required: true\n            },\n            // KLJUČNA IZMJENA: Uklonjeno polje za Email iz forme\n            // { name: 'email', label: 'Email', type: 'email', required: true },\n            {\n              name: 'telefon',\n              label: 'Phone',\n              type: 'text',\n              required: false\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this);\n      case 'appointments':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 823,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Patient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 824,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 825,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 826,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 827,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 828,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 829,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentAppointments.length > 0 ? currentAppointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 836,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.patientName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 837,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.doctorName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 838,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 839,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 840,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select\",\n                      value: appointment.status,\n                      onChange: e => handleUpdateAppointmentStatus(appointment.id, e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Pending\",\n                        children: \"Pending\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 847,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Confirmed\",\n                        children: \"Confirmed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 848,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Completed\",\n                        children: \"Completed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 849,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Cancelled\",\n                        children: \"Cancelled\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 850,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 842,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 841,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => showNotification('Brisanje termina nije implementirano.', 'warning'),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 854,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 853,\n                    columnNumber: 25\n                  }, this)]\n                }, appointment.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 835,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"7\",\n                    className: \"text-center\",\n                    children: \"No appointments found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 860,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 859,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: appointments.length,\n            currentPage: appointmentsCurrentPage,\n            paginate: setAppointmentsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 11\n        }, this);\n      case 'users':\n        // NOVO: Dodan tab za korisnike\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openUserModal(),\n              children: \"Add New User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 885,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 886,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Full Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 887,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Roles\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 888,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 889,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 884,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentUsers.length > 0 ? currentUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: user.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 896,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: user.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 897,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 898,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: user.roles\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 899,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openUserModal(user),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 901,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteUser(user.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 902,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 900,\n                    columnNumber: 25\n                  }, this)]\n                }, user.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 895,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"No users found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 908,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 892,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 882,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: users.length,\n            currentPage: usersCurrentPage,\n            paginate: setUsersCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n            show: showUserModal,\n            onClose: () => setShowUserModal(false),\n            data: editingUser,\n            onSave: editingUser ? handleUpdateUser : handleAddUser,\n            title: editingUser ? 'Edit User' : 'Add New User',\n            idPrefix: \"user\",\n            fields: [{\n              name: 'email',\n              label: 'Email',\n              type: 'email',\n              required: true\n            }, {\n              name: 'fullName',\n              label: 'Full Name',\n              type: 'text',\n              required: true\n            }, {\n              name: 'password',\n              label: 'Password',\n              type: 'password',\n              required: !editingUser\n            }, {\n              name: 'roles',\n              label: 'Roles (comma-separated)',\n              type: 'text',\n              required: true\n            }, {\n              name: 'telefon',\n              label: 'Phone',\n              type: 'text',\n              required: false\n            } // Dodano polje za telefon\n            ]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 11\n        }, this);\n      case 'blog-posts':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Blog Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openBlogPostModal(),\n              children: \"Add New Blog Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 948,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 949,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Author\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 950,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 951,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 952,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 947,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentBlogPosts.length > 0 ? currentBlogPosts.map(post => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: post.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 959,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: post.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 960,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: post.author\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 961,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: post.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 962,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openBlogPostModal(post),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 964,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteBlogPost(post.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 965,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 963,\n                    columnNumber: 25\n                  }, this)]\n                }, post.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 958,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"No blog posts found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 971,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 970,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 955,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: blogPosts.length,\n            currentPage: blogPostsCurrentPage,\n            paginate: setBlogPostsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n            show: showBlogPostModal,\n            onClose: () => setShowBlogPostModal(false),\n            data: editingBlogPost,\n            onSave: editingBlogPost ? handleUpdateBlogPost : handleAddBlogPost,\n            title: editingBlogPost ? 'Edit Blog Post' : 'Add New Blog Post',\n            idPrefix: \"blogPost\",\n            fields: [{\n              name: 'naslov',\n              label: 'Title',\n              type: 'text',\n              required: true\n            }, {\n              name: 'sadrzaj',\n              label: 'Content',\n              type: 'textarea',\n              required: true\n            }, {\n              name: 'autor',\n              label: 'Author',\n              type: 'text',\n              required: true\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a tab to view content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alertType,\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n      style: {\n        zIndex: 1050\n      },\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1006,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\",\n        style: {\n          minHeight: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky pt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'overview' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('overview'),\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'doctors' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('doctors'),\n                children: \"Doctors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1021,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'patients' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('patients'),\n                children: \"Patients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'appointments' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('appointments'),\n                children: \"Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'blog-posts' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('blog-posts'),\n                children: \"Blog Posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1037,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1036,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1013,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1004,\n    columnNumber: 5\n  }, this);\n}\n_s2(AdminDashboard, \"kwRpSpZMm+6j018cmC1oEXIhg2Q=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","Modal","Button","Form","Alert","jsxDEV","_jsxDEV","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","OBAVIJESTI_DOKUMENTACIJA_API_PREFIX","AUTH_API_PREFIX","AdminDashboard","_s2","_s","$RefreshSig$","token","authHeaders","headers","activeTab","setActiveTab","doctors","setDoctors","patients","setPatients","appointments","setAppointments","users","setUsers","blogPosts","setBlogPosts","activityLog","setActivityLog","specializations","setSpecializations","showDoctorModal","setShowDoctorModal","editingDoctor","setEditingDoctor","showPatientModal","setShowPatientModal","editingPatient","setEditingPatient","showUserModal","setShowUserModal","editingUser","setEditingUser","showBlogPostModal","setShowBlogPostModal","editingBlogPost","setEditingBlogPost","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","doctorSearchTerm","setDoctorSearchTerm","patientSearchTerm","setPatientSearchTerm","doctorsCurrentPage","setDoctorsCurrentPage","patientsCurrentPage","setPatientsCurrentPage","appointmentsCurrentPage","setAppointmentsCurrentPage","usersCurrentPage","setUsersCurrentPage","blogPostsCurrentPage","setBlogPostsCurrentPage","itemsPerPage","showNotification","message","type","setTimeout","fetchDoctors","response","get","transformedDoctors","data","map","doc","id","doktorID","name","ime","prezime","specialty","Array","isArray","specijalizacije","length","join","city","grad","email","userId","error","console","fetchPatients","transformedPatients","pat","pacijentID","phone","telefon","fetchAppointments","rawAppointments","doctorMap","Map","patientMap","transformedAppointments","app","pregledID","patientName","doctorName","date","datumPregleda","time","vrijemePregleda","status","fetchUsers","transformedUsers","user","fullName","roles","fetchBlogPosts","transformedPosts","post","postID","title","naslov","author","autor","datumKreiranja","fetchActivityLog","transformedLog","log","logID","timestamp","action","akcija","fetchSpecializations","specializationNames","spec","nazivSpecijalizacije","warn","loadAllData","handleAddDoctor","newDoctor","dataToSend","specijalizacija","_error$response","_error$response$data","handleUpdateDoctor","updatedDoctor","put","_error$response2","_error$response2$data","handleDeleteDoctor","confirmed","window","confirm","delete","_error$response3","_error$response3$data","openDoctorModal","doctor","filteredDoctors","filter","toLowerCase","includes","indexOfLastDoctor","indexOfFirstDoctor","currentDoctors","slice","totalDoctorPages","Math","ceil","handleAddPatient","newPatient","_error$response4","_error$response4$data","handleUpdatePatient","updatedPatient","_error$response5","_error$response5$data","handleDeletePatient","_error$response6","_error$response6$data","openPatientModal","patient","filteredPatients","indexOfLastPatient","indexOfFirstPatient","currentPatients","totalPatientPages","handleUpdateAppointmentStatus","newStatus","_error$response7","_error$response7$data","indexOfLastAppointment","indexOfFirstAppointment","currentAppointments","totalAppointmentPages","handleAddUser","newUser","_error$response8","_error$response8$data","handleUpdateUser","updatedUser","_error$response9","_error$response9$data","handleDeleteUser","_error$response0","_error$response0$data","openUserModal","indexOfLastUser","indexOfFirstUser","currentUsers","totalUserPages","handleAddBlogPost","newPost","_error$response1","_error$response1$data","handleUpdateBlogPost","updatedPost","_error$response10","_error$response10$dat","handleDeleteBlogPost","_error$response11","_error$response11$dat","openBlogPostModal","indexOfLastBlogPost","indexOfFirstBlogPost","currentBlogPosts","totalBlogPostPages","DataModal","show","onClose","onSave","fields","idPrefix","formData","setFormData","handleChange","e","value","target","prev","handleSubmit","preventDefault","onHide","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Body","field","Group","className","controlId","Label","label","Select","onChange","required","option","options","Control","as","rows","Footer","variant","onClick","Pagination","totalItems","currentPage","paginate","pageNumbers","i","push","number","renderContent","reverse","Date","toLocaleString","placeholder","colSpan","appointment","dismissible","style","zIndex","minHeight","href","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\n\r\n// Definisanje baznih URL-ova za svaki mikroservis preko API Gatewaya\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081'; // Port tvog API Gatewaya\r\n\r\n// Putanje za mikroservise preko Gatewaya\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api`; // Ovo će se koristiti za /api/appointments\r\nconst OBAVIJESTI_DOKUMENTACIJA_API_PREFIX = `${GATEWAY_BASE_URL}/api`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\r\n\r\nfunction AdminDashboard() {\r\n  const { token } = useAuth();\r\n\r\n  const authHeaders = {\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  };\r\n\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [users, setUsers] = useState([]); // NOVO: State za korisnike\r\n  const [blogPosts, setBlogPosts] = useState([]);\r\n  const [activityLog, setActivityLog] = useState([]);\r\n  const [specializations, setSpecializations] = useState([]); // NOVO: State za specijalizacije\r\n\r\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\r\n  const [editingDoctor, setEditingDoctor] = useState(null);\r\n\r\n  const [showPatientModal, setShowPatientModal] = useState(false);\r\n  const [editingPatient, setEditingPatient] = useState(null);\r\n\r\n  const [showUserModal, setShowUserModal] = useState(false); // NOVO: State za modal korisnika\r\n  const [editingUser, setEditingUser] = useState(null); // NOVO: State za uređivanje korisnika\r\n  const [showBlogPostModal, setShowBlogPostModal] = useState(false);\r\n  const [editingBlogPost, setEditingBlogPost] = useState(null);\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [alertType, setAlertType] = useState('success');\r\n\r\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\r\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n\r\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\r\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\r\n  const [appointmentsCurrentPage, setAppointmentsCurrentPage] = useState(1);\r\n  const [usersCurrentPage, setUsersCurrentPage] = useState(1); // NOVO: Paginacija za korisnike\r\n  const [blogPostsCurrentPage, setBlogPostsCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const showNotification = (message, type = 'success') => {\r\n    setAlertMessage(message);\r\n    setAlertType(type);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n      setAlertMessage('');\r\n    }, 3000);\r\n  };\r\n\r\n  // --- Fetch functions for each entity ---\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n      const transformedDoctors = response.data.map(doc => ({\r\n        id: doc.doktorID,\r\n        name: `${doc.ime} ${doc.prezime}`,\r\n        // 'specijalizacije' je sada lista stringova iz DTO-a\r\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                   ? doc.specijalizacije.join(', ')\r\n                   : 'N/A',\r\n        city: doc.grad || 'N/A',\r\n        // Email se više ne dohvaća direktno iz Doktor entiteta.\r\n        // Ako ti je email potreban ovdje, morat ćeš ga dohvatiti iz Auth servisa koristeći doc.userId\r\n        // Za sada, ostavljamo ga kao N/A ili ga ukloni iz prikaza.\r\n        email: 'N/A', // Privremeno N/A, dok se ne implementira dohvat iz Auth servisa\r\n        userId: doc.userId, // Dodaj userId ako ga trebaš za buduće dohvate\r\n      }));\r\n      setDoctors(transformedDoctors);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja doktora:\", error);\r\n      showNotification(\"Greška prilikom dohvaćanja doktora s servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\r\n      const transformedPatients = response.data.map(pat => ({\r\n        id: pat.pacijentID,\r\n        name: `${pat.ime} ${pat.prezime}`,\r\n        // Email se više ne dohvaća direktno iz Pacijent entiteta.\r\n        // Ako ti je email potreban ovdje, morat ćeš ga dohvatiti iz Auth servisa koristeći pat.userId\r\n        email: 'N/A', // Privremeno N/A, dok se ne implementira dohvat iz Auth servisa\r\n        phone: pat.telefon || 'N/A',\r\n        userId: pat.userId, // Dodaj userId ako ga trebaš za buduće dohvate\r\n      }));\r\n      setPatients(transformedPatients);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", error);\r\n      showNotification(\"Greška prilikom dohvaćanja pacijenata s servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchAppointments = async () => {\r\n    try {\r\n      // NAPOMENA: URL za preglede bi trebao biti TERMINI_PREGLEDI_API_PREFIX + '/pregledi' ili slično,\r\n      // ovisno o tvojoj Gateway konfiguraciji i context-pathu Termini-Pregledi servisa.\r\n      // Trenutno koristiš 'http://localhost:8081/termini-pregledi/api/pregledi'\r\n      // Ako je Gateway ruta /api/appointments, onda bi URL trebao biti `${TERMINI_PREGLEDI_API_PREFIX}/appointments`\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/appointments`, authHeaders); // Ispravan URL preko Gatewaya\r\n      const rawAppointments = response.data;\r\n\r\n      // Kreiraj mape za brzo pronalaženje imena doktora i pacijenata po ID-u\r\n      // Koristimo već dohvaćene liste 'doctors' i 'patients'\r\n      const doctorMap = new Map(doctors.map(doc => [doc.id, doc.name]));\r\n      const patientMap = new Map(patients.map(pat => [pat.id, pat.name]));\r\n\r\n      // Transformiši preglede, dodajući imena\r\n      const transformedAppointments = rawAppointments.map(app => ({\r\n        id: app.pregledID, // Koristi pregledID iz DTO-a\r\n        patientName: patientMap.get(app.pacijentID) || 'N/A', // Dohvati ime pacijenta po ID-u\r\n        doctorName: doctorMap.get(app.doktorID) || 'N/A',     // Dohvati ime doktora po ID-u\r\n        date: app.datumPregleda, // Koristi datumPregleda iz DTO-a\r\n        time: app.vrijemePregleda, // Koristi vrijemePregleda iz DTO-a\r\n        status: app.status,\r\n      }));\r\n      setAppointments(transformedAppointments);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja termina:\", error);\r\n      showNotification(\"Greška prilikom dohvaćanja termina s servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => { // NOVO: Funkcija za dohvat korisnika iz Auth servisa\r\n    try {\r\n      const response = await axios.get(`${AUTH_API_PREFIX}/users`, authHeaders);\r\n      const transformedUsers = response.data.map(user => ({\r\n        id: user.id,\r\n        name: user.fullName,\r\n        email: user.email,\r\n        roles: user.roles.join(', '), // Pretpostavka da su uloge Set<String>\r\n      }));\r\n      setUsers(transformedUsers);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja korisnika:\", error);\r\n      showNotification(\"Greška prilikom dohvaćanja korisnika s servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchBlogPosts = async () => {\r\n    try {\r\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTACIJA_API_PREFIX}/blog-posts`, authHeaders);\r\n      const transformedPosts = response.data.map(post => ({\r\n        id: post.postID,\r\n        title: post.naslov,\r\n        author: post.autor,\r\n        date: post.datumKreiranja,\r\n      }));\r\n      setBlogPosts(transformedPosts);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja blog postova:\", error);\r\n      showNotification(\"Greška prilikom dohvaćanja blog postova s servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchActivityLog = async () => {\r\n    try {\r\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTACIJA_API_PREFIX}/activity-log`, authHeaders);\r\n      const transformedLog = response.data.map(log => ({\r\n        id: log.logID,\r\n        timestamp: log.timestamp,\r\n        action: log.akcija,\r\n      }));\r\n      setActivityLog(transformedLog);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja loga aktivnosti:\", error);\r\n      showNotification(\"Greška prilikom dohvaćanja loga aktivnosti.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchSpecializations = async () => { // NOVO: Funkcija za dohvat specijalizacija\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/specijalizacije`, authHeaders);\r\n      const specializationNames = response.data.map(spec => spec.nazivSpecijalizacije);\r\n      setSpecializations(specializationNames);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja specijalizacija:\", error);\r\n      showNotification(\"Greška prilikom dohvaćanja specijalizacija s servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  // Koristimo useEffect da osiguramo da se podaci o doktorima i pacijentima\r\n  // dohvate PRIJE nego što pokušamo dohvatiti preglede, jer preglede mapiramo\r\n  // koristeći podatke o doktorima i pacijentima.\r\n  useEffect(() => {\r\n    if (!token) {\r\n      console.warn(\"Nema tokena, preskačem dohvaćanje podataka.\");\r\n      return;\r\n    }\r\n\r\n    const loadAllData = async () => {\r\n      await fetchDoctors(); // Dohvati doktore\r\n      await fetchPatients(); // Dohvati pacijente\r\n      // Sada kada su doktori i pacijenti u state-u, možemo dohvatiti preglede\r\n      await fetchAppointments();\r\n      await fetchUsers(); // Dohvati korisnike\r\n      await fetchBlogPosts();\r\n      await fetchActivityLog();\r\n      await fetchSpecializations(); // Dohvati specijalizacije pri učitavanju\r\n    };\r\n\r\n    loadAllData();\r\n  }, [token]);\r\n\r\n\r\n  // --- Doctor Management Functions ---\r\n  const handleAddDoctor = async (newDoctor) => {\r\n    try {\r\n      // KLJUČNA IZMJENA: Ako je polje 'specijalizacija' (koje je string iz selecta),\r\n      // pretvori ga u listu stringova prije slanja na backend (ako backend očekuje listu)\r\n      // MapStruct bi trebao automatski mapirati List<String> na List<DoktorSpecijalizacija>\r\n      // ako je SpecijalizacijaMapper ispravno konfigurisan.\r\n      const dataToSend = { ...newDoctor };\r\n      if (dataToSend.specijalizacija && typeof dataToSend.specijalizacija === 'string') {\r\n        dataToSend.specijalizacije = [dataToSend.specijalizacija]; // Kreiraj listu od jednog elementa\r\n        delete dataToSend.specijalizacija; // Ukloni singularno polje\r\n      }\r\n      // NAPOMENA: userId se obično NE šalje pri dodavanju/ažuriranju doktora preko Admin panela.\r\n      // userId se postavlja kada se korisnik registruje preko Auth servisa.\r\n      // Ako admin dodaje doktora koji već postoji kao korisnik, trebala bi postojati logika za povezivanje.\r\n      // Za sada, pretpostavljamo da backend zna kako da rukuje sa ovim.\r\n\r\n      const response = await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, dataToSend, authHeaders);\r\n      fetchDoctors(); // Ponovo dohvati listu da se ažurira prikaz\r\n      fetchActivityLog();\r\n      setShowDoctorModal(false);\r\n      showNotification('Doktor uspješno dodan!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja doktora:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja doktora.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleUpdateDoctor = async (updatedDoctor) => {\r\n    try {\r\n      const dataToSend = { ...updatedDoctor };\r\n      if (dataToSend.specijalizacija && typeof dataToSend.specijalizacija === 'string') {\r\n        dataToSend.specijalizacije = [dataToSend.specijalizacija];\r\n        delete dataToSend.specijalizacija;\r\n      }\r\n\r\n      const response = await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, dataToSend, authHeaders);\r\n      fetchDoctors();\r\n      fetchActivityLog();\r\n      setShowDoctorModal(false);\r\n      setEditingDoctor(null);\r\n      showNotification('Doktor uspješno ažuriran!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja doktora:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja doktora.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleDeleteDoctor = async (id) => {\r\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog doktora?');\r\n    if (!confirmed) {\r\n      return;\r\n    }\r\n    try {\r\n      await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\r\n      fetchDoctors();\r\n      fetchActivityLog();\r\n      showNotification('Doktor uspješno obrisan!', 'danger');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom brisanja doktora:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom brisanja doktora.', 'danger');\r\n    }\r\n  };\r\n\r\n  const openDoctorModal = (doctor = null) => {\r\n    // KLJUČNA IZMJENA: Ako uređuješ doktora, pretvori listu specijalizacija u string za prikaz u selectu\r\n    // jer select element očekuje string za value, a ne listu.\r\n    if (doctor && Array.isArray(doctor.specialty)) {\r\n      // Ako doktor ima više specijalizacija, uzmi prvu za prikaz u selectu ili prilagodi logiku\r\n      setEditingDoctor({ ...doctor, specijalizacija: doctor.specialty[0] || '' });\r\n    } else {\r\n      setEditingDoctor(doctor);\r\n    }\r\n    setShowDoctorModal(true);\r\n  };\r\n\r\n  const filteredDoctors = doctors.filter(doctor =>\r\n    doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n    doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || // Ovo je sada string\r\n    doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase())\r\n  );\r\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\r\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\r\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\r\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\r\n\r\n  // --- Patient Management Functions ---\r\n  const handleAddPatient = async (newPatient) => {\r\n    try {\r\n      // NAPOMENA: userId se obično NE šalje pri dodavanju/ažuriranju pacijenta preko Admin panela.\r\n      // userId se postavlja kada se korisnik registruje preko Auth servisa.\r\n      // Ako admin dodaje pacijenta koji već postoji kao korisnik, trebala bi postojati logika za povezivanje.\r\n      const response = await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, newPatient, authHeaders);\r\n      fetchPatients(); // Ponovo dohvati pacijente\r\n      fetchActivityLog();\r\n      setShowPatientModal(false);\r\n      showNotification('Pacijent uspješno dodan!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja pacijenta:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja pacijenta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleUpdatePatient = async (updatedPatient) => {\r\n    try {\r\n      const response = await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, updatedPatient, authHeaders);\r\n      fetchPatients(); // Ponovo dohvati pacijente\r\n      fetchActivityLog();\r\n      setShowPatientModal(false);\r\n      setEditingPatient(null);\r\n      showNotification('Pacijent uspješno ažuriran!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja pacijenta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleDeletePatient = async (id) => {\r\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog pacijenta?');\r\n    if (!confirmed) {\r\n      return;\r\n    }\r\n    try {\r\n      await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`, authHeaders);\r\n      fetchPatients(); // Ponovo dohvati pacijente\r\n      fetchActivityLog();\r\n      showNotification('Pacijent uspješno obrisan!', 'danger');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom brisanja pacijenta:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom brisanja pacijenta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const openPatientModal = (patient = null) => {\r\n    setEditingPatient(patient);\r\n    setShowPatientModal(true);\r\n  };\r\n\r\n  const filteredPatients = patients.filter(patient =>\r\n    patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\r\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\r\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\r\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\r\n\r\n  // --- Appointment Management Functions ---\r\n  const handleUpdateAppointmentStatus = async (id, newStatus) => {\r\n    try {\r\n      // Pretpostavljamo da je endpoint za ažuriranje statusa: /api/appointments/{id}/status\r\n      const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/appointments/${id}/status`, { status: newStatus }, authHeaders);\r\n      fetchAppointments(); // Ponovo dohvati preglede da se ažurira status\r\n      fetchActivityLog();\r\n      showNotification(`Status termina ažuriran na ${newStatus}!`, 'info');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja statusa termina:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja statusa termina.', 'danger');\r\n    }\r\n  };\r\n\r\n  const indexOfLastAppointment = appointmentsCurrentPage * itemsPerPage;\r\n  const indexOfFirstAppointment = indexOfLastAppointment - itemsPerPage;\r\n  const currentAppointments = appointments.slice(indexOfFirstAppointment, indexOfLastAppointment);\r\n  const totalAppointmentPages = Math.ceil(appointments.length / itemsPerPage);\r\n\r\n  // --- User Management Functions ---\r\n  const handleAddUser = async (newUser) => {\r\n    try {\r\n      // NAPOMENA: Ovdje se dodaje korisnik u Auth servis.\r\n      // Nakon uspješne registracije, Auth servis bi trebao obavijestiti Korisnici-Doktori servis\r\n      // da kreira odgovarajući profil (Doktor/Pacijent) sa userId-om.\r\n      const response = await axios.post(`${AUTH_API_PREFIX}/register`, newUser, authHeaders); // Koristi /register endpoint\r\n      fetchUsers(); // Ponovo dohvati korisnike\r\n      fetchActivityLog();\r\n      setShowUserModal(false);\r\n      showNotification('Korisnik uspješno dodan!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja korisnika:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja korisnika.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleUpdateUser = async (updatedUser) => {\r\n    try {\r\n      // NAPOMENA: Ažuriranje korisnika u Auth servisu.\r\n      // Ako se mijenjaju uloge, Auth servis bi trebao obavijestiti Korisnici-Doktori servis\r\n      // da ažurira ili kreira/briše profile.\r\n      const response = await axios.put(`${AUTH_API_PREFIX}/users/${updatedUser.id}`, updatedUser, authHeaders);\r\n      fetchUsers(); // Ponovo dohvati korisnike\r\n      fetchActivityLog();\r\n      setShowUserModal(false);\r\n      setEditingUser(null);\r\n      showNotification('Korisnik uspješno ažuriran!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja korisnika:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja korisnika.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = async (id) => {\r\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog korisnika?');\r\n    if (!confirmed) {\r\n      return;\r\n    }\r\n    try {\r\n      // NAPOMENA: Brisanje korisnika iz Auth servisa.\r\n      // Auth servis bi trebao obavijestiti Korisnici-Doktori servis da obriše odgovarajući profil.\r\n      await axios.delete(`${AUTH_API_PREFIX}/users/${id}`, authHeaders);\r\n      fetchUsers(); // Ponovo dohvati korisnike\r\n      fetchActivityLog();\r\n      showNotification('Korisnik uspješno obrisan!', 'danger');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom brisanja korisnika:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom brisanja korisnika.', 'danger');\r\n    }\r\n  };\r\n\r\n  const openUserModal = (user = null) => {\r\n    setEditingUser(user);\r\n    setShowUserModal(true);\r\n  };\r\n\r\n  const indexOfLastUser = usersCurrentPage * itemsPerPage;\r\n  const indexOfFirstUser = indexOfLastUser - itemsPerPage;\r\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\r\n  const totalUserPages = Math.ceil(users.length / itemsPerPage);\r\n\r\n  // --- Blog Post Management Functions ---\r\n  const handleAddBlogPost = async (newPost) => {\r\n    try {\r\n      const response = await axios.post(`${OBAVIJESTI_DOKUMENTACIJA_API_PREFIX}/blog-posts`, newPost, authHeaders);\r\n      fetchBlogPosts();\r\n      fetchActivityLog();\r\n      setShowBlogPostModal(false);\r\n      showNotification('Blog post uspješno dodan!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja blog posta:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja blog posta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleUpdateBlogPost = async (updatedPost) => {\r\n    try {\r\n      const response = await axios.put(`${OBAVIJESTI_DOKUMENTACIJA_API_PREFIX}/blog-posts/${updatedPost.id}`, updatedPost, authHeaders);\r\n      fetchBlogPosts();\r\n      fetchActivityLog();\r\n      setShowBlogPostModal(false);\r\n      setEditingBlogPost(null);\r\n      showNotification('Blog post uspješno ažuriran!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja blog posta:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja blog posta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleDeleteBlogPost = async (id) => {\r\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovaj blog post?');\r\n    if (!confirmed) {\r\n      return;\r\n    }\r\n    try {\r\n      await axios.delete(`${OBAVIJESTI_DOKUMENTACIJA_API_PREFIX}/blog-posts/${id}`, authHeaders);\r\n      fetchBlogPosts();\r\n      fetchActivityLog();\r\n      showNotification('Blog post uspješno obrisan!', 'danger');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom brisanja blog posta:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom brisanja blog posta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const openBlogPostModal = (post = null) => {\r\n    setEditingBlogPost(post);\r\n    setShowBlogPostModal(true);\r\n  };\r\n\r\n  const indexOfLastBlogPost = blogPostsCurrentPage * itemsPerPage;\r\n  const indexOfFirstBlogPost = indexOfLastBlogPost - itemsPerPage;\r\n  const currentBlogPosts = blogPosts.slice(indexOfFirstBlogPost, indexOfLastBlogPost);\r\n  const totalBlogPostPages = Math.ceil(blogPosts.length / itemsPerPage);\r\n\r\n  const DataModal = ({ show, onClose, data, onSave, fields, title, idPrefix }) => {\r\n    const [formData, setFormData] = useState(data || {});\r\n    useEffect(() => {\r\n      setFormData(data || {});\r\n    }, [data]);\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setFormData(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      // KLJUČNA IZMJENA: Ako je polje 'specijalizacija' (koje je string iz selecta),\r\n      // pretvori ga u listu stringova prije slanja na backend\r\n      const dataToSend = { ...formData };\r\n      if (dataToSend.specijalizacija && typeof dataToSend.specijalizacija === 'string') {\r\n        dataToSend.specijalizacije = [dataToSend.specijalizacija]; // Kreiraj listu od jednog elementa\r\n        delete dataToSend.specijalizacija; // Ukloni singularno polje\r\n      }\r\n      onSave(dataToSend);\r\n    };\r\n\r\n    return (\r\n      <Modal show={show} onHide={onClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body>\r\n            {fields.map(field => (\r\n              <Form.Group className=\"mb-3\" controlId={`${idPrefix}-${field.name}`} key={field.name}>\r\n                <Form.Label>{field.label}</Form.Label>\r\n                {field.type === 'select' ? (\r\n                  <Form.Select\r\n                    name={field.name}\r\n                    value={formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  >\r\n                    <option value=\"\">Select {field.label}</option>\r\n                    {/* Koristi dinamički dohvaćene specijalizacije */}\r\n                    {field.name === 'specijalizacija' && specializations.map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                    {/* Ako imaš druge select fieldove, dodaj logiku ovdje */}\r\n                    {field.name !== 'specijalizacija' && field.options && field.options.map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                ) : field.type === 'textarea' ? (\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    name={field.name}\r\n                    value={formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  />\r\n                ) : (\r\n                  <Form.Control\r\n                    type={field.type || 'text'}\r\n                    name={field.name}\r\n                    value={formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  />\r\n                )}\r\n              </Form.Group>\r\n            ))}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination justify-content-center mt-4\">\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n              <button onClick={() => paginate(number)} className=\"page-link\">\r\n                {number}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (activeTab) {\r\n      case 'overview':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Dashboard Overview</h4>\r\n            <div className=\"row g-4\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-primary mb-3\">\r\n                  <div className=\"card-header\">Total Doctors</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{doctors.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-success mb-3\">\r\n                  <div className=\"card-header\">Total Patients</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{patients.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-warning mb-3\">\r\n                  <div className=\"card-header\">Pending Appointments</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{appointments.filter(app => app.status === 'Pending').length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h5>Quick Actions</h5>\r\n              <div className=\"d-flex gap-2\">\r\n                <button className=\"btn btn-outline-primary\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n                <button className=\"btn btn-outline-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n                <button className=\"btn btn-outline-info\" onClick={() => setActiveTab('appointments')}>View Appointments</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h5>Recent Activity</h5>\r\n              <ul className=\"list-group\">\r\n                {activityLog.slice(-5).reverse().map(log => (\r\n                  <li key={log.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    {log.action}\r\n                    <span className=\"badge bg-light text-dark\">{new Date(log.timestamp).toLocaleString()}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'doctors':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Doctors</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search doctors...\"\r\n                value={doctorSearchTerm}\r\n                onChange={(e) => setDoctorSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Specialty</th>\r\n                    <th>City</th>\r\n                    {/* KLJUČNA IZMJENA: Uklonjena kolona Email */}\r\n                    {/* <th>Email</th> */}\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentDoctors.length > 0 ? (\r\n                    currentDoctors.map(doctor => (\r\n                      <tr key={doctor.id}>\r\n                        <td>{doctor.id}</td>\r\n                        <td>{doctor.name}</td>\r\n                        <td>{doctor.specialty}</td> {/* Ovo je sada spojeni string */}\r\n                        <td>{doctor.city}</td>\r\n                        {/* KLJUČNA IZMJENA: Uklonjena ćelija za Email */}\r\n                        {/* <td>{doctor.email}</td> */}\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openDoctorModal(doctor)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteDoctor(doctor.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"text-center\">No doctors found.</td> {/* Promijenjen colspan */}\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredDoctors.length}\r\n              currentPage={doctorsCurrentPage}\r\n              paginate={setDoctorsCurrentPage}\r\n            />\r\n            <DataModal\r\n              show={showDoctorModal}\r\n              onClose={() => setShowDoctorModal(false)}\r\n              data={editingDoctor}\r\n              onSave={editingDoctor ? handleUpdateDoctor : handleAddDoctor}\r\n              title={editingDoctor ? 'Edit Doctor' : 'Add New Doctor'}\r\n              idPrefix=\"doctor\"\r\n              fields={[\r\n                { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n                { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n                // Ovdje koristimo dinamički dohvaćene specijalizacije\r\n                { name: 'specijalizacija', label: 'Specialty', type: 'select', required: true, options: specializations },\r\n                { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla'] },\r\n                // KLJUČNA IZMJENA: Uklonjeno polje za Email iz forme\r\n                // { name: 'email', label: 'Email', type: 'email', required: true },\r\n                { name: 'telefon', label: 'Phone', type: 'text', required: true }, // Dodano polje za telefon\r\n              ]}\r\n            />\r\n          </div>\r\n        );\r\n      case 'patients':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Patients</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search patients...\"\r\n                value={patientSearchTerm}\r\n                onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    {/* KLJUČNA IZMJENA: Uklonjena kolona Email */}\r\n                    {/* <th>Email</th> */}\r\n                    <th>Phone</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentPatients.length > 0 ? (\r\n                    currentPatients.map(patient => (\r\n                      <tr key={patient.id}>\r\n                        <td>{patient.id}</td>\r\n                        <td>{patient.name}</td>\r\n                        {/* KLJUČNA IZMJENA: Uklonjena ćelija za Email */}\r\n                        {/* <td>{patient.email}</td> */}\r\n                        <td>{patient.phone}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openPatientModal(patient)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeletePatient(patient.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"4\" className=\"text-center\">No patients found.</td> {/* Promijenjen colspan */}\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredPatients.length}\r\n              currentPage={patientsCurrentPage}\r\n              paginate={setPatientsCurrentPage}\r\n            />\r\n            <DataModal\r\n              show={showPatientModal}\r\n              onClose={() => setShowPatientModal(false)}\r\n              data={editingPatient}\r\n              onSave={editingPatient ? handleUpdatePatient : handleAddPatient}\r\n              title={editingPatient ? 'Edit Patient' : 'Add New Patient'}\r\n              idPrefix=\"patient\"\r\n              fields={[\r\n                { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n                { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n                // KLJUČNA IZMJENA: Uklonjeno polje za Email iz forme\r\n                // { name: 'email', label: 'Email', type: 'email', required: true },\r\n                { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n              ]}\r\n            />\r\n          </div>\r\n        );\r\n      case 'appointments':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Appointments</h4>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Patient</th>\r\n                    <th>Doctor</th>\r\n                    <th>Date</th>\r\n                    <th>Time</th>\r\n                    <th>Status</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentAppointments.length > 0 ? (\r\n                    currentAppointments.map(appointment => (\r\n                      <tr key={appointment.id}>\r\n                        <td>{appointment.id}</td>\r\n                        <td>{appointment.patientName}</td>\r\n                        <td>{appointment.doctorName}</td>\r\n                        <td>{appointment.date}</td>\r\n                        <td>{appointment.time}</td>\r\n                        <td>\r\n                          <select\r\n                            className=\"form-select\"\r\n                            value={appointment.status}\r\n                            onChange={(e) => handleUpdateAppointmentStatus(appointment.id, e.target.value)}\r\n                          >\r\n                            <option value=\"Pending\">Pending</option>\r\n                            <option value=\"Confirmed\">Confirmed</option>\r\n                            <option value=\"Completed\">Completed</option>\r\n                            <option value=\"Cancelled\">Cancelled</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => showNotification('Brisanje termina nije implementirano.', 'warning')}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"7\" className=\"text-center\">No appointments found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={appointments.length}\r\n              currentPage={appointmentsCurrentPage}\r\n              paginate={setAppointmentsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'users': // NOVO: Dodan tab za korisnike\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Users</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openUserModal()}>Add New User</button>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Email</th>\r\n                    <th>Full Name</th>\r\n                    <th>Roles</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentUsers.length > 0 ? (\r\n                    currentUsers.map(user => (\r\n                      <tr key={user.id}>\r\n                        <td>{user.id}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{user.name}</td>\r\n                        <td>{user.roles}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openUserModal(user)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteUser(user.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"text-center\">No users found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={users.length}\r\n              currentPage={usersCurrentPage}\r\n              paginate={setUsersCurrentPage}\r\n            />\r\n            <DataModal\r\n              show={showUserModal}\r\n              onClose={() => setShowUserModal(false)}\r\n              data={editingUser}\r\n              onSave={editingUser ? handleUpdateUser : handleAddUser}\r\n              title={editingUser ? 'Edit User' : 'Add New User'}\r\n              idPrefix=\"user\"\r\n              fields={[\r\n                { name: 'email', label: 'Email', type: 'email', required: true },\r\n                { name: 'fullName', label: 'Full Name', type: 'text', required: true },\r\n                { name: 'password', label: 'Password', type: 'password', required: !editingUser },\r\n                { name: 'roles', label: 'Roles (comma-separated)', type: 'text', required: true },\r\n                { name: 'telefon', label: 'Phone', type: 'text', required: false }, // Dodano polje za telefon\r\n              ]}\r\n            />\r\n          </div>\r\n        );\r\n      case 'blog-posts':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Blog Posts</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openBlogPostModal()}>Add New Blog Post</button>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Title</th>\r\n                    <th>Author</th>\r\n                    <th>Date</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentBlogPosts.length > 0 ? (\r\n                    currentBlogPosts.map(post => (\r\n                      <tr key={post.id}>\r\n                        <td>{post.id}</td>\r\n                        <td>{post.title}</td>\r\n                        <td>{post.author}</td>\r\n                        <td>{post.date}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openBlogPostModal(post)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteBlogPost(post.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"text-center\">No blog posts found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={blogPosts.length}\r\n              currentPage={blogPostsCurrentPage}\r\n              paginate={setBlogPostsCurrentPage}\r\n            />\r\n            <DataModal\r\n              show={showBlogPostModal}\r\n              onClose={() => setShowBlogPostModal(false)}\r\n              data={editingBlogPost}\r\n              onSave={editingBlogPost ? handleUpdateBlogPost : handleAddBlogPost}\r\n              title={editingBlogPost ? 'Edit Blog Post' : 'Add New Blog Post'}\r\n              idPrefix=\"blogPost\"\r\n              fields={[\r\n                { name: 'naslov', label: 'Title', type: 'text', required: true },\r\n                { name: 'sadrzaj', label: 'Content', type: 'textarea', required: true },\r\n                { name: 'autor', label: 'Author', type: 'text', required: true },\r\n              ]}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return <p>Select a tab to view content.</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {showAlert && (\r\n        <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      <div className=\"row\">\r\n        <nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" style={{ minHeight: '100vh' }}>\r\n          <div className=\"position-sticky pt-3\">\r\n            <ul className=\"nav flex-column\">\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'overview' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('overview')}>\r\n                  Overview\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'doctors' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('doctors')}>\r\n                  Doctors\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'patients' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('patients')}>\r\n                  Patients\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'appointments' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('appointments')}>\r\n                  Appointments\r\n                </a>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'blog-posts' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('blog-posts')}>\r\n                  Blog Posts\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\">\r\n          {renderContent()}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}