{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\nfunction PatientDashboard() {\n  _s();\n  const {\n    token,\n    user\n  } = useAuth();\n  console.log(\"Trenutni korisnički objekt iz useAuth (PatientDashboard):\", user);\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [appointments, setAppointments] = useState([]);\n  const [medicalHistory, setMedicalHistory] = useState([]);\n  const [patientProfile, setPatientProfile] = {};\n  const [doctors, setDoctors] = useState([]);\n  const [allDoctorAvailableTerms, setAllDoctorAvailableTerms] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [bills, setBills] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState({\n    recipientId: '',\n    subject: '',\n    content: ''\n  });\n  const [replyMessage, setReplyMessage] = useState({\n    messageId: '',\n    content: ''\n  });\n  const [selectedMessage, setSelectedMessage] = null;\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = '';\n  const [alertType, setAlertType] = 'success';\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false);\n  const [newAppointment, setNewAppointment] = useState({\n    doctorId: '',\n    appointmentDate: '',\n    appointmentTime: '',\n    terminId: '',\n    reason: ''\n  });\n  const [editingAppointment, setEditingAppointment] = null;\n  const [loading, setLoading] = useState(true);\n\n  // --- API Calls ---\n\n  const fetchPatientAppointments = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje pregleda.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/zakazani/${user.pacijentId}`, authHeaders);\n      const transformedAppointments = response.data.map(app => ({\n        id: app.pregledID,\n        doctorId: app.doktorID,\n        // Važno: zadrži pacijentID kao `pacijentID` ili ga preimenuj u `patientID` ako je to konvencija backend DTO-a\n        pacijentID: app.pacijentID,\n        // Dodano za slanje nazad backendu\n        appointmentDate: app.datumPregleda,\n        appointmentTime: app.vrijemePregleda,\n        reason: app.komentarPacijenta,\n        status: app.status,\n        terminID: app.terminID,\n        doktorIme: app.doktorIme\n      }));\n      setAppointments(transformedAppointments);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response;\n      console.error('Greška prilikom dohvaćanja pacijentovih pregleda:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje zakazanih pregleda.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMedicalHistory = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje medicinske historije.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedHistory = response.data.map(record => ({\n        id: record.zapisID,\n        patientId: record.pacijentID,\n        doctorId: record.doktorID,\n        doctorName: record.doktorIme,\n        date: record.datumZapisivanja,\n        diagnosis: record.dijagnoza,\n        treatment: record.lijecenje,\n        notes: record.napomene\n      }));\n      setMedicalHistory(transformedHistory);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response2;\n      console.error('Greška prilikom dohvaćanja medicinske historije:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje medicinske historije.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchPatientProfile = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje pacijentovog profila.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, authHeaders);\n      setPatientProfile({\n        id: response.data.pacijentID,\n        firstName: response.data.ime,\n        lastName: response.data.prezime,\n        email: response.data.email,\n        phone: response.data.telefon,\n        datumRodjenja: response.data.datumRodjenja,\n        adresa: response.data.adresa,\n        userId: response.data.userId\n      });\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response3;\n      console.error('Greška prilikom dohvaćanja pacijentovog profila:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje podataka profila.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: doc.userId,\n        firstName: doc.ime,\n        lastName: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\n        email: doc.email,\n        phone: doc.telefon\n      }));\n      setDoctors(transformedDoctors);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response4;\n      console.error('Greška prilikom dohvaćanja doktora:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje liste doktora.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchDoctorAllAvailableTerms = async doktorId => {\n    if (!doktorId) {\n      setAllDoctorAvailableTerms([]);\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/slobodni/${doktorId}`, authHeaders);\n      const termsData = Array.isArray(response.data) ? response.data : [];\n      const available = termsData.map(term => ({\n        terminID: term.terminID,\n        datum: term.datum,\n        vrijeme: term.vrijeme,\n        display: `${term.datum} ${term.vrijeme.substring(0, 5)}`\n      })).sort((a, b) => {\n        const dateTimeA = `${a.datum}T${a.vrijeme}`;\n        const dateTimeB = `${b.datum}T${b.vrijeme}`;\n        return new Date(dateTimeA) - new Date(dateTimeB);\n      });\n      setAllDoctorAvailableTerms(available);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response5;\n      console.error('Greška prilikom dohvaćanja dostupnosti doktora:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje dostupnosti doktora.');\n      setAlertType('danger');\n      setShowAlert(true);\n      setAllDoctorAvailableTerms([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchDocuments = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje dokumenata.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedDocuments = response.data.map(doc => ({\n        id: doc.dokumentID,\n        fileName: doc.nazivDokumenta,\n        documentType: doc.tipDokumenta,\n        uploadDate: doc.datumKreiranja,\n        pristup: doc.pristup\n      }));\n      setDocuments(transformedDocuments);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response6;\n      console.error('Greška prilikom dohvaćanja dokumenata:', ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      setAlertMessage('Neuspješan prijenos dokumenta.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchBills = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje računa.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.pacijentId}`, authHeaders);\n      const transformedBills = response.data.map(bill => ({\n        id: bill.racunID,\n        billDate: bill.datumIzdavanja,\n        amount: bill.iznos,\n        status: bill.status,\n        dueDate: bill.datumDospijeca,\n        opis: bill.opis,\n        doktorIme: bill.doktorIme\n      }));\n      setBills(transformedBills);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response7;\n      console.error('Greška prilikom dohvaćanja računa:', ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje informacija o naplati.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const fetchMessages = async () => {\n    if (!user || !user.pacijentId) {\n      console.warn(\"ID pacijenta nije dostupan za dohvaćanje poruka.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=PACIJENT`, authHeaders);\n      const transformedMessages = response.data.map(msg => ({\n        id: msg.porukaID,\n        senderId: msg.senderId,\n        senderType: msg.senderType,\n        senderIme: msg.senderIme,\n        receiverId: msg.receiverId,\n        receiverType: msg.receiverType,\n        receiverIme: msg.receiverIme,\n        subject: msg.subject,\n        content: msg.content,\n        timestamp: msg.timestamp,\n        replies: msg.replies || []\n      }));\n      setMessages(transformedMessages);\n      setAlertType('success');\n      setShowAlert(false);\n    } catch (error) {\n      var _error$response8;\n      console.error('Greška prilikom dohvaćanja poruka:', ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n      setAlertMessage('Neuspješno dohvaćanje poruka.');\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- useEffect Hooks ---\n  useEffect(() => {\n    const loadAllData = async () => {\n      if (token && user !== null && user !== void 0 && user.pacijentId) {\n        setLoading(true);\n        await Promise.all([fetchPatientAppointments(), fetchMedicalHistory(), fetchPatientProfile(), fetchDoctors(), fetchDocuments(), fetchBills(), fetchMessages()]);\n        setLoading(false);\n      } else if (!token || user && !user.pacijentId) {\n        setLoading(false);\n        if (!token) {\n          console.warn(\"Token nije dostupan. Korisnik nije ulogovan.\");\n        } else if (user && !user.pacijentId) {\n          console.warn(\"Korisnički objekt je dostupan, ali pacijentId nije. Moguće da korisnik nije pacijent.\");\n        }\n      }\n    };\n    loadAllData();\n  }, [token, user]);\n\n  // --- Appointment Scheduling/Cancellation ---\n\n  const openAppointmentModal = (appointment = null) => {\n    if (appointment) {\n      setEditingAppointment(appointment);\n      setNewAppointment({\n        doctorId: appointment.doctorId,\n        appointmentDate: appointment.appointmentDate,\n        appointmentTime: appointment.appointmentTime,\n        terminId: appointment.terminID,\n        reason: appointment.reason\n      });\n      fetchDoctorAllAvailableTerms(appointment.doctorId);\n    } else {\n      setEditingAppointment(null);\n      setNewAppointment({\n        doctorId: '',\n        appointmentDate: '',\n        appointmentTime: '',\n        terminId: '',\n        reason: ''\n      });\n      setAllDoctorAvailableTerms([]);\n    }\n    setShowAppointmentModal(true);\n  };\n  const closeAppointmentModal = () => {\n    setShowAppointmentModal(false);\n    setEditingAppointment(null);\n    setNewAppointment({\n      doctorId: '',\n      appointmentDate: '',\n      appointmentTime: '',\n      terminId: '',\n      reason: ''\n    });\n    setAllDoctorAvailableTerms([]);\n  };\n  const handleNewAppointmentChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let updatedAppointment = {\n      ...newAppointment,\n      [name]: value\n    };\n    if (name === 'doctorId') {\n      updatedAppointment.appointmentDate = '';\n      updatedAppointment.appointmentTime = '';\n      updatedAppointment.terminId = '';\n      if (value) {\n        await fetchDoctorAllAvailableTerms(value);\n      } else {\n        setAllDoctorAvailableTerms([]);\n      }\n    } else if (name === 'terminId') {\n      const selectedTerm = allDoctorAvailableTerms.find(term => term.terminID === parseInt(value));\n      if (selectedTerm) {\n        updatedAppointment.terminId = selectedTerm.terminID;\n        updatedAppointment.appointmentDate = selectedTerm.datum;\n        updatedAppointment.appointmentTime = selectedTerm.vrijeme;\n      } else {\n        updatedAppointment.terminId = '';\n        updatedAppointment.appointmentDate = '';\n        updatedAppointment.appointmentTime = '';\n      }\n    }\n    setNewAppointment(updatedAppointment);\n  };\n  const handleScheduleAppointment = async () => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće zakazati pregled.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason) {\n      setAlertMessage('Molimo odaberite doktora, slobodan termin i navedite razlog.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const appointmentData = {\n        pacijentID: user.pacijentId,\n        // Koristi pacijentID iz user objekta (pravilno dohvaćen)\n        doktorID: parseInt(newAppointment.doctorId),\n        terminID: newAppointment.terminId,\n        datumPregleda: newAppointment.appointmentDate,\n        vrijemePregleda: newAppointment.appointmentTime,\n        komentarPacijenta: newAppointment.reason,\n        status: editingAppointment ? editingAppointment.status : 'zakazan'\n      };\n      let response;\n      if (editingAppointment) {\n        response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${editingAppointment.id}`, appointmentData, authHeaders);\n        setAlertMessage('Pregled uspješno ažuriran!');\n      } else {\n        response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\n        setAlertMessage('Pregled uspješno zakazan!');\n      }\n      setAlertType('success');\n      setShowAlert(true);\n      fetchPatientAppointments();\n      closeAppointmentModal();\n    } catch (error) {\n      var _error$response9, _error$response0, _error$response0$data;\n      console.error('Greška prilikom zakazivanja/ažuriranja pregleda:', ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n      let errorMessage = 'Neuspješno zakazivanje/ažuriranje pregleda. Molimo pokušajte ponovo.';\n      if ((_error$response0 = error.response) !== null && _error$response0 !== void 0 && (_error$response0$data = _error$response0.data) !== null && _error$response0$data !== void 0 && _error$response0$data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      setAlertMessage(errorMessage);\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleCancelAppointment = async appointmentId => {\n    if (window.confirm('Jeste li sigurni da želite otkazati ovaj pregled?')) {\n      if (!user || !user.pacijentId) {\n        // Dodatna provjera za svaki slučaj\n        setAlertMessage('ID pacijenta nije dostupan za otkazivanje. Molimo pokušajte ponovo.');\n        setAlertType('danger');\n        setShowAlert(true);\n        return;\n      }\n      try {\n        const existingApp = appointments.find(app => app.id === appointmentId);\n        if (!existingApp) {\n          setAlertMessage(\"Pregled nije pronađen za otkazivanje.\");\n          setAlertType('danger');\n          setShowAlert(true);\n          return;\n        }\n\n        // KLJUČNA PROMJENA: Eksplicitno dodaj pacijentID u payload\n        const updatedStatusPayload = {\n          ...existingApp,\n          pacijentID: user.pacijentId,\n          // Dodaj pacijentID iz user objekta\n          status: 'otkazan'\n        };\n\n        // Ukloni property koji je možda mapiran sa patientId na frontendu\n        // a backend očekuje pacijentID (case-sensitive)\n        delete updatedStatusPayload.patientId; // Ako postoji, ukloni ga\n\n        await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}`, updatedStatusPayload, authHeaders);\n        setAlertMessage('Pregled uspješno otkazan!');\n        setAlertType('success');\n        setShowAlert(true);\n        fetchPatientAppointments();\n      } catch (error) {\n        var _error$response1, _error$response10, _error$response10$dat;\n        console.error('Greška prilikom otkazivanja pregleda:', ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data) || error.message);\n        setAlertMessage('Neuspješno otkazivanje pregleda. Molimo pokušajte ponovo. ' + (((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.message) || error.message));\n        setAlertType('danger');\n        setShowAlert(true);\n      }\n    }\n  };\n\n  // --- Profile Update ---\n  const handleProfileChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPatientProfile(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSaveProfile = async () => {\n    if (!user || !user.pacijentId || !user.userId) {\n      setAlertMessage('ID pacijenta ili Korisnički ID nije dostupan. Nije moguće sačuvati profil.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const patientDetailsPayload = {\n        pacijentID: user.pacijentId,\n        ime: patientProfile.firstName,\n        prezime: patientProfile.lastName,\n        email: patientProfile.email,\n        telefon: patientProfile.phone,\n        datumRodjenja: patientProfile.datumRodjenja,\n        adresa: patientProfile.adresa,\n        userId: user.userId\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, patientDetailsPayload, authHeaders);\n      const authProfilePayload = {\n        email: patientProfile.email,\n        fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\n        telefon: patientProfile.phone\n      };\n      await axios.put(`${AUTH_API_PREFIX}/users/${user.userId}`, authProfilePayload, authHeaders);\n      setAlertMessage('Profil uspješno ažuriran!');\n      setAlertType('success');\n      setShowAlert(true);\n      fetchPatientProfile();\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response12$dat;\n      console.error('Greška prilikom ažuriranja profila:', ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message);\n      setAlertMessage('Neuspješno ažuriranje profila. Molimo pokušajte ponovo. ' + (((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- Document Upload ---\n  const handleDocumentUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('pacijentID', user.pacijentId);\n    formData.append('tipDokumenta', 'Patient Upload');\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setAlertMessage('Dokument uspješno prenesen!');\n      setAlertType('success');\n      setShowAlert(true);\n      fetchDocuments();\n    } catch (error) {\n      var _error$response13, _error$response14, _error$response14$dat;\n      console.error('Greška prilikom prijenosa dokumenta:', ((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) || error.message);\n      setAlertMessage('Neuspješan prijenos dokumenta. ' + (((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : (_error$response14$dat = _error$response14.data) === null || _error$response14$dat === void 0 ? void 0 : _error$response14$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n\n  // --- Secure Messaging ---\n  const handleNewMessageChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMessage(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleReplyMessageChange = e => {\n    setReplyMessage(prev => ({\n      ...prev,\n      content: e.target.value\n    }));\n  };\n  const handleSendMessage = async () => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće poslati poruku.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\n      setAlertMessage('Molimo popunite sva polja za poruku.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const messageData = {\n        senderId: user.pacijentId,\n        senderType: 'PACIJENT',\n        receiverId: parseInt(newMessage.recipientId),\n        receiverType: 'DOKTOR',\n        subject: newMessage.subject,\n        content: newMessage.content\n      };\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\n      setAlertMessage('Poruka uspješno poslana!');\n      setAlertType('success');\n      setShowAlert(true);\n      setNewMessage({\n        recipientId: '',\n        subject: '',\n        content: ''\n      });\n      fetchMessages();\n    } catch (error) {\n      var _error$response15, _error$response16, _error$response16$dat;\n      console.error('Greška prilikom slanja poruke:', ((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.data) || error.message);\n      setAlertMessage('Neuspješno slanje poruke. ' + (((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : (_error$response16$dat = _error$response16.data) === null || _error$response16$dat === void 0 ? void 0 : _error$response16$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleReply = async messageId => {\n    if (!user || !user.pacijentId) {\n      setAlertMessage('ID pacijenta nije dostupan. Nije moguće odgovoriti.');\n      setAlertType('danger');\n      setShowAlert(true);\n      return;\n    }\n    if (!replyMessage.content) {\n      setAlertMessage('Sadržaj odgovora ne može biti prazan.');\n      setAlertType('warning');\n      setShowAlert(true);\n      return;\n    }\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\n        senderId: user.pacijentId,\n        senderType: 'PACIJENT',\n        content: replyMessage.content\n      }, authHeaders);\n      setAlertMessage('Odgovor uspješno poslan!');\n      setAlertType('success');\n      setShowAlert(true);\n      setReplyMessage({\n        messageId: '',\n        content: ''\n      });\n      fetchMessages();\n      setSelectedMessage(prev => ({\n        ...prev,\n        replies: [...(prev.replies || []), {\n          senderId: user.pacijentId,\n          senderIme: user.fullName,\n          senderType: 'PACIJENT',\n          content: replyMessage.content,\n          timestamp: new Date().toISOString()\n        }]\n      }));\n    } catch (error) {\n      var _error$response17, _error$response18, _error$response18$dat;\n      console.error('Greška prilikom slanja odgovora:', ((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : _error$response17.data) || error.message);\n      setAlertMessage('Neuspješno slanje odgovora. ' + (((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : (_error$response18$dat = _error$response18.data) === null || _error$response18$dat === void 0 ? void 0 : _error$response18$dat.message) || error.message));\n      setAlertType('danger');\n      setShowAlert(true);\n    }\n  };\n  const handleViewMessage = message => {\n    setSelectedMessage(message);\n  };\n  const closeMessageModal = () => {\n    setSelectedMessage(null);\n    setReplyMessage({\n      messageId: '',\n      content: ''\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-2\",\n        children: \"U\\u010Ditavanje podataka kontrolne plo\\u010De...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-white p-3\",\n      style: {\n        width: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-4\",\n        children: \"Kontrolna plo\\u010Da pacijenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('overview'),\n            children: \"Pregled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('myAppointments'),\n            children: \"Moji pregledi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('medicalHistory'),\n            children: \"Medicinska historija\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('documents'),\n            children: \"Moji dokumenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('billing'),\n            children: \"Naplata i pla\\u0107anja\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('messages'),\n            children: \"Poruke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('doctorSearch'),\n            children: \"Prona\\u0111i doktora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('profileSettings'),\n            children: \"Postavke profila\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 p-4 bg-light\",\n      children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: alertType,\n        onClose: () => setShowAlert(false),\n        dismissible: true,\n        className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n        style: {\n          zIndex: 1050\n        },\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: \"Kontrolna plo\\u010Da pacijenta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 17\n      }, this), activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Dobrodo\\u0161li, \", patientProfile.firstName || (user ? user.fullName : 'Pacijent'), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ovo je va\\u0161 pregled pacijenta. Ovdje mo\\u017Eete brzo vidjeti svoje nadolaze\\u0107e preglede i nedavne aktivnosti.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: \"Nadolaze\\u0107i pregledi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-group list-group-flush\",\n                children: appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').length > 0 ? appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').map(app => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item d-flex justify-content-between align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [app.appointmentDate, \" u \", app.appointmentTime]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 761,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Razlog: \", app.reason]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 763,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 764,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Doktor: \", app.doktorIme]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 765,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 760,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`,\n                    children: app.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 767,\n                    columnNumber: 53\n                  }, this)]\n                }, app.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 49\n                }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: \"Nema nadolaze\\u0107ih pregleda.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 771,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 21\n      }, this), activeTab === 'myAppointments' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moji pregledi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => openAppointmentModal(),\n          children: \"Zaka\\u017Ei novi pregled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 25\n        }, this), appointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Doktor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vrijeme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Razlog\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: appointments.map(app => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.doktorIme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.appointmentDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.appointmentTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.reason\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${app.status === 'obavljen' ? 'success' : app.status === 'zakazan' ? 'warning' : 'danger'}`,\n                  children: app.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 805,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.status === 'zakazan' || app.status === 'potvrđen' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    size: \"sm\",\n                    onClick: () => handleCancelAppointment(app.id),\n                    children: \"Otka\\u017Ei\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Nema dostupnih akcija\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 45\n              }, this)]\n            }, app.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111ene historije pregleda. Zaka\\u017Eite svoj prvi pregled!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 21\n      }, this), activeTab === 'medicalHistory' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moja medicinska historija\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 25\n        }, this), medicalHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: medicalHistory.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 41\n            }, this), \" \", record.date, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 79\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Dijagnoza:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 41\n            }, this), \" \", record.diagnosis, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 88\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Lije\\u010Denje:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 41\n            }, this), \" \", record.treatment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 88\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Doktor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 41\n            }, this), \" \", record.doctorName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 86\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Napomene:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 837,\n              columnNumber: 41\n            }, this), \" \", record.notes || 'N/A']\n          }, record.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih zapisa medicinske historije.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 21\n      }, this), activeTab === 'documents' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moji dokumenti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formFile\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Prenesi novi dokument\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: handleDocumentUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 25\n        }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Naziv dokumenta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum prijenosa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 861,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Pristup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.documentType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(doc.uploadDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 871,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`,\n                  children: doc.pristup\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 872,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  href: `${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${doc.id}`,\n                  target: \"_blank\",\n                  children: \"Preuzmi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 874,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 873,\n                columnNumber: 45\n              }, this)]\n            }, doc.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih dokumenata.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 21\n      }, this), activeTab === 'billing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Naplata i pla\\u0107anja\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 25\n        }, this), bills.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID ra\\u010Duna\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Datum izdavanja\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 894,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Iznos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Opis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Izdao\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 898,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: bills.map(bill => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(bill.billDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.amount ? bill.amount.toFixed(2) : 'N/A', \" KM\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 907,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `badge bg-${bill.status === 'PLACEN' ? 'success' : 'warning'}`,\n                  children: bill.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 908,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.opis\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: bill.doktorIme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [bill.status === 'NEPLACEN' && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  className: \"me-2\",\n                  children: \"Plati sada\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 913,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  children: \"Pogledaj detalje\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 915,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 45\n              }, this)]\n            }, bill.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih zapisa o naplati.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 21\n      }, this), activeTab === 'messages' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Moje poruke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: () => setNewMessage({\n            recipientId: '',\n            subject: '',\n            content: ''\n          }),\n          children: \"Sastavi novu poruku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 25\n        }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Od: \", msg.senderIme || (msg.senderType === 'DOKTOR' ? `Doktor (${msg.senderId})` : 'Ja')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 45\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 151\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Naslov:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 938,\n                columnNumber: 45\n              }, this), \" \", msg.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 938,\n                columnNumber: 84\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: new Date(msg.timestamp).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 939,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              size: \"sm\",\n              onClick: () => handleViewMessage(msg),\n              children: \"Pogledaj poruku\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 41\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih poruka.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sastavi novu poruku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Primalac (Doktor)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"recipientId\",\n              value: newMessage.recipientId,\n              onChange: handleNewMessageChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite doktora --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 37\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.id,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Naslov\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 969,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"subject\",\n              value: newMessage.subject,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Sadr\\u017Eaj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"content\",\n              value: newMessage.content,\n              onChange: handleNewMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 980,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSendMessage,\n            children: \"Po\\u0161alji poruku\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 989,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 21\n      }, this), activeTab === 'doctorSearch' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Prona\\u0111i doktora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pretra\\u017Eite doktore po imenu ili specijalnosti kako biste prona\\u0161li pravu njegu za vas.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Pretra\\u017Ei po imenu ili specijalnosti...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 999,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 25\n        }, this), doctors.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Ime\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Specijalnost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1006,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Kontakt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Akcije\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1004,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1003,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1014,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doctor.specialty || 'Opšti praktičar'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1015,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [doctor.email, \" | \", doctor.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"sm\",\n                  onClick: () => {\n                    setNewAppointment(prev => ({\n                      ...prev,\n                      doctorId: doctor.id\n                    }));\n                    openAppointmentModal();\n                  },\n                  children: \"Zaka\\u017Ei pregled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1018,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1017,\n                columnNumber: 45\n              }, this)]\n            }, doctor.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1011,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nema prona\\u0111enih doktora.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 21\n      }, this), activeTab === 'profileSettings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Postavke profila\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formFirstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Ime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              value: patientProfile.firstName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1039,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formLastName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Prezime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1047,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              value: patientProfile.lastName || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: patientProfile.email || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formPhone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Telefon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"phone\",\n              value: patientProfile.phone || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1066,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAddress\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Adresa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1074,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"adresa\",\n              value: patientProfile.adresa || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1075,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDatumRodjenja\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Datum ro\\u0111enja\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"datumRodjenja\",\n              value: patientProfile.datumRodjenja || '',\n              onChange: handleProfileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSaveProfile,\n            children: \"Sa\\u010Duvaj profil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1034,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAppointmentModal,\n      onHide: closeAppointmentModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: editingAppointment ? 'Uredi pregled' : 'Zakaži novi pregled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDoctor\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odaberite doktora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"doctorId\",\n              value: newAppointment.doctorId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite doktora --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 33\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.id,\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, doctor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1117,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1106,\n            columnNumber: 25\n          }, this), newAppointment.doctorId && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formAvailableTerm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odaberite slobodan termin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 33\n            }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 37\n            }, this) : allDoctorAvailableTerms.length > 0 ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"terminId\",\n              value: newAppointment.terminId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Odaberite datum i vrijeme --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1135,\n                columnNumber: 41\n              }, this), allDoctorAvailableTerms.map(term => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term.terminID,\n                children: term.display\n              }, term.terminID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1137,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1128,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: \"Nema dostupnih termina za ovog doktora.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1141,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1123,\n            columnNumber: 29\n          }, this), newAppointment.terminId && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formAppointmentDateDisplay\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Odabrani datum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: newAppointment.appointmentDate,\n                readOnly: true,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1149,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formAppointmentTimeDisplay\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Odabrano vrijeme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: newAppointment.appointmentTime ? newAppointment.appointmentTime.substring(0, 5) : '',\n                readOnly: true,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1160,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formReason\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Razlog za pregled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"reason\",\n              value: newAppointment.reason,\n              onChange: handleNewAppointmentChange,\n              placeholder: \"npr. Op\\u0161ti pregled, specifi\\u010Dni simptomi...\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1172,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeAppointmentModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleScheduleAppointment,\n          disabled: !newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason || loading,\n          children: editingAppointment ? 'Ažuriraj pregled' : 'Zakaži pregled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: !!selectedMessage,\n      onHide: closeMessageModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Poruka: \", selectedMessage === null || selectedMessage === void 0 ? void 0 : selectedMessage.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1201,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Od:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 32\n            }, this), \" \", selectedMessage.senderIme || (selectedMessage.senderType === 'DOKTOR' ? `Doktor (${selectedMessage.senderId})` : 'Ja')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1207,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedMessage.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1209,\n            columnNumber: 29\n          }, this), selectedMessage.replies && selectedMessage.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Odgovori:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1213,\n              columnNumber: 37\n            }, this), selectedMessage.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border p-2 mb-2 rounded bg-light\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [reply.senderIme || (reply.senderType === 'DOKTOR' ? `Doktor (${reply.senderId})` : 'Ja'), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1216,\n                columnNumber: 45\n              }, this), \" \", reply.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1217,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: new Date(reply.timestamp).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1218,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1215,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1212,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Odgovor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1225,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: replyMessage.content,\n              onChange: handleReplyMessageChange,\n              placeholder: \"Upi\\u0161ite va\\u0161 odgovor ovdje...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1226,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mt-2\",\n            onClick: () => handleReply(selectedMessage.id),\n            children: \"Po\\u0161alji odgovor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1234,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeMessageModal,\n          children: \"Zatvori\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1239,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1238,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 661,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDashboard, \"7ed6Gu/YHXuNLSnOk2IKC18NK4o=\", false, function () {\n  return [useAuth];\n});\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["axios","useAuth","React","useState","useEffect","useMemo","Modal","Button","Form","Alert","Spinner","Tab","Tabs","jsxDEV","_jsxDEV","Fragment","_Fragment","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","OBAVIJESTI_DOKUMENTI_API_PREFIX","AUTH_API_PREFIX","PatientDashboard","_s","token","user","console","log","authHeaders","headers","activeTab","setActiveTab","appointments","setAppointments","medicalHistory","setMedicalHistory","patientProfile","setPatientProfile","doctors","setDoctors","allDoctorAvailableTerms","setAllDoctorAvailableTerms","documents","setDocuments","bills","setBills","messages","setMessages","newMessage","setNewMessage","recipientId","subject","content","replyMessage","setReplyMessage","messageId","selectedMessage","setSelectedMessage","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","showAppointmentModal","setShowAppointmentModal","newAppointment","setNewAppointment","doctorId","appointmentDate","appointmentTime","terminId","reason","editingAppointment","setEditingAppointment","loading","setLoading","fetchPatientAppointments","pacijentId","warn","response","get","transformedAppointments","data","map","app","id","pregledID","doktorID","pacijentID","datumPregleda","vrijemePregleda","komentarPacijenta","status","terminID","doktorIme","error","_error$response","message","fetchMedicalHistory","transformedHistory","record","zapisID","patientId","doctorName","date","datumZapisivanja","diagnosis","dijagnoza","treatment","lijecenje","notes","napomene","_error$response2","fetchPatientProfile","firstName","ime","lastName","prezime","email","phone","telefon","datumRodjenja","adresa","userId","_error$response3","fetchDoctors","transformedDoctors","doc","specialty","Array","isArray","specijalizacije","join","_error$response4","fetchDoctorAllAvailableTerms","doktorId","termsData","available","term","datum","vrijeme","display","substring","sort","a","b","dateTimeA","dateTimeB","Date","_error$response5","fetchDocuments","transformedDocuments","dokumentID","fileName","nazivDokumenta","documentType","tipDokumenta","uploadDate","datumKreiranja","pristup","_error$response6","fetchBills","transformedBills","bill","racunID","billDate","datumIzdavanja","amount","iznos","dueDate","datumDospijeca","opis","_error$response7","fetchMessages","transformedMessages","msg","porukaID","senderId","senderType","senderIme","receiverId","receiverType","receiverIme","timestamp","replies","_error$response8","loadAllData","Promise","all","openAppointmentModal","appointment","closeAppointmentModal","handleNewAppointmentChange","e","name","value","target","updatedAppointment","selectedTerm","find","parseInt","handleScheduleAppointment","appointmentData","put","post","_error$response9","_error$response0","_error$response0$data","errorMessage","handleCancelAppointment","appointmentId","window","confirm","existingApp","updatedStatusPayload","_error$response1","_error$response10","_error$response10$dat","handleProfileChange","prev","handleSaveProfile","patientDetailsPayload","authProfilePayload","fullName","_error$response11","_error$response12","_error$response12$dat","handleDocumentUpload","file","files","formData","FormData","append","_error$response13","_error$response14","_error$response14$dat","handleNewMessageChange","handleReplyMessageChange","handleSendMessage","messageData","_error$response15","_error$response16","_error$response16$dat","handleReply","toISOString","_error$response17","_error$response18","_error$response18$dat","handleViewMessage","closeMessageModal","className","style","minHeight","children","animation","role","_jsxFileName","lineNumber","columnNumber","width","onClick","variant","onClose","dismissible","zIndex","filter","length","size","index","Group","controlId","Label","Control","type","onChange","toLocaleDateString","href","toFixed","toLocaleString","as","required","doctor","rows","placeholder","show","onHide","Header","closeButton","Title","Body","readOnly","disabled","Footer","reply","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/PatientDashboard.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner, Tab, Tabs } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\r\n\r\nfunction PatientDashboard() {\r\n    const { token, user } = useAuth();\r\n    console.log(\"Trenutni korisnički objekt iz useAuth (PatientDashboard):\", user);\r\n\r\n    const authHeaders = useMemo(() => ({\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }), [token]);\r\n\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [medicalHistory, setMedicalHistory] = useState([]);\r\n    const [patientProfile, setPatientProfile] = {};\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [allDoctorAvailableTerms, setAllDoctorAvailableTerms] = useState([]);\r\n    const [documents, setDocuments] = useState([]);\r\n    const [bills, setBills] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState({ recipientId: '', subject: '', content: '' });\r\n    const [replyMessage, setReplyMessage] = useState({ messageId: '', content: '' });\r\n    const [selectedMessage, setSelectedMessage] = null;\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = '';\r\n    const [alertType, setAlertType] = 'success';\r\n\r\n    const [showAppointmentModal, setShowAppointmentModal] = useState(false);\r\n    const [newAppointment, setNewAppointment] = useState({\r\n        doctorId: '',\r\n        appointmentDate: '',\r\n        appointmentTime: '',\r\n        terminId: '',\r\n        reason: ''\r\n    });\r\n    const [editingAppointment, setEditingAppointment] = null;\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // --- API Calls ---\r\n\r\n    const fetchPatientAppointments = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje pregleda.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/zakazani/${user.pacijentId}`, authHeaders);\r\n            const transformedAppointments = response.data.map(app => ({\r\n                id: app.pregledID,\r\n                doctorId: app.doktorID,\r\n                // Važno: zadrži pacijentID kao `pacijentID` ili ga preimenuj u `patientID` ako je to konvencija backend DTO-a\r\n                pacijentID: app.pacijentID, // Dodano za slanje nazad backendu\r\n                appointmentDate: app.datumPregleda,\r\n                appointmentTime: app.vrijemePregleda,\r\n                reason: app.komentarPacijenta,\r\n                status: app.status,\r\n                terminID: app.terminID,\r\n                doktorIme: app.doktorIme\r\n            }));\r\n            setAppointments(transformedAppointments);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja pacijentovih pregleda:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje zakazanih pregleda.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMedicalHistory = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje medicinske historije.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedHistory = response.data.map(record => ({\r\n                id: record.zapisID,\r\n                patientId: record.pacijentID,\r\n                doctorId: record.doktorID,\r\n                doctorName: record.doktorIme,\r\n                date: record.datumZapisivanja,\r\n                diagnosis: record.dijagnoza,\r\n                treatment: record.lijecenje,\r\n                notes: record.napomene\r\n            }));\r\n            setMedicalHistory(transformedHistory);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja medicinske historije:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje medicinske historije.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchPatientProfile = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje pacijentovog profila.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, authHeaders);\r\n            setPatientProfile({\r\n                id: response.data.pacijentID,\r\n                firstName: response.data.ime,\r\n                lastName: response.data.prezime,\r\n                email: response.data.email,\r\n                phone: response.data.telefon,\r\n                datumRodjenja: response.data.datumRodjenja,\r\n                adresa: response.data.adresa,\r\n                userId: response.data.userId\r\n            });\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja pacijentovog profila:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje podataka profila.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctors = async () => {\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n            const transformedDoctors = response.data.map(doc => ({\r\n                id: doc.doktorID,\r\n                userId: doc.userId,\r\n                firstName: doc.ime,\r\n                lastName: doc.prezime,\r\n                specialty: Array.isArray(doc.specijalizacije) ? doc.specijalizacije.join(', ') : doc.specijalizacije,\r\n                email: doc.email,\r\n                phone: doc.telefon\r\n            }));\r\n            setDoctors(transformedDoctors);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja doktora:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje liste doktora.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchDoctorAllAvailableTerms = async (doktorId) => {\r\n        if (!doktorId) {\r\n            setAllDoctorAvailableTerms([]);\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/slobodni/${doktorId}`, authHeaders);\r\n            const termsData = Array.isArray(response.data) ? response.data : [];\r\n            const available = termsData\r\n                .map(term => ({\r\n                    terminID: term.terminID,\r\n                    datum: term.datum,\r\n                    vrijeme: term.vrijeme,\r\n                    display: `${term.datum} ${term.vrijeme.substring(0, 5)}`\r\n                }))\r\n                .sort((a, b) => {\r\n                    const dateTimeA = `${a.datum}T${a.vrijeme}`;\r\n                    const dateTimeB = `${b.datum}T${b.vrijeme}`;\r\n                    return new Date(dateTimeA) - new Date(dateTimeB);\r\n                });\r\n            setAllDoctorAvailableTerms(available);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja dostupnosti doktora:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje dostupnosti doktora.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            setAllDoctorAvailableTerms([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchDocuments = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje dokumenata.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedDocuments = response.data.map(doc => ({\r\n                id: doc.dokumentID,\r\n                fileName: doc.nazivDokumenta,\r\n                documentType: doc.tipDokumenta,\r\n                uploadDate: doc.datumKreiranja,\r\n                pristup: doc.pristup\r\n            }));\r\n            setDocuments(transformedDocuments);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja dokumenata:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješan prijenos dokumenta.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchBills = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje računa.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/racuni/pacijent/${user.pacijentId}`, authHeaders);\r\n            const transformedBills = response.data.map(bill => ({\r\n                id: bill.racunID,\r\n                billDate: bill.datumIzdavanja,\r\n                amount: bill.iznos,\r\n                status: bill.status,\r\n                dueDate: bill.datumDospijeca,\r\n                opis: bill.opis,\r\n                doktorIme: bill.doktorIme\r\n            }));\r\n            setBills(transformedBills);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja računa:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje informacija o naplati.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            console.warn(\"ID pacijenta nije dostupan za dohvaćanje poruka.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=PACIJENT`, authHeaders);\r\n            const transformedMessages = response.data.map(msg => ({\r\n                id: msg.porukaID,\r\n                senderId: msg.senderId,\r\n                senderType: msg.senderType,\r\n                senderIme: msg.senderIme,\r\n                receiverId: msg.receiverId,\r\n                receiverType: msg.receiverType,\r\n                receiverIme: msg.receiverIme,\r\n                subject: msg.subject,\r\n                content: msg.content,\r\n                timestamp: msg.timestamp,\r\n                replies: msg.replies || []\r\n            }));\r\n            setMessages(transformedMessages);\r\n            setAlertType('success');\r\n            setShowAlert(false);\r\n        } catch (error) {\r\n            console.error('Greška prilikom dohvaćanja poruka:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno dohvaćanje poruka.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- useEffect Hooks ---\r\n    useEffect(() => {\r\n        const loadAllData = async () => {\r\n            if (token && user?.pacijentId) {\r\n                setLoading(true);\r\n                await Promise.all([\r\n                    fetchPatientAppointments(),\r\n                    fetchMedicalHistory(),\r\n                    fetchPatientProfile(),\r\n                    fetchDoctors(),\r\n                    fetchDocuments(),\r\n                    fetchBills(),\r\n                    fetchMessages()\r\n                ]);\r\n                setLoading(false);\r\n            } else if (!token || (user && !user.pacijentId)) {\r\n                setLoading(false);\r\n                if (!token) {\r\n                    console.warn(\"Token nije dostupan. Korisnik nije ulogovan.\");\r\n                } else if (user && !user.pacijentId) {\r\n                    console.warn(\"Korisnički objekt je dostupan, ali pacijentId nije. Moguće da korisnik nije pacijent.\");\r\n                }\r\n            }\r\n        };\r\n        loadAllData();\r\n    }, [token, user]);\r\n\r\n\r\n    // --- Appointment Scheduling/Cancellation ---\r\n\r\n    const openAppointmentModal = (appointment = null) => {\r\n        if (appointment) {\r\n            setEditingAppointment(appointment);\r\n            setNewAppointment({\r\n                doctorId: appointment.doctorId,\r\n                appointmentDate: appointment.appointmentDate,\r\n                appointmentTime: appointment.appointmentTime,\r\n                terminId: appointment.terminID,\r\n                reason: appointment.reason\r\n            });\r\n            fetchDoctorAllAvailableTerms(appointment.doctorId);\r\n        } else {\r\n            setEditingAppointment(null);\r\n            setNewAppointment({\r\n                doctorId: '',\r\n                appointmentDate: '',\r\n                appointmentTime: '',\r\n                terminId: '',\r\n                reason: ''\r\n            });\r\n            setAllDoctorAvailableTerms([]);\r\n        }\r\n        setShowAppointmentModal(true);\r\n    };\r\n\r\n    const closeAppointmentModal = () => {\r\n        setShowAppointmentModal(false);\r\n        setEditingAppointment(null);\r\n        setNewAppointment({\r\n            doctorId: '',\r\n            appointmentDate: '',\r\n            appointmentTime: '',\r\n            terminId: '',\r\n            reason: ''\r\n        });\r\n        setAllDoctorAvailableTerms([]);\r\n    };\r\n\r\n    const handleNewAppointmentChange = async (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        let updatedAppointment = { ...newAppointment, [name]: value };\r\n\r\n        if (name === 'doctorId') {\r\n            updatedAppointment.appointmentDate = '';\r\n            updatedAppointment.appointmentTime = '';\r\n            updatedAppointment.terminId = '';\r\n            if (value) {\r\n                await fetchDoctorAllAvailableTerms(value);\r\n            } else {\r\n                setAllDoctorAvailableTerms([]);\r\n            }\r\n        } else if (name === 'terminId') {\r\n            const selectedTerm = allDoctorAvailableTerms.find(term => term.terminID === parseInt(value));\r\n            if (selectedTerm) {\r\n                updatedAppointment.terminId = selectedTerm.terminID;\r\n                updatedAppointment.appointmentDate = selectedTerm.datum;\r\n                updatedAppointment.appointmentTime = selectedTerm.vrijeme;\r\n            } else {\r\n                updatedAppointment.terminId = '';\r\n                updatedAppointment.appointmentDate = '';\r\n                updatedAppointment.appointmentTime = '';\r\n            }\r\n        }\r\n        setNewAppointment(updatedAppointment);\r\n    };\r\n\r\n\r\n    const handleScheduleAppointment = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće zakazati pregled.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        if (!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason) {\r\n            setAlertMessage('Molimo odaberite doktora, slobodan termin i navedite razlog.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const appointmentData = {\r\n                pacijentID: user.pacijentId, // Koristi pacijentID iz user objekta (pravilno dohvaćen)\r\n                doktorID: parseInt(newAppointment.doctorId),\r\n                terminID: newAppointment.terminId,\r\n                datumPregleda: newAppointment.appointmentDate,\r\n                vrijemePregleda: newAppointment.appointmentTime,\r\n                komentarPacijenta: newAppointment.reason,\r\n                status: editingAppointment ? editingAppointment.status : 'zakazan',\r\n            };\r\n\r\n            let response;\r\n            if (editingAppointment) {\r\n                response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${editingAppointment.id}`, appointmentData, authHeaders);\r\n                setAlertMessage('Pregled uspješno ažuriran!');\r\n            } else {\r\n                response = await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, authHeaders);\r\n                setAlertMessage('Pregled uspješno zakazan!');\r\n            }\r\n\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchPatientAppointments();\r\n            closeAppointmentModal();\r\n        } catch (error) {\r\n            console.error('Greška prilikom zakazivanja/ažuriranja pregleda:', error.response?.data || error.message);\r\n            let errorMessage = 'Neuspješno zakazivanje/ažuriranje pregleda. Molimo pokušajte ponovo.';\r\n            if (error.response?.data?.message) {\r\n                errorMessage = error.response.data.message;\r\n            } else if (error.message) {\r\n                errorMessage = error.message;\r\n            }\r\n            setAlertMessage(errorMessage);\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleCancelAppointment = async (appointmentId) => {\r\n        if (window.confirm('Jeste li sigurni da želite otkazati ovaj pregled?')) {\r\n            if (!user || !user.pacijentId) { // Dodatna provjera za svaki slučaj\r\n                setAlertMessage('ID pacijenta nije dostupan za otkazivanje. Molimo pokušajte ponovo.');\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n                return;\r\n            }\r\n            try {\r\n                const existingApp = appointments.find(app => app.id === appointmentId);\r\n                if (!existingApp) {\r\n                    setAlertMessage(\"Pregled nije pronađen za otkazivanje.\");\r\n                    setAlertType('danger');\r\n                    setShowAlert(true);\r\n                    return;\r\n                }\r\n\r\n                // KLJUČNA PROMJENA: Eksplicitno dodaj pacijentID u payload\r\n                const updatedStatusPayload = {\r\n                    ...existingApp,\r\n                    pacijentID: user.pacijentId, // Dodaj pacijentID iz user objekta\r\n                    status: 'otkazan'\r\n                };\r\n\r\n                // Ukloni property koji je možda mapiran sa patientId na frontendu\r\n                // a backend očekuje pacijentID (case-sensitive)\r\n                delete updatedStatusPayload.patientId; // Ako postoji, ukloni ga\r\n\r\n\r\n                await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${appointmentId}`, updatedStatusPayload, authHeaders);\r\n                setAlertMessage('Pregled uspješno otkazan!');\r\n                setAlertType('success');\r\n                setShowAlert(true);\r\n                fetchPatientAppointments();\r\n            } catch (error) {\r\n                console.error('Greška prilikom otkazivanja pregleda:', error.response?.data || error.message);\r\n                setAlertMessage('Neuspješno otkazivanje pregleda. Molimo pokušajte ponovo. ' + (error.response?.data?.message || error.message));\r\n                setAlertType('danger');\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    // --- Profile Update ---\r\n    const handleProfileChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPatientProfile(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSaveProfile = async () => {\r\n        if (!user || !user.pacijentId || !user.userId) {\r\n            setAlertMessage('ID pacijenta ili Korisnički ID nije dostupan. Nije moguće sačuvati profil.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const patientDetailsPayload = {\r\n                pacijentID: user.pacijentId,\r\n                ime: patientProfile.firstName,\r\n                prezime: patientProfile.lastName,\r\n                email: patientProfile.email,\r\n                telefon: patientProfile.phone,\r\n                datumRodjenja: patientProfile.datumRodjenja,\r\n                adresa: patientProfile.adresa,\r\n                userId: user.userId\r\n            };\r\n            await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${user.pacijentId}`, patientDetailsPayload, authHeaders);\r\n\r\n            const authProfilePayload = {\r\n                email: patientProfile.email,\r\n                fullName: `${patientProfile.firstName} ${patientProfile.lastName}`,\r\n                telefon: patientProfile.phone,\r\n            };\r\n            await axios.put(`${AUTH_API_PREFIX}/users/${user.userId}`, authProfilePayload, authHeaders);\r\n\r\n\r\n            setAlertMessage('Profil uspješno ažuriran!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchPatientProfile();\r\n        } catch (error) {\r\n            console.error('Greška prilikom ažuriranja profila:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno ažuriranje profila. Molimo pokušajte ponovo. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- Document Upload ---\r\n    const handleDocumentUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('pacijentID', user.pacijentId);\r\n        formData.append('tipDokumenta', 'Patient Upload');\r\n\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            setAlertMessage('Dokument uspješno prenesen!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            fetchDocuments();\r\n        } catch (error) {\r\n            console.error('Greška prilikom prijenosa dokumenta:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješan prijenos dokumenta. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    // --- Secure Messaging ---\r\n    const handleNewMessageChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewMessage(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleReplyMessageChange = (e) => {\r\n        setReplyMessage(prev => ({ ...prev, content: e.target.value }));\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće poslati poruku.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\r\n            setAlertMessage('Molimo popunite sva polja za poruku.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const messageData = {\r\n                senderId: user.pacijentId,\r\n                senderType: 'PACIJENT',\r\n                receiverId: parseInt(newMessage.recipientId),\r\n                receiverType: 'DOKTOR',\r\n                subject: newMessage.subject,\r\n                content: newMessage.content\r\n            };\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\r\n            setAlertMessage('Poruka uspješno poslana!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setNewMessage({ recipientId: '', subject: '', content: '' });\r\n            fetchMessages();\r\n        } catch (error) {\r\n            console.error('Greška prilikom slanja poruke:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno slanje poruke. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleReply = async (messageId) => {\r\n        if (!user || !user.pacijentId) {\r\n            setAlertMessage('ID pacijenta nije dostupan. Nije moguće odgovoriti.');\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        if (!replyMessage.content) {\r\n            setAlertMessage('Sadržaj odgovora ne može biti prazan.');\r\n            setAlertType('warning');\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, {\r\n                senderId: user.pacijentId,\r\n                senderType: 'PACIJENT',\r\n                content: replyMessage.content\r\n            }, authHeaders);\r\n            setAlertMessage('Odgovor uspješno poslan!');\r\n            setAlertType('success');\r\n            setShowAlert(true);\r\n            setReplyMessage({ messageId: '', content: '' });\r\n            fetchMessages();\r\n            setSelectedMessage(prev => ({\r\n                ...prev,\r\n                replies: [...(prev.replies || []), {\r\n                    senderId: user.pacijentId,\r\n                    senderIme: user.fullName,\r\n                    senderType: 'PACIJENT',\r\n                    content: replyMessage.content,\r\n                    timestamp: new Date().toISOString()\r\n                }]\r\n            }));\r\n        } catch (error) {\r\n            console.error('Greška prilikom slanja odgovora:', error.response?.data || error.message);\r\n            setAlertMessage('Neuspješno slanje odgovora. ' + (error.response?.data?.message || error.message));\r\n            setAlertType('danger');\r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleViewMessage = (message) => {\r\n        setSelectedMessage(message);\r\n    };\r\n\r\n    const closeMessageModal = () => {\r\n        setSelectedMessage(null);\r\n        setReplyMessage({ messageId: '', content: '' });\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Učitavanje...</span>\r\n                </Spinner>\r\n                <p className=\"ms-2\">Učitavanje podataka kontrolne ploče...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ minHeight: '100vh' }}>\r\n            {/* Sidebar */}\r\n            <div className=\"bg-dark text-white p-3\" style={{ width: '250px' }}>\r\n                <h4 className=\"mb-4\">Kontrolna ploča pacijenta</h4>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('overview')}\r\n                        >\r\n                            Pregled\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'myAppointments' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('myAppointments')}\r\n                        >\r\n                            Moji pregledi\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'medicalHistory' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('medicalHistory')}\r\n                        >\r\n                            Medicinska historija\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('documents')}\r\n                        >\r\n                            Moji dokumenti\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'billing' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('billing')}\r\n                        >\r\n                            Naplata i plaćanja\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('messages')}\r\n                        >\r\n                            Poruke\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'doctorSearch' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('doctorSearch')}\r\n                        >\r\n                            Pronađi doktora\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'profileSettings' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('profileSettings')}\r\n                        >\r\n                            Postavke profila\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            {/* Main Content Area */}\r\n            <div className=\"flex-grow-1 p-4 bg-light\">\r\n                {showAlert && (\r\n                    <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n                        {alertMessage}\r\n                    </Alert>\r\n                )}\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <h2 className=\"mb-0\">Kontrolna ploča pacijenta</h2>\r\n                </div>\r\n\r\n                {/* Content based on activeTab */}\r\n                {activeTab === 'overview' && (\r\n                    <div>\r\n                        <h3>Dobrodošli, {patientProfile.firstName || (user ? user.fullName : 'Pacijent')}!</h3>\r\n                        <p>Ovo je vaš pregled pacijenta. Ovdje možete brzo vidjeti svoje nadolazeće preglede i nedavne aktivnosti.</p>\r\n                        <div className=\"row mt-4\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        Nadolazeći pregledi\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        {appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').length > 0 ? (\r\n                                            appointments.filter(app => app.status === 'zakazan' || app.status === 'potvrđen').map(app => (\r\n                                                <li key={app.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                    <div>\r\n                                                        <strong>{app.appointmentDate} u {app.appointmentTime}</strong>\r\n                                                        <br />\r\n                                                        <small>Razlog: {app.reason}</small>\r\n                                                        <br />\r\n                                                        <small>Doktor: {app.doktorIme}</small>\r\n                                                    </div>\r\n                                                    <span className={`badge bg-${app.status === 'potvrđen' ? 'success' : 'warning'}`}>{app.status}</span>\r\n                                                </li>\r\n                                            ))\r\n                                        ) : (\r\n                                            <li className=\"list-group-item\">Nema nadolazećih pregleda.</li>\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'myAppointments' && (\r\n                    <div>\r\n                        <h3>Moji pregledi</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => openAppointmentModal()}>\r\n                            Zakaži novi pregled\r\n                        </Button>\r\n                        {appointments.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Doktor</th>\r\n                                        <th>Datum</th>\r\n                                        <th>Vrijeme</th>\r\n                                        <th>Razlog</th>\r\n                                        <th>Status</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {appointments.map(app => (\r\n                                        <tr key={app.id}>\r\n                                            <td>{app.doktorIme}</td>\r\n                                            <td>{app.appointmentDate}</td>\r\n                                            <td>{app.appointmentTime}</td>\r\n                                            <td>{app.reason}</td>\r\n                                            <td><span className={`badge bg-${app.status === 'obavljen' ? 'success' : app.status === 'zakazan' ? 'warning' : 'danger'}`}>{app.status}</span></td>\r\n                                            <td>\r\n                                                {app.status === 'zakazan' || app.status === 'potvrđen' ? (\r\n                                                    <>\r\n                                                        {/* Uklonjeno dugme \"Uredi\" */}\r\n                                                        <Button variant=\"danger\" size=\"sm\" onClick={() => handleCancelAppointment(app.id)}>Otkaži</Button>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <small>Nema dostupnih akcija</small>\r\n                                                )}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađene historije pregleda. Zakažite svoj prvi pregled!</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'medicalHistory' && (\r\n                    <div>\r\n                        <h3>Moja medicinska historija</h3>\r\n                        {medicalHistory.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {medicalHistory.map((record, index) => (\r\n                                    <li key={record.id} className=\"list-group-item\">\r\n                                        <strong>Datum:</strong> {record.date} <br />\r\n                                        <strong>Dijagnoza:</strong> {record.diagnosis} <br />\r\n                                        <strong>Liječenje:</strong> {record.treatment} <br />\r\n                                        <strong>Doktor:</strong> {record.doctorName} <br />\r\n                                        <strong>Napomene:</strong> {record.notes || 'N/A'}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Nema pronađenih zapisa medicinske historije.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'documents' && (\r\n                    <div>\r\n                        <h3>Moji dokumenti</h3>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Prenesi novi dokument</Form.Label>\r\n                            <Form.Control type=\"file\" onChange={handleDocumentUpload} />\r\n                        </Form.Group>\r\n\r\n                        {documents.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Naziv dokumenta</th>\r\n                                        <th>Tip</th>\r\n                                        <th>Datum prijenosa</th>\r\n                                        <th>Pristup</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {documents.map(doc => (\r\n                                        <tr key={doc.id}>\r\n                                            <td>{doc.fileName}</td>\r\n                                            <td>{doc.documentType}</td>\r\n                                            <td>{new Date(doc.uploadDate).toLocaleDateString()}</td>\r\n                                            <td><span className={`badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`}>{doc.pristup}</span></td>\r\n                                            <td>\r\n                                                <Button variant=\"success\" size=\"sm\" href={`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${doc.id}`} target=\"_blank\">Preuzmi</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih dokumenata.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'billing' && (\r\n                    <div>\r\n                        <h3>Naplata i plaćanja</h3>\r\n                        {bills.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID računa</th>\r\n                                        <th>Datum izdavanja</th>\r\n                                        <th>Iznos</th>\r\n                                        <th>Status</th>\r\n                                        <th>Opis</th>\r\n                                        <th>Izdao</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {bills.map(bill => (\r\n                                        <tr key={bill.id}>\r\n                                            <td>{bill.id}</td>\r\n                                            <td>{new Date(bill.billDate).toLocaleDateString()}</td>\r\n                                            <td>{bill.amount ? bill.amount.toFixed(2) : 'N/A'} KM</td>\r\n                                            <td><span className={`badge bg-${bill.status === 'PLACEN' ? 'success' : 'warning'}`}>{bill.status}</span></td>\r\n                                            <td>{bill.opis}</td>\r\n                                            <td>{bill.doktorIme}</td>\r\n                                            <td>\r\n                                                {bill.status === 'NEPLACEN' && (\r\n                                                    <Button variant=\"success\" size=\"sm\" className=\"me-2\">Plati sada</Button>\r\n                                                )}\r\n                                                <Button variant=\"info\" size=\"sm\">Pogledaj detalje</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih zapisa o naplati.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'messages' && (\r\n                    <div>\r\n                        <h3>Moje poruke</h3>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => setNewMessage({ recipientId: '', subject: '', content: '' })}>Sastavi novu poruku</Button>\r\n\r\n                        {messages.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {messages.map(msg => (\r\n                                    <li key={msg.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            <strong>Od: {msg.senderIme || (msg.senderType === 'DOKTOR' ? `Doktor (${msg.senderId})` : 'Ja')}</strong> <br />\r\n                                            <strong>Naslov:</strong> {msg.subject} <br />\r\n                                            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                        <Button variant=\"info\" size=\"sm\" onClick={() => handleViewMessage(msg)}>Pogledaj poruku</Button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>Nema pronađenih poruka.</p>\r\n                        )}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <h4>Sastavi novu poruku</h4>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Primalac (Doktor)</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"recipientId\"\r\n                                    value={newMessage.recipientId}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Odaberite doktora --</option>\r\n                                    {doctors.map(doctor => (\r\n                                        <option key={doctor.id} value={doctor.id}>{doctor.firstName} {doctor.lastName}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Naslov</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    value={newMessage.subject}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Sadržaj</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"content\"\r\n                                    value={newMessage.content}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSendMessage}>Pošalji poruku</Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'doctorSearch' && (\r\n                    <div>\r\n                        <h3>Pronađi doktora</h3>\r\n                        <p>Pretražite doktore po imenu ili specijalnosti kako biste pronašli pravu njegu za vas.</p>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control type=\"text\" placeholder=\"Pretraži po imenu ili specijalnosti...\" />\r\n                        </Form.Group>\r\n                        {doctors.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Ime</th>\r\n                                        <th>Specijalnost</th>\r\n                                        <th>Kontakt</th>\r\n                                        <th>Akcije</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {doctors.map(doctor => (\r\n                                        <tr key={doctor.id}>\r\n                                            <td>{doctor.firstName} {doctor.lastName}</td>\r\n                                            <td>{doctor.specialty || 'Opšti praktičar'}</td>\r\n                                            <td>{doctor.email} | {doctor.phone}</td>\r\n                                            <td>\r\n                                                <Button variant=\"primary\" size=\"sm\" onClick={() => {\r\n                                                    setNewAppointment(prev => ({ ...prev, doctorId: doctor.id }));\r\n                                                    openAppointmentModal();\r\n                                                }}>Zakaži pregled</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>Nema pronađenih doktora.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === 'profileSettings' && (\r\n                    <div>\r\n                        <h3>Postavke profila</h3>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n                                <Form.Label>Ime</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={patientProfile.firstName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n                                <Form.Label>Prezime</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    value={patientProfile.lastName || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={patientProfile.email || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formPhone\">\r\n                                <Form.Label>Telefon</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"phone\"\r\n                                    value={patientProfile.phone || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAddress\">\r\n                                <Form.Label>Adresa</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"adresa\"\r\n                                    value={patientProfile.adresa || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formDatumRodjenja\">\r\n                                <Form.Label>Datum rođenja</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    name=\"datumRodjenja\"\r\n                                    value={patientProfile.datumRodjenja || ''}\r\n                                    onChange={handleProfileChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSaveProfile}>\r\n                                Sačuvaj profil\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Appointment Modal */}\r\n            <Modal show={showAppointmentModal} onHide={closeAppointmentModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{editingAppointment ? 'Uredi pregled' : 'Zakaži novi pregled'}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formDoctor\">\r\n                            <Form.Label>Odaberite doktora</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"doctorId\"\r\n                                value={newAppointment.doctorId}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">-- Odaberite doktora --</option>\r\n                                {doctors.map(doctor => (\r\n                                    <option key={doctor.id} value={doctor.id}>{doctor.firstName} {doctor.lastName}</option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        {newAppointment.doctorId && (\r\n                            <Form.Group className=\"mb-3\" controlId=\"formAvailableTerm\">\r\n                                <Form.Label>Odaberite slobodan termin</Form.Label>\r\n                                {loading ? (\r\n                                    <Spinner animation=\"border\" size=\"sm\" />\r\n                                ) : allDoctorAvailableTerms.length > 0 ? (\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"terminId\"\r\n                                        value={newAppointment.terminId}\r\n                                        onChange={handleNewAppointmentChange}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">-- Odaberite datum i vrijeme --</option>\r\n                                        {allDoctorAvailableTerms.map(term => (\r\n                                            <option key={term.terminID} value={term.terminID}>{term.display}</option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                ) : (\r\n                                    <Alert variant=\"info\">Nema dostupnih termina za ovog doktora.</Alert>\r\n                                )}\r\n                            </Form.Group>\r\n                        )}\r\n\r\n                        {/* Polja za datum i vrijeme koja će se automatski popuniti nakon odabira termina (mogu biti samo za prikaz) */}\r\n                        {newAppointment.terminId && (\r\n                            <>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formAppointmentDateDisplay\">\r\n                                    <Form.Label>Odabrani datum</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={newAppointment.appointmentDate}\r\n                                        readOnly\r\n                                        disabled\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formAppointmentTimeDisplay\">\r\n                                    <Form.Label>Odabrano vrijeme</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={newAppointment.appointmentTime ? newAppointment.appointmentTime.substring(0, 5) : ''}\r\n                                        readOnly\r\n                                        disabled\r\n                                    />\r\n                                </Form.Group>\r\n                            </>\r\n                        )}\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formReason\">\r\n                            <Form.Label>Razlog za pregled</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"reason\"\r\n                                value={newAppointment.reason}\r\n                                onChange={handleNewAppointmentChange}\r\n                                placeholder=\"npr. Opšti pregled, specifični simptomi...\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeAppointmentModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={handleScheduleAppointment}\r\n                        disabled={!newAppointment.doctorId || !newAppointment.terminId || !newAppointment.reason || loading}\r\n                    >\r\n                        {editingAppointment ? 'Ažuriraj pregled' : 'Zakaži pregled'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Message Detail Modal */}\r\n            <Modal show={!!selectedMessage} onHide={closeMessageModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Poruka: {selectedMessage?.subject}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedMessage && (\r\n                        <>\r\n                            <p><strong>Od:</strong> {selectedMessage.senderIme || (selectedMessage.senderType === 'DOKTOR' ? `Doktor (${selectedMessage.senderId})` : 'Ja')}</p>\r\n                            <p><strong>Datum:</strong> {new Date(selectedMessage.timestamp).toLocaleString()}</p>\r\n                            <hr />\r\n                            <p>{selectedMessage.content}</p>\r\n\r\n                            {selectedMessage.replies && selectedMessage.replies.length > 0 && (\r\n                                <div className=\"mt-4\">\r\n                                    <h5>Odgovori:</h5>\r\n                                    {selectedMessage.replies.map((reply, index) => (\r\n                                        <div key={index} className=\"border p-2 mb-2 rounded bg-light\">\r\n                                            <strong>{reply.senderIme || (reply.senderType === 'DOKTOR' ? `Doktor (${reply.senderId})` : 'Ja')}:</strong> {reply.content}\r\n                                            <br />\r\n                                            <small>{new Date(reply.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            <Form.Group className=\"mt-4\">\r\n                                <Form.Label>Odgovor</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={2}\r\n                                    value={replyMessage.content}\r\n                                    onChange={handleReplyMessageChange}\r\n                                    placeholder=\"Upišite vaš odgovor ovdje...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" className=\"mt-2\" onClick={() => handleReply(selectedMessage.id)}>Pošalji odgovor</Button>\r\n                        </>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeMessageModal}>\r\n                        Zatvori\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}