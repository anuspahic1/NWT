{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const storedToken = localStorage.getItem('token');\n    if (storedUser && storedToken) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        setUser(parsedUser);\n        setToken(storedToken);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\n        console.log(\"AuthContext (useEffect): Token postavljen u Axios default headers.\");\n      } catch (e) {\n        console.error(\"AuthContext (useEffect): Greška pri parsiranju korisničkih podataka iz localStorage-a:\", e);\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n        setUser(null);\n        setToken(null);\n        delete axios.defaults.headers.common['Authorization'];\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('http://localhost:8081/auth/login', {\n        email,\n        password\n      });\n\n      // Logovi koji su nam pomogli da nađemo problem\n      console.log(\"AuthContext (Login Response): Full response data FROM BACKEND:\", response.data);\n      console.log(\"AuthContext (Login Response): Raw doktorID from response.data:\", response.data.doktorID); // Dodana provera za veliko D\n      console.log(\"AuthContext (Login Response): Raw patientID from response.data:\", response.data.patientID); // Dodana provera za veliko D\n\n      // KLJUČNA PROMJENA OVDJE: promijenjeno iz 'doktorId' u 'doktorID' i 'patientId' u 'patientID'\n      const {\n        token: receivedToken,\n        email: userEmail,\n        roles,\n        fullName,\n        patientID,\n        doktorID,\n        grad,\n        specijalizacije,\n        ocjena,\n        iskustvo,\n        radnoVrijeme,\n        userId\n      } = response.data;\n      const userData = {\n        email: userEmail,\n        fullName: fullName,\n        roles: roles || [],\n        patientId: patientID || null,\n        // Koristi patientID (veliko ID)\n        doktorId: doktorID || null,\n        // Koristi doktorID (veliko ID)\n        grad: grad || null,\n        specijalizacije: specijalizacije || [],\n        ocjena: ocjena || null,\n        iskustvo: iskustvo || null,\n        radnoVrijeme: radnoVrijeme || null,\n        userId: userId || null\n      };\n      console.log(\"AuthContext (Login Response): Constructed userData object (before setUser):\", userData);\n      setUser(userData);\n      setToken(receivedToken);\n      localStorage.setItem('user', JSON.stringify(userData));\n      localStorage.setItem('token', receivedToken);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${receivedToken}`;\n      console.log(\"AuthContext: Token postavljen u Axios default headers nakon logina.\");\n      setLoading(false);\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      setLoading(false);\n      console.error('Login error in AuthContext:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || err.message); // Ispravljeno 'err.message'\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"uAkFQMmIUxfxJcQTEb8tCM/KFt4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","loading","setLoading","storedUser","localStorage","getItem","storedToken","parsedUser","JSON","parse","defaults","headers","common","console","log","e","error","removeItem","login","email","password","response","post","data","doktorID","patientID","receivedToken","userEmail","roles","fullName","grad","specijalizacije","ocjena","iskustvo","radnoVrijeme","userId","userData","patientId","doktorId","setItem","stringify","_error$response","err","message","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const storedUser = localStorage.getItem('user');\r\n        const storedToken = localStorage.getItem('token');\r\n\r\n        if (storedUser && storedToken) {\r\n            try {\r\n                const parsedUser = JSON.parse(storedUser);\r\n                setUser(parsedUser);\r\n                setToken(storedToken);\r\n                axios.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\r\n                console.log(\"AuthContext (useEffect): Token postavljen u Axios default headers.\");\r\n            } catch (e) {\r\n                console.error(\"AuthContext (useEffect): Greška pri parsiranju korisničkih podataka iz localStorage-a:\", e);\r\n                localStorage.removeItem('user');\r\n                localStorage.removeItem('token');\r\n                setUser(null);\r\n                setToken(null);\r\n                delete axios.defaults.headers.common['Authorization'];\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.post('http://localhost:8081/auth/login', { email, password });\r\n\r\n            // Logovi koji su nam pomogli da nađemo problem\r\n            console.log(\"AuthContext (Login Response): Full response data FROM BACKEND:\", response.data);\r\n            console.log(\"AuthContext (Login Response): Raw doktorID from response.data:\", response.data.doktorID); // Dodana provera za veliko D\r\n            console.log(\"AuthContext (Login Response): Raw patientID from response.data:\", response.data.patientID); // Dodana provera za veliko D\r\n\r\n            // KLJUČNA PROMJENA OVDJE: promijenjeno iz 'doktorId' u 'doktorID' i 'patientId' u 'patientID'\r\n            const { token: receivedToken, email: userEmail, roles, fullName, patientID, doktorID, grad, specijalizacije, ocjena, iskustvo, radnoVrijeme, userId } = response.data;\r\n\r\n            const userData = {\r\n                email: userEmail,\r\n                fullName: fullName,\r\n                roles: roles || [],\r\n                patientId: patientID || null, // Koristi patientID (veliko ID)\r\n                doktorId: doktorID || null,   // Koristi doktorID (veliko ID)\r\n                grad: grad || null,\r\n                specijalizacije: specijalizacije || [],\r\n                ocjena: ocjena || null,\r\n                iskustvo: iskustvo || null,\r\n                radnoVrijeme: radnoVrijeme || null,\r\n                userId: userId || null,\r\n            };\r\n\r\n            console.log(\"AuthContext (Login Response): Constructed userData object (before setUser):\", userData);\r\n\r\n\r\n            setUser(userData);\r\n            setToken(receivedToken);\r\n            localStorage.setItem('user', JSON.stringify(userData));\r\n            localStorage.setItem('token', receivedToken);\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${receivedToken}`;\r\n            console.log(\"AuthContext: Token postavljen u Axios default headers nakon logina.\");\r\n            setLoading(false);\r\n            return response.data;\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.error('Login error in AuthContext:', error.response?.data || err.message); // Ispravljeno 'err.message'\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        setToken(null);\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, token, loading, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAMC,WAAW,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAEjD,IAAIF,UAAU,IAAIG,WAAW,EAAE;MAC3B,IAAI;QACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACN,UAAU,CAAC;QACzCL,OAAO,CAACS,UAAU,CAAC;QACnBP,QAAQ,CAACM,WAAW,CAAC;QACrBhB,KAAK,CAACoB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUN,WAAW,EAAE;QACxEO,OAAO,CAACC,GAAG,CAAC,oEAAoE,CAAC;MACrF,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRF,OAAO,CAACG,KAAK,CAAC,wFAAwF,EAAED,CAAC,CAAC;QAC1GX,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;QAC/Bb,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;QAChCnB,OAAO,CAAC,IAAI,CAAC;QACbE,QAAQ,CAAC,IAAI,CAAC;QACd,OAAOV,KAAK,CAACoB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;MACzD;IACJ;IACAV,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACrC,IAAI;MACAlB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMmB,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,IAAI,CAAC,kCAAkC,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;;MAE1F;MACAP,OAAO,CAACC,GAAG,CAAC,gEAAgE,EAAEO,QAAQ,CAACE,IAAI,CAAC;MAC5FV,OAAO,CAACC,GAAG,CAAC,gEAAgE,EAAEO,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;MACvGX,OAAO,CAACC,GAAG,CAAC,iEAAiE,EAAEO,QAAQ,CAACE,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC;;MAEzG;MACA,MAAM;QAAE1B,KAAK,EAAE2B,aAAa;QAAEP,KAAK,EAAEQ,SAAS;QAAEC,KAAK;QAAEC,QAAQ;QAAEJ,SAAS;QAAED,QAAQ;QAAEM,IAAI;QAAEC,eAAe;QAAEC,MAAM;QAAEC,QAAQ;QAAEC,YAAY;QAAEC;MAAO,CAAC,GAAGd,QAAQ,CAACE,IAAI;MAErK,MAAMa,QAAQ,GAAG;QACbjB,KAAK,EAAEQ,SAAS;QAChBE,QAAQ,EAAEA,QAAQ;QAClBD,KAAK,EAAEA,KAAK,IAAI,EAAE;QAClBS,SAAS,EAAEZ,SAAS,IAAI,IAAI;QAAE;QAC9Ba,QAAQ,EAAEd,QAAQ,IAAI,IAAI;QAAI;QAC9BM,IAAI,EAAEA,IAAI,IAAI,IAAI;QAClBC,eAAe,EAAEA,eAAe,IAAI,EAAE;QACtCC,MAAM,EAAEA,MAAM,IAAI,IAAI;QACtBC,QAAQ,EAAEA,QAAQ,IAAI,IAAI;QAC1BC,YAAY,EAAEA,YAAY,IAAI,IAAI;QAClCC,MAAM,EAAEA,MAAM,IAAI;MACtB,CAAC;MAEDtB,OAAO,CAACC,GAAG,CAAC,6EAA6E,EAAEsB,QAAQ,CAAC;MAGpGtC,OAAO,CAACsC,QAAQ,CAAC;MACjBpC,QAAQ,CAAC0B,aAAa,CAAC;MACvBtB,YAAY,CAACmC,OAAO,CAAC,MAAM,EAAE/B,IAAI,CAACgC,SAAS,CAACJ,QAAQ,CAAC,CAAC;MACtDhC,YAAY,CAACmC,OAAO,CAAC,OAAO,EAAEb,aAAa,CAAC;MAC5CpC,KAAK,CAACoB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUc,aAAa,EAAE;MAC1Eb,OAAO,CAACC,GAAG,CAAC,qEAAqE,CAAC;MAClFZ,UAAU,CAAC,KAAK,CAAC;MACjB,OAAOmB,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOP,KAAK,EAAE;MAAA,IAAAyB,eAAA;MACZvC,UAAU,CAAC,KAAK,CAAC;MACjBW,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAE,EAAAyB,eAAA,GAAAzB,KAAK,CAACK,QAAQ,cAAAoB,eAAA,uBAAdA,eAAA,CAAgBlB,IAAI,KAAImB,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC;MACnF,MAAM3B,KAAK;IACf;EACJ,CAAC;EAED,MAAM4B,MAAM,GAAGA,CAAA,KAAM;IACjB9C,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IACdI,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;IAC/Bb,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChC,OAAO3B,KAAK,CAACoB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACzD,CAAC;EAED,oBACIpB,OAAA,CAACC,WAAW,CAACoD,QAAQ;IAACC,KAAK,EAAE;MAAEjD,IAAI;MAAEE,KAAK;MAAEE,OAAO;MAAEiB,KAAK;MAAE0B;IAAO,CAAE;IAAAjD,QAAA,EAChEA;EAAQ;IAAAoD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACtD,EAAA,CAtFWF,YAAY;AAAAyD,EAAA,GAAZzD,YAAY;AAwFzB,OAAO,MAAM0D,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,OAAOlE,UAAU,CAACM,WAAW,CAAC;AAClC,CAAC;AAAC4D,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}