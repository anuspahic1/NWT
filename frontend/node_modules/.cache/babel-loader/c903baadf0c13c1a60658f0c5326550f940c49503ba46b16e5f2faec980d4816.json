{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\DoctorDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\nfunction DoctorDashboard() {\n  _s();\n  var _patients$find2;\n  const [activeTab, setActiveTab] = useState('overview');\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]); // This patient list should contain userId\n  const [examinations, setExaminations] = useState([]);\n  const [terms, setTerms] = useState([]);\n  const [activityLog, setActivityLog] = useState([]);\n  const [currentDoctorProfile, setCurrentDoctorProfile] = useState(null);\n  const [isEditingProfile, setIsEditingProfile] = useState(false);\n  const [editIme, setEditIme] = useState('');\n  const [editPrezime, setEditPrezime] = useState('');\n  const [editEmail, setEditEmail] = useState('');\n  const [editTelefon, setEditTelefon] = useState('');\n  const [editSpecijalizacije, setEditSpecijalizacije] = useState('');\n  const [editGrad, setEditGrad] = useState('');\n  const [editRadnoVrijeme, setEditRadnoVrijeme] = useState('');\n  const [editIskustvo, setEditIskustvo] = useState('');\n  const [editOcjena, setEditOcjena] = useState('');\n  const [profileImageFile, setProfileImageFile] = useState(null);\n  const [profileImagePreview, setProfileImagePreview] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState({\n    recipientId: '',\n    subject: '',\n    content: ''\n  }); // recipientId will now be Long userId\n  const [replyMessage, setReplyMessage] = useState({\n    messageId: '',\n    content: ''\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n  const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\n  const [examinationFilterStatus, setExaminationFilterStatus] = useState('All');\n  const [myPatientsCurrentPage, setMyPatientsCurrentPage] = useState(1);\n  const [myExaminationsCurrentPage, setMyExaminationsCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n  const [showPatientDetailModal, setShowPatientDetailModal] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  // Medical History States\n  const [medicalHistoryEntries, setMedicalHistoryEntries] = useState([]);\n  const [newMedicalHistoryEntry, setNewMedicalHistoryEntry] = useState({\n    diagnosis: '',\n    treatment: '',\n    notes: ''\n  });\n  const [newTermDate, setNewTermDate] = useState('');\n  const [newTermTime, setNewTermTime] = useState('');\n  const [selectedTermStatus, setSelectedTermStatus] = useState('dostupan');\n  const {\n    token,\n    user,\n    loading: authLoading\n  } = useAuth();\n  const authHeaders = useMemo(() => ({\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }), [token]);\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n  const fetchDoctors = async () => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      setDoctors(response.data.map(doc => ({\n        id: doc.doktorID,\n        // Doctor ID (Integer)\n        userId: Number(doc.userId),\n        // User ID from Auth service (Long)\n        name: `${doc.ime} ${doc.prezime}`,\n        ime: doc.ime,\n        prezime: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        grad: doc.grad,\n        email: doc.email,\n        telefon: doc.telefon,\n        radnoVrijeme: doc.radnoVrijeme,\n        iskustvo: doc.iskustvo,\n        ocjena: doc.ocjena,\n        profileImageBase64: doc.profileImageBase64\n      })));\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error fetching all doctors:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      showNotification(\"Error fetching doctors.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\n      setPatients(response.data.map(pat => ({\n        id: pat.pacijentID,\n        // Patient ID (Integer)\n        userId: Number(pat.userId),\n        // User ID from Auth service (Long)\n        name: `${pat.ime} ${pat.prezime}`,\n        ime: pat.ime,\n        prezime: pat.prezime,\n        email: pat.email,\n        phone: pat.telefon\n      })));\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Error fetching all patients:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      showNotification(\"Error fetching patients.\", \"danger\");\n    }\n  };\n  const fetchTerms = async () => {\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      console.warn(\"Cannot fetch terms: doktorId is missing or auth not ready.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${user.doktorId}`, authHeaders);\n      setTerms(response.data.map(term => ({\n        id: term.terminID,\n        doktorId: term.doktorID,\n        datum: term.datum,\n        vrijeme: term.vrijeme,\n        dostupnost: term.dostupnost\n      })));\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Error fetching doctor's terms:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      showNotification(\"Error fetching doctor's terms.\", \"danger\");\n    }\n  };\n  const fetchExaminations = async () => {\n    if (!token) return;\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\n      setExaminations(response.data.map(exam => ({\n        id: exam.pregledID,\n        pacijentId: exam.pacijentID,\n        doktorId: exam.doktorID,\n        patientName: exam.pacijentIme || 'N/A',\n        doctorName: exam.doktorIme || 'N/A',\n        date: exam.datumPregleda,\n        time: exam.vrijemePregleda,\n        status: exam.status,\n        komentarPacijenta: exam.komentarPacijenta || '',\n        ocjenaDoktora: exam.ocjenaDoktora || null,\n        terminID: exam.terminID\n      })));\n    } catch (error) {\n      var _error$response4;\n      console.error(\"Error fetching all examinations:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      showNotification(\"Error fetching examinations.\", \"danger\");\n    }\n  };\n  const fetchActivityLog = async () => {\n    if (!token) return;\n    try {\n      console.warn(\"Activity Log endpoint is not defined, skipping fetching activity log.\");\n      setActivityLog([]);\n    } catch (error) {\n      var _error$response5;\n      console.error(\"Error fetching activity log:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      showNotification(\"Error fetching activity log.\", \"danger\");\n    }\n  };\n\n  // NEW: Fetch Medical History for a specific patient\n  const fetchPatientMedicalHistory = async patientId => {\n    if (!token || !patientId) return;\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${patientId}`, authHeaders);\n      setMedicalHistoryEntries(response.data.map(record => ({\n        id: record.zapisID,\n        patientId: record.pacijentID,\n        doctorId: record.doktorID,\n        doctorName: record.doktorIme,\n        date: record.datumZapisivanja,\n        diagnosis: record.dijagnoza,\n        treatment: record.lijecenje,\n        notes: record.napomene\n      })));\n    } catch (error) {\n      var _error$response6;\n      console.error(\"Error fetching patient medical history:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      setMedicalHistoryEntries([]); // Clear if error\n      showNotification(\"Error fetching patient's medical history.\", \"danger\");\n    }\n  };\n\n  // NEW: Handle saving a new medical history entry\n  const handleAddMedicalHistoryEntry = async () => {\n    if (!token || !selectedPatient || !user || !user.doktorId) {\n      showNotification(\"Missing data to add medical history entry.\", \"danger\");\n      return;\n    }\n    if (!newMedicalHistoryEntry.diagnosis || !newMedicalHistoryEntry.treatment) {\n      showNotification(\"Diagnosis and Treatment are required for medical history.\", \"warning\");\n      return;\n    }\n    try {\n      const payload = {\n        pacijentID: selectedPatient.id,\n        doktorID: user.doktorId,\n        datumZapisivanja: new Date().toISOString().split('T')[0],\n        // Current date for entry\n        dijagnoza: newMedicalHistoryEntry.diagnosis,\n        lijecenje: newMedicalHistoryEntry.treatment,\n        napomene: newMedicalHistoryEntry.notes\n      };\n      await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija`, payload, authHeaders);\n      showNotification(\"Medical history entry successfully added!\", \"success\");\n      setNewMedicalHistoryEntry({\n        diagnosis: '',\n        treatment: '',\n        notes: ''\n      }); // Clear form\n      fetchPatientMedicalHistory(selectedPatient.id); // Refresh medical history\n    } catch (error) {\n      var _error$response7, _error$response8, _error$response8$data;\n      console.error(\"Error adding medical history entry:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      showNotification(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Error adding medical history entry.', 'danger');\n    }\n  };\n  const openPatientDetailModal = async patient => {\n    setSelectedPatient(patient);\n    await fetchPatientMedicalHistory(patient.id); // Fetch medical history when modal opens\n    setShowPatientDetailModal(true);\n  };\n  const closePatientDetailModal = () => {\n    setShowPatientDetailModal(false);\n    setSelectedPatient(null);\n    setMedicalHistoryEntries([]); // Clear history when closing\n    setNewMedicalHistoryEntry({\n      diagnosis: '',\n      treatment: '',\n      notes: ''\n    }); // Clear new entry form\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setProfileImageFile(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setProfileImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setProfileImageFile(null);\n      setProfileImagePreview(null);\n    }\n  };\n  const fetchCurrentDoctorProfile = async () => {\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      console.warn(\"Cannot fetch current doctor profile: doktorId is missing or auth not ready.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, authHeaders);\n      const profileData = response.data;\n      setCurrentDoctorProfile(profileData);\n      setEditIme(profileData.ime || '');\n      setEditPrezime(profileData.prezime || '');\n      setEditEmail(profileData.email || '');\n      setEditTelefon(profileData.telefon || '');\n      setEditSpecijalizacije(Array.isArray(profileData.specijalizacije) ? profileData.specijalizacije.join(', ') : '');\n      setEditGrad(profileData.grad || '');\n      setEditRadnoVrijeme(profileData.radnoVrijeme || '');\n      setEditIskustvo(profileData.iskustvo || '');\n      setEditOcjena(profileData.ocjena || '');\n      setProfileImagePreview(profileData.profileImageBase64 || null);\n    } catch (error) {\n      var _error$response9;\n      console.error(\"Error fetching doctor profile:\", ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n      showNotification(\"Error fetching doctor profile.\", \"danger\");\n    }\n  };\n  const handleUpdateDoctorProfile = async e => {\n    e.preventDefault();\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      showNotification(\"You are not authorized or doctor ID is missing.\", \"danger\");\n      return;\n    }\n    const updatedProfile = {\n      doktorID: user.doktorId,\n      userId: currentDoctorProfile.userId,\n      ime: editIme,\n      prezime: editPrezime,\n      email: editEmail,\n      telefon: editTelefon,\n      specijalizacije: editSpecijalizacije.split(',').map(s => s.trim()).filter(s => s !== ''),\n      grad: editGrad,\n      radnoVrijeme: editRadnoVrijeme,\n      iskustvo: parseInt(editIskustvo, 10),\n      ocjena: parseFloat(editOcjena) || 0.0,\n      profileImageBase64: profileImagePreview\n    };\n    try {\n      const response = await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, updatedProfile, authHeaders);\n      setCurrentDoctorProfile(response.data);\n      setIsEditingProfile(false);\n      showNotification(\"Profile successfully updated!\");\n      fetchDoctors();\n    } catch (error) {\n      var _error$response0, _error$response1, _error$response1$data;\n      console.error(\"Error updating profile:\", ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error.message);\n      showNotification(((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || 'Error updating profile.', 'danger');\n    }\n  };\n  const fetchDocuments = async () => {\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n      console.warn(\"Cannot fetch documents: doktorId is missing or auth not ready.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/doktor/${user.doktorId}`, authHeaders);\n      const transformedDocuments = response.data.map(doc => ({\n        id: doc.dokumentID,\n        fileName: doc.nazivDokumenta,\n        documentType: doc.tipDokumenta,\n        uploadDate: doc.datumKreiranja,\n        pristup: doc.pristup,\n        pacijentIme: doc.pacijentIme\n      }));\n      setDocuments(transformedDocuments);\n      showNotification(\"Documents successfully fetched!\", \"success\");\n    } catch (error) {\n      var _error$response10;\n      console.error('Error fetching documents for doctor:', ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message);\n      showNotification('Failed to fetch documents.', \"danger\");\n    }\n  };\n  const handleDocumentUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!user || user.doktorId === null || user.doktorId === undefined) {\n      showNotification(\"Doctor ID is not available for document upload.\", \"danger\");\n      return;\n    }\n    console.log(\"Attempting document upload with Doktor ID:\", user.doktorId);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('doktorID', user.doktorId);\n    formData.append('tipDokumenta', 'Doctor Upload');\n    formData.append('pristup', 'PRIVATNA');\n    try {\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      showNotification('Document successfully uploaded!', 'success');\n      fetchDocuments();\n    } catch (error) {\n      var _error$response11, _error$response12, _error$response12$dat;\n      console.error('Error uploading document:', ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message);\n      showNotification('Document upload failed. ' + (((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.message) || error.message), \"danger\");\n    }\n  };\n  const fetchMessages = async () => {\n    if (!token || !user || user.userId === null || user.userId === undefined) {\n      // Use user.userId\n      console.warn(\"Cannot fetch messages: user.userId is missing or auth not ready.\");\n      return;\n    }\n    try {\n      // Updated endpoint for fetching messages using user.userId and userType DOKTOR\n      const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=DOKTOR`, authHeaders);\n      const transformedMessages = response.data.map(msg => ({\n        id: msg.porukaID,\n        senderId: Number(msg.senderId),\n        // Explicitly convert to Number\n        senderType: msg.senderType,\n        senderIme: msg.senderIme,\n        receiverId: Number(msg.receiverId),\n        // Explicitly convert to Number\n        receiverType: msg.receiverType,\n        receiverIme: msg.receiverIme,\n        subject: msg.subject,\n        content: msg.content,\n        timestamp: msg.timestamp,\n        replies: msg.replies || [] // Ensure replies is always an array\n      }));\n      setMessages(transformedMessages);\n      showNotification(\"Messages successfully fetched!\", \"success\");\n    } catch (error) {\n      var _error$response13;\n      console.error('Error fetching messages for doctor:', ((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data) || error.message);\n      showNotification('Failed to fetch messages.', \"danger\");\n    }\n  };\n  const handleNewMessageChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMessage(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSendMessage = async () => {\n    if (!user || user.userId === null || user.userId === undefined) {\n      // Use user.userId\n      showNotification('Your user ID is not available. Cannot send message.', 'danger');\n      return;\n    }\n    if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\n      showNotification('Please fill in all message fields.', 'warning');\n      return;\n    }\n    try {\n      const messageData = {\n        senderId: user.userId,\n        // SENDER is now user.userId (Long)\n        senderType: 'DOKTOR',\n        receiverId: Number(newMessage.recipientId),\n        // RECIPIENT is patient's user.userId (Long) - convert to Number\n        receiverType: 'PACIJENT',\n        subject: newMessage.subject,\n        content: newMessage.content\n      };\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\n      showNotification('Message successfully sent!', 'success');\n      setNewMessage({\n        recipientId: '',\n        subject: '',\n        content: ''\n      });\n      fetchMessages();\n    } catch (error) {\n      var _error$response14, _error$response15, _error$response15$dat;\n      console.error('Error sending message:', ((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : _error$response14.data) || error.message);\n      showNotification('Failed to send message. ' + (((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : (_error$response15$dat = _error$response15.data) === null || _error$response15$dat === void 0 ? void 0 : _error$response15$dat.message) || error.message), \"danger\");\n    }\n  };\n  const handleReplyMessageChange = e => {\n    setReplyMessage(prev => ({\n      ...prev,\n      content: e.target.value\n    }));\n  };\n  const handleReply = async messageId => {\n    if (!user || user.userId === null || user.userId === undefined) {\n      // Use user.userId\n      showNotification('Your user ID is not available. Cannot reply.', 'danger');\n      return;\n    }\n    if (!replyMessage.content) {\n      showNotification('Reply content cannot be empty.', 'warning');\n      return;\n    }\n    try {\n      const replyPayload = {\n        senderId: user.userId,\n        // SENDER is now user.userId (Long)\n        senderType: 'DOKTOR',\n        content: replyMessage.content\n      };\n      await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, replyPayload, authHeaders);\n      showNotification('Reply successfully sent!', 'success');\n      setReplyMessage({\n        messageId: '',\n        content: ''\n      });\n      fetchMessages();\n      // Update local state for current reply display\n      setSelectedMessage(prev => {\n        if (!prev) return null;\n        return {\n          ...prev,\n          replies: [...(prev.replies || []), {\n            senderId: user.userId,\n            // Important: Use user.userId here\n            senderIme: `${user.ime || ''} ${user.prezime || ''}`.trim(),\n            // Use name/surname from useAuth, if available\n            senderType: 'DOKTOR',\n            content: replyMessage.content,\n            timestamp: new Date().toISOString()\n          }]\n        };\n      });\n    } catch (error) {\n      var _error$response16, _error$response17, _error$response17$dat;\n      console.error('Error sending reply:', ((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : _error$response16.data) || error.message);\n      showNotification('Failed to send reply. ' + (((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : (_error$response17$dat = _error$response17.data) === null || _error$response17$dat === void 0 ? void 0 : _error$response17$dat.message) || error.message), \"danger\");\n    }\n  };\n  const handleViewMessage = message => {\n    setSelectedMessage(message);\n  };\n  const closeMessageModal = () => {\n    setSelectedMessage(null);\n    setReplyMessage({\n      messageId: '',\n      content: ''\n    });\n  };\n  const handleCreateTerm = async e => {\n    e.preventDefault();\n    if (!user || user.doktorId === null || user.doktorId === undefined) {\n      showNotification(\"Doctor ID is not available. Cannot create term.\", \"danger\");\n      return;\n    }\n    if (!newTermDate || !newTermTime) {\n      showNotification(\"Please select both date and time for the new term.\", \"warning\");\n      return;\n    }\n    try {\n      const termData = {\n        doktorID: user.doktorId,\n        datum: newTermDate,\n        vrijeme: newTermTime + ':00',\n        dostupnost: selectedTermStatus === 'dostupan'\n      };\n      await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, termData, authHeaders);\n      showNotification(\"Term successfully created!\", \"success\");\n      setNewTermDate('');\n      setNewTermTime('');\n      setSelectedTermStatus('dostupan');\n      fetchTerms();\n    } catch (error) {\n      var _error$response18, _error$response19, _error$response19$dat;\n      console.error(\"Error creating term:\", ((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : _error$response18.data) || error.message);\n      showNotification(`Failed to create term: ${((_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : (_error$response19$dat = _error$response19.data) === null || _error$response19$dat === void 0 ? void 0 : _error$response19$dat.message) || error.message}`, \"danger\");\n    }\n  };\n  const handleDeleteTerm = async termId => {\n    if (!token) return;\n    try {\n      await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${termId}`, authHeaders);\n      showNotification(\"Term successfully deleted!\", \"success\");\n      fetchTerms();\n    } catch (error) {\n      var _error$response20, _error$response21, _error$response21$dat;\n      console.error(\"Error deleting term:\", ((_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : _error$response20.data) || error.message);\n      showNotification(`Failed to delete term: ${((_error$response21 = error.response) === null || _error$response21 === void 0 ? void 0 : (_error$response21$dat = _error$response21.data) === null || _error$response21$dat === void 0 ? void 0 : _error$response21$dat.message) || error.message}`, \"danger\");\n    }\n  };\n  useEffect(() => {\n    console.log(\"DoctorDashboard useEffect: token=\", token, \"user=\", user, \"authLoading=\", authLoading);\n    if (!authLoading && token && user && user.doktorId) {\n      // user.doktorId is still needed for doctor profile, terms, documents\n      console.log(\"DoctorDashboard useEffect: Initiating data fetching for doktorId:\", user.doktorId);\n      fetchDoctors();\n      fetchPatients();\n      fetchTerms();\n      fetchExaminations();\n      fetchActivityLog();\n      fetchCurrentDoctorProfile();\n      fetchDocuments();\n      fetchMessages(); // Fetch messages here, now by user.userId\n    } else if (!authLoading) {\n      console.log(\"DoctorDashboard useEffect: Data fetching skipped because condition not met.\", {\n        token,\n        user,\n        doktorId: user === null || user === void 0 ? void 0 : user.doktorId,\n        authLoading\n      });\n    }\n  }, [token, user, authLoading]);\n  console.log(\"DoctorDashboard render check: token=\", token, \"user=\", user, \"user.doktorId=\", user === null || user === void 0 ? void 0 : user.doktorId, \"authLoading=\", authLoading);\n  if (authLoading) {\n    console.log(\"DoctorDashboard: Still loading authentication...\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3\",\n        children: \"Loading authentication...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 13\n    }, this);\n  }\n  if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\n    console.log(\"DoctorDashboard: Not authorized as doctor or incomplete data. Conditions:\", {\n      token: !!token,\n      user: !!user,\n      doktorIdDefined: (user === null || user === void 0 ? void 0 : user.doktorId) !== null && (user === null || user === void 0 ? void 0 : user.doktorId) !== undefined\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3\",\n        children: \"Not authorized as a doctor or incomplete data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 13\n    }, this);\n  }\n  const currentDoctorId = user.doktorId;\n  const currentDoctorUserId = user.userId; // NEW: Get user.userId\n  console.log(\"DoctorDashboard: Current doctor ID for filtering (after initial checks):\", currentDoctorId, \"Current User ID:\", currentDoctorUserId);\n  const doctorsExaminations = examinations.filter(examination => examination.doktorId === currentDoctorId);\n  const patientIdsWithExaminations = new Set(doctorsExaminations.map(exam => exam.pacijentId));\n  const myPatients = patients.filter(patient => patientIdsWithExaminations.has(patient.id));\n  const handleUpdateExaminationStatus = async (id, newStatus) => {\n    try {\n      const existingExamination = examinations.find(exam => exam.id === id);\n      if (!existingExamination) {\n        showNotification('Examination not found for status update.', 'danger');\n        return;\n      }\n      console.log(\"Existing Examination object before update:\", existingExamination);\n      const terminIdToSend = existingExamination.terminID;\n      console.log(\"Term ID to send:\", terminIdToSend);\n      if (terminIdToSend === null || terminIdToSend === undefined) {\n        showNotification('Error: Term ID is missing for this examination. Please ensure all examinations have a valid term.', 'danger');\n        return;\n      }\n      const ratingToSend = newStatus === 'obavljen' ? existingExamination.ocjenaDoktora || 5.0 : existingExamination.ocjenaDoktora;\n      const examinationPayload = {\n        pregledID: existingExamination.id,\n        pacijentID: existingExamination.pacijentId,\n        doktorID: existingExamination.doktorId,\n        datumPregleda: existingExamination.date.split('T')[0],\n        vrijemePregleda: existingExamination.time.split('.')[0],\n        status: newStatus,\n        komentarPacijenta: existingExamination.komentarPacijenta,\n        ocjenaDoktora: ratingToSend,\n        terminID: terminIdToSend\n      };\n      const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, examinationPayload, authHeaders);\n      const updatedExam = {\n        id: response.data.pregledID,\n        pacijentId: response.data.pacijentID,\n        doktorId: response.data.doktorID,\n        patientName: response.data.pacijentIme || 'N/A',\n        doctorName: response.data.doktorIme || 'N/A',\n        date: response.data.datumPregleda,\n        time: response.data.vrijemePregleda,\n        status: response.data.status,\n        komentarPacijenta: response.data.komentarPacijenta || '',\n        ocjenaDoktora: response.data.ocjenaDoktora || null,\n        terminID: response.data.terminID\n      };\n      setExaminations(examinations.map(exam => exam.id === id ? updatedExam : exam));\n      fetchActivityLog();\n      showNotification(`Examination status updated to ${newStatus}!`, 'info');\n    } catch (error) {\n      var _error$response22, _error$response23, _error$response23$dat;\n      console.error(\"Error updating examination status:\", ((_error$response22 = error.response) === null || _error$response22 === void 0 ? void 0 : _error$response22.data) || error.message);\n      showNotification(((_error$response23 = error.response) === null || _error$response23 === void 0 ? void 0 : (_error$response23$dat = _error$response23.data) === null || _error$response23$dat === void 0 ? void 0 : _error$response23$dat.message) || 'Error updating examination status.', \"danger\");\n    }\n  };\n  const filteredMyPatients = myPatients.filter(patient => patient.name && patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email && patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastMyPatient = myPatientsCurrentPage * itemsPerPage;\n  const indexOfFirstMyPatient = indexOfLastMyPatient - itemsPerPage;\n  const currentMyPatients = filteredMyPatients.slice(indexOfFirstMyPatient, indexOfLastMyPatient);\n  const totalMyPatientPages = Math.ceil(filteredMyPatients.length / itemsPerPage);\n  const filteredMyExaminations = doctorsExaminations.filter(examination => {\n    const matchesSearch = examination.patientName && examination.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || examination.status && examination.status.toLowerCase().includes(examinationSearchTerm.toLowerCase()) || examination.date && new Date(examination.date).toLocaleDateString().includes(examinationSearchTerm);\n    const matchesFilterStatus = examinationFilterStatus === 'All' || examination.status === examinationFilterStatus;\n    return matchesSearch && matchesFilterStatus;\n  });\n  const indexOfLastMyExaminations = myExaminationsCurrentPage * itemsPerPage;\n  const indexOfFirstMyExaminations = indexOfLastMyExaminations - itemsPerPage;\n  const currentMyExaminations = filteredMyExaminations.slice(indexOfFirstMyExaminations, indexOfLastMyExaminations);\n  const totalMyExaminationsPages = Math.ceil(filteredMyExaminations.length / itemsPerPage);\n  const Pagination = ({\n    itemsPerPage,\n    totalItems,\n    currentPage,\n    paginate\n  }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center mt-4\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === number ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 29\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 13\n    }, this);\n  };\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Doctor Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-info mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Patients Under Care\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: myPatients.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-warning mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Pending Appointments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: doctorsExaminations.filter(exam => exam.status === 'zakazan').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 719,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Quick Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-info\",\n                onClick: () => setActiveTab('my-examinations'),\n                children: \"My Examinations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-success\",\n                onClick: () => setActiveTab('my-patients'),\n                children: \"My Patients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => setActiveTab('documents'),\n                children: \"Documents\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary\",\n                onClick: () => setActiveTab('messages'),\n                children: \"Messages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-danger\",\n                onClick: () => setActiveTab('manage-terms'),\n                children: \"Manage Terms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Recent Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: activityLog.length > 0 ? activityLog.filter(log => log.doktorId === currentDoctorId).slice(-5).reverse().map(log => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item d-flex justify-content-between align-items-center\",\n                children: [log.action, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"badge bg-light text-dark\",\n                  children: new Date(log.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 49\n                }, this)]\n              }, log.id || Math.random(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 45\n              }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item text-center text-muted\",\n                children: \"No recent activity.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 747,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 21\n        }, this);\n      case 'my-examinations':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage My Examinations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25 me-2\",\n              placeholder: \"Search examinations (patient name, status, date)...\",\n              value: examinationSearchTerm,\n              onChange: e => setExaminationSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              className: \"w-auto\",\n              value: examinationFilterStatus,\n              onChange: e => setExaminationFilterStatus(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"All\",\n                children: \"Filter by Status (All)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"zakazan\",\n                children: \"Scheduled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"obavljen\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"otkazan\",\n                children: \"Cancelled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 780,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Patient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 781,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 782,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 783,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 784,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 785,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 779,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentMyExaminations.length > 0 ? currentMyExaminations.map(examination => {\n                  const patient = patients.find(p => p.id === examination.pacijentId);\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: examination.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 794,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: patient ? patient.name : 'N/A'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 795,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: new Date(examination.date).toLocaleDateString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 796,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: examination.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 797,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `badge ${examination.status === 'zakazan' ? 'bg-warning text-dark' : examination.status === 'obavljen' ? 'bg-success' : examination.status === 'otkazan' ? 'bg-danger' : 'bg-secondary'}`,\n                        children: examination.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 799,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 798,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [examination.status === 'zakazan' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-success btn-sm me-2\",\n                          onClick: () => handleUpdateExaminationStatus(examination.id, 'obavljen'),\n                          children: \"Mark as Completed\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 811,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-danger btn-sm\",\n                          onClick: () => handleUpdateExaminationStatus(examination.id, 'otkazan'),\n                          children: \"Cancel\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 817,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true), examination.status === 'obavljen' && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-muted\",\n                        children: \"Completed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 826,\n                        columnNumber: 61\n                      }, this), examination.status === 'otkazan' && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-muted\",\n                        children: \"Cancelled\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 829,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 808,\n                      columnNumber: 53\n                    }, this)]\n                  }, examination.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 793,\n                    columnNumber: 49\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: \"text-center\",\n                    children: \"No examinations found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 837,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 836,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredMyExaminations.length,\n            currentPage: myExaminationsCurrentPage,\n            paginate: setMyExaminationsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 21\n        }, this);\n      case 'my-patients':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"My Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search patients...\",\n              value: patientSearchTerm,\n              onChange: e => setPatientSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 868,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 869,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 870,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 871,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 872,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 867,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentMyPatients.length > 0 ? currentMyPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 879,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 880,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 881,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 882,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-primary btn-sm me-2\",\n                      onClick: () => openPatientDetailModal(patient),\n                      children: \"Details / Medical History\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 884,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 883,\n                    columnNumber: 49\n                  }, this)]\n                }, patient.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 878,\n                  columnNumber: 45\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"No patients found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 895,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 894,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredMyPatients.length,\n            currentPage: myPatientsCurrentPage,\n            paginate: setMyPatientsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 21\n        }, this);\n      case 'documents':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"My Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Upload New Document\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              onChange: handleDocumentUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 25\n          }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Document Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 922,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 923,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Upload Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Access\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 925,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 926,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 920,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: doc.fileName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 932,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: doc.documentType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 933,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(doc.uploadDate).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 934,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`,\n                    children: doc.pristup\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 935,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 935,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    size: \"sm\",\n                    href: `${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${doc.id}`,\n                    target: \"_blank\",\n                    children: \"Download\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 937,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 936,\n                  columnNumber: 45\n                }, this)]\n              }, doc.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No documents found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 21\n        }, this);\n      case 'messages':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"My Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mb-3\",\n            onClick: () => setNewMessage({\n              recipientId: '',\n              subject: '',\n              content: ''\n            }),\n            children: \"Compose New Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 25\n          }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: messages.map(msg => {\n              var _patients$find;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item d-flex justify-content-between align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"From: \", msg.senderId === currentDoctorUserId ? 'Me' : ((_patients$find = patients.find(p => p.userId === msg.senderId)) === null || _patients$find === void 0 ? void 0 : _patients$find.name) || `Patient (${msg.senderId})`]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 960,\n                    columnNumber: 45\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 960,\n                    columnNumber: 201\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Subject:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 961,\n                    columnNumber: 45\n                  }, this), \" \", msg.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 961,\n                    columnNumber: 85\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: new Date(msg.timestamp).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 962,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 958,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  onClick: () => handleViewMessage(msg),\n                  children: \"View Message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 964,\n                  columnNumber: 41\n                }, this)]\n              }, msg.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 957,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 955,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No messages found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Compose New Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Recipient (Patient)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                name: \"recipientId\",\n                value: newMessage.recipientId,\n                onChange: handleNewMessageChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- Select a patient --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 985,\n                  columnNumber: 37\n                }, this), myPatients.map(patient => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: patient.userId,\n                  children: patient.name\n                }, patient.userId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 987,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 978,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Subject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 992,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"subject\",\n                value: newMessage.subject,\n                onChange: handleNewMessageChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 993,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 991,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                name: \"content\",\n                value: newMessage.content,\n                onChange: handleNewMessageChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleSendMessage,\n              children: \"Send Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 21\n        }, this);\n      case 'manage-terms':\n        const doctorsTerms = terms.filter(term => term.doktorId === currentDoctorId);\n        const sortedTerms = doctorsTerms.sort((a, b) => {\n          const dateA = new Date(`${a.datum}T${a.vrijeme}`);\n          const dateB = new Date(`${b.datum}T${b.vrijeme}`);\n          return dateA - dateB;\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage My Terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1026,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Create New Term\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleCreateTerm,\n            className: \"mb-5 p-3 border rounded shadow-sm bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"newTermDate\",\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1032,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  value: newTermDate,\n                  onChange: e => setNewTermDate(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1033,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"newTermTime\",\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1041,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"time\",\n                  value: newTermTime,\n                  onChange: e => setNewTermTime(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1042,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1040,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"newTermStatus\",\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Availability\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1050,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  value: selectedTermStatus,\n                  onChange: e => setSelectedTermStatus(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"dostupan\",\n                    children: \"Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1056,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"nedostupan\",\n                    children: \"Unavailable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1057,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1051,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1049,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              children: \"Create Term\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"My Existing Terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 25\n          }, this), sortedTerms.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1070,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1071,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1072,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Availability\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1073,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1074,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1069,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1068,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: sortedTerms.map(term => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1080,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: new Date(term.datum).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1081,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: term.vrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1082,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge bg-${term.dostupnost ? 'bg-success' : 'bg-danger'}`,\n                      children: term.dostupnost ? 'Available' : 'Unavailable'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1084,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1083,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"danger\",\n                      size: \"sm\",\n                      onClick: () => handleDeleteTerm(term.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1089,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1088,\n                    columnNumber: 49\n                  }, this)]\n                }, term.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1079,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No terms found for your profile. Please create new ones.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 21\n        }, this);\n      case 'settings':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container my-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Doctor Profile Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 25\n          }, this), !currentDoctorProfile ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading doctor profile...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1106,\n            columnNumber: 29\n          }, this) : isEditingProfile ? /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleUpdateDoctorProfile,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1112,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editIme,\n                  onChange: e => setEditIme(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1113,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1111,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1116,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editPrezime,\n                  onChange: e => setEditPrezime(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1117,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1110,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1122,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  value: editEmail,\n                  onChange: e => setEditEmail(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1123,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Phone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1126,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editTelefon,\n                  onChange: e => setEditTelefon(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1127,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1125,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Specialties (comma separated)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1131,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: editSpecijalizacije,\n                onChange: e => setEditSpeciijalizacije(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1132,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1130,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1136,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editGrad,\n                  onChange: e => setEditGrad(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1137,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1135,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Working Hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1140,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: editRadnoVrijeme,\n                  onChange: e => setEditRadnoVrijeme(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1141,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1139,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1134,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Experience (years)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1145,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: editIskustvo,\n                onChange: e => setEditIskustvo(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1146,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Profile Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1149,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleImageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 41\n              }, this), profileImagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: profileImagePreview,\n                  alt: \"Profile image preview\",\n                  style: {\n                    maxWidth: '100px',\n                    maxHeight: '100px',\n                    borderRadius: '50%',\n                    objectFit: 'cover'\n                  },\n                  className: \"border border-secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1157,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1156,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1148,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-end\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                className: \"me-2\",\n                onClick: () => setIsEditingProfile(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1167,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1168,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1166,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: currentDoctorProfile.profileImageBase64 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: currentDoctorProfile.profileImageBase64,\n                alt: \"Doctor profile\",\n                style: {\n                  width: '100px',\n                  height: '100px',\n                  borderRadius: '50%',\n                  objectFit: 'cover'\n                },\n                className: \"mb-3 border border-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1175,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://placehold.co/100x100/CCCCCC/000000?text=No+image\",\n                alt: \"No profile image\",\n                style: {\n                  width: '100px',\n                  height: '100px',\n                  borderRadius: '50%',\n                  objectFit: 'cover'\n                },\n                className: \"mb-3 border border-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1182,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1173,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"First Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1190,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.ime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1190,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Last Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1191,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.prezime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1191,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1192,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1192,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Phone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1193,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.telefon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1193,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Specialties:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1194,\n                columnNumber: 40\n              }, this), \" \", Array.isArray(currentDoctorProfile.specijalizacije) ? currentDoctorProfile.specijalizacije.join(', ') : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1194,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"City:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1195,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.grad]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1195,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Working Hours:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1196,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.radnoVrijeme]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1196,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Experience:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1197,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.iskustvo, \" years\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1197,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Rating:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1198,\n                columnNumber: 40\n              }, this), \" \", currentDoctorProfile.ocjena]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1198,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => setIsEditingProfile(true),\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1199,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1172,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Select a tab from the sidebar.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-white p-4\",\n      style: {\n        width: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-4\",\n        children: \"Doctor Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('overview'),\n            children: \"Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-examinations' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('my-examinations'),\n            children: \"My Examinations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-patients' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('my-patients'),\n            children: \"My Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1232,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'manage-terms' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('manage-terms'),\n            children: \"Manage Terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1240,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('documents'),\n            children: \"Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1248,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('messages'),\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1256,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'settings' ? 'active bg-secondary rounded' : ''}`,\n            onClick: () => setActiveTab('settings'),\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 p-4 bg-light\",\n      children: [showAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${alertType} alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3`,\n        role: \"alert\",\n        style: {\n          zIndex: 1050\n        },\n        children: [alertMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-close\",\n          onClick: () => setShowAlert(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1278,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0\",\n          children: \"Doctor Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1283,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1282,\n        columnNumber: 17\n      }, this), renderContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1274,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showPatientDetailModal,\n      onHide: closePatientDetailModal,\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Patient Details: \", selectedPatient === null || selectedPatient === void 0 ? void 0 : selectedPatient.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1292,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedPatient && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1297,\n              columnNumber: 32\n            }, this), \" \", selectedPatient.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1297,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1298,\n              columnNumber: 32\n            }, this), \" \", selectedPatient.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1298,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1299,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Examination History for \", selectedPatient.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1300,\n            columnNumber: 29\n          }, this), doctorsExaminations.filter(exam => exam.pacijentId === selectedPatient.id).length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group mb-3\",\n            children: doctorsExaminations.filter(exam => exam.pacijentId === selectedPatient.id).sort((a, b) => new Date(b.date) - new Date(a.date)).map(exam => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1308,\n                columnNumber: 49\n              }, this), \" \", new Date(exam.date).toLocaleDateString(), \", \", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1309,\n                columnNumber: 49\n              }, this), \" \", exam.time, \", \", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1310,\n                columnNumber: 49\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `badge ${exam.status === 'zakazan' ? 'bg-warning text-dark' : exam.status === 'obavljen' ? 'bg-success' : exam.status === 'otkazan' ? 'bg-danger' : 'bg-secondary'}`,\n                children: exam.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1310,\n                columnNumber: 74\n              }, this)]\n            }, exam.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1307,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1302,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No examination history found for this patient.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1320,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1322,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Medical History Entries for \", selectedPatient.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1323,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Diagnosis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1325,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"diagnosis\",\n              value: newMedicalHistoryEntry.diagnosis,\n              onChange: e => setNewMedicalHistoryEntry(prev => ({\n                ...prev,\n                diagnosis: e.target.value\n              })),\n              placeholder: \"Enter diagnosis...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1326,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1324,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Treatment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1335,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"treatment\",\n              value: newMedicalHistoryEntry.treatment,\n              onChange: e => setNewMedicalHistoryEntry(prev => ({\n                ...prev,\n                treatment: e.target.value\n              })),\n              placeholder: \"Enter treatment details...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1336,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1334,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1346,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"notes\",\n              value: newMedicalHistoryEntry.notes,\n              onChange: e => setNewMedicalHistoryEntry(prev => ({\n                ...prev,\n                notes: e.target.value\n              })),\n              placeholder: \"Additional notes...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1347,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1345,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleAddMedicalHistoryEntry,\n            children: \"Add Medical History Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1356,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mt-4\",\n            children: \"Existing Medical History Records:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1358,\n            columnNumber: 29\n          }, this), medicalHistoryEntries.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: medicalHistoryEntries.map(record => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1363,\n                columnNumber: 45\n              }, this), \" \", new Date(record.date).toLocaleDateString(), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1363,\n                columnNumber: 113\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Diagnosis:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1364,\n                columnNumber: 45\n              }, this), \" \", record.diagnosis, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1364,\n                columnNumber: 92\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Treatment:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1365,\n                columnNumber: 45\n              }, this), \" \", record.treatment, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1365,\n                columnNumber: 92\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Notes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1366,\n                columnNumber: 45\n              }, this), \" \", record.notes || 'N/A']\n            }, record.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1362,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1360,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No medical history records for this patient.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1371,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1296,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closePatientDetailModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1377,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1376,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1290,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: !!selectedMessage,\n      onHide: closeMessageModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Message: \", selectedMessage === null || selectedMessage === void 0 ? void 0 : selectedMessage.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1385,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1384,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1391,\n              columnNumber: 32\n            }, this), \" \", selectedMessage.senderId === currentDoctorUserId ? 'Me' : ((_patients$find2 = patients.find(p => p.userId === selectedMessage.senderId)) === null || _patients$find2 === void 0 ? void 0 : _patients$find2.name) || `Patient (${selectedMessage.senderId})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1391,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1392,\n              columnNumber: 32\n            }, this), \" \", new Date(selectedMessage.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1392,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1393,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1394,\n            columnNumber: 29\n          }, this), selectedMessage.replies && selectedMessage.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Replies:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1398,\n              columnNumber: 37\n            }, this), selectedMessage.replies.map((reply, index) => {\n              var _patients$find3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border p-2 mb-2 rounded bg-light\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [reply.senderId === currentDoctorUserId ? 'Me' : ((_patients$find3 = patients.find(p => p.userId === reply.senderId)) === null || _patients$find3 === void 0 ? void 0 : _patients$find3.name) || `Patient (${reply.senderId})`, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1402,\n                  columnNumber: 45\n                }, this), \" \", reply.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1403,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(reply.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1404,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1400,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1397,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1411,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: replyMessage.content,\n              onChange: handleReplyMessageChange,\n              placeholder: \"Type your reply here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1412,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1410,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mt-2\",\n            onClick: () => handleReply(selectedMessage.id),\n            children: \"Send Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1420,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1387,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeMessageModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1425,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1424,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1383,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1211,\n    columnNumber: 9\n  }, this);\n}\n_s(DoctorDashboard, \"xA3OWzmuME3polzyLM0eFeNJwJU=\", false, function () {\n  return [useAuth];\n});\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["axios","useAuth","React","useState","useEffect","useMemo","Modal","Button","Form","Alert","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","OBAVIJESTI_DOKUMENTI_API_PREFIX","DoctorDashboard","_s","_patients$find2","activeTab","setActiveTab","doctors","setDoctors","patients","setPatients","examinations","setExaminations","terms","setTerms","activityLog","setActivityLog","currentDoctorProfile","setCurrentDoctorProfile","isEditingProfile","setIsEditingProfile","editIme","setEditIme","editPrezime","setEditPrezime","editEmail","setEditEmail","editTelefon","setEditTelefon","editSpecijalizacije","setEditSpecijalizacije","editGrad","setEditGrad","editRadnoVrijeme","setEditRadnoVrijeme","editIskustvo","setEditIskustvo","editOcjena","setEditOcjena","profileImageFile","setProfileImageFile","profileImagePreview","setProfileImagePreview","documents","setDocuments","messages","setMessages","newMessage","setNewMessage","recipientId","subject","content","replyMessage","setReplyMessage","messageId","selectedMessage","setSelectedMessage","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","patientSearchTerm","setPatientSearchTerm","examinationSearchTerm","setExaminationSearchTerm","examinationFilterStatus","setExaminationFilterStatus","myPatientsCurrentPage","setMyPatientsCurrentPage","myExaminationsCurrentPage","setMyExaminationsCurrentPage","itemsPerPage","showPatientDetailModal","setShowPatientDetailModal","selectedPatient","setSelectedPatient","medicalHistoryEntries","setMedicalHistoryEntries","newMedicalHistoryEntry","setNewMedicalHistoryEntry","diagnosis","treatment","notes","newTermDate","setNewTermDate","newTermTime","setNewTermTime","selectedTermStatus","setSelectedTermStatus","token","user","loading","authLoading","authHeaders","headers","showNotification","message","type","setTimeout","fetchDoctors","response","get","data","map","doc","id","doktorID","userId","Number","name","ime","prezime","specialty","Array","isArray","specijalizacije","length","join","grad","email","telefon","radnoVrijeme","iskustvo","ocjena","profileImageBase64","error","_error$response","console","fetchPatients","pat","pacijentID","phone","_error$response2","fetchTerms","doktorId","undefined","warn","term","terminID","datum","vrijeme","dostupnost","_error$response3","fetchExaminations","exam","pregledID","pacijentId","patientName","pacijentIme","doctorName","doktorIme","date","datumPregleda","time","vrijemePregleda","status","komentarPacijenta","ocjenaDoktora","_error$response4","fetchActivityLog","_error$response5","fetchPatientMedicalHistory","patientId","record","zapisID","doctorId","datumZapisivanja","dijagnoza","lijecenje","napomene","_error$response6","handleAddMedicalHistoryEntry","payload","Date","toISOString","split","post","_error$response7","_error$response8","_error$response8$data","openPatientDetailModal","patient","closePatientDetailModal","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","fetchCurrentDoctorProfile","profileData","_error$response9","handleUpdateDoctorProfile","preventDefault","updatedProfile","s","trim","filter","parseInt","parseFloat","put","_error$response0","_error$response1","_error$response1$data","fetchDocuments","transformedDocuments","dokumentID","fileName","nazivDokumenta","documentType","tipDokumenta","uploadDate","datumKreiranja","pristup","_error$response10","handleDocumentUpload","log","formData","FormData","append","_error$response11","_error$response12","_error$response12$dat","fetchMessages","transformedMessages","msg","porukaID","senderId","senderType","senderIme","receiverId","receiverType","receiverIme","timestamp","replies","_error$response13","handleNewMessageChange","value","prev","handleSendMessage","messageData","_error$response14","_error$response15","_error$response15$dat","handleReplyMessageChange","handleReply","replyPayload","_error$response16","_error$response17","_error$response17$dat","handleViewMessage","closeMessageModal","handleCreateTerm","termData","_error$response18","_error$response19","_error$response19$dat","handleDeleteTerm","termId","delete","_error$response20","_error$response21","_error$response21$dat","className","style","minHeight","children","role","_jsxFileName","lineNumber","columnNumber","doktorIdDefined","currentDoctorId","currentDoctorUserId","doctorsExaminations","examination","patientIdsWithExaminations","Set","myPatients","has","handleUpdateExaminationStatus","newStatus","existingExamination","find","terminIdToSend","ratingToSend","examinationPayload","updatedExam","_error$response22","_error$response23","_error$response23$dat","filteredMyPatients","toLowerCase","includes","indexOfLastMyPatient","indexOfFirstMyPatient","currentMyPatients","slice","totalMyPatientPages","Math","ceil","filteredMyExaminations","matchesSearch","toLocaleDateString","matchesFilterStatus","indexOfLastMyExaminations","indexOfFirstMyExaminations","currentMyExaminations","totalMyExaminationsPages","Pagination","totalItems","currentPage","paginate","pageNumbers","i","push","number","onClick","renderContent","reverse","action","toLocaleString","random","placeholder","onChange","Select","p","colSpan","Group","controlId","Label","Control","variant","size","href","_patients$find","as","required","rows","doctorsTerms","sortedTerms","sort","a","b","dateA","dateB","onSubmit","setEditSpeciijalizacije","accept","src","alt","maxWidth","maxHeight","borderRadius","objectFit","width","height","zIndex","show","onHide","Header","closeButton","Title","Body","Footer","reply","index","_patients$find3","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/DoctorDashboard.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst OBAVIJESTI_DOKUMENTI_API_PREFIX = `${GATEWAY_BASE_URL}/api/obavijesti-dokumentacija`;\r\n\r\nfunction DoctorDashboard() {\r\n    const [activeTab, setActiveTab] = useState('overview');\r\n\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [patients, setPatients] = useState([]); // This patient list should contain userId\r\n    const [examinations, setExaminations] = useState([]);\r\n    const [terms, setTerms] = useState([]);\r\n    const [activityLog, setActivityLog] = useState([]);\r\n\r\n    const [currentDoctorProfile, setCurrentDoctorProfile] = useState(null);\r\n    const [isEditingProfile, setIsEditingProfile] = useState(false);\r\n\r\n    const [editIme, setEditIme] = useState('');\r\n    const [editPrezime, setEditPrezime] = useState('');\r\n    const [editEmail, setEditEmail] = useState('');\r\n    const [editTelefon, setEditTelefon] = useState('');\r\n    const [editSpecijalizacije, setEditSpecijalizacije] = useState('');\r\n    const [editGrad, setEditGrad] = useState('');\r\n    const [editRadnoVrijeme, setEditRadnoVrijeme] = useState('');\r\n    const [editIskustvo, setEditIskustvo] = useState('');\r\n    const [editOcjena, setEditOcjena] = useState('');\r\n    const [profileImageFile, setProfileImageFile] = useState(null);\r\n    const [profileImagePreview, setProfileImagePreview] = useState(null);\r\n\r\n    const [documents, setDocuments] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState({ recipientId: '', subject: '', content: '' }); // recipientId will now be Long userId\r\n    const [replyMessage, setReplyMessage] = useState({ messageId: '', content: '' });\r\n    const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('success');\r\n\r\n    const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n    const [examinationSearchTerm, setExaminationSearchTerm] = useState('');\r\n    const [examinationFilterStatus, setExaminationFilterStatus] = useState('All');\r\n\r\n    const [myPatientsCurrentPage, setMyPatientsCurrentPage] = useState(1);\r\n    const [myExaminationsCurrentPage, setMyExaminationsCurrentPage] = useState(1);\r\n    const itemsPerPage = 5;\r\n\r\n    const [showPatientDetailModal, setShowPatientDetailModal] = useState(false);\r\n    const [selectedPatient, setSelectedPatient] = useState(null);\r\n    // Medical History States\r\n    const [medicalHistoryEntries, setMedicalHistoryEntries] = useState([]);\r\n    const [newMedicalHistoryEntry, setNewMedicalHistoryEntry] = useState({\r\n        diagnosis: '',\r\n        treatment: '',\r\n        notes: ''\r\n    });\r\n\r\n    const [newTermDate, setNewTermDate] = useState('');\r\n    const [newTermTime, setNewTermTime] = useState('');\r\n    const [selectedTermStatus, setSelectedTermStatus] = useState('dostupan');\r\n\r\n    const { token, user, loading: authLoading } = useAuth();\r\n\r\n    const authHeaders = useMemo(() => ({\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }), [token]);\r\n\r\n    const showNotification = (message, type = 'success') => {\r\n        setAlertMessage(message);\r\n        setAlertType(type);\r\n        setShowAlert(true);\r\n        setTimeout(() => {\r\n            setShowAlert(false);\r\n            setAlertMessage('');\r\n        }, 3000);\r\n    };\r\n\r\n    const fetchDoctors = async () => {\r\n        if (!token) return;\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n            setDoctors(response.data.map(doc => ({\r\n                id: doc.doktorID, // Doctor ID (Integer)\r\n                userId: Number(doc.userId), // User ID from Auth service (Long)\r\n                name: `${doc.ime} ${doc.prezime}`,\r\n                ime: doc.ime,\r\n                prezime: doc.prezime,\r\n                specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                           ? doc.specijalizacije.join(', ')\r\n                           : 'N/A',\r\n                grad: doc.grad,\r\n                email: doc.email,\r\n                telefon: doc.telefon,\r\n                radnoVrijeme: doc.radnoVrijeme,\r\n                iskustvo: doc.iskustvo,\r\n                ocjena: doc.ocjena,\r\n                profileImageBase64: doc.profileImageBase64,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Error fetching all doctors:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching doctors.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchPatients = async () => {\r\n        if (!token) return;\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\r\n            setPatients(response.data.map(pat => ({\r\n                id: pat.pacijentID, // Patient ID (Integer)\r\n                userId: Number(pat.userId), // User ID from Auth service (Long)\r\n                name: `${pat.ime} ${pat.prezime}`,\r\n                ime: pat.ime,\r\n                prezime: pat.prezime,\r\n                email: pat.email,\r\n                phone: pat.telefon,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Error fetching all patients:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching patients.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchTerms = async () => {\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            console.warn(\"Cannot fetch terms: doktorId is missing or auth not ready.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${user.doktorId}`, authHeaders);\r\n            setTerms(response.data.map(term => ({\r\n                id: term.terminID,\r\n                doktorId: term.doktorID,\r\n                datum: term.datum,\r\n                vrijeme: term.vrijeme,\r\n                dostupnost: term.dostupnost,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Error fetching doctor's terms:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching doctor's terms.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchExaminations = async () => {\r\n        if (!token) return;\r\n        try {\r\n            const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\r\n            setExaminations(response.data.map(exam => ({\r\n                id: exam.pregledID,\r\n                pacijentId: exam.pacijentID,\r\n                doktorId: exam.doktorID,\r\n                patientName: exam.pacijentIme || 'N/A',\r\n                doctorName: exam.doktorIme || 'N/A',\r\n                date: exam.datumPregleda,\r\n                time: exam.vrijemePregleda,\r\n                status: exam.status,\r\n                komentarPacijenta: exam.komentarPacijenta || '',\r\n                ocjenaDoktora: exam.ocjenaDoktora || null,\r\n                terminID: exam.terminID,\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Error fetching all examinations:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching examinations.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchActivityLog = async () => {\r\n        if (!token) return;\r\n        try {\r\n            console.warn(\"Activity Log endpoint is not defined, skipping fetching activity log.\");\r\n            setActivityLog([]);\r\n        } catch (error) {\r\n            console.error(\"Error fetching activity log:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching activity log.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    // NEW: Fetch Medical History for a specific patient\r\n    const fetchPatientMedicalHistory = async (patientId) => {\r\n        if (!token || !patientId) return;\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija/pacijent/${patientId}`, authHeaders);\r\n            setMedicalHistoryEntries(response.data.map(record => ({\r\n                id: record.zapisID,\r\n                patientId: record.pacijentID,\r\n                doctorId: record.doktorID,\r\n                doctorName: record.doktorIme,\r\n                date: record.datumZapisivanja,\r\n                diagnosis: record.dijagnoza,\r\n                treatment: record.lijecenje,\r\n                notes: record.napomene\r\n            })));\r\n        } catch (error) {\r\n            console.error(\"Error fetching patient medical history:\", error.response?.data || error.message);\r\n            setMedicalHistoryEntries([]); // Clear if error\r\n            showNotification(\"Error fetching patient's medical history.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    // NEW: Handle saving a new medical history entry\r\n    const handleAddMedicalHistoryEntry = async () => {\r\n        if (!token || !selectedPatient || !user || !user.doktorId) {\r\n            showNotification(\"Missing data to add medical history entry.\", \"danger\");\r\n            return;\r\n        }\r\n        if (!newMedicalHistoryEntry.diagnosis || !newMedicalHistoryEntry.treatment) {\r\n            showNotification(\"Diagnosis and Treatment are required for medical history.\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const payload = {\r\n                pacijentID: selectedPatient.id,\r\n                doktorID: user.doktorId,\r\n                datumZapisivanja: new Date().toISOString().split('T')[0], // Current date for entry\r\n                dijagnoza: newMedicalHistoryEntry.diagnosis,\r\n                lijecenje: newMedicalHistoryEntry.treatment,\r\n                napomene: newMedicalHistoryEntry.notes\r\n            };\r\n            await axios.post(`${KORISNICI_DOKTORI_API_PREFIX}/api/medicinska-historija`, payload, authHeaders);\r\n            showNotification(\"Medical history entry successfully added!\", \"success\");\r\n            setNewMedicalHistoryEntry({ diagnosis: '', treatment: '', notes: '' }); // Clear form\r\n            fetchPatientMedicalHistory(selectedPatient.id); // Refresh medical history\r\n        } catch (error) {\r\n            console.error(\"Error adding medical history entry:\", error.response?.data || error.message);\r\n            showNotification(error.response?.data?.message || 'Error adding medical history entry.', 'danger');\r\n        }\r\n    };\r\n\r\n    const openPatientDetailModal = async (patient) => {\r\n        setSelectedPatient(patient);\r\n        await fetchPatientMedicalHistory(patient.id); // Fetch medical history when modal opens\r\n        setShowPatientDetailModal(true);\r\n    };\r\n\r\n    const closePatientDetailModal = () => {\r\n        setShowPatientDetailModal(false);\r\n        setSelectedPatient(null);\r\n        setMedicalHistoryEntries([]); // Clear history when closing\r\n        setNewMedicalHistoryEntry({ diagnosis: '', treatment: '', notes: '' }); // Clear new entry form\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            setProfileImageFile(file);\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setProfileImagePreview(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        } else {\r\n            setProfileImageFile(null);\r\n            setProfileImagePreview(null);\r\n        }\r\n    };\r\n\r\n    const fetchCurrentDoctorProfile = async () => {\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            console.warn(\"Cannot fetch current doctor profile: doktorId is missing or auth not ready.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, authHeaders);\r\n            const profileData = response.data;\r\n            setCurrentDoctorProfile(profileData);\r\n            setEditIme(profileData.ime || '');\r\n            setEditPrezime(profileData.prezime || '');\r\n            setEditEmail(profileData.email || '');\r\n            setEditTelefon(profileData.telefon || '');\r\n            setEditSpecijalizacije(Array.isArray(profileData.specijalizacije) ? profileData.specijalizacije.join(', ') : '');\r\n            setEditGrad(profileData.grad || '');\r\n            setEditRadnoVrijeme(profileData.radnoVrijeme || '');\r\n            setEditIskustvo(profileData.iskustvo || '');\r\n            setEditOcjena(profileData.ocjena || '');\r\n            setProfileImagePreview(profileData.profileImageBase64 || null);\r\n        } catch (error) {\r\n            console.error(\"Error fetching doctor profile:\", error.response?.data || error.message);\r\n            showNotification(\"Error fetching doctor profile.\", \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleUpdateDoctorProfile = async (e) => {\r\n        e.preventDefault();\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            showNotification(\"You are not authorized or doctor ID is missing.\", \"danger\");\r\n            return;\r\n        }\r\n\r\n        const updatedProfile = {\r\n            doktorID: user.doktorId,\r\n            userId: currentDoctorProfile.userId,\r\n            ime: editIme,\r\n            prezime: editPrezime,\r\n            email: editEmail,\r\n            telefon: editTelefon,\r\n            specijalizacije: editSpecijalizacije.split(',').map(s => s.trim()).filter(s => s !== ''),\r\n            grad: editGrad,\r\n            radnoVrijeme: editRadnoVrijeme,\r\n            iskustvo: parseInt(editIskustvo, 10),\r\n            ocjena: parseFloat(editOcjena) || 0.0,\r\n            profileImageBase64: profileImagePreview,\r\n        };\r\n\r\n        try {\r\n            const response = await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${user.doktorId}`, updatedProfile, authHeaders);\r\n            setCurrentDoctorProfile(response.data);\r\n            setIsEditingProfile(false);\r\n            showNotification(\"Profile successfully updated!\");\r\n            fetchDoctors();\r\n        } catch (error) {\r\n            console.error(\"Error updating profile:\", error.response?.data || error.message);\r\n            showNotification(error.response?.data?.message || 'Error updating profile.', 'danger');\r\n        }\r\n    };\r\n\r\n    const fetchDocuments = async () => {\r\n        if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n            console.warn(\"Cannot fetch documents: doktorId is missing or auth not ready.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/doktor/${user.doktorId}`, authHeaders);\r\n            const transformedDocuments = response.data.map(doc => ({\r\n                id: doc.dokumentID,\r\n                fileName: doc.nazivDokumenta,\r\n                documentType: doc.tipDokumenta,\r\n                uploadDate: doc.datumKreiranja,\r\n                pristup: doc.pristup,\r\n                pacijentIme: doc.pacijentIme\r\n            }));\r\n            setDocuments(transformedDocuments);\r\n            showNotification(\"Documents successfully fetched!\", \"success\");\r\n        } catch (error) {\r\n            console.error('Error fetching documents for doctor:', error.response?.data || error.message);\r\n            showNotification('Failed to fetch documents.', \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleDocumentUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n\r\n        if (!user || user.doktorId === null || user.doktorId === undefined) {\r\n            showNotification(\"Doctor ID is not available for document upload.\", \"danger\");\r\n            return;\r\n        }\r\n\r\n        console.log(\"Attempting document upload with Doktor ID:\", user.doktorId);\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('doktorID', user.doktorId);\r\n        formData.append('tipDokumenta', 'Doctor Upload');\r\n        formData.append('pristup', 'PRIVATNA');\r\n\r\n        try {\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/upload`, formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            showNotification('Document successfully uploaded!', 'success');\r\n            fetchDocuments();\r\n        } catch (error) {\r\n            console.error('Error uploading document:', error.response?.data || error.message);\r\n            showNotification('Document upload failed. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async () => {\r\n        if (!token || !user || user.userId === null || user.userId === undefined) { // Use user.userId\r\n            console.warn(\"Cannot fetch messages: user.userId is missing or auth not ready.\");\r\n            return;\r\n        }\r\n        try {\r\n            // Updated endpoint for fetching messages using user.userId and userType DOKTOR\r\n            const response = await axios.get(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/konverzacija/${user.userId}?userType=DOKTOR`, authHeaders);\r\n            const transformedMessages = response.data.map(msg => ({\r\n                id: msg.porukaID,\r\n                senderId: Number(msg.senderId), // Explicitly convert to Number\r\n                senderType: msg.senderType,\r\n                senderIme: msg.senderIme,\r\n                receiverId: Number(msg.receiverId), // Explicitly convert to Number\r\n                receiverType: msg.receiverType,\r\n                receiverIme: msg.receiverIme,\r\n                subject: msg.subject,\r\n                content: msg.content,\r\n                timestamp: msg.timestamp,\r\n                replies: msg.replies || [] // Ensure replies is always an array\r\n            }));\r\n            setMessages(transformedMessages);\r\n            showNotification(\"Messages successfully fetched!\", \"success\");\r\n        } catch (error) {\r\n            console.error('Error fetching messages for doctor:', error.response?.data || error.message);\r\n            showNotification('Failed to fetch messages.', \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleNewMessageChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewMessage(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!user || user.userId === null || user.userId === undefined) { // Use user.userId\r\n            showNotification('Your user ID is not available. Cannot send message.', 'danger');\r\n            return;\r\n        }\r\n        if (!newMessage.recipientId || !newMessage.subject || !newMessage.content) {\r\n            showNotification('Please fill in all message fields.', 'warning');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const messageData = {\r\n                senderId: user.userId, // SENDER is now user.userId (Long)\r\n                senderType: 'DOKTOR',\r\n                receiverId: Number(newMessage.recipientId), // RECIPIENT is patient's user.userId (Long) - convert to Number\r\n                receiverType: 'PACIJENT',\r\n                subject: newMessage.subject,\r\n                content: newMessage.content\r\n            };\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/posalji`, messageData, authHeaders);\r\n            showNotification('Message successfully sent!', 'success');\r\n            setNewMessage({ recipientId: '', subject: '', content: '' });\r\n            fetchMessages();\r\n        } catch (error) {\r\n            console.error('Error sending message:', error.response?.data || error.message);\r\n            showNotification('Failed to send message. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleReplyMessageChange = (e) => {\r\n        setReplyMessage(prev => ({ ...prev, content: e.target.value }));\r\n    };\r\n\r\n    const handleReply = async (messageId) => {\r\n        if (!user || user.userId === null || user.userId === undefined) { // Use user.userId\r\n            showNotification('Your user ID is not available. Cannot reply.', 'danger');\r\n            return;\r\n        }\r\n        if (!replyMessage.content) {\r\n            showNotification('Reply content cannot be empty.', 'warning');\r\n            return;\r\n        }\r\n        try {\r\n            const replyPayload = {\r\n                senderId: user.userId, // SENDER is now user.userId (Long)\r\n                senderType: 'DOKTOR',\r\n                content: replyMessage.content\r\n            };\r\n            await axios.post(`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/poruke/${messageId}/odgovori`, replyPayload, authHeaders);\r\n            showNotification('Reply successfully sent!', 'success');\r\n            setReplyMessage({ messageId: '', content: '' });\r\n            fetchMessages();\r\n            // Update local state for current reply display\r\n            setSelectedMessage(prev => {\r\n                if (!prev) return null;\r\n                return {\r\n                    ...prev,\r\n                    replies: [...(prev.replies || []), {\r\n                        senderId: user.userId, // Important: Use user.userId here\r\n                        senderIme: `${user.ime || ''} ${user.prezime || ''}`.trim(), // Use name/surname from useAuth, if available\r\n                        senderType: 'DOKTOR',\r\n                        content: replyMessage.content,\r\n                        timestamp: new Date().toISOString()\r\n                    }]\r\n                };\r\n            });\r\n        } catch (error) {\r\n            console.error('Error sending reply:', error.response?.data || error.message);\r\n            showNotification('Failed to send reply. ' + (error.response?.data?.message || error.message), \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleViewMessage = (message) => {\r\n        setSelectedMessage(message);\r\n    };\r\n\r\n    const closeMessageModal = () => {\r\n        setSelectedMessage(null);\r\n        setReplyMessage({ messageId: '', content: '' });\r\n    };\r\n\r\n    const handleCreateTerm = async (e) => {\r\n        e.preventDefault();\r\n        if (!user || user.doktorId === null || user.doktorId === undefined) {\r\n            showNotification(\"Doctor ID is not available. Cannot create term.\", \"danger\");\r\n            return;\r\n        }\r\n        if (!newTermDate || !newTermTime) {\r\n            showNotification(\"Please select both date and time for the new term.\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const termData = {\r\n                doktorID: user.doktorId,\r\n                datum: newTermDate,\r\n                vrijeme: newTermTime + ':00',\r\n                dostupnost: selectedTermStatus === 'dostupan'\r\n            };\r\n\r\n            await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini`, termData, authHeaders);\r\n            showNotification(\"Term successfully created!\", \"success\");\r\n            setNewTermDate('');\r\n            setNewTermTime('');\r\n            setSelectedTermStatus('dostupan');\r\n            fetchTerms();\r\n        } catch (error) {\r\n            console.error(\"Error creating term:\", error.response?.data || error.message);\r\n            showNotification(`Failed to create term: ${error.response?.data?.message || error.message}`, \"danger\");\r\n        }\r\n    };\r\n\r\n    const handleDeleteTerm = async (termId) => {\r\n        if (!token) return;\r\n        try {\r\n            await axios.delete(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/${termId}`, authHeaders);\r\n            showNotification(\"Term successfully deleted!\", \"success\");\r\n            fetchTerms();\r\n        } catch (error) {\r\n            console.error(\"Error deleting term:\", error.response?.data || error.message);\r\n            showNotification(`Failed to delete term: ${error.response?.data?.message || error.message}`, \"danger\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"DoctorDashboard useEffect: token=\", token, \"user=\", user, \"authLoading=\", authLoading);\r\n        if (!authLoading && token && user && user.doktorId) { // user.doktorId is still needed for doctor profile, terms, documents\r\n            console.log(\"DoctorDashboard useEffect: Initiating data fetching for doktorId:\", user.doktorId);\r\n            fetchDoctors();\r\n            fetchPatients();\r\n            fetchTerms();\r\n            fetchExaminations();\r\n            fetchActivityLog();\r\n            fetchCurrentDoctorProfile();\r\n            fetchDocuments();\r\n            fetchMessages(); // Fetch messages here, now by user.userId\r\n        } else if (!authLoading) {\r\n            console.log(\"DoctorDashboard useEffect: Data fetching skipped because condition not met.\", { token, user, doktorId: user?.doktorId, authLoading });\r\n        }\r\n    }, [token, user, authLoading]);\r\n\r\n    console.log(\"DoctorDashboard render check: token=\", token, \"user=\", user, \"user.doktorId=\", user?.doktorId, \"authLoading=\", authLoading);\r\n    if (authLoading) {\r\n        console.log(\"DoctorDashboard: Still loading authentication...\");\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <p className=\"ms-3\">Loading authentication...</p>\r\n            </div>\r\n        );\r\n    }\r\n    if (!token || !user || user.doktorId === null || user.doktorId === undefined) {\r\n        console.log(\"DoctorDashboard: Not authorized as doctor or incomplete data. Conditions:\", { token: !!token, user: !!user, doktorIdDefined: user?.doktorId !== null && user?.doktorId !== undefined });\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <p className=\"ms-3\">Not authorized as a doctor or incomplete data.</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const currentDoctorId = user.doktorId;\r\n    const currentDoctorUserId = user.userId; // NEW: Get user.userId\r\n    console.log(\"DoctorDashboard: Current doctor ID for filtering (after initial checks):\", currentDoctorId, \"Current User ID:\", currentDoctorUserId);\r\n\r\n\r\n    const doctorsExaminations = examinations.filter(\r\n        (examination) => examination.doktorId === currentDoctorId\r\n    );\r\n\r\n    const patientIdsWithExaminations = new Set(\r\n        doctorsExaminations.map((exam) => exam.pacijentId)\r\n    );\r\n    const myPatients = patients.filter((patient) =>\r\n        patientIdsWithExaminations.has(patient.id)\r\n    );\r\n\r\n    const handleUpdateExaminationStatus = async (id, newStatus) => {\r\n        try {\r\n            const existingExamination = examinations.find(exam => exam.id === id);\r\n            if (!existingExamination) {\r\n                showNotification('Examination not found for status update.', 'danger');\r\n                return;\r\n            }\r\n\r\n            console.log(\"Existing Examination object before update:\", existingExamination);\r\n            const terminIdToSend = existingExamination.terminID;\r\n            console.log(\"Term ID to send:\", terminIdToSend);\r\n\r\n            if (terminIdToSend === null || terminIdToSend === undefined) {\r\n                showNotification('Error: Term ID is missing for this examination. Please ensure all examinations have a valid term.', 'danger');\r\n                return;\r\n            }\r\n\r\n            const ratingToSend = newStatus === 'obavljen' ? (existingExamination.ocjenaDoktora || 5.0) : existingExamination.ocjenaDoktora;\r\n\r\n\r\n            const examinationPayload = {\r\n                pregledID: existingExamination.id,\r\n                pacijentID: existingExamination.pacijentId,\r\n                doktorID: existingExamination.doktorId,\r\n                datumPregleda: existingExamination.date.split('T')[0],\r\n                vrijemePregleda: existingExamination.time.split('.')[0],\r\n                status: newStatus,\r\n                komentarPacijenta: existingExamination.komentarPacijenta,\r\n                ocjenaDoktora: ratingToSend,\r\n                terminID: terminIdToSend,\r\n            };\r\n\r\n            const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}`, examinationPayload, authHeaders);\r\n            const updatedExam = {\r\n                id: response.data.pregledID,\r\n                pacijentId: response.data.pacijentID,\r\n                doktorId: response.data.doktorID,\r\n                patientName: response.data.pacijentIme || 'N/A',\r\n                doctorName: response.data.doktorIme || 'N/A',\r\n                date: response.data.datumPregleda,\r\n                time: response.data.vrijemePregleda,\r\n                status: response.data.status,\r\n                komentarPacijenta: response.data.komentarPacijenta || '',\r\n                ocjenaDoktora: response.data.ocjenaDoktora || null,\r\n                terminID: response.data.terminID,\r\n            };\r\n            setExaminations(examinations.map(exam => (exam.id === id ? updatedExam : exam)));\r\n            fetchActivityLog();\r\n            showNotification(`Examination status updated to ${newStatus}!`, 'info');\r\n        } catch (error) {\r\n            console.error(\"Error updating examination status:\", error.response?.data || error.message);\r\n            showNotification(error.response?.data?.message || 'Error updating examination status.', \"danger\");\r\n        }\r\n    };\r\n\r\n    const filteredMyPatients = myPatients.filter(patient =>\r\n        (patient.name && patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase())) ||\r\n        (patient.email && patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase())) ||\r\n        (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n    );\r\n\r\n    const indexOfLastMyPatient = myPatientsCurrentPage * itemsPerPage;\r\n    const indexOfFirstMyPatient = indexOfLastMyPatient - itemsPerPage;\r\n    const currentMyPatients = filteredMyPatients.slice(indexOfFirstMyPatient, indexOfLastMyPatient);\r\n    const totalMyPatientPages = Math.ceil(filteredMyPatients.length / itemsPerPage);\r\n\r\n    const filteredMyExaminations = doctorsExaminations.filter(examination => {\r\n        const matchesSearch = (examination.patientName && examination.patientName.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n            (examination.status && examination.status.toLowerCase().includes(examinationSearchTerm.toLowerCase())) ||\r\n            (examination.date && new Date(examination.date).toLocaleDateString().includes(examinationSearchTerm));\r\n\r\n        const matchesFilterStatus = examinationFilterStatus === 'All' || examination.status === examinationFilterStatus;\r\n\r\n        return matchesSearch && matchesFilterStatus;\r\n    });\r\n\r\n    const indexOfLastMyExaminations = myExaminationsCurrentPage * itemsPerPage;\r\n    const indexOfFirstMyExaminations = indexOfLastMyExaminations - itemsPerPage;\r\n    const currentMyExaminations = filteredMyExaminations.slice(indexOfFirstMyExaminations, indexOfLastMyExaminations);\r\n    const totalMyExaminationsPages = Math.ceil(filteredMyExaminations.length / itemsPerPage);\r\n\r\n\r\n    const Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        return (\r\n            <nav>\r\n                <ul className=\"pagination justify-content-center mt-4\">\r\n                    {pageNumbers.map(number => (\r\n                        <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n                            <button onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n        );\r\n    };\r\n\r\n\r\n    const renderContent = () => {\r\n        switch (activeTab) {\r\n            case 'overview':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Doctor Overview</h4>\r\n                        <div className=\"row g-4\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card text-white bg-info mb-3\">\r\n                                    <div className=\"card-header\">Total Patients Under Care</div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title display-4\">{myPatients.length}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"card text-white bg-warning mb-3\">\r\n                                    <div className=\"card-header\">Pending Appointments</div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title display-4\">{doctorsExaminations.filter(exam => exam.status === 'zakazan').length}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <h5>Quick Actions</h5>\r\n                            <div className=\"d-flex gap-2\">\r\n                                <button className=\"btn btn-outline-info\" onClick={() => setActiveTab('my-examinations')}>My Examinations</button>\r\n                                <button className=\"btn btn-outline-success\" onClick={() => setActiveTab('my-patients')}>My Patients</button>\r\n                                <button className=\"btn btn-outline-primary\" onClick={() => setActiveTab('documents')}>Documents</button>\r\n                                <button className=\"btn btn-outline-secondary\" onClick={() => setActiveTab('messages')}>Messages</button>\r\n                                <button className=\"btn btn-outline-danger\" onClick={() => setActiveTab('manage-terms')}>Manage Terms</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <h5>Recent Activity</h5>\r\n                            <ul className=\"list-group\">\r\n                                {activityLog.length > 0 ? (\r\n                                    activityLog\r\n                                        .filter(log => log.doktorId === currentDoctorId)\r\n                                        .slice(-5).reverse().map(log => (\r\n                                            <li key={log.id || Math.random()} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                {log.action}\r\n                                                <span className=\"badge bg-light text-dark\">{new Date(log.timestamp).toLocaleString()}</span>\r\n                                            </li>\r\n                                        ))\r\n                                ) : (\r\n                                    <li className=\"list-group-item text-center text-muted\">No recent activity.</li>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'my-examinations':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Manage My Examinations</h4>\r\n                        <div className=\"d-flex justify-content-between mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control w-25 me-2\"\r\n                                placeholder=\"Search examinations (patient name, status, date)...\"\r\n                                value={examinationSearchTerm}\r\n                                onChange={(e) => setExaminationSearchTerm(e.target.value)}\r\n                            />\r\n                            <Form.Select\r\n                                className=\"w-auto\"\r\n                                value={examinationFilterStatus}\r\n                                onChange={(e) => setExaminationFilterStatus(e.target.value)}\r\n                            >\r\n                                <option value=\"All\">Filter by Status (All)</option>\r\n                                <option value=\"zakazan\">Scheduled</option>\r\n                                <option value=\"obavljen\">Completed</option>\r\n                                <option value=\"otkazan\">Cancelled</option>\r\n                            </Form.Select>\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Patient</th>\r\n                                        <th>Date</th>\r\n                                        <th>Time</th>\r\n                                        <th>Status</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentMyExaminations.length > 0 ? (\r\n                                        currentMyExaminations.map(examination => {\r\n                                            const patient = patients.find(p => p.id === examination.pacijentId);\r\n                                            return (\r\n                                                <tr key={examination.id}>\r\n                                                    <td>{examination.id}</td>\r\n                                                    <td>{patient ? patient.name : 'N/A'}</td>\r\n                                                    <td>{new Date(examination.date).toLocaleDateString()}</td>\r\n                                                    <td>{examination.time}</td>\r\n                                                    <td>\r\n                                                        <span className={`badge ${\r\n                                                            examination.status === 'zakazan' ? 'bg-warning text-dark' :\r\n                                                            examination.status === 'obavljen' ? 'bg-success' :\r\n                                                            examination.status === 'otkazan' ? 'bg-danger' :\r\n                                                            'bg-secondary'\r\n                                                        }`}>\r\n                                                            {examination.status}\r\n                                                        </span>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {examination.status === 'zakazan' && (\r\n                                                            <>\r\n                                                                <button\r\n                                                                    className=\"btn btn-success btn-sm me-2\"\r\n                                                                    onClick={() => handleUpdateExaminationStatus(examination.id, 'obavljen')}\r\n                                                                >\r\n                                                                    Mark as Completed\r\n                                                                </button>\r\n                                                                <button\r\n                                                                    className=\"btn btn-danger btn-sm\"\r\n                                                                    onClick={() => handleUpdateExaminationStatus(examination.id, 'otkazan')}\r\n                                                                >\r\n                                                                    Cancel\r\n                                                                </button>\r\n                                                            </>\r\n                                                        )}\r\n                                                        {examination.status === 'obavljen' && (\r\n                                                            <span className=\"text-muted\">Completed</span>\r\n                                                        )}\r\n                                                        {examination.status === 'otkazan' && (\r\n                                                            <span className=\"text-muted\">Cancelled</span>\r\n                                                        )}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td colSpan=\"6\" className=\"text-center\">No examinations found.</td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={filteredMyExaminations.length}\r\n                            currentPage={myExaminationsCurrentPage}\r\n                            paginate={setMyExaminationsCurrentPage}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 'my-patients':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">My Patients</h4>\r\n                        <div className=\"d-flex justify-content-between mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control w-25\"\r\n                                placeholder=\"Search patients...\"\r\n                                value={patientSearchTerm}\r\n                                onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Name</th>\r\n                                        <th>Email</th>\r\n                                        <th>Phone</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentMyPatients.length > 0 ? (\r\n                                        currentMyPatients.map(patient => (\r\n                                            <tr key={patient.id}>\r\n                                                <td>{patient.id}</td>\r\n                                                <td>{patient.name}</td>\r\n                                                <td>{patient.email}</td>\r\n                                                <td>{patient.phone}</td>\r\n                                                <td>\r\n                                                    <button\r\n                                                        className=\"btn btn-primary btn-sm me-2\"\r\n                                                        onClick={() => openPatientDetailModal(patient)}\r\n                                                    >\r\n                                                        Details / Medical History\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td colSpan=\"5\" className=\"text-center\">No patients found.</td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <Pagination\r\n                            itemsPerPage={itemsPerPage}\r\n                            totalItems={filteredMyPatients.length}\r\n                            currentPage={myPatientsCurrentPage}\r\n                            paginate={setMyPatientsCurrentPage}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 'documents':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">My Documents</h4>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Upload New Document</Form.Label>\r\n                            <Form.Control type=\"file\" onChange={handleDocumentUpload} />\r\n                        </Form.Group>\r\n\r\n                        {documents.length > 0 ? (\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Document Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Upload Date</th>\r\n                                        <th>Access</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {documents.map(doc => (\r\n                                        <tr key={doc.id}>\r\n                                            <td>{doc.fileName}</td>\r\n                                            <td>{doc.documentType}</td>\r\n                                            <td>{new Date(doc.uploadDate).toLocaleDateString()}</td>\r\n                                            <td><span className={`badge bg-${doc.pristup === 'JAVNA' ? 'success' : 'secondary'}`}>{doc.pristup}</span></td>\r\n                                            <td>\r\n                                                <Button variant=\"success\" size=\"sm\" href={`${OBAVIJESTI_DOKUMENTI_API_PREFIX}/api/dokumentacija/download/${doc.id}`} target=\"_blank\">Download</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <p>No documents found.</p>\r\n                        )}\r\n                    </div>\r\n                );\r\n            case 'messages':\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">My Messages</h4>\r\n                        <Button variant=\"primary\" className=\"mb-3\" onClick={() => setNewMessage({ recipientId: '', subject: '', content: '' })}>Compose New Message</Button>\r\n\r\n                        {messages.length > 0 ? (\r\n                            <ul className=\"list-group\">\r\n                                {messages.map(msg => (\r\n                                    <li key={msg.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            {/* Displays sender's name (Auth userId), checks if current user is doctor or patient */}\r\n                                            <strong>From: {msg.senderId === currentDoctorUserId ? 'Me' : (patients.find(p => p.userId === msg.senderId)?.name || `Patient (${msg.senderId})`)}</strong> <br />\r\n                                            <strong>Subject:</strong> {msg.subject} <br />\r\n                                            <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                        <Button variant=\"info\" size=\"sm\" onClick={() => handleViewMessage(msg)}>View Message</Button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>No messages found.</p>\r\n                        )}\r\n\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <h4>Compose New Message</h4>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Recipient (Patient)</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"recipientId\"\r\n                                    value={newMessage.recipientId}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">-- Select a patient --</option>\r\n                                    {myPatients.map(patient => (\r\n                                        <option key={patient.userId} value={patient.userId}>{patient.name}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Subject</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    value={newMessage.subject}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Content</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"content\"\r\n                                    value={newMessage.content}\r\n                                    onChange={handleNewMessageChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleSendMessage}>Send Message</Button>\r\n                        </Form>\r\n                    </div>\r\n                );\r\n            case 'manage-terms':\r\n                const doctorsTerms = terms.filter(term => term.doktorId === currentDoctorId);\r\n                const sortedTerms = doctorsTerms.sort((a, b) => {\r\n                    const dateA = new Date(`${a.datum}T${a.vrijeme}`);\r\n                    const dateB = new Date(`${b.datum}T${b.vrijeme}`);\r\n                    return dateA - dateB;\r\n                });\r\n\r\n                return (\r\n                    <div>\r\n                        <h4 className=\"mb-4\">Manage My Terms</h4>\r\n\r\n                        <h5>Create New Term</h5>\r\n                        <Form onSubmit={handleCreateTerm} className=\"mb-5 p-3 border rounded shadow-sm bg-white\">\r\n                            <div className=\"row mb-3\">\r\n                                <Form.Group controlId=\"newTermDate\" className=\"col-md-4\">\r\n                                    <Form.Label>Date</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"date\"\r\n                                        value={newTermDate}\r\n                                        onChange={(e) => setNewTermDate(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"newTermTime\" className=\"col-md-4\">\r\n                                    <Form.Label>Time</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"time\"\r\n                                        value={newTermTime}\r\n                                        onChange={(e) => setNewTermTime(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"newTermStatus\" className=\"col-md-4\">\r\n                                    <Form.Label>Availability</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        value={selectedTermStatus}\r\n                                        onChange={(e) => setSelectedTermStatus(e.target.value)}\r\n                                    >\r\n                                        <option value=\"dostupan\">Available</option>\r\n                                        <option value=\"nedostupan\">Unavailable</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </div>\r\n                            <Button variant=\"success\" type=\"submit\">Create Term</Button>\r\n                        </Form>\r\n\r\n                        <h5>My Existing Terms</h5>\r\n                        {sortedTerms.length > 0 ? (\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-striped table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th>Date</th>\r\n                                            <th>Time</th>\r\n                                            <th>Availability</th>\r\n                                            <th>Actions</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {sortedTerms.map(term => (\r\n                                            <tr key={term.id}>\r\n                                                <td>{term.id}</td>\r\n                                                <td>{new Date(term.datum).toLocaleDateString()}</td>\r\n                                                <td>{term.vrijeme}</td>\r\n                                                <td>\r\n                                                    <span className={`badge bg-${term.dostupnost ? 'bg-success' : 'bg-danger'}`}>\r\n                                                        {term.dostupnost ? 'Available' : 'Unavailable'}\r\n                                                    </span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <Button variant=\"danger\" size=\"sm\" onClick={() => handleDeleteTerm(term.id)}>Delete</Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        ) : (\r\n                            <p>No terms found for your profile. Please create new ones.</p>\r\n                        )}\r\n                    </div>\r\n                );\r\n            case 'settings':\r\n                return (\r\n                    <div className=\"container my-4\">\r\n                        <h4 className=\"mb-4\">Doctor Profile Settings</h4>\r\n                        {!currentDoctorProfile ? (\r\n                            <p>Loading doctor profile...</p>\r\n                        ) : (\r\n                            isEditingProfile ? (\r\n                                <Form onSubmit={handleUpdateDoctorProfile}>\r\n                                    <div className=\"row mb-3\">\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>First Name</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editIme} onChange={(e) => setEditIme(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Last Name</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editPrezime} onChange={(e) => setEditPrezime(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control type=\"email\" value={editEmail} onChange={(e) => setEditEmail(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Phone</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editTelefon} onChange={(e) => setEditTelefon(e.target.value)} required />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Specialties (comma separated)</Form.Label>\r\n                                        <Form.Control type=\"text\" value={editSpecijalizacije} onChange={(e) => setEditSpeciijalizacije(e.target.value)} />\r\n                                    </Form.Group>\r\n                                    <div className=\"row mb-3\">\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>City</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editGrad} onChange={(e) => setEditGrad(e.target.value)} />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"col-md-6 mb-3\">\r\n                                            <Form.Label>Working Hours</Form.Label>\r\n                                            <Form.Control type=\"text\" value={editRadnoVrijeme} onChange={(e) => setEditRadnoVrijeme(e.target.value)} />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Experience (years)</Form.Label>\r\n                                        <Form.Control type=\"number\" value={editIskustvo} onChange={(e) => setEditIskustvo(e.target.value)} />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Profile Image</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"file\"\r\n                                            accept=\"image/*\"\r\n                                            onChange={handleImageChange}\r\n                                        />\r\n                                        {profileImagePreview && (\r\n                                            <div className=\"mt-2\">\r\n                                                <img\r\n                                                    src={profileImagePreview}\r\n                                                    alt=\"Profile image preview\"\r\n                                                    style={{ maxWidth: '100px', maxHeight: '100px', borderRadius: '50%', objectFit: 'cover' }}\r\n                                                    className=\"border border-secondary\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </Form.Group>\r\n                                    <div className=\"d-flex justify-content-end\">\r\n                                        <Button variant=\"secondary\" className=\"me-2\" onClick={() => setIsEditingProfile(false)}>Cancel</Button>\r\n                                        <Button variant=\"primary\" type=\"submit\">Save Changes</Button>\r\n                                    </div>\r\n                                </Form>\r\n                            ) : (\r\n                                <div>\r\n                                    <p>\r\n                                        {currentDoctorProfile.profileImageBase64 ? (\r\n                                            <img\r\n                                                src={currentDoctorProfile.profileImageBase64}\r\n                                                alt=\"Doctor profile\"\r\n                                                style={{ width: '100px', height: '100px', borderRadius: '50%', objectFit: 'cover' }}\r\n                                                className=\"mb-3 border border-secondary\"\r\n                                            />\r\n                                        ) : (\r\n                                            <img\r\n                                                src=\"https://placehold.co/100x100/CCCCCC/000000?text=No+image\"\r\n                                                alt=\"No profile image\"\r\n                                                style={{ width: '100px', height: '100px', borderRadius: '50%', objectFit: 'cover' }}\r\n                                                className=\"mb-3 border border-secondary\"\r\n                                            />\r\n                                        )}\r\n                                    </p>\r\n                                    <p><strong>First Name:</strong> {currentDoctorProfile.ime}</p>\r\n                                    <p><strong>Last Name:</strong> {currentDoctorProfile.prezime}</p>\r\n                                    <p><strong>Email:</strong> {currentDoctorProfile.email}</p>\r\n                                    <p><strong>Phone:</strong> {currentDoctorProfile.telefon}</p>\r\n                                    <p><strong>Specialties:</strong> {Array.isArray(currentDoctorProfile.specijalizacije) ? currentDoctorProfile.specijalizacije.join(', ') : 'N/A'}</p>\r\n                                    <p><strong>City:</strong> {currentDoctorProfile.grad}</p>\r\n                                    <p><strong>Working Hours:</strong> {currentDoctorProfile.radnoVrijeme}</p>\r\n                                    <p><strong>Experience:</strong> {currentDoctorProfile.iskustvo} years</p>\r\n                                    <p><strong>Rating:</strong> {currentDoctorProfile.ocjena}</p>\r\n                                    <Button variant=\"primary\" onClick={() => setIsEditingProfile(true)}>Edit Profile</Button>\r\n                                </div>\r\n                            )\r\n                        )}\r\n                    </div>\r\n                );\r\n            default:\r\n                return <div>Select a tab from the sidebar.</div>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{ minHeight: '100vh' }}>\r\n            <div className=\"bg-dark text-white p-4\" style={{ width: '250px' }}>\r\n                <h3 className=\"mb-4\">Doctor Panel</h3>\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'overview' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('overview')}\r\n                        >\r\n                            Overview\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-examinations' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('my-examinations')}\r\n                        >\r\n                            My Examinations\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'my-patients' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('my-patients')}\r\n                        >\r\n                            My Patients\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'manage-terms' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('manage-terms')}\r\n                        >\r\n                            Manage Terms\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'documents' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('documents')}\r\n                        >\r\n                            Documents\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'messages' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('messages')}\r\n                        >\r\n                            Messages\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"nav-item mb-2\">\r\n                        <button\r\n                            className={`btn btn-link text-white text-decoration-none w-100 text-start ${activeTab === 'settings' ? 'active bg-secondary rounded' : ''}`}\r\n                            onClick={() => setActiveTab('settings')}\r\n                        >\r\n                            Settings\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"flex-grow-1 p-4 bg-light\">\r\n                {showAlert && (\r\n                    <div className={`alert alert-${alertType} alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3`} role=\"alert\" style={{ zIndex: 1050 }}>\r\n                        {alertMessage}\r\n                        <button type=\"button\" className=\"btn-close\" onClick={() => setShowAlert(false)}></button>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <h2 className=\"mb-0\">Doctor Dashboard</h2>\r\n                    {/* Removed Logout button here */}\r\n                </div>\r\n\r\n                {renderContent()}\r\n            </div>\r\n\r\n            <Modal show={showPatientDetailModal} onHide={closePatientDetailModal} size=\"lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Patient Details: {selectedPatient?.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedPatient && (\r\n                        <div>\r\n                            <p><strong>Email:</strong> {selectedPatient.email}</p>\r\n                            <p><strong>Phone:</strong> {selectedPatient.phone}</p>\r\n                            <hr />\r\n                            <h5>Examination History for {selectedPatient.name}</h5>\r\n                            {doctorsExaminations.filter(exam => exam.pacijentId === selectedPatient.id).length > 0 ? (\r\n                                <ul className=\"list-group mb-3\">\r\n                                    {doctorsExaminations\r\n                                        .filter(exam => exam.pacijentId === selectedPatient.id)\r\n                                        .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n                                        .map(exam => (\r\n                                            <li key={exam.id} className=\"list-group-item\">\r\n                                                <strong>Date:</strong> {new Date(exam.date).toLocaleDateString()}, {' '}\r\n                                                <strong>Time:</strong> {exam.time}, {' '}\r\n                                                <strong>Status:</strong> <span className={`badge ${\r\n                                                    exam.status === 'zakazan' ? 'bg-warning text-dark' :\r\n                                                    exam.status === 'obavljen' ? 'bg-success' :\r\n                                                    exam.status === 'otkazan' ? 'bg-danger' :\r\n                                                    'bg-secondary'\r\n                                                }`}>{exam.status}</span>\r\n                                            </li>\r\n                                        ))}\r\n                                </ul>\r\n                            ) : (\r\n                                <p>No examination history found for this patient.</p>\r\n                            )}\r\n                            <hr />\r\n                            <h5>Medical History Entries for {selectedPatient.name}</h5>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Diagnosis</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"diagnosis\"\r\n                                    value={newMedicalHistoryEntry.diagnosis}\r\n                                    onChange={(e) => setNewMedicalHistoryEntry(prev => ({ ...prev, diagnosis: e.target.value }))}\r\n                                    placeholder=\"Enter diagnosis...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Treatment</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"treatment\"\r\n                                    value={newMedicalHistoryEntry.treatment}\r\n                                    onChange={(e) => setNewMedicalHistoryEntry(prev => ({ ...prev, treatment: e.target.value }))}\r\n                                    placeholder=\"Enter treatment details...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Notes</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"notes\"\r\n                                    value={newMedicalHistoryEntry.notes}\r\n                                    onChange={(e) => setNewMedicalHistoryEntry(prev => ({ ...prev, notes: e.target.value }))}\r\n                                    placeholder=\"Additional notes...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={handleAddMedicalHistoryEntry}>Add Medical History Entry</Button>\r\n\r\n                            <h6 className=\"mt-4\">Existing Medical History Records:</h6>\r\n                            {medicalHistoryEntries.length > 0 ? (\r\n                                <ul className=\"list-group\">\r\n                                    {medicalHistoryEntries.map(record => (\r\n                                        <li key={record.id} className=\"list-group-item\">\r\n                                            <strong>Date:</strong> {new Date(record.date).toLocaleDateString()} <br />\r\n                                            <strong>Diagnosis:</strong> {record.diagnosis} <br />\r\n                                            <strong>Treatment:</strong> {record.treatment} <br />\r\n                                            <strong>Notes:</strong> {record.notes || 'N/A'}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            ) : (\r\n                                <p>No medical history records for this patient.</p>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closePatientDetailModal}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={!!selectedMessage} onHide={closeMessageModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Message: {selectedMessage?.subject}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedMessage && (\r\n                        <>\r\n                            {/* Display sender of the message (Auth userId) */}\r\n                            <p><strong>From:</strong> {selectedMessage.senderId === currentDoctorUserId ? 'Me' : (patients.find(p => p.userId === selectedMessage.senderId)?.name || `Patient (${selectedMessage.senderId})`)}</p>\r\n                            <p><strong>Date:</strong> {new Date(selectedMessage.timestamp).toLocaleString()}</p>\r\n                            <hr />\r\n                            <p>{selectedMessage.content}</p>\r\n\r\n                            {selectedMessage.replies && selectedMessage.replies.length > 0 && (\r\n                                <div className=\"mt-4\">\r\n                                    <h5>Replies:</h5>\r\n                                    {selectedMessage.replies.map((reply, index) => (\r\n                                        <div key={index} className=\"border p-2 mb-2 rounded bg-light\">\r\n                                            {/* Display sender of the reply (Auth userId) */}\r\n                                            <strong>{reply.senderId === currentDoctorUserId ? 'Me' : (patients.find(p => p.userId === reply.senderId)?.name || `Patient (${reply.senderId})`)}:</strong> {reply.content}\r\n                                            <br />\r\n                                            <small>{new Date(reply.timestamp).toLocaleString()}</small>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            <Form.Group className=\"mt-4\">\r\n                                <Form.Label>Reply</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={2}\r\n                                    value={replyMessage.content}\r\n                                    onChange={handleReplyMessageChange}\r\n                                    placeholder=\"Type your reply here...\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" className=\"mt-2\" onClick={() => handleReply(selectedMessage.id)}>Send Reply</Button>\r\n                        </>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeMessageModal}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}