{"ast":null,"code":"/*import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'; // Za dohvat ID-a iz URL-a\r\n// Uklonjen direktan import Bootstrap CSS-a iz JS-a.\r\n// Pretpostavlja se da će se Bootstrap CSS učitati putem CDN-a u public/index.html.\r\n\r\nfunction DoctorProfilePage() {\r\n  const { id } = useParams(); // Dohvaća ID doktora iz URL-a\r\n  const [doctor, setDoctor] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // State za formu za zakazivanje termina\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState('');\r\n  const [patientName, setPatientName] = useState('');\r\n  const [patientEmail, setPatientEmail] = useState(''); // Ispravljeno: setPatientName -> setPatientEmail\r\n  const [bookingMessage, setBookingMessage] = useState('');\r\n\r\n  // Mock podaci za doktora (zamijenite stvarnim dohvaćanjem s backenda)\r\n  const mockDoctorData = {\r\n    id: parseInt(id), // Osigurava da je ID broj\r\n    name: 'Dr. John Doe',\r\n    specialty: 'Pediatrician',\r\n    location: 'Mostar',\r\n    experience: '10+ Years',\r\n    rating: 4.5,\r\n    patients: '2.5K+',\r\n    reviews: '1.5K+',\r\n    image: 'https://placehold.co/150x150/8BC34A/FFFFFF?text=JD', // Placeholder image\r\n    about: \"Dr. John Doe is a highly experienced pediatrician with over 10 years of practice dedicated to providing comprehensive and compassionate care for children of all ages. He is passionate about early childhood development and preventive health. Dr. Doe is known for his friendly demeanor and ability to make young patients feel comfortable during their visits.\",\r\n    education: [\r\n      \"MD - University of Sarajevo, 2010\",\r\n      \"Residency in Pediatrics - Clinical Center University of Sarajevo, 2015\"\r\n    ],\r\n    awards: [\r\n      \"Top Pediatrician Award, 2022\",\r\n      \"Patient's Choice Award, 2021\"\r\n    ],\r\n    workingHours: \"Mon-Fri: 09:00 - 17:00\", // Radno vrijeme doktora\r\n    contact: {\r\n      phone: \"+387 61 123 456\",\r\n      email: \"john.doe@example.com\"\r\n    },\r\n    // Dodani mock podaci za bolnicu/kliniku\r\n    hospitalName: \"WinxCare Clinic\",\r\n    hospitalAddress: \"Ulica Bolnice 123, 71000 Sarajevo, Bosna i Hercegovina\",\r\n    hospitalMapEmbedUrl: \"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2877.940409029983!2d18.40698111559815!3d43.85628587911579!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x4758c92a95c9a173%3A0x1d1d1d1d1d1d1d1d!2sSarajevo!5e0!3m2!1sen!2sba!4v1678901234567!5m2!1sen!2sba\" // Primjer Google Maps embed URL-a\r\n  };\r\n\r\n  // Mock podaci za dostupne termine (zamijenite stvarnim podacima s backenda)\r\n  const mockAvailableSlots = {\r\n    '2025-05-26': ['09:00', '10:00', '11:00', '14:00', '15:00'],\r\n    '2025-05-27': ['09:30', '10:30', '11:30', '13:00', '14:00', '16:00'],\r\n    '2025-05-28': ['09:00', '10:00', '11:00', '12:00'],\r\n    '2025-05-29': ['10:00', '11:00', '15:00', '16:00'],\r\n  };\r\n\r\n  useEffect(() => {\r\n    // U stvarnoj aplikaciji, ovdje biste dohvatili podatke o doktoru s backenda\r\n    // koristeći `id` iz `useParams`.\r\n    // Primjer: const API_URL_SINGLE_DOCTOR = `http://localhost:8080/api/doktori/${id}`;\r\n    // fetch(API_URL_SINGLE_DOCTOR) ...\r\n\r\n    // Simulacija dohvaćanja podataka s kašnjenjem\r\n    setTimeout(() => {\r\n      if (mockDoctorData.id === parseInt(id)) { // Provjera da li se ID podudara\r\n        setDoctor(mockDoctorData);\r\n      } else {\r\n        setError(new Error(\"Doctor not found\"));\r\n      }\r\n      setLoading(false);\r\n    }, 500); // Simulacija mrežnog kašnjenja\r\n  }, [id]); // Ponovo dohvati podatke ako se ID u URL-u promijeni\r\n\r\n  // Funkcija za rukovanje zakazivanjem termina\r\n  const handleBookingSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!selectedDate || !selectedTimeSlot || !patientName || !patientEmail) {\r\n      setBookingMessage('Molimo popunite sva polja za zakazivanje termina.');\r\n      return;\r\n    }\r\n    // Ovdje biste poslali podatke na backend\r\n    console.log('Zakazan termin:', {\r\n      doktorId: doctor.id,\r\n      date: selectedDate,\r\n      time: selectedTimeSlot,\r\n      patientName: patientName,\r\n      patientEmail: patientEmail\r\n    });\r\n    setBookingMessage(`Termin zakazan za ${patientName} na ${selectedDate} u ${selectedTimeSlot}.`);\r\n    // Resetuj formu\r\n    setSelectedDate('');\r\n    setSelectedTimeSlot('');\r\n    setPatientName('');\r\n    setPatientEmail('');\r\n  };\r\n\r\n  // Dobivanje dostupnih termina za odabrani datum\r\n  const availableSlotsForSelectedDate = mockAvailableSlots[selectedDate] || [];\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container text-center py-5\">\r\n        <p className=\"lead\">Učitavanje profila doktora...</p>\r\n        <div className=\"spinner-border text-danger\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"container text-center py-5\">\r\n        <p className=\"lead text-danger\">Greška prilikom učitavanja profila: {error.message}</p>\r\n        <p>Molimo pokušajte ponovo kasnije.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!doctor) {\r\n    return (\r\n      <div className=\"container text-center py-5\">\r\n        <p className=\"lead\">Doktor nije pronađen.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      {}\r\n      <style>\r\n        {`\r\n        .bg-baby-pink {\r\n          background-color: #ffe6f0;\r\n        }\r\n        `}\r\n      </style>\r\n      <div className=\"card shadow-sm border-0 rounded-lg\">\r\n        <div className=\"card-body p-4\">\r\n          <div className=\"row align-items-center mb-4\">\r\n            <div className=\"col-md-3 text-center\">\r\n              <img\r\n                src={doctor.image}\r\n                alt={doctor.name}\r\n                className=\"rounded-circle border border-5 border-light shadow-sm\"\r\n                style={{ width: '150px', height: '150px', objectFit: 'cover' }}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n              <h2 className=\"mb-1 text-danger\">{doctor.name}</h2>\r\n              <h5 className=\"text-muted mb-2\">{doctor.specialty}</h5>\r\n              <div className=\"d-flex align-items-center mb-2\">\r\n                <span className=\"text-warning me-1\">★</span>\r\n                <span className=\"fw-bold me-2\">{doctor.rating}</span>\r\n                <span className=\"text-muted\">({doctor.reviews} Reviews)</span>\r\n              </div>\r\n              <div className=\"d-flex flex-wrap gap-3 mt-3\">\r\n                <div className=\"text-center\">\r\n                  <h6 className=\"mb-0 text-dark\">Experience</h6>\r\n                  <p className=\"text-muted\">{doctor.experience}</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <h6 className=\"mb-0 text-dark\">Patients</h6>\r\n                  <p className=\"text-muted\">{doctor.patients}</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <h6 className=\"mb-0 text-dark\">Reviews</h6>\r\n                  <p className=\"text-muted\">{doctor.reviews}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"my-4\" />\r\n\r\n          {}\r\n          <div className=\"mb-4\">\r\n            <h4 className=\"text-danger mb-3\">About</h4>\r\n            <p className=\"text-muted\">{doctor.about}</p>\r\n          </div>\r\n\r\n          {}\r\n          <div className=\"mb-4\">\r\n            <h4 className=\"text-danger mb-3\">Education</h4>\r\n            <ul className=\"list-unstyled\">\r\n              {doctor.education.map((edu, index) => (\r\n                <li key={index} className=\"text-muted mb-1\">\r\n                  <i className=\"bi bi-dot me-2\"></i>{edu}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          {}\r\n          <div className=\"mb-4\">\r\n            <h4 className=\"text-danger mb-3\">Awards</h4>\r\n            <ul className=\"list-unstyled\">\r\n              {doctor.awards.map((award, index) => (\r\n                <li key={index} className=\"text-muted mb-1\">\r\n                  <i className=\"bi bi-award-fill me-2\"></i>{award}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          {}\r\n          <div className=\"row\">\r\n            <div className=\"col-12 mb-4\">\r\n              <h4 className=\"text-danger mb-3\">Working Hours</h4>\r\n              <p className=\"text-muted\">{doctor.workingHours}</p>\r\n            </div>\r\n            <div className=\"col-12 mb-4\">\r\n              <h4 className=\"text-danger mb-3\">Contact Information</h4>\r\n              <p className=\"text-muted mb-1\">Phone: {doctor.contact.phone}</p>\r\n              <p className=\"text-muted\">Email: {doctor.contact.email}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"my-4\" />\r\n\r\n          {}\r\n          <div className=\"mb-4 p-4 rounded bg-baby-pink\">\r\n            <h4 className=\"text-danger mb-4 text-center\">Book an Appointment</h4>\r\n            <form onSubmit={handleBookingSubmit}>\r\n              <div className=\"row g-3 mb-3\">\r\n                <div className=\"col-md-6\">\r\n                  <label htmlFor=\"patientName\" className=\"form-label\">Your Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"patientName\"\r\n                    value={patientName}\r\n                    onChange={(e) => setPatientName(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <label htmlFor=\"patientEmail\" className=\"form-label\">Your Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"patientEmail\"\r\n                    value={patientEmail}\r\n                    onChange={(e) => setPatientEmail(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"appointmentDate\" className=\"form-label\">Select Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  id=\"appointmentDate\"\r\n                  value={selectedDate}\r\n                  onChange={(e) => {\r\n                    setSelectedDate(e.target.value);\r\n                    setSelectedTimeSlot(''); // Reset time slot when date changes\r\n                  }}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              {selectedDate && (\r\n                <div className=\"mb-4\">\r\n                  <h5 className=\"text-dark mb-3\">Available Time Slots for {selectedDate}:</h5>\r\n                  {availableSlotsForSelectedDate.length > 0 ? (\r\n                    <div className=\"d-flex flex-wrap gap-2\">\r\n                      {availableSlotsForSelectedDate.map(slot => (\r\n                        <button\r\n                          key={slot}\r\n                          type=\"button\"\r\n                          className={`btn ${selectedTimeSlot === slot ? 'btn-danger' : 'btn-outline-danger'} btn-sm`}\r\n                          onClick={() => setSelectedTimeSlot(slot)}\r\n                        >\r\n                          {slot}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <p className=\"text-muted\">No available slots for this date.</p>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"text-center mt-4\">\r\n                <button type=\"submit\" className=\"btn btn-danger btn-lg\">Book Appointment</button>\r\n              </div>\r\n              {bookingMessage && (\r\n                <div className=\"alert alert-info mt-3 text-center\" role=\"alert\">\r\n                  {bookingMessage}\r\n                </div>\r\n              )}\r\n            </form>\r\n          </div>\r\n\r\n          {}\r\n                    <section className=\"py-5 bg-light rounded-lg shadow-sm mb-4\">\r\n                      <div className=\"container\">\r\n                        <h5 className=\"text-center mb-5 display-5 text-dark\">{doctor.hospitalName}</h5>\r\n                        <p className=\"text-center lead mb-5 text-muted\">\r\n                          {doctor.hospitalAddress}\r\n                        </p>\r\n                        <div className=\"embed-responsive embed-responsive-16by9\" style={{ height: '400px' }}>\r\n                          <iframe\r\n                            className=\"embed-responsive-item w-100 h-100 rounded shadow\"\r\n                            src={doctor.hospitalMapEmbedUrl}\r\n                            allowFullScreen=\"\"\r\n                            loading=\"lazy\"\r\n                            referrerPolicy=\"no-referrer-when-downgrade\"\r\n                            title=\"Hospital Location Map\"\r\n                          ></iframe>\r\n                        </div>\r\n                      </div>\r\n                    </section>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorProfilePage;\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/DoctorProfilePage.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'; // Za dohvat ID-a iz URL-a\r\n// Uklonjen direktan import Bootstrap CSS-a iz JS-a.\r\n// Pretpostavlja se da će se Bootstrap CSS učitati putem CDN-a u public/index.html.\r\n\r\nfunction DoctorProfilePage() {\r\n  const { id } = useParams(); // Dohvaća ID doktora iz URL-a\r\n  const [doctor, setDoctor] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // State za formu za zakazivanje termina\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState('');\r\n  const [patientName, setPatientName] = useState('');\r\n  const [patientEmail, setPatientEmail] = useState(''); // Ispravljeno: setPatientName -> setPatientEmail\r\n  const [bookingMessage, setBookingMessage] = useState('');\r\n\r\n  // Mock podaci za doktora (zamijenite stvarnim dohvaćanjem s backenda)\r\n  const mockDoctorData = {\r\n    id: parseInt(id), // Osigurava da je ID broj\r\n    name: 'Dr. John Doe',\r\n    specialty: 'Pediatrician',\r\n    location: 'Mostar',\r\n    experience: '10+ Years',\r\n    rating: 4.5,\r\n    patients: '2.5K+',\r\n    reviews: '1.5K+',\r\n    image: 'https://placehold.co/150x150/8BC34A/FFFFFF?text=JD', // Placeholder image\r\n    about: \"Dr. John Doe is a highly experienced pediatrician with over 10 years of practice dedicated to providing comprehensive and compassionate care for children of all ages. He is passionate about early childhood development and preventive health. Dr. Doe is known for his friendly demeanor and ability to make young patients feel comfortable during their visits.\",\r\n    education: [\r\n      \"MD - University of Sarajevo, 2010\",\r\n      \"Residency in Pediatrics - Clinical Center University of Sarajevo, 2015\"\r\n    ],\r\n    awards: [\r\n      \"Top Pediatrician Award, 2022\",\r\n      \"Patient's Choice Award, 2021\"\r\n    ],\r\n    workingHours: \"Mon-Fri: 09:00 - 17:00\", // Radno vrijeme doktora\r\n    contact: {\r\n      phone: \"+387 61 123 456\",\r\n      email: \"john.doe@example.com\"\r\n    },\r\n    // Dodani mock podaci za bolnicu/kliniku\r\n    hospitalName: \"WinxCare Clinic\",\r\n    hospitalAddress: \"Ulica Bolnice 123, 71000 Sarajevo, Bosna i Hercegovina\",\r\n    hospitalMapEmbedUrl: \"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2877.940409029983!2d18.40698111559815!3d43.85628587911579!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x4758c92a95c9a173%3A0x1d1d1d1d1d1d1d1d!2sSarajevo!5e0!3m2!1sen!2sba!4v1678901234567!5m2!1sen!2sba\" // Primjer Google Maps embed URL-a\r\n  };\r\n\r\n  // Mock podaci za dostupne termine (zamijenite stvarnim podacima s backenda)\r\n  const mockAvailableSlots = {\r\n    '2025-05-26': ['09:00', '10:00', '11:00', '14:00', '15:00'],\r\n    '2025-05-27': ['09:30', '10:30', '11:30', '13:00', '14:00', '16:00'],\r\n    '2025-05-28': ['09:00', '10:00', '11:00', '12:00'],\r\n    '2025-05-29': ['10:00', '11:00', '15:00', '16:00'],\r\n  };\r\n\r\n  useEffect(() => {\r\n    // U stvarnoj aplikaciji, ovdje biste dohvatili podatke o doktoru s backenda\r\n    // koristeći `id` iz `useParams`.\r\n    // Primjer: const API_URL_SINGLE_DOCTOR = `http://localhost:8080/api/doktori/${id}`;\r\n    // fetch(API_URL_SINGLE_DOCTOR) ...\r\n\r\n    // Simulacija dohvaćanja podataka s kašnjenjem\r\n    setTimeout(() => {\r\n      if (mockDoctorData.id === parseInt(id)) { // Provjera da li se ID podudara\r\n        setDoctor(mockDoctorData);\r\n      } else {\r\n        setError(new Error(\"Doctor not found\"));\r\n      }\r\n      setLoading(false);\r\n    }, 500); // Simulacija mrežnog kašnjenja\r\n  }, [id]); // Ponovo dohvati podatke ako se ID u URL-u promijeni\r\n\r\n  // Funkcija za rukovanje zakazivanjem termina\r\n  const handleBookingSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!selectedDate || !selectedTimeSlot || !patientName || !patientEmail) {\r\n      setBookingMessage('Molimo popunite sva polja za zakazivanje termina.');\r\n      return;\r\n    }\r\n    // Ovdje biste poslali podatke na backend\r\n    console.log('Zakazan termin:', {\r\n      doktorId: doctor.id,\r\n      date: selectedDate,\r\n      time: selectedTimeSlot,\r\n      patientName: patientName,\r\n      patientEmail: patientEmail\r\n    });\r\n    setBookingMessage(`Termin zakazan za ${patientName} na ${selectedDate} u ${selectedTimeSlot}.`);\r\n    // Resetuj formu\r\n    setSelectedDate('');\r\n    setSelectedTimeSlot('');\r\n    setPatientName('');\r\n    setPatientEmail('');\r\n  };\r\n\r\n  // Dobivanje dostupnih termina za odabrani datum\r\n  const availableSlotsForSelectedDate = mockAvailableSlots[selectedDate] || [];\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container text-center py-5\">\r\n        <p className=\"lead\">Učitavanje profila doktora...</p>\r\n        <div className=\"spinner-border text-danger\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"container text-center py-5\">\r\n        <p className=\"lead text-danger\">Greška prilikom učitavanja profila: {error.message}</p>\r\n        <p>Molimo pokušajte ponovo kasnije.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!doctor) {\r\n    return (\r\n      <div className=\"container text-center py-5\">\r\n        <p className=\"lead\">Doktor nije pronađen.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      {}\r\n      <style>\r\n        {`\r\n        .bg-baby-pink {\r\n          background-color: #ffe6f0;\r\n        }\r\n        `}\r\n      </style>\r\n      <div className=\"card shadow-sm border-0 rounded-lg\">\r\n        <div className=\"card-body p-4\">\r\n          <div className=\"row align-items-center mb-4\">\r\n            <div className=\"col-md-3 text-center\">\r\n              <img\r\n                src={doctor.image}\r\n                alt={doctor.name}\r\n                className=\"rounded-circle border border-5 border-light shadow-sm\"\r\n                style={{ width: '150px', height: '150px', objectFit: 'cover' }}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n              <h2 className=\"mb-1 text-danger\">{doctor.name}</h2>\r\n              <h5 className=\"text-muted mb-2\">{doctor.specialty}</h5>\r\n              <div className=\"d-flex align-items-center mb-2\">\r\n                <span className=\"text-warning me-1\">★</span>\r\n                <span className=\"fw-bold me-2\">{doctor.rating}</span>\r\n                <span className=\"text-muted\">({doctor.reviews} Reviews)</span>\r\n              </div>\r\n              <div className=\"d-flex flex-wrap gap-3 mt-3\">\r\n                <div className=\"text-center\">\r\n                  <h6 className=\"mb-0 text-dark\">Experience</h6>\r\n                  <p className=\"text-muted\">{doctor.experience}</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <h6 className=\"mb-0 text-dark\">Patients</h6>\r\n                  <p className=\"text-muted\">{doctor.patients}</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <h6 className=\"mb-0 text-dark\">Reviews</h6>\r\n                  <p className=\"text-muted\">{doctor.reviews}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"my-4\" />\r\n\r\n          {}\r\n          <div className=\"mb-4\">\r\n            <h4 className=\"text-danger mb-3\">About</h4>\r\n            <p className=\"text-muted\">{doctor.about}</p>\r\n          </div>\r\n\r\n          {}\r\n          <div className=\"mb-4\">\r\n            <h4 className=\"text-danger mb-3\">Education</h4>\r\n            <ul className=\"list-unstyled\">\r\n              {doctor.education.map((edu, index) => (\r\n                <li key={index} className=\"text-muted mb-1\">\r\n                  <i className=\"bi bi-dot me-2\"></i>{edu}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          {}\r\n          <div className=\"mb-4\">\r\n            <h4 className=\"text-danger mb-3\">Awards</h4>\r\n            <ul className=\"list-unstyled\">\r\n              {doctor.awards.map((award, index) => (\r\n                <li key={index} className=\"text-muted mb-1\">\r\n                  <i className=\"bi bi-award-fill me-2\"></i>{award}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          {}\r\n          <div className=\"row\">\r\n            <div className=\"col-12 mb-4\">\r\n              <h4 className=\"text-danger mb-3\">Working Hours</h4>\r\n              <p className=\"text-muted\">{doctor.workingHours}</p>\r\n            </div>\r\n            <div className=\"col-12 mb-4\">\r\n              <h4 className=\"text-danger mb-3\">Contact Information</h4>\r\n              <p className=\"text-muted mb-1\">Phone: {doctor.contact.phone}</p>\r\n              <p className=\"text-muted\">Email: {doctor.contact.email}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"my-4\" />\r\n\r\n          {}\r\n          <div className=\"mb-4 p-4 rounded bg-baby-pink\">\r\n            <h4 className=\"text-danger mb-4 text-center\">Book an Appointment</h4>\r\n            <form onSubmit={handleBookingSubmit}>\r\n              <div className=\"row g-3 mb-3\">\r\n                <div className=\"col-md-6\">\r\n                  <label htmlFor=\"patientName\" className=\"form-label\">Your Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"patientName\"\r\n                    value={patientName}\r\n                    onChange={(e) => setPatientName(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <label htmlFor=\"patientEmail\" className=\"form-label\">Your Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"patientEmail\"\r\n                    value={patientEmail}\r\n                    onChange={(e) => setPatientEmail(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"appointmentDate\" className=\"form-label\">Select Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  id=\"appointmentDate\"\r\n                  value={selectedDate}\r\n                  onChange={(e) => {\r\n                    setSelectedDate(e.target.value);\r\n                    setSelectedTimeSlot(''); // Reset time slot when date changes\r\n                  }}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              {selectedDate && (\r\n                <div className=\"mb-4\">\r\n                  <h5 className=\"text-dark mb-3\">Available Time Slots for {selectedDate}:</h5>\r\n                  {availableSlotsForSelectedDate.length > 0 ? (\r\n                    <div className=\"d-flex flex-wrap gap-2\">\r\n                      {availableSlotsForSelectedDate.map(slot => (\r\n                        <button\r\n                          key={slot}\r\n                          type=\"button\"\r\n                          className={`btn ${selectedTimeSlot === slot ? 'btn-danger' : 'btn-outline-danger'} btn-sm`}\r\n                          onClick={() => setSelectedTimeSlot(slot)}\r\n                        >\r\n                          {slot}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <p className=\"text-muted\">No available slots for this date.</p>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"text-center mt-4\">\r\n                <button type=\"submit\" className=\"btn btn-danger btn-lg\">Book Appointment</button>\r\n              </div>\r\n              {bookingMessage && (\r\n                <div className=\"alert alert-info mt-3 text-center\" role=\"alert\">\r\n                  {bookingMessage}\r\n                </div>\r\n              )}\r\n            </form>\r\n          </div>\r\n\r\n          {}\r\n                    <section className=\"py-5 bg-light rounded-lg shadow-sm mb-4\">\r\n                      <div className=\"container\">\r\n                        <h5 className=\"text-center mb-5 display-5 text-dark\">{doctor.hospitalName}</h5>\r\n                        <p className=\"text-center lead mb-5 text-muted\">\r\n                          {doctor.hospitalAddress}\r\n                        </p>\r\n                        <div className=\"embed-responsive embed-responsive-16by9\" style={{ height: '400px' }}>\r\n                          <iframe\r\n                            className=\"embed-responsive-item w-100 h-100 rounded shadow\"\r\n                            src={doctor.hospitalMapEmbedUrl}\r\n                            allowFullScreen=\"\"\r\n                            loading=\"lazy\"\r\n                            referrerPolicy=\"no-referrer-when-downgrade\"\r\n                            title=\"Hospital Location Map\"\r\n                          ></iframe>\r\n                        </div>\r\n                      </div>\r\n                    </section>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorProfilePage;\r\n*/"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}