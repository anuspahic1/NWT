{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\DoctorProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nfunction DoctorProfilePage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    token,\n    user,\n    loading: authLoading\n  } = useAuth();\n  const navigate = useNavigate();\n  const [doctor, setDoctor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [availableTerms, setAvailableTerms] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [reason, setReason] = useState('');\n  const [bookingMessage, setBookingMessage] = useState('');\n  const [bookingMessageType, setBookingMessageType] = useState('success');\n\n  // authHeaders se sada koristi samo kada je potreban autentifikovani poziv\n  // Za javne pozive (npr. dohvat detalja doktora kada niste ulogovani), ne šaljemo ga\n  const memoizedAuthHeaders = useMemo(() => {\n    return token ? {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    } : {};\n  }, [token]);\n  useEffect(() => {\n    const fetchDoctorDetails = async () => {\n      setLoading(true); // Resetuj loading state pri svakom pozivu\n      setError(null); // Resetuj error state pri svakom pozivu\n      try {\n        // NE ŠALJEMO authHeaders direktno za javni dohvat detalja doktora\n        // Axios globalni default headers bi trebali biti dovoljni AKO token postoji.\n        // Ali posto zelimo da radi i kad nema tokena, necemo slati eksplicitno token.\n        // Jednostavno pozivamo bez authHeaders, i pustimo Gateway da odluci.\n        const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`);\n        const data = response.data;\n        const transformedDoctor = {\n          doktorID: data.doktorID,\n          ime: data.ime,\n          prezime: data.prezime,\n          fullName: `${data.ime} ${data.prezime}`,\n          email: data.email,\n          telefon: data.telefon,\n          specijalizacije: Array.isArray(data.specijalizacije) ? data.specijalizacije.join(', ') : data.specijalizacije,\n          grad: data.grad,\n          radnoVrijeme: data.radnoVrijeme,\n          iskustvo: data.iskustvo,\n          ocjena: data.ocjena,\n          profileImageBase64: data.profileImageBase64 || `https://placehold.co/100x100/CCCCCC/000000?text=${data.ime.charAt(0)}${data.prezime.charAt(0)}`\n        };\n        setDoctor(transformedDoctor);\n      } catch (err) {\n        var _err$response;\n        console.error(\"Error fetching doctor details:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        setError(\"Could not load doctor profile. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (id) {\n      fetchDoctorDetails();\n    }\n  }, [id]); // Uklonjen 'token' iz dependency array-a, jer ne zavisi od njega za javni prikaz\n\n  // Za dohvat termina i zakazivanje, koristimo memoizedAuthHeaders jer zahtijevaju autentifikaciju\n  useEffect(() => {\n    const fetchDoctorAvailability = async () => {\n      if (!selectedDate || !(doctor !== null && doctor !== void 0 && doctor.doktorID) || !token) {\n        // Dodana provjera za token\n        setAvailableTerms([]);\n        return;\n      }\n      try {\n        // Ovdje šaljemo authHeaders jer je ovo zaštićena ruta\n        const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${doctor.doktorID}/datum/${selectedDate}`, memoizedAuthHeaders);\n        const termsData = Array.isArray(response.data) ? response.data : [];\n        const available = termsData.filter(term => term.dostupnost).map(term => ({\n          terminID: term.terminID,\n          vrijeme: term.vrijeme\n        })).sort((a, b) => a.vrijeme.localeCompare(b.vrijeme));\n        setAvailableTerms(available);\n      } catch (err) {\n        var _err$response2;\n        console.error('Error fetching doctor availability:', ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n        setAvailableTerms([]);\n        setBookingMessage('Error fetching available appointments.');\n        setBookingMessageType('danger');\n      }\n    };\n    if (doctor !== null && doctor !== void 0 && doctor.doktorID && selectedDate) {\n      fetchDoctorAvailability();\n    }\n  }, [doctor, selectedDate, token, memoizedAuthHeaders]); // Dodan memoizedAuthHeaders\n\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n    setSelectedTime('');\n  };\n  const handleTimeChange = e => {\n    setSelectedTime(e.target.value);\n  };\n  const handleReasonChange = e => {\n    setReason(e.target.value);\n  };\n  const handleBookAppointment = async e => {\n    e.preventDefault();\n    setBookingMessage('');\n    if (!user || !token) {\n      // Provjera i za token\n      setBookingMessage('You must be logged in to book an appointment.');\n      setBookingMessageType('danger');\n      return;\n    }\n    if (!user.roles || !user.roles.includes('ROLE_PACIJENT')) {\n      setBookingMessage('Only patients can book appointments.');\n      setBookingMessageType('danger');\n      return;\n    }\n    if (!selectedDate || !selectedTime || !reason || !(doctor !== null && doctor !== void 0 && doctor.doktorID)) {\n      setBookingMessage('Please fill in all fields to book an appointment.');\n      setBookingMessageType('danger');\n      return;\n    }\n    const selectedTermin = availableTerms.find(term => term.vrijeme === selectedTime);\n    if (!selectedTermin) {\n      setBookingMessage('Selected appointment time is not valid or available.');\n      setBookingMessageType('danger');\n      return;\n    }\n    try {\n      const pacijentId = user === null || user === void 0 ? void 0 : user.pacijentId;\n      if (!pacijentId) {\n        setBookingMessage('Your patient ID was not found. Please ensure you are logged in as a patient and your patient profile is created.');\n        setBookingMessageType('danger');\n        return;\n      }\n      const appointmentData = {\n        pacijentID: pacijentId,\n        doktorID: doctor.doktorID,\n        terminID: selectedTermin.terminID,\n        datumPregleda: selectedDate,\n        vrijemePregleda: selectedTime,\n        komentarPacijenta: reason,\n        status: 'zakazan'\n      };\n      // Ovdje šaljemo authHeaders jer je ovo zaštićena ruta\n      await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, memoizedAuthHeaders);\n      setBookingMessage('Appointment successfully booked!');\n      setBookingMessageType('success');\n      setSelectedDate('');\n      setSelectedTime('');\n      setReason('');\n      setAvailableTerms([]);\n    } catch (err) {\n      var _err$response3, _err$response4, _err$response4$data;\n      console.error(\"Error booking appointment:\", ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err.message);\n      setBookingMessage(`Error booking appointment: ${((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message}`);\n      setBookingMessageType('danger');\n    }\n  };\n  if (authLoading || loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/service\",\n        className: \"btn btn-primary\",\n        children: \"Back to Doctor List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this);\n  }\n  if (!doctor) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Doctor not found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/service\",\n        className: \"btn btn-primary\",\n        children: \"Back to Doctor List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this);\n  }\n  const refreshDoctor = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`);\n      const data = response.data;\n      const transformedDoctor = {\n        doktorID: data.doktorID,\n        ime: data.ime,\n        prezime: data.prezime,\n        fullName: `${data.ime} ${data.prezime}`,\n        email: data.email,\n        telefon: data.telefon,\n        specijalizacije: Array.isArray(data.specijalizacije) ? data.specijalizacije.join(', ') : data.specijalizacije,\n        grad: data.grad,\n        radnoVrijeme: data.radnoVrijeme,\n        iskustvo: data.iskustvo,\n        ocjena: data.ocjena,\n        profileImageBase64: data.profileImageBase64 || `https://placehold.co/100x100/CCCCCC/000000?text=${data.ime.charAt(0)}${data.prezime.charAt(0)}`\n      };\n      setDoctor(transformedDoctor);\n    } catch (err) {\n      var _err$response5;\n      console.error(\"Error refreshing doctor data:\", ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : _err$response5.data) || err.message);\n    }\n  };\n  const renderBookingSection = () => {\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info text-center\",\n        role: \"alert\",\n        children: [\"Please \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"alert-link\",\n          children: \"log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 28\n        }, this), \" or \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/sign-up\",\n          className: \"alert-link\",\n          children: \"register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 86\n        }, this), \" to book an appointment.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this);\n    } else if (!user.roles || !user.roles.includes('ROLE_PACIJENT')) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning text-center\",\n        role: \"alert\",\n        children: \"Only patients can book appointments.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBookAppointment,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"appointmentDate\",\n              className: \"form-label\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              id: \"appointmentDate\",\n              value: selectedDate,\n              onChange: handleDateChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"appointmentTime\",\n              className: \"form-label\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              id: \"appointmentTime\",\n              value: selectedTime,\n              onChange: handleTimeChange,\n              required: true,\n              disabled: availableTerms.length === 0,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 33\n              }, this), availableTerms.map(term => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term.vrijeme,\n                children: term.vrijeme\n              }, term.terminID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this), availableTerms.length === 0 && selectedDate && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: \"No available appointments for the selected date.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"reason\",\n            className: \"form-label\",\n            children: \"Reason for appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"reason\",\n            rows: \"3\",\n            value: reason,\n            onChange: handleReasonChange,\n            placeholder: \"Brief description of the reason for the appointment...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-danger\",\n          children: \"Book Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row g-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: doctor.profileImageBase64,\n            alt: doctor.fullName,\n            className: \"img-fluid rounded-circle shadow-sm mb-3\",\n            style: {\n              width: '150px',\n              height: '150px',\n              objectFit: 'cover',\n              border: '3px solid #dc3545'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-1\",\n            children: doctor.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: doctor.specijalizacije\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-warning me-1\",\n              children: \"\\u2605\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fw-bold\",\n              children: doctor.ocjena || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-muted ms-2\",\n              children: [\"(\", doctor.grad, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-danger mb-3\",\n            children: \"Doctor Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 28\n            }, this), \" \", doctor.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 28\n            }, this), \" \", doctor.telefon]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"City:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 28\n            }, this), \" \", doctor.grad]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Working Hours:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 28\n            }, this), \" \", doctor.radnoVrijeme]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Years of Experience:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 28\n            }, this), \" \", doctor.iskustvo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-danger mb-3\",\n        children: \"Book an Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), bookingMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${bookingMessageType} mb-3`,\n        role: \"alert\",\n        children: bookingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }, this), renderBookingSection()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 9\n  }, this);\n}\n_s(DoctorProfilePage, \"KbI0IpNxUmLVMbYKNdlpSsC0ezw=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = DoctorProfilePage;\nexport default DoctorProfilePage;\nvar _c;\n$RefreshReg$(_c, \"DoctorProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useParams","Link","useNavigate","axios","useAuth","jsxDEV","_jsxDEV","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","DoctorProfilePage","_s","id","token","user","loading","authLoading","navigate","doctor","setDoctor","setLoading","error","setError","availableTerms","setAvailableTerms","selectedDate","setSelectedDate","selectedTime","setSelectedTime","reason","setReason","bookingMessage","setBookingMessage","bookingMessageType","setBookingMessageType","memoizedAuthHeaders","headers","fetchDoctorDetails","response","get","data","transformedDoctor","doktorID","ime","prezime","fullName","email","telefon","specijalizacije","Array","isArray","join","grad","radnoVrijeme","iskustvo","ocjena","profileImageBase64","charAt","err","_err$response","console","message","fetchDoctorAvailability","termsData","available","filter","term","dostupnost","map","terminID","vrijeme","sort","a","b","localeCompare","_err$response2","handleDateChange","e","target","value","handleTimeChange","handleReasonChange","handleBookAppointment","preventDefault","roles","includes","selectedTermin","find","pacijentId","appointmentData","pacijentID","datumPregleda","vrijemePregleda","komentarPacijenta","status","post","_err$response3","_err$response4","_err$response4$data","className","style","minHeight","children","role","fileName","_jsxFileName","lineNumber","columnNumber","to","refreshDoctor","_err$response5","renderBookingSection","onSubmit","htmlFor","type","onChange","required","disabled","length","rows","placeholder","src","alt","width","height","objectFit","border","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/DoctorProfilePage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\n\r\nfunction DoctorProfilePage() {\r\n    const { id } = useParams();\r\n    const { token, user, loading: authLoading } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const [doctor, setDoctor] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [availableTerms, setAvailableTerms] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState('');\r\n    const [selectedTime, setSelectedTime] = useState('');\r\n    const [reason, setReason] = useState('');\r\n    const [bookingMessage, setBookingMessage] = useState('');\r\n    const [bookingMessageType, setBookingMessageType] = useState('success');\r\n\r\n    // authHeaders se sada koristi samo kada je potreban autentifikovani poziv\r\n    // Za javne pozive (npr. dohvat detalja doktora kada niste ulogovani), ne šaljemo ga\r\n    const memoizedAuthHeaders = useMemo(() => {\r\n        return token ? { headers: { 'Authorization': `Bearer ${token}` } } : {};\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        const fetchDoctorDetails = async () => {\r\n            setLoading(true); // Resetuj loading state pri svakom pozivu\r\n            setError(null);   // Resetuj error state pri svakom pozivu\r\n            try {\r\n                // NE ŠALJEMO authHeaders direktno za javni dohvat detalja doktora\r\n                // Axios globalni default headers bi trebali biti dovoljni AKO token postoji.\r\n                // Ali posto zelimo da radi i kad nema tokena, necemo slati eksplicitno token.\r\n                // Jednostavno pozivamo bez authHeaders, i pustimo Gateway da odluci.\r\n                const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`);\r\n                const data = response.data;\r\n\r\n                const transformedDoctor = {\r\n                    doktorID: data.doktorID,\r\n                    ime: data.ime,\r\n                    prezime: data.prezime,\r\n                    fullName: `${data.ime} ${data.prezime}`,\r\n                    email: data.email,\r\n                    telefon: data.telefon,\r\n                    specijalizacije: Array.isArray(data.specijalizacije) ? data.specijalizacije.join(', ') : data.specijalizacije,\r\n                    grad: data.grad,\r\n                    radnoVrijeme: data.radnoVrijeme,\r\n                    iskustvo: data.iskustvo,\r\n                    ocjena: data.ocjena,\r\n                    profileImageBase64: data.profileImageBase64 || `https://placehold.co/100x100/CCCCCC/000000?text=${data.ime.charAt(0)}${data.prezime.charAt(0)}`\r\n                };\r\n                setDoctor(transformedDoctor);\r\n            } catch (err) {\r\n                console.error(\"Error fetching doctor details:\", err.response?.data || err.message);\r\n                setError(\"Could not load doctor profile. Please try again.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (id) {\r\n            fetchDoctorDetails();\r\n        }\r\n    }, [id]); // Uklonjen 'token' iz dependency array-a, jer ne zavisi od njega za javni prikaz\r\n\r\n    // Za dohvat termina i zakazivanje, koristimo memoizedAuthHeaders jer zahtijevaju autentifikaciju\r\n    useEffect(() => {\r\n        const fetchDoctorAvailability = async () => {\r\n            if (!selectedDate || !doctor?.doktorID || !token) { // Dodana provjera za token\r\n                setAvailableTerms([]);\r\n                return;\r\n            }\r\n            try {\r\n                // Ovdje šaljemo authHeaders jer je ovo zaštićena ruta\r\n                const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/termini/doktor/${doctor.doktorID}/datum/${selectedDate}`, memoizedAuthHeaders);\r\n                const termsData = Array.isArray(response.data) ? response.data : [];\r\n                const available = termsData\r\n                    .filter(term => term.dostupnost)\r\n                    .map(term => ({ terminID: term.terminID, vrijeme: term.vrijeme }))\r\n                    .sort((a, b) => a.vrijeme.localeCompare(b.vrijeme));\r\n                setAvailableTerms(available);\r\n            } catch (err) {\r\n                console.error('Error fetching doctor availability:', err.response?.data || err.message);\r\n                setAvailableTerms([]);\r\n                setBookingMessage('Error fetching available appointments.');\r\n                setBookingMessageType('danger');\r\n            }\r\n        };\r\n\r\n        if (doctor?.doktorID && selectedDate) {\r\n            fetchDoctorAvailability();\r\n        }\r\n    }, [doctor, selectedDate, token, memoizedAuthHeaders]); // Dodan memoizedAuthHeaders\r\n\r\n    const handleDateChange = (e) => {\r\n        setSelectedDate(e.target.value);\r\n        setSelectedTime('');\r\n    };\r\n\r\n    const handleTimeChange = (e) => {\r\n        setSelectedTime(e.target.value);\r\n    };\r\n\r\n    const handleReasonChange = (e) => {\r\n        setReason(e.target.value);\r\n    };\r\n\r\n    const handleBookAppointment = async (e) => {\r\n        e.preventDefault();\r\n        setBookingMessage('');\r\n\r\n        if (!user || !token) { // Provjera i za token\r\n            setBookingMessage('You must be logged in to book an appointment.');\r\n            setBookingMessageType('danger');\r\n            return;\r\n        }\r\n\r\n        if (!user.roles || !user.roles.includes('ROLE_PACIJENT')) {\r\n            setBookingMessage('Only patients can book appointments.');\r\n            setBookingMessageType('danger');\r\n            return;\r\n        }\r\n\r\n        if (!selectedDate || !selectedTime || !reason || !doctor?.doktorID) {\r\n            setBookingMessage('Please fill in all fields to book an appointment.');\r\n            setBookingMessageType('danger');\r\n            return;\r\n        }\r\n        const selectedTermin = availableTerms.find(term => term.vrijeme === selectedTime);\r\n        if (!selectedTermin) {\r\n            setBookingMessage('Selected appointment time is not valid or available.');\r\n            setBookingMessageType('danger');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const pacijentId = user?.pacijentId;\r\n            if (!pacijentId) {\r\n                setBookingMessage('Your patient ID was not found. Please ensure you are logged in as a patient and your patient profile is created.');\r\n                setBookingMessageType('danger');\r\n                return;\r\n            }\r\n\r\n            const appointmentData = {\r\n                pacijentID: pacijentId,\r\n                doktorID: doctor.doktorID,\r\n                terminID: selectedTermin.terminID,\r\n                datumPregleda: selectedDate,\r\n                vrijemePregleda: selectedTime,\r\n                komentarPacijenta: reason,\r\n                status: 'zakazan'\r\n            };\r\n            // Ovdje šaljemo authHeaders jer je ovo zaštićena ruta\r\n            await axios.post(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, appointmentData, memoizedAuthHeaders);\r\n            setBookingMessage('Appointment successfully booked!');\r\n            setBookingMessageType('success');\r\n            setSelectedDate('');\r\n            setSelectedTime('');\r\n            setReason('');\r\n            setAvailableTerms([]);\r\n        } catch (err) {\r\n            console.error(\"Error booking appointment:\", err.response?.data || err.message);\r\n            setBookingMessage(`Error booking appointment: ${err.response?.data?.message || err.message}`);\r\n            setBookingMessageType('danger');\r\n        }\r\n    };\r\n\r\n    if (authLoading || loading) {\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"container py-5 text-center\">\r\n                <p className=\"lead text-danger\">{error}</p>\r\n                <Link to=\"/service\" className=\"btn btn-primary\">Back to Doctor List</Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!doctor) {\r\n        return (\r\n            <div className=\"container py-5 text-center\">\r\n                <p className=\"lead\">Doctor not found.</p>\r\n                <Link to=\"/service\" className=\"btn btn-primary\">Back to Doctor List</Link>\r\n            </div>\r\n        );\r\n    }\r\n    const refreshDoctor = async () => {\r\n        try {\r\n            const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`);\r\n            const data = response.data;\r\n\r\n            const transformedDoctor = {\r\n                doktorID: data.doktorID,\r\n                ime: data.ime,\r\n                prezime: data.prezime,\r\n                fullName: `${data.ime} ${data.prezime}`,\r\n                email: data.email,\r\n                telefon: data.telefon,\r\n                specijalizacije: Array.isArray(data.specijalizacije) ? data.specijalizacije.join(', ') : data.specijalizacije,\r\n                grad: data.grad,\r\n                radnoVrijeme: data.radnoVrijeme,\r\n                iskustvo: data.iskustvo,\r\n                ocjena: data.ocjena,\r\n                profileImageBase64: data.profileImageBase64 || `https://placehold.co/100x100/CCCCCC/000000?text=${data.ime.charAt(0)}${data.prezime.charAt(0)}`\r\n            };\r\n\r\n            setDoctor(transformedDoctor);\r\n        } catch (err) {\r\n            console.error(\"Error refreshing doctor data:\", err.response?.data || err.message);\r\n        }\r\n    };\r\n\r\n\r\n    const renderBookingSection = () => {\r\n        if (!user) {\r\n            return (\r\n                <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                    Please <Link to=\"/login\" className=\"alert-link\">log in</Link> or <Link to=\"/sign-up\" className=\"alert-link\">register</Link> to book an appointment.\r\n                </div>\r\n            );\r\n        } else if (!user.roles || !user.roles.includes('ROLE_PACIJENT')) {\r\n            return (\r\n                <div className=\"alert alert-warning text-center\" role=\"alert\">\r\n                    Only patients can book appointments.\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <form onSubmit={handleBookAppointment}>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"appointmentDate\" className=\"form-label\">Date</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                                id=\"appointmentDate\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"appointmentTime\" className=\"form-label\">Time</label>\r\n                            <select\r\n                                className=\"form-select\"\r\n                                id=\"appointmentTime\"\r\n                                value={selectedTime}\r\n                                onChange={handleTimeChange}\r\n                                required\r\n                                disabled={availableTerms.length === 0}\r\n                            >\r\n                                <option value=\"\">Select time</option>\r\n                                {availableTerms.map(term => (\r\n                                    <option key={term.terminID} value={term.vrijeme}>{term.vrijeme}</option>\r\n                                ))}\r\n                            </select>\r\n                            {availableTerms.length === 0 && selectedDate && (\r\n                                <small className=\"text-muted\">No available appointments for the selected date.</small>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"reason\" className=\"form-label\">Reason for appointment</label>\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            id=\"reason\"\r\n                            rows=\"3\"\r\n                            value={reason}\r\n                            onChange={handleReasonChange}\r\n                            placeholder=\"Brief description of the reason for the appointment...\"\r\n                            required\r\n                        ></textarea>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-danger\">Book Appointment</button>\r\n                </form>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container my-5\">\r\n            <div className=\"card shadow-lg p-4 mb-4\">\r\n                <div className=\"row g-4\">\r\n                    <div className=\"col-md-4 text-center\">\r\n                        <img\r\n                            src={doctor.profileImageBase64}\r\n                            alt={doctor.fullName}\r\n                            className=\"img-fluid rounded-circle shadow-sm mb-3\"\r\n                            style={{ width: '150px', height: '150px', objectFit: 'cover', border: '3px solid #dc3545' }}\r\n                        />\r\n                        <h3 className=\"mb-1\">{doctor.fullName}</h3>\r\n                        <p className=\"text-muted\">{doctor.specijalizacije}</p>\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                            <span className=\"text-warning me-1\">★</span>\r\n                            <span className=\"fw-bold\">{doctor.ocjena || 'N/A'}</span>\r\n                            <span className=\"text-muted ms-2\">({doctor.grad})</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <h4 className=\"text-danger mb-3\">Doctor Information</h4>\r\n                        <p><strong>Email:</strong> {doctor.email}</p>\r\n                        <p><strong>Phone:</strong> {doctor.telefon}</p>\r\n                        <p><strong>City:</strong> {doctor.grad}</p>\r\n                        <p><strong>Working Hours:</strong> {doctor.radnoVrijeme}</p>\r\n                        <p><strong>Years of Experience:</strong> {doctor.iskustvo}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card shadow-lg p-4\">\r\n                <h4 className=\"text-danger mb-3\">Book an Appointment</h4>\r\n                {bookingMessage && (\r\n                    <div className={`alert alert-${bookingMessageType} mb-3`} role=\"alert\">\r\n                        {bookingMessage}\r\n                    </div>\r\n                )}\r\n                {renderBookingSection()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DoctorProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}