{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    console.log(\"AuthContext useEffect: Provjeravam localStorage za korisničke podatke...\");\n    const storedUser = localStorage.getItem('user');\n    const storedToken = localStorage.getItem('token');\n    if (storedUser && storedToken) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        setUser(parsedUser);\n        setToken(storedToken);\n        // Postavi defaultni Authorization header za Axios instancu\n        axios.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\n        console.log(\"AuthContext: Korisnički podaci i token pronađeni u localStorage-u.\");\n      } catch (e) {\n        console.error(\"AuthContext: Greška pri parsiranju korisničkih podataka iz localStorage-a:\", e);\n        // Očisti nevažeće podatke\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n        setUser(null);\n        setToken(null);\n        delete axios.defaults.headers.common['Authorization'];\n      }\n    } else {\n      console.log(\"AuthContext: Nema korisničkih podataka u localStorage-u.\");\n    }\n    setLoading(false);\n    console.log(\"AuthContext useEffect: Učitavanje završeno.\");\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('http://localhost:8082/auth/login', {\n        email,\n        password\n      });\n      const {\n        token: receivedToken,\n        email: userEmail,\n        roles,\n        firstName,\n        lastName,\n        patientId,\n        doktorId\n      } = response.data;\n      const userData = {\n        email: userEmail,\n        firstName: firstName,\n        lastName: lastName,\n        roles: roles || [],\n        patientId: patientId || null,\n        doktorId: doktorId || null\n      };\n      setUser(userData);\n      setToken(receivedToken);\n      localStorage.setItem('user', JSON.stringify(userData));\n      localStorage.setItem('token', receivedToken);\n      // Postavi defaultni Authorization header za Axios instancu NAKON USPJEŠNOG LOGINA\n      axios.defaults.headers.common['Authorization'] = `Bearer ${receivedToken}`;\n      setLoading(false);\n      return true;\n    } catch (error) {\n      var _error$response;\n      setLoading(false);\n      console.error('Login error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization']; // Ukloni header pri logoutu\n  };\n\n  // Propagiranje user, token i loading stanja kroz kontekst\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"uAkFQMmIUxfxJcQTEb8tCM/KFt4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","loading","setLoading","console","log","storedUser","localStorage","getItem","storedToken","parsedUser","JSON","parse","defaults","headers","common","e","error","removeItem","login","email","password","response","post","receivedToken","userEmail","roles","firstName","lastName","patientId","doktorId","data","userData","setItem","stringify","_error$response","message","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        console.log(\"AuthContext useEffect: Provjeravam localStorage za korisničke podatke...\");\r\n        const storedUser = localStorage.getItem('user');\r\n        const storedToken = localStorage.getItem('token');\r\n\r\n        if (storedUser && storedToken) {\r\n            try {\r\n                const parsedUser = JSON.parse(storedUser);\r\n                setUser(parsedUser);\r\n                setToken(storedToken);\r\n                // Postavi defaultni Authorization header za Axios instancu\r\n                axios.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\r\n                console.log(\"AuthContext: Korisnički podaci i token pronađeni u localStorage-u.\");\r\n            } catch (e) {\r\n                console.error(\"AuthContext: Greška pri parsiranju korisničkih podataka iz localStorage-a:\", e);\r\n                // Očisti nevažeće podatke\r\n                localStorage.removeItem('user');\r\n                localStorage.removeItem('token');\r\n                setUser(null);\r\n                setToken(null);\r\n                delete axios.defaults.headers.common['Authorization'];\r\n            }\r\n        } else {\r\n            console.log(\"AuthContext: Nema korisničkih podataka u localStorage-u.\");\r\n        }\r\n        setLoading(false);\r\n        console.log(\"AuthContext useEffect: Učitavanje završeno.\");\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.post('http://localhost:8082/auth/login', { email, password });\r\n            const { token: receivedToken, email: userEmail, roles, firstName, lastName, patientId, doktorId } = response.data;\r\n\r\n            const userData = {\r\n                email: userEmail,\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                roles: roles || [],\r\n                patientId: patientId || null,\r\n                doktorId: doktorId || null,\r\n            };\r\n\r\n            setUser(userData);\r\n            setToken(receivedToken);\r\n            localStorage.setItem('user', JSON.stringify(userData));\r\n            localStorage.setItem('token', receivedToken);\r\n            // Postavi defaultni Authorization header za Axios instancu NAKON USPJEŠNOG LOGINA\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${receivedToken}`;\r\n            setLoading(false);\r\n            return true;\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.error('Login error:', error.response?.data || error.message);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        setToken(null);\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n        delete axios.defaults.headers.common['Authorization']; // Ukloni header pri logoutu\r\n    };\r\n\r\n    // Propagiranje user, token i loading stanja kroz kontekst\r\n    return (\r\n        <AuthContext.Provider value={{ user, token, loading, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}