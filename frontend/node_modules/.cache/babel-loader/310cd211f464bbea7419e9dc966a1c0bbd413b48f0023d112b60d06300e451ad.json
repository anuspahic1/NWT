{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/termini-pregledi`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\nfunction AdminDashboard() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    token\n  } = useAuth();\n  const authHeaders = {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  const [activeTab, setActiveTab] = useState(() => {\n    const savedTab = localStorage.getItem('adminActiveTab');\n    return savedTab || 'overview';\n  });\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\n  const [editingDoctor, setEditingDoctor] = useState(null);\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\n  const [appointmentsCurrentPage, setAppointmentsCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: doc.userId,\n        name: `${doc.ime} ${doc.prezime}`,\n        ime: doc.ime,\n        prezime: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        specijalizacije: doc.specijalizacije,\n        city: doc.grad || 'N/A',\n        grad: doc.grad,\n        email: doc.email || 'N/A',\n        telefon: doc.telefon || 'N/A',\n        // Ovdje se 'telefon' već dohvata\n        radnoVrijeme: doc.radnoVrijeme || 'N/A',\n        // Ovdje se 'radnoVrijeme' već dohvata\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : 'N/A',\n        // Ovdje se 'iskustvo' već dohvata\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 'N/A' // Ovdje se 'ocjena' već dohvata\n      }));\n      setDoctors(transformedDoctors);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja doktora:\", error);\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti`, authHeaders);\n      const transformedPatients = response.data.map(pat => ({\n        id: pat.pacijentID,\n        userId: pat.userId,\n        name: `${pat.ime} ${pat.prezime}`,\n        ime: pat.ime,\n        prezime: pat.prezime,\n        email: pat.email || 'N/A',\n        phone: pat.telefon || 'N/A',\n        telefon: pat.telefon\n      }));\n      setPatients(transformedPatients);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", error);\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\n    }\n  };\n  const fetchAppointments = async () => {\n    try {\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\n      const transformedAppointments = response.data.map(app => ({\n        id: app.terminID,\n        patientName: app.pacijentIme || 'N/A',\n        doctorName: app.doktorIme || 'N/A',\n        date: app.datum,\n        time: app.vrijeme,\n        status: app.status\n      }));\n      setAppointments(transformedAppointments);\n    } catch (error) {\n      console.error(\"Greška prilikom dohvaćanja termina:\", error);\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\n    }\n  };\n  useEffect(() => {\n    if (!token) {\n      console.warn(\"Nema tokena, preskačem dohvaćanje podataka.\");\n      return;\n    }\n    fetchDoctors();\n    fetchPatients();\n    fetchAppointments();\n  }, [token]);\n  useEffect(() => {\n    localStorage.setItem('adminActiveTab', activeTab);\n  }, [activeTab]);\n  const handleAddDoctor = async newDoctorData => {\n    try {\n      const registerPayload = {\n        email: newDoctorData.email,\n        password: newDoctorData.password,\n        fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\n        telefon: newDoctorData.telefon,\n        roles: [\"ROLE_DOKTOR\"],\n        grad: newDoctorData.grad,\n        specijalizacije: newDoctorData.specijalizacije\n      };\n      await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      fetchDoctors();\n      setShowDoctorModal(false);\n      showNotification('Novi doktor uspješno registrovan i dodan!');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Greška prilikom dodavanja doktora (registracije):\", error);\n      showNotification(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Greška prilikom dodavanja doktora.', 'danger');\n    }\n  };\n  const handleUpdateDoctor = async updatedDoctor => {\n    try {\n      const doctorUpdatePayload = {\n        ime: updatedDoctor.ime,\n        prezime: updatedDoctor.prezime,\n        email: updatedDoctor.email,\n        telefon: updatedDoctor.telefon,\n        grad: updatedDoctor.grad,\n        specijalizacije: updatedDoctor.specijalizacije,\n        radnoVrijeme: updatedDoctor.radnoVrijeme,\n        iskustvo: updatedDoctor.iskustvo,\n        ocjena: updatedDoctor.ocjena\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\n      const userUpdatePayload = {\n        email: updatedDoctor.email,\n        fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\n        telefon: updatedDoctor.telefon\n      };\n      if (updatedDoctor.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchDoctors();\n      setShowDoctorModal(false);\n      setEditingDoctor(null);\n      showNotification('Doktor uspješno ažuriran!');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Greška prilikom ažuriranja doktora:\", error);\n      showNotification(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Greška prilikom ažuriranja doktora.', 'danger');\n    }\n  };\n  const handleDeleteDoctor = async id => {\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.');\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const doctorToDelete = doctors.find(doc => doc.id === id);\n      if (!doctorToDelete || !doctorToDelete.userId) {\n        showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\n        return;\n      }\n      await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/doktori/${id}`, authHeaders);\n      await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\n      fetchDoctors();\n      showNotification('Doktor uspješno obrisan!', 'danger');\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"Greška prilikom brisanja doktora:\", error);\n      showNotification(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Greška prilikom brisanja doktora.', 'danger');\n    }\n  };\n  const openDoctorModal = (doctor = null) => {\n    setEditingDoctor(doctor);\n    setShowDoctorModal(true);\n  };\n  const filteredDoctors = doctors.filter(doctor => doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()));\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\n  const handleAddPatient = async newPatient => {\n    try {\n      const registerPayload = {\n        email: newPatient.email,\n        password: newPatient.password,\n        fullName: `${newPatient.ime} ${newPatient.prezime}`,\n        telefon: newPatient.telefon,\n        roles: [\"ROLE_PATIENT\"],\n        grad: null,\n        specijalizacije: null\n      };\n      await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      fetchPatients();\n      setShowPatientModal(false);\n      showNotification('Novi pacijent uspješno registrovan i dodan!');\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error(\"Greška prilikom dodavanja pacijenta (registracije):\", error);\n      showNotification(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Greška prilikom dodavanja pacijenta.', 'danger');\n    }\n  };\n  const handleUpdatePatient = async updatedPatient => {\n    try {\n      const patientUpdatePayload = {\n        ime: updatedPatient.ime,\n        prezime: updatedPatient.prezime,\n        email: updatedPatient.email,\n        telefon: updatedPatient.telefon\n      };\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\n      const userUpdatePayload = {\n        email: updatedPatient.email,\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\n        telefon: updatedPatient.telefon\n      };\n      if (updatedPatient.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\n      } else {\n        console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchPatients();\n      setShowPatientModal(false);\n      setEditingPatient(null);\n      showNotification('Pacijent uspješno ažuriran!');\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", error);\n      showNotification(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Greška prilikom ažuriranja pacijenta.', 'danger');\n    }\n  };\n  const handleDeletePatient = async id => {\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.');\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const patientToDelete = patients.find(pat => pat.id === id);\n      if (!patientToDelete || !patientToDelete.userId) {\n        showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\n        return;\n      }\n      await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti/${id}`, authHeaders);\n      await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\n      fetchPatients();\n      showNotification('Pacijent uspješno obrisan!', 'danger');\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      console.error(\"Greška prilikom brisanja pacijenta:\", error);\n      showNotification(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Greška prilikom brisanja pacijenta.', 'danger');\n    }\n  };\n  const openPatientModal = (patient = null) => {\n    setEditingPatient(patient);\n    setShowPatientModal(true);\n  };\n  const filteredPatients = patients.filter(patient => patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\n  const handleUpdateAppointmentStatus = async (id, newStatus) => {\n    try {\n      const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}/status`, {\n        status: newStatus\n      }, authHeaders);\n      fetchAppointments();\n      showNotification(`Status termina ažuriran na ${newStatus}!`, 'info');\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      console.error(\"Greška prilikom ažuriranja statusa termina:\", error);\n      showNotification(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Greška prilikom ažuriranja statusa termina.', 'danger');\n    }\n  };\n  const indexOfLastAppointment = appointmentsCurrentPage * itemsPerPage;\n  const indexOfFirstAppointment = indexOfLastAppointment - itemsPerPage;\n  const currentAppointments = appointments.slice(indexOfFirstAppointment, indexOfLastAppointment);\n  const totalAppointmentPages = Math.ceil(appointments.length / itemsPerPage);\n  const DataModal = ({\n    show,\n    onClose,\n    data,\n    onSave,\n    fields,\n    title,\n    idPrefix\n  }) => {\n    _s();\n    const [formData, setFormData] = useState(data || {});\n    useEffect(() => {\n      if (data) {\n        const updatedData = {\n          ...data\n        };\n        // Ako je radnoVrijeme 'N/A' (prikaz), konvertuj u null za spremanje\n        if (updatedData.radnoVrijeme === 'N/A') {\n          updatedData.radnoVrijeme = null;\n        }\n        // Ako su iskustvo ili ocjena 0 (prikaz), a u bazi su bili null, postavi ih na null za formu\n        if (updatedData.iskustvo === 0 && (data.iskustvo === null || data.iskustvo === undefined)) {\n          updatedData.iskustvo = null;\n        }\n        if (updatedData.ocjena === 0.0 && (data.ocjena === null || data.ocjena === undefined)) {\n          updatedData.ocjena = null;\n        }\n        // Email za prikaz treba biti prazan string ako je null ili 'N/A' za input\n        if (updatedData.email === 'N/A' || updatedData.email === null) {\n          updatedData.email = '';\n        }\n\n        // Specijalizacije moraju biti niz\n        if (!Array.isArray(updatedData.specijalizacije) || updatedData.specijalizacije.length === 0) {\n          updatedData.specijalizacije = [];\n        }\n        setFormData(updatedData);\n      } else {\n        // Za nove unose, inicijaliziraj numerička polja na null, tekstualna na prazan string\n        const initialData = {};\n        fields.forEach(field => {\n          if (field.name === 'specijalizacije') {\n            initialData[field.name] = [];\n          } else if (field.type === 'number') {\n            initialData[field.name] = null;\n          } else {\n            initialData[field.name] = ''; // Inicijaliziraj tekstualna polja na prazan string\n          }\n        });\n        setFormData(initialData);\n      }\n    }, [data, fields]);\n    const handleChange = e => {\n      const {\n        name,\n        value,\n        type\n      } = e.target;\n      setFormData(prev => {\n        let newValue = value;\n        if (name === 'specijalizacije') {\n          newValue = [value];\n        } else if (type === 'number') {\n          newValue = value === '' ? null : Number(value);\n          if (isNaN(newValue)) {\n            newValue = null;\n          }\n        } else if (type === 'email' && value === '') {\n          // Ako je email prazan string, ostavi ga takvog ili postavi na null ako backend to preferira\n          // Trenutno neka ostane prazan string jer @NotBlank validira\n          newValue = value;\n        }\n        return {\n          ...prev,\n          [name]: newValue\n        };\n      });\n    };\n    const handleSubmit = e => {\n      e.preventDefault();\n      const finalFormData = {\n        ...formData\n      };\n      if (typeof finalFormData.specijalizacije === 'string') {\n        finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\n      }\n      onSave(finalFormData);\n    };\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: onClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: fields.map(field => /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: `${idPrefix}-${field.name}`,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), field.type === 'select' ? /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: field.name,\n              value: Array.isArray(formData[field.name]) && formData[field.name].length > 0 ? formData[field.name][0] : formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: [\"Select \", field.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 21\n              }, this), field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 19\n            }, this) : field.type === 'textarea' ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: field.type || 'text',\n              name: field.name,\n              value: formData[field.name] === null || field.type === 'number' && formData[field.name] === 0 && (data === null || data[field.name] === null || data[field.name] === undefined) || field.name === 'email' && formData[field.name] === 'N/A' ? '' : formData[field.name],\n              onChange: handleChange,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 19\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this);\n  };\n  _s(DataModal, \"JPolC2XS0g7tYnXkmRHL767uIww=\");\n  const Pagination = ({\n    itemsPerPage,\n    totalItems,\n    currentPage,\n    paginate\n  }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center mt-4\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === number ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this);\n  };\n  const renderContent = () => {\n    const addDoctorFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'password',\n      label: 'Password',\n      type: 'password',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }, {\n      name: 'grad',\n      label: 'City',\n      type: 'select',\n      required: true,\n      options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla']\n    }, {\n      name: 'specijalizacije',\n      label: 'Specialty',\n      type: 'select',\n      required: true,\n      options: ['Kardiolog', 'Pedijatar', 'Dermatolog', 'Neurolog', 'Ortoped', 'Hirurg', 'Opća praksa']\n    }, {\n      name: 'radnoVrijeme',\n      label: 'Work Hours',\n      type: 'text',\n      required: false\n    }, {\n      name: 'iskustvo',\n      label: 'Experience (years)',\n      type: 'number',\n      required: false\n    }, {\n      name: 'ocjena',\n      label: 'Rating (0.0-5.0)',\n      type: 'number',\n      required: false\n    }];\n    const editDoctorFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }, {\n      name: 'grad',\n      label: 'City',\n      type: 'select',\n      required: true,\n      options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla']\n    }, {\n      name: 'specijalizacije',\n      label: 'Specialty',\n      type: 'select',\n      required: true,\n      options: ['Kardiolog', 'Pedijatar', 'Dermatolog', 'Neurolog', 'Ortoped', 'Hirurg', 'Opća praksa']\n    }, {\n      name: 'radnoVrijeme',\n      label: 'Work Hours',\n      type: 'text',\n      required: false\n    }, {\n      name: 'iskustvo',\n      label: 'Experience (years)',\n      type: 'number',\n      required: false\n    }, {\n      name: 'ocjena',\n      label: 'Rating (0.0-5.0)',\n      type: 'number',\n      required: false\n    }];\n    const addPatientFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'password',\n      label: 'Password',\n      type: 'password',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }];\n    const editPatientFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }];\n    switch (activeTab) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Dashboard Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-primary mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Doctors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: doctors.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-success mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Patients\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: patients.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-warning mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Pending Appointments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: appointments.filter(app => app.status === 'Pending').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Quick Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => openDoctorModal(),\n                children: \"Add New Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-success\",\n                onClick: () => openPatientModal(),\n                children: \"Add New Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-info\",\n                onClick: () => setActiveTab('appointments'),\n                children: \"View Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this);\n      case 'doctors':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Doctors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openDoctorModal(),\n              children: \"Add New Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search doctors...\",\n              value: doctorSearchTerm,\n              onChange: e => setDoctorSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 606,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Specialty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"City\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 609,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 21\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Work Hours\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 21\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Experience\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 21\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 21\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentDoctors.length > 0 ? currentDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 622,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 623,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.specialty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.city\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 625,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.telefon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 627,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.radnoVrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.iskustvo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.ocjena\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openDoctorModal(doctor),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 632,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteDoctor(doctor.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 633,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 25\n                  }, this)]\n                }, doctor.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"10\",\n                    className: \"text-center\",\n                    children: \"No doctors found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 639,\n                    columnNumber: 23\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredDoctors.length,\n            currentPage: doctorsCurrentPage,\n            paginate: setDoctorsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this);\n      case 'patients':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openPatientModal(),\n              children: \"Add New Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search patients...\",\n              value: patientSearchTerm,\n              onChange: e => setPatientSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 671,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 673,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 674,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 675,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentPatients.length > 0 ? currentPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 682,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 683,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 684,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openPatientModal(patient),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 687,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeletePatient(patient.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 688,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 25\n                  }, this)]\n                }, patient.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"No patients found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredPatients.length,\n            currentPage: patientsCurrentPage,\n            paginate: setPatientsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this);\n      case 'appointments':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 716,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Patient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 717,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 718,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 719,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 720,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 721,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 722,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentAppointments.length > 0 ? currentAppointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 729,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.patientName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 730,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.doctorName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 732,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 733,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select\",\n                      value: appointment.status,\n                      onChange: e => handleUpdateAppointmentStatus(appointment.id, e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Pending\",\n                        children: \"Pending\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 740,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Confirmed\",\n                        children: \"Confirmed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 741,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Completed\",\n                        children: \"Completed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 742,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Cancelled\",\n                        children: \"Cancelled\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 743,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 735,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 734,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => showNotification('Brisanje termina nije implementirano.', 'warning'),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 747,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 746,\n                    columnNumber: 25\n                  }, this)]\n                }, appointment.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"7\",\n                    className: \"text-center\",\n                    children: \"No appointments found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: appointments.length,\n            currentPage: appointmentsCurrentPage,\n            paginate: setAppointmentsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a tab to view content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const addDoctorFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Password',\n    type: 'password',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }, {\n    name: 'grad',\n    label: 'City',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specialty',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Pedijatar', 'Dermatolog', 'Neurolog', 'Ortoped', 'Hirurg', 'Opća praksa']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Work Hours',\n    type: 'text',\n    required: false\n  }, {\n    name: 'iskustvo',\n    label: 'Experience (years)',\n    type: 'number',\n    required: false\n  }, {\n    name: 'ocjena',\n    label: 'Rating (0.0-5.0)',\n    type: 'number',\n    required: false\n  }];\n  const editDoctorFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }, {\n    name: 'grad',\n    label: 'City',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specialty',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Pedijatar', 'Dermatolog', 'Neurolog', 'Ortoped', 'Hirurg', 'Opća praksa']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Work Hours',\n    type: 'text',\n    required: false\n  }, {\n    name: 'iskustvo',\n    label: 'Experience (years)',\n    type: 'number',\n    required: false\n  }, {\n    name: 'ocjena',\n    label: 'Rating (0.0-5.0)',\n    type: 'number',\n    required: false\n  }];\n  const addPatientFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Password',\n    type: 'password',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }];\n  const editPatientFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alertType,\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n      style: {\n        zIndex: 1050\n      },\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\",\n        style: {\n          minHeight: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky pt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'overview' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('overview'),\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 826,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'doctors' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('doctors'),\n                children: \"Doctors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'patients' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('patients'),\n                children: \"Patients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'appointments' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('appointments'),\n                children: \"Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 841,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 840,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showDoctorModal,\n      onClose: () => setShowDoctorModal(false),\n      data: editingDoctor,\n      onSave: editingDoctor ? handleUpdateDoctor : handleAddDoctor,\n      title: editingDoctor ? 'Edit Doctor' : 'Add New Doctor',\n      idPrefix: \"doctor\",\n      fields: editingDoctor ? editDoctorFields : addDoctorFields\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showPatientModal,\n      onClose: () => setShowPatientModal(false),\n      data: editingPatient,\n      onSave: editingPatient ? handleUpdatePatient : handleAddPatient,\n      title: editingPatient ? 'Edit Patient' : 'Add New Patient',\n      idPrefix: \"patient\",\n      fields: editingPatient ? editPatientFields : addPatientFields\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 814,\n    columnNumber: 5\n  }, this);\n}\n_s2(AdminDashboard, \"R4jYAWT6GMxFlQJg/iJDd0hoXc8=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","Modal","Button","Form","Alert","jsxDEV","_jsxDEV","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","AUTH_API_PREFIX","AdminDashboard","_s2","_s","$RefreshSig$","token","authHeaders","headers","activeTab","setActiveTab","savedTab","localStorage","getItem","doctors","setDoctors","patients","setPatients","appointments","setAppointments","showDoctorModal","setShowDoctorModal","editingDoctor","setEditingDoctor","showPatientModal","setShowPatientModal","editingPatient","setEditingPatient","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","doctorSearchTerm","setDoctorSearchTerm","patientSearchTerm","setPatientSearchTerm","doctorsCurrentPage","setDoctorsCurrentPage","patientsCurrentPage","setPatientsCurrentPage","appointmentsCurrentPage","setAppointmentsCurrentPage","itemsPerPage","showNotification","message","type","setTimeout","fetchDoctors","response","get","transformedDoctors","data","map","doc","id","doktorID","userId","name","ime","prezime","specialty","Array","isArray","specijalizacije","length","join","city","grad","email","telefon","radnoVrijeme","iskustvo","undefined","ocjena","error","console","fetchPatients","transformedPatients","pat","pacijentID","phone","fetchAppointments","transformedAppointments","app","terminID","patientName","pacijentIme","doctorName","doktorIme","date","datum","time","vrijeme","status","warn","setItem","handleAddDoctor","newDoctorData","registerPayload","password","fullName","roles","post","_error$response","_error$response$data","handleUpdateDoctor","updatedDoctor","doctorUpdatePayload","put","userUpdatePayload","_error$response2","_error$response2$data","handleDeleteDoctor","confirmed","window","confirm","doctorToDelete","find","delete","_error$response3","_error$response3$data","openDoctorModal","doctor","filteredDoctors","filter","toLowerCase","includes","indexOfLastDoctor","indexOfFirstDoctor","currentDoctors","slice","totalDoctorPages","Math","ceil","handleAddPatient","newPatient","_error$response4","_error$response4$data","handleUpdatePatient","updatedPatient","patientUpdatePayload","_error$response5","_error$response5$data","handleDeletePatient","patientToDelete","_error$response6","_error$response6$data","openPatientModal","patient","filteredPatients","indexOfLastPatient","indexOfFirstPatient","currentPatients","totalPatientPages","handleUpdateAppointmentStatus","newStatus","_error$response7","_error$response7$data","indexOfLastAppointment","indexOfFirstAppointment","currentAppointments","totalAppointmentPages","DataModal","show","onClose","onSave","fields","title","idPrefix","formData","setFormData","updatedData","initialData","forEach","field","handleChange","e","value","target","prev","newValue","Number","isNaN","handleSubmit","preventDefault","finalFormData","onHide","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Body","Group","className","controlId","Label","label","Select","onChange","required","options","option","Control","as","rows","Footer","variant","onClick","Pagination","totalItems","currentPage","paginate","pageNumbers","i","push","number","renderContent","addDoctorFields","editDoctorFields","addPatientFields","editPatientFields","placeholder","colSpan","appointment","dismissible","style","zIndex","minHeight","href","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/termini-pregledi`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\r\n\r\nfunction AdminDashboard() {\r\n  const { token } = useAuth();\r\n\r\n  const authHeaders = {\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  };\r\n\r\n  const [activeTab, setActiveTab] = useState(() => {\r\n    const savedTab = localStorage.getItem('adminActiveTab');\r\n    return savedTab || 'overview';\r\n  });\r\n\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\r\n  const [editingDoctor, setEditingDoctor] = useState(null);\r\n  const [showPatientModal, setShowPatientModal] = useState(false);\r\n  const [editingPatient, setEditingPatient] = useState(null);\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [alertType, setAlertType] = useState('success');\r\n\r\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\r\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n\r\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\r\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\r\n  const [appointmentsCurrentPage, setAppointmentsCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const showNotification = (message, type = 'success') => {\r\n    setAlertMessage(message);\r\n    setAlertType(type);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n      setAlertMessage('');\r\n    }, 3000);\r\n  };\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/doktori`, authHeaders);\r\n      const transformedDoctors = response.data.map(doc => ({\r\n        id: doc.doktorID,\r\n        userId: doc.userId,\r\n        name: `${doc.ime} ${doc.prezime}`,\r\n        ime: doc.ime,\r\n        prezime: doc.prezime,\r\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                   ? doc.specijalizacije.join(', ')\r\n                   : 'N/A',\r\n        specijalizacije: doc.specijalizacije,\r\n        city: doc.grad || 'N/A',\r\n        grad: doc.grad,\r\n        email: doc.email || 'N/A',\r\n        telefon: doc.telefon || 'N/A', // Ovdje se 'telefon' već dohvata\r\n        radnoVrijeme: doc.radnoVrijeme || 'N/A', // Ovdje se 'radnoVrijeme' već dohvata\r\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : 'N/A', // Ovdje se 'iskustvo' već dohvata\r\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 'N/A',   // Ovdje se 'ocjena' već dohvata\r\n      }));\r\n      setDoctors(transformedDoctors);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja doktora:\", error);\r\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti`, authHeaders);\r\n      const transformedPatients = response.data.map(pat => ({\r\n        id: pat.pacijentID,\r\n        userId: pat.userId,\r\n        name: `${pat.ime} ${pat.prezime}`,\r\n        ime: pat.ime,\r\n        prezime: pat.prezime,\r\n        email: pat.email || 'N/A',\r\n        phone: pat.telefon || 'N/A',\r\n        telefon: pat.telefon,\r\n      }));\r\n      setPatients(transformedPatients);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", error);\r\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchAppointments = async () => {\r\n    try {\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\r\n      const transformedAppointments = response.data.map(app => ({\r\n        id: app.terminID,\r\n        patientName: app.pacijentIme || 'N/A',\r\n        doctorName: app.doktorIme || 'N/A',\r\n        date: app.datum,\r\n        time: app.vrijeme,\r\n        status: app.status,\r\n      }));\r\n      setAppointments(transformedAppointments);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja termina:\", error);\r\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      console.warn(\"Nema tokena, preskačem dohvaćanje podataka.\");\r\n      return;\r\n    }\r\n    fetchDoctors();\r\n    fetchPatients();\r\n    fetchAppointments();\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('adminActiveTab', activeTab);\r\n  }, [activeTab]);\r\n\r\n\r\n  const handleAddDoctor = async (newDoctorData) => {\r\n    try {\r\n      const registerPayload = {\r\n        email: newDoctorData.email,\r\n        password: newDoctorData.password,\r\n        fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\r\n        telefon: newDoctorData.telefon,\r\n        roles: [\"ROLE_DOKTOR\"],\r\n        grad: newDoctorData.grad,\r\n        specijalizacije: newDoctorData.specijalizacije,\r\n      };\r\n\r\n      await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n      fetchDoctors();\r\n      setShowDoctorModal(false);\r\n      showNotification('Novi doktor uspješno registrovan i dodan!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja doktora (registracije):\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja doktora.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleUpdateDoctor = async (updatedDoctor) => {\r\n    try {\r\n      const doctorUpdatePayload = {\r\n        ime: updatedDoctor.ime,\r\n        prezime: updatedDoctor.prezime,\r\n        email: updatedDoctor.email,\r\n        telefon: updatedDoctor.telefon,\r\n        grad: updatedDoctor.grad,\r\n        specijalizacije: updatedDoctor.specijalizacije,\r\n        radnoVrijeme: updatedDoctor.radnoVrijeme,\r\n        iskustvo: updatedDoctor.iskustvo,\r\n        ocjena: updatedDoctor.ocjena,\r\n      };\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\r\n\r\n      const userUpdatePayload = {\r\n        email: updatedDoctor.email,\r\n        fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\r\n        telefon: updatedDoctor.telefon,\r\n      };\r\n      if (updatedDoctor.userId) {\r\n          await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\r\n      } else {\r\n          console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n      }\r\n\r\n      fetchDoctors();\r\n      setShowDoctorModal(false);\r\n      setEditingDoctor(null);\r\n      showNotification('Doktor uspješno ažuriran!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja doktora:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja doktora.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleDeleteDoctor = async (id) => {\r\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.');\r\n    if (!confirmed) {\r\n      return;\r\n    }\r\n    try {\r\n      const doctorToDelete = doctors.find(doc => doc.id === id);\r\n      if (!doctorToDelete || !doctorToDelete.userId) {\r\n        showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\r\n        return;\r\n      }\r\n\r\n      await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/doktori/${id}`, authHeaders);\r\n      await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\r\n\r\n      fetchDoctors();\r\n      showNotification('Doktor uspješno obrisan!', 'danger');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom brisanja doktora:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom brisanja doktora.', 'danger');\r\n    }\r\n  };\r\n\r\n  const openDoctorModal = (doctor = null) => {\r\n    setEditingDoctor(doctor);\r\n    setShowDoctorModal(true);\r\n  };\r\n\r\n  const filteredDoctors = doctors.filter(doctor =>\r\n    doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n    doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n    doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n    (doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n    (doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n    (doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\r\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\r\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\r\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\r\n\r\n  const handleAddPatient = async (newPatient) => {\r\n    try {\r\n      const registerPayload = {\r\n        email: newPatient.email,\r\n        password: newPatient.password,\r\n        fullName: `${newPatient.ime} ${newPatient.prezime}`,\r\n        telefon: newPatient.telefon,\r\n        roles: [\"ROLE_PATIENT\"],\r\n        grad: null,\r\n        specijalizacije: null,\r\n      };\r\n      await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n      fetchPatients();\r\n      setShowPatientModal(false);\r\n      showNotification('Novi pacijent uspješno registrovan i dodan!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja pacijenta (registracije):\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja pacijenta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleUpdatePatient = async (updatedPatient) => {\r\n    try {\r\n      const patientUpdatePayload = {\r\n        ime: updatedPatient.ime,\r\n        prezime: updatedPatient.prezime,\r\n        email: updatedPatient.email,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\r\n\r\n      const userUpdatePayload = {\r\n        email: updatedPatient.email,\r\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      if (updatedPatient.userId) {\r\n          await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\r\n      } else {\r\n          console.warn(\"Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n      }\r\n\r\n      fetchPatients();\r\n      setShowPatientModal(false);\r\n      setEditingPatient(null);\r\n      showNotification('Pacijent uspješno ažuriran!');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja pacijenta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const handleDeletePatient = async (id) => {\r\n    const confirmed = window.confirm('Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.');\r\n    if (!confirmed) {\r\n      return;\r\n    }\r\n    try {\r\n      const patientToDelete = patients.find(pat => pat.id === id);\r\n      if (!patientToDelete || !patientToDelete.userId) {\r\n        showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\r\n        return;\r\n      }\r\n\r\n      await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/pacijenti/${id}`, authHeaders);\r\n      await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\r\n\r\n      fetchPatients();\r\n      showNotification('Pacijent uspješno obrisan!', 'danger');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom brisanja pacijenta:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom brisanja pacijenta.', 'danger');\r\n    }\r\n  };\r\n\r\n  const openPatientModal = (patient = null) => {\r\n    setEditingPatient(patient);\r\n    setShowPatientModal(true);\r\n  };\r\n\r\n  const filteredPatients = patients.filter(patient =>\r\n    patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\r\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\r\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\r\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\r\n\r\n  const handleUpdateAppointmentStatus = async (id, newStatus) => {\r\n    try {\r\n      const response = await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}/status`, { status: newStatus }, authHeaders);\r\n      fetchAppointments();\r\n      showNotification(`Status termina ažuriran na ${newStatus}!`, 'info');\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja statusa termina:\", error);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja statusa termina.', 'danger');\r\n    }\r\n  };\r\n\r\n  const indexOfLastAppointment = appointmentsCurrentPage * itemsPerPage;\r\n  const indexOfFirstAppointment = indexOfLastAppointment - itemsPerPage;\r\n  const currentAppointments = appointments.slice(indexOfFirstAppointment, indexOfLastAppointment);\r\n  const totalAppointmentPages = Math.ceil(appointments.length / itemsPerPage);\r\n\r\n  const DataModal = ({ show, onClose, data, onSave, fields, title, idPrefix }) => {\r\n    const [formData, setFormData] = useState(data || {});\r\n\r\n    useEffect(() => {\r\n      if (data) {\r\n        const updatedData = { ...data };\r\n        // Ako je radnoVrijeme 'N/A' (prikaz), konvertuj u null za spremanje\r\n        if (updatedData.radnoVrijeme === 'N/A') {\r\n          updatedData.radnoVrijeme = null;\r\n        }\r\n        // Ako su iskustvo ili ocjena 0 (prikaz), a u bazi su bili null, postavi ih na null za formu\r\n        if (updatedData.iskustvo === 0 && (data.iskustvo === null || data.iskustvo === undefined)) {\r\n            updatedData.iskustvo = null;\r\n        }\r\n        if (updatedData.ocjena === 0.0 && (data.ocjena === null || data.ocjena === undefined)) {\r\n            updatedData.ocjena = null;\r\n        }\r\n        // Email za prikaz treba biti prazan string ako je null ili 'N/A' za input\r\n        if (updatedData.email === 'N/A' || updatedData.email === null) {\r\n            updatedData.email = '';\r\n        }\r\n\r\n        // Specijalizacije moraju biti niz\r\n        if (!Array.isArray(updatedData.specijalizacije) || updatedData.specijalizacije.length === 0) {\r\n          updatedData.specijalizacije = [];\r\n        }\r\n\r\n        setFormData(updatedData);\r\n      } else {\r\n        // Za nove unose, inicijaliziraj numerička polja na null, tekstualna na prazan string\r\n        const initialData = {};\r\n        fields.forEach(field => {\r\n          if (field.name === 'specijalizacije') {\r\n            initialData[field.name] = [];\r\n          } else if (field.type === 'number') {\r\n            initialData[field.name] = null;\r\n          } else {\r\n            initialData[field.name] = ''; // Inicijaliziraj tekstualna polja na prazan string\r\n          }\r\n        });\r\n        setFormData(initialData);\r\n      }\r\n    }, [data, fields]);\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value, type } = e.target;\r\n\r\n      setFormData(prev => {\r\n        let newValue = value;\r\n\r\n        if (name === 'specijalizacije') {\r\n          newValue = [value];\r\n        } else if (type === 'number') {\r\n          newValue = value === '' ? null : Number(value);\r\n          if (isNaN(newValue)) {\r\n              newValue = null;\r\n          }\r\n        } else if (type === 'email' && value === '') {\r\n            // Ako je email prazan string, ostavi ga takvog ili postavi na null ako backend to preferira\r\n            // Trenutno neka ostane prazan string jer @NotBlank validira\r\n            newValue = value;\r\n        }\r\n\r\n        return { ...prev, [name]: newValue };\r\n      });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const finalFormData = { ...formData };\r\n      if (typeof finalFormData.specijalizacije === 'string') {\r\n          finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\r\n      }\r\n      onSave(finalFormData);\r\n    };\r\n\r\n    return (\r\n      <Modal show={show} onHide={onClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body>\r\n            {fields.map(field => (\r\n              <Form.Group className=\"mb-3\" controlId={`${idPrefix}-${field.name}`} key={field.name}>\r\n                <Form.Label>{field.label}</Form.Label>\r\n                {field.type === 'select' ? (\r\n                  <Form.Select\r\n                    name={field.name}\r\n                    value={Array.isArray(formData[field.name]) && formData[field.name].length > 0\r\n                             ? formData[field.name][0]\r\n                             : formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  >\r\n                    <option value=\"\">Select {field.label}</option>\r\n                    {field.options.map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                ) : field.type === 'textarea' ? (\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    name={field.name}\r\n                    value={formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  />\r\n                ) : (\r\n                  <Form.Control\r\n                    type={field.type || 'text'}\r\n                    name={field.name}\r\n                    value={\r\n                      formData[field.name] === null ||\r\n                      (field.type === 'number' && formData[field.name] === 0 && (data === null || data[field.name] === null || data[field.name] === undefined)) ||\r\n                      (field.name === 'email' && formData[field.name] === 'N/A')\r\n                      ? ''\r\n                      : formData[field.name]\r\n                    }\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  />\r\n                )}\r\n              </Form.Group>\r\n            ))}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination justify-content-center mt-4\">\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n              <button onClick={() => paginate(number)} className=\"page-link\">\r\n                {number}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const renderContent = () => {\r\n    const addDoctorFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Pedijatar', 'Dermatolog', 'Neurolog', 'Ortoped', 'Hirurg', 'Opća praksa'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n      { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n    const editDoctorFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Pedijatar', 'Dermatolog', 'Neurolog', 'Ortoped', 'Hirurg', 'Opća praksa'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n      { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n    const addPatientFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n    const editPatientFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n\r\n    switch (activeTab) {\r\n      case 'overview':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Dashboard Overview</h4>\r\n            <div className=\"row g-4\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-primary mb-3\">\r\n                  <div className=\"card-header\">Total Doctors</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{doctors.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-success mb-3\">\r\n                  <div className=\"card-header\">Total Patients</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{patients.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-warning mb-3\">\r\n                  <div className=\"card-header\">Pending Appointments</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{appointments.filter(app => app.status === 'Pending').length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h5>Quick Actions</h5>\r\n              <div className=\"d-flex gap-2\">\r\n                <button className=\"btn btn-outline-primary\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n                <button className=\"btn btn-outline-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n                <button className=\"btn btn-outline-info\" onClick={() => setActiveTab('appointments')}>View Appointments</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'doctors':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Doctors</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search doctors...\"\r\n                value={doctorSearchTerm}\r\n                onChange={(e) => setDoctorSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Specialty</th>\r\n                    <th>City</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th> {/* DODANO: Kolona za telefon */}\r\n                    <th>Work Hours</th> {/* DODANO: Kolona za radno vrijeme */}\r\n                    <th>Experience</th> {/* DODANO: Kolona za iskustvo */}\r\n                    <th>Rating</th> {/* DODANO: Kolona za ocjenu */}\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentDoctors.length > 0 ? (\r\n                    currentDoctors.map(doctor => (\r\n                      <tr key={doctor.id}>\r\n                        <td>{doctor.id}</td>\r\n                        <td>{doctor.name}</td>\r\n                        <td>{doctor.specialty}</td>\r\n                        <td>{doctor.city}</td>\r\n                        <td>{doctor.email}</td>\r\n                        <td>{doctor.telefon}</td> {/* DODANO: Prikaz telefona */}\r\n                        <td>{doctor.radnoVrijeme}</td> {/* DODANO: Prikaz radnog vremena */}\r\n                        <td>{doctor.iskustvo}</td> {/* DODANO: Prikaz iskustva */}\r\n                        <td>{doctor.ocjena}</td> {/* DODANO: Prikaz ocjene */}\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openDoctorModal(doctor)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteDoctor(doctor.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"10\" className=\"text-center\">No doctors found.</td> {/* AŽURIRANO: Povećan colspan */}\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredDoctors.length}\r\n              currentPage={doctorsCurrentPage}\r\n              paginate={setDoctorsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'patients':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Patients</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search patients...\"\r\n                value={patientSearchTerm}\r\n                onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentPatients.length > 0 ? (\r\n                    currentPatients.map(patient => (\r\n                      <tr key={patient.id}>\r\n                        <td>{patient.id}</td>\r\n                        <td>{patient.name}</td>\r\n                        <td>{patient.email}</td>\r\n                        <td>{patient.phone}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openPatientModal(patient)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeletePatient(patient.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"text-center\">No patients found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredPatients.length}\r\n              currentPage={patientsCurrentPage}\r\n              paginate={setPatientsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'appointments':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Appointments</h4>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Patient</th>\r\n                    <th>Doctor</th>\r\n                    <th>Date</th>\r\n                    <th>Time</th>\r\n                    <th>Status</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentAppointments.length > 0 ? (\r\n                    currentAppointments.map(appointment => (\r\n                      <tr key={appointment.id}>\r\n                        <td>{appointment.id}</td>\r\n                        <td>{appointment.patientName}</td>\r\n                        <td>{appointment.doctorName}</td>\r\n                        <td>{appointment.date}</td>\r\n                        <td>{appointment.time}</td>\r\n                        <td>\r\n                          <select\r\n                            className=\"form-select\"\r\n                            value={appointment.status}\r\n                            onChange={(e) => handleUpdateAppointmentStatus(appointment.id, e.target.value)}\r\n                          >\r\n                            <option value=\"Pending\">Pending</option>\r\n                            <option value=\"Confirmed\">Confirmed</option>\r\n                            <option value=\"Completed\">Completed</option>\r\n                            <option value=\"Cancelled\">Cancelled</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => showNotification('Brisanje termina nije implementirano.', 'warning')}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"7\" className=\"text-center\">No appointments found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={appointments.length}\r\n              currentPage={appointmentsCurrentPage}\r\n              paginate={setAppointmentsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return <p>Select a tab to view content.</p>;\r\n    }\r\n  };\r\n\r\n  const addDoctorFields = [\r\n    { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n    { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n    { name: 'email', label: 'Email', type: 'email', required: true },\r\n    { name: 'password', label: 'Password', type: 'password', required: true },\r\n    { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla'] },\r\n    { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Pedijatar', 'Dermatolog', 'Neurolog', 'Ortoped', 'Hirurg', 'Opća praksa'] },\r\n    { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n    { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n    { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n  ];\r\n\r\n  const editDoctorFields = [\r\n    { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n    { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n    { name: 'email', label: 'Email', type: 'email', required: true },\r\n    { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla'] },\r\n    { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Pedijatar', 'Dermatolog', 'Neurolog', 'Ortoped', 'Hirurg', 'Opća praksa'] },\r\n    { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n    { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n    { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n  ];\r\n\r\n  const addPatientFields = [\r\n    { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n    { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n    { name: 'email', label: 'Email', type: 'email', required: true },\r\n    { name: 'password', label: 'Password', type: 'password', required: true },\r\n    { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n  ];\r\n\r\n  const editPatientFields = [\r\n    { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n    { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n    { name: 'email', label: 'Email', type: 'email', required: true },\r\n    { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n  ];\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {showAlert && (\r\n        <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      <div className=\"row\">\r\n        <nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" style={{ minHeight: '100vh' }}>\r\n          <div className=\"position-sticky pt-3\">\r\n            <ul className=\"nav flex-column\">\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'overview' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('overview')}>\r\n                  Overview\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'doctors' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('doctors')}>\r\n                  Doctors\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'patients' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('patients')}>\r\n                  Patients\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'appointments' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('appointments')}>\r\n                  Appointments\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\">\r\n          {renderContent()}\r\n        </main>\r\n      </div>\r\n\r\n      <DataModal\r\n        show={showDoctorModal}\r\n        onClose={() => setShowDoctorModal(false)}\r\n        data={editingDoctor}\r\n        onSave={editingDoctor ? handleUpdateDoctor : handleAddDoctor}\r\n        title={editingDoctor ? 'Edit Doctor' : 'Add New Doctor'}\r\n        idPrefix=\"doctor\"\r\n        fields={editingDoctor ? editDoctorFields : addDoctorFields}\r\n      />\r\n\r\n      <DataModal\r\n        show={showPatientModal}\r\n        onClose={() => setShowPatientModal(false)}\r\n        data={editingPatient}\r\n        onSave={editingPatient ? handleUpdatePatient : handleAddPatient}\r\n        title={editingPatient ? 'Edit Patient' : 'Add New Patient'}\r\n        idPrefix=\"patient\"\r\n        fields={editingPatient ? editPatientFields : addPatientFields}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}