{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adna\\\\Desktop\\\\frontend - Copy\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\n\n// Ovi prefiksi sada sadrže gateway URL i context-path servisa.\n// Pretpostavljamo da backend servisi interno imaju /api/ prefiks za svoje kontrolere.\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\nfunction AdminDashboard() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    token\n  } = useAuth();\n\n  // Stanje za praćenje početnog učitavanja panela i autentifikacije\n  const [loadingInitial, setLoadingInitial] = useState(true);\n  const [isAuthChecked, setIsAuthChecked] = useState(false);\n\n  // Headeri za autentifikaciju, koristeći token iz AuthContext-a\n  const authHeaders = {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n\n  // Aktivni tab, sa čuvanjem u lokalnom skladištu\n  const [activeTab, setActiveTab] = useState(() => {\n    const savedTab = localStorage.getItem('adminActiveTab');\n    return savedTab || 'overview';\n  });\n\n  // Stanja za podatke iz API-ja\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n\n  // Stanja za modale i forme\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\n  const [editingDoctor, setEditingDoctor] = useState(null); // Čuva podatke doktora za uređivanje\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n\n  // Stanja za notifikacije (Alert)\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('success');\n\n  // Stanja za pretragu\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\n\n  // Stanja za paginaciju\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\n  const [appointmentsCurrentPage, setAppointmentsCurrentPage] = useState(1);\n  const itemsPerPage = 5; // Broj stavki po stranici\n\n  // Funkcija za prikaz notifikacija\n  const showNotification = (message, type = 'success') => {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n      setAlertMessage('');\n    }, 3000); // Notifikacija nestaje nakon 3 sekunde\n  };\n\n  // Funkcije za dohvat podataka sa backend-a\n  // Funkcije za dohvat podataka sa backend-a\n  const fetchDoctors = async () => {\n    try {\n      // Pravi URL poziv: http://localhost:8081/api/korisnici-doktori/api/doktori\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\n      const transformedDoctors = response.data.map(doc => ({\n        id: doc.doktorID,\n        userId: doc.userId,\n        // Važno za povezivanje sa Auth servisom\n        name: `${doc.ime} ${doc.prezime}`,\n        ime: doc.ime,\n        prezime: doc.prezime,\n        specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0 ? doc.specijalizacije.join(', ') : 'N/A',\n        specijalizacije: doc.specijalizacije,\n        // Ovo mora biti niz stringova\n        city: doc.grad || 'N/A',\n        grad: doc.grad,\n        email: doc.email || 'N/A',\n        telefon: doc.telefon || 'N/A',\n        radnoVrijeme: doc.radnoVrijeme || 'N/A',\n        iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : 'N/A',\n        ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 'N/A'\n      }));\n      setDoctors(transformedDoctors);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Greška prilikom dohvaćanja doktora:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\n    }\n  };\n  const fetchPatients = async () => {\n    try {\n      // Pravi URL poziv: http://localhost:8081/api/korisnici-doktori/api/pacijenti\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\n      const transformedPatients = response.data.map(pat => ({\n        id: pat.pacijentID,\n        userId: pat.userId,\n        // Važno za povezivanje sa Auth servisom\n        name: `${pat.ime} ${pat.prezime}`,\n        ime: pat.ime,\n        prezime: pat.prezime,\n        email: pat.email || 'N/A',\n        phone: pat.telefon || 'N/A',\n        telefon: pat.telefon\n      }));\n      setPatients(transformedPatients);\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\n    }\n  };\n  const fetchAppointments = async () => {\n    try {\n      // Pravi URL poziv: http://localhost:8081/api/termini-pregledi/api/pregledi\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\n      const transformedAppointments = response.data.map(app => ({\n        id: app.pregledID,\n        // Koristimo pregledID umjesto terminID ako je to stvarni ID\n        patientName: app.pacijentIme || 'N/A',\n        doctorName: app.doktorIme || 'N/A',\n        date: app.datumPregleda,\n        // Prilagodite prema stvarnom nazivu polja u backend-u\n        time: app.vrijemePregleda,\n        // Prilagodite prema stvarnom nazivu polja u backend-u\n        status: app.status\n      }));\n      setAppointments(transformedAppointments);\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Greška prilikom dohvaćanja termina:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\n    }\n  };\n\n  // Glavni useEffect hook za provjeru autentifikacije i dohvat podataka\n  useEffect(() => {\n    console.log(\"AdminDashboard useEffect - Trenutni token:\", token);\n    console.log(\"AdminDashboard useEffect - isAuthChecked:\", isAuthChecked);\n    console.log(\"AdminDashboard useEffect - loadingInitial (prije logike):\", loadingInitial);\n    if (token !== undefined && !isAuthChecked) {\n      setIsAuthChecked(true);\n      console.log(\"AdminDashboard useEffect - Provjera autentifikacije završena, postavljen isAuthChecked na true.\");\n    }\n    const initializeDashboard = async () => {\n      if (isAuthChecked) {\n        if (token) {\n          try {\n            await Promise.all([fetchDoctors(), fetchPatients(), fetchAppointments()]);\n            console.log(\"AdminDashboard useEffect - Podaci uspješno dohvaćeni.\");\n          } catch (error) {\n            console.error(\"Greška prilikom inicijalnog dohvaćanja podataka:\", error);\n            showNotification(\"Greška prilikom učitavanja početnih podataka.\", \"danger\");\n          } finally {\n            setLoadingInitial(false);\n            console.log(\"AdminDashboard useEffect - Postavljen loadingInitial na false nakon dohvaćanja podataka/greške.\");\n          }\n        } else {\n          setLoadingInitial(false);\n          console.warn(\"Provjera autentifikacije završena, ali token nije dostupan. Korisnik nije ulogovan/autorizovan.\");\n        }\n      } else {\n        console.log(\"AdminDashboard useEffect - Provjera autentifikacije još nije završena, loadingInitial ostaje true.\");\n      }\n    };\n    initializeDashboard();\n  }, [token, isAuthChecked]);\n  useEffect(() => {\n    localStorage.setItem('adminActiveTab', activeTab);\n  }, [activeTab]);\n\n  // Funkcija za dodavanje novog doktora\n  const handleAddDoctor = async newDoctorData => {\n    try {\n      console.log(\"handleAddDoctor: Počinjem proces dodavanja doktora.\");\n      // 1. Registracija korisnika u Auth servisu sa osnovnim podacima\n      const registerPayload = {\n        email: newDoctorData.email,\n        password: newDoctorData.password,\n        fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\n        telefon: newDoctorData.telefon,\n        roles: [\"ROLE_DOKTOR\"],\n        grad: newDoctorData.grad,\n        specijalizacije: newDoctorData.specijalizacije\n      };\n      console.log(\"handleAddDoctor: Slanje registerPayload-a Auth servisu:\", registerPayload);\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      const userId = authResponse.data.id; // Dohvat ID-a korisnika iz Auth servisa\n      console.log(\"handleAddDoctor: Korisnik registrovan, userId:\", userId, \"Auth response:\", authResponse.data);\n\n      // 2. Slanje kompletnih detalja doktora servisu korisnici-doktori na NOVI ENDPOINT\n      const doctorDetailsPayload = {\n        userId: userId,\n        // Povezivanje sa korisničkim nalogom\n        ime: newDoctorData.ime,\n        prezime: newDoctorData.prezime,\n        email: newDoctorData.email,\n        telefon: newDoctorData.telefon,\n        grad: newDoctorData.grad,\n        specijalizacije: newDoctorData.specijalizacije,\n        // Može biti niz stringova\n        radnoVrijeme: newDoctorData.radnoVrijeme,\n        iskustvo: newDoctorData.iskustvo,\n        ocjena: newDoctorData.ocjena\n      };\n      console.log(\"handleAddDoctor: Slanje doctorDetailsPayload-a korisnici-doktori servisu (koristim PUT na /user-details):\", doctorDetailsPayload);\n\n      // Poziv na korisnici-doktori servis za spašavanje detalja na NOVI ENDPOINT\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/user-details/${userId}`, doctorDetailsPayload, authHeaders);\n      console.log(\"handleAddDoctor: Doktor detalji sačuvani.\");\n      fetchDoctors(); // Ponovo dohvati doktore da bi se prikazale promjene\n      setShowDoctorModal(false);\n      showNotification('Novi doktor uspješno registrovan i detalji sačuvani!', 'success');\n      console.log(\"handleAddDoctor: Proces dodavanja doktora uspješno završen.\");\n    } catch (error) {\n      var _error$response4, _error$response5, _error$response5$data;\n      console.error(\"Greška prilikom dodavanja doktora:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      // Prikazati poruku o grešci samo ako je stvarna greška\n      showNotification(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Greška prilikom dodavanja doktora. Detalji u konzoli.', 'danger');\n    }\n  };\n\n  // Funkcija za ažuriranje postojećeg doktora\n  const handleUpdateDoctor = async updatedDoctor => {\n    try {\n      console.log(\"handleUpdateDoctor: Počinjem proces ažuriranja doktora.\");\n      // Podaci za ažuriranje doktora u korisnici-doktori servisu\n      const doctorUpdatePayload = {\n        ime: updatedDoctor.ime,\n        prezime: updatedDoctor.prezime,\n        email: updatedDoctor.email,\n        telefon: updatedDoctor.telefon,\n        grad: updatedDoctor.grad,\n        specijalizacije: updatedDoctor.specijalizacije,\n        radnoVrijeme: updatedDoctor.radnoVrijeme,\n        iskustvo: updatedDoctor.iskustvo,\n        ocjena: updatedDoctor.ocjena\n      };\n      console.log(\"handleUpdateDoctor: Slanje doctorUpdatePayload-a korisnici-doktori servisu:\", doctorUpdatePayload);\n\n      // Ažuriranje detalja doktora u korisnici-doktori servisu (koristimo doktorID)\n      // Ovdje se koristi doktor.id (doktorID iz DTO-a)\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\n      console.log(\"handleUpdateDoctor: Doktor detalji ažurirani.\");\n\n      // Podaci za ažuriranje korisničkog naloga u Auth servisu\n      const userUpdatePayload = {\n        email: updatedDoctor.email,\n        fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\n        telefon: updatedDoctor.telefon\n      };\n      console.log(\"handleUpdateDoctor: Slanje userUpdatePayload-a Auth servisu:\", userUpdatePayload);\n\n      // Ažuriraj korisnički nalog u Auth servisu ako postoji userId\n      if (updatedDoctor.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\n        console.log(\"handleUpdateDoctor: Korisnički nalog ažuriran u Auth servisu.\");\n      } else {\n        console.warn(\"handleUpdateDoctor: Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchDoctors(); // Ponovo dohvati doktore nakon ažuriranja\n      setShowDoctorModal(false);\n      setEditingDoctor(null);\n      showNotification('Doktor uspješno ažuriran!', 'success');\n      console.log(\"handleUpdateDoctor: Proces ažuriranja doktora uspješno završen.\");\n    } catch (error) {\n      var _error$response6, _error$response7, _error$response7$data;\n      console.error(\"Greška prilikom ažuriranja doktora:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n      showNotification(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Greška prilikom ažuriranja doktora.', 'danger');\n    }\n  };\n\n  // CUSTOM CONFIRMATION MODAL STATE AND FUNCTIONS\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(() => () => {}); // Pohranjuje funkciju koja se poziva pri potvrdi\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\n  const [confirmTitle, setConfirmTitle] = useState(\"Potvrda\");\n\n  // Funkcija za prikaz prilagođenog modala za potvrdu\n  const showCustomConfirm = (message, action, title = \"Potvrda\") => {\n    setConfirmMessage(message);\n    setConfirmAction(() => action); // Koristi funkcionalno ažuriranje za pohranu akcije\n    setConfirmTitle(title);\n    setShowConfirmModal(true);\n  };\n\n  // Funkcija koja se poziva kada korisnik potvrdi akciju u modalu\n  const handleConfirmAction = () => {\n    confirmAction(); // Izvrši pohranjenu akciju\n    setShowConfirmModal(false);\n  };\n\n  // Funkcija za brisanje doktora (koristi custom confirm)\n  const handleDeleteDoctor = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.', async () => {\n      try {\n        console.log(\"handleDeleteDoctor: Počinjem proces brisanja doktora.\");\n        const doctorToDelete = doctors.find(doc => doc.id === id);\n        if (!doctorToDelete || !doctorToDelete.userId) {\n          showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\n          console.error(\"handleDeleteDoctor: Nije pronađen userId za brisanje doktora:\", doctorToDelete);\n          return;\n        }\n        console.log(\"handleDeleteDoctor: Brišem doktora sa ID:\", id, \"i userId:\", doctorToDelete.userId);\n\n        // Brisanje doktora iz korisnici-doktori servisa\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\n        console.log(\"handleDeleteDoctor: Doktor obrisan iz korisnici-doktori servisa.\");\n        // Brisanje korisnika iz Auth servisa\n        await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\n        console.log(\"handleDeleteDoctor: Korisnički nalog obrisan iz Auth servisa.\");\n        fetchDoctors(); // Ponovo dohvati doktore nakon brisanja\n        showNotification('Doktor uspješno obrisan!', 'success'); // Može biti 'success' ako je brisanje ok\n        console.log(\"handleDeleteDoctor: Proces brisanja doktora uspješno završen.\");\n      } catch (error) {\n        var _error$response8, _error$response9, _error$response9$data;\n        console.error(\"Greška prilikom brisanja doktora:\", ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n        showNotification(((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Greška prilikom brisanja doktora.', 'danger');\n      }\n    }, \"Potvrdi brisanje doktora\");\n  };\n\n  // Otvaranje modala za doktora (dodavanje/uređivanje)\n  const openDoctorModal = (doctor = null) => {\n    setEditingDoctor(doctor);\n    setShowDoctorModal(true);\n  };\n\n  // Filtriranje i paginacija doktora\n  const filteredDoctors = doctors.filter(doctor => doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase()) || doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()));\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\n\n  // Funkcija za dodavanje novog pacijenta\n  const handleAddPatient = async newPatient => {\n    try {\n      console.log(\"handleAddPatient: Počinjem proces dodavanja pacijenta.\");\n      // 1. Registracija korisnika u Auth servisu\n      const registerPayload = {\n        email: newPatient.email,\n        password: newPatient.password,\n        // Password se šalje ovdje\n        fullName: `${newPatient.ime} ${newPatient.prezime}`,\n        telefon: newPatient.telefon,\n        roles: [\"ROLE_PATIENT\"],\n        grad: null,\n        // Pacijentima grad nije obavezan\n        specijalizacije: null // Pacijenti nemaju specijalizacije\n      };\n      console.log(\"handleAddPatient: Slanje registerPayload-a Auth servisu:\", registerPayload);\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\n      const userId = authResponse.data.id; // Dohvat ID-a korisnika\n      console.log(\"handleAddPatient: Korisnik registrovan, userId:\", userId, \"Auth response:\", authResponse.data);\n\n      // KLJUČNA PROMJENA: Uklonjen redundantni axios.post poziv na korisnici-doktori servis.\n      // Očekujemo da UserRegisteredEvent, poslan od Auth servisa, kreira Pacijent entitet.\n      console.log(\"handleAddPatient: Preskačem slanje pacijent detalja na korisnici-doktori servis. Očekujem da UserRegisteredEvent to obradi.\");\n\n      // Zbog asinhronosti eventa, možda će biti minimalnog kašnjenja prije nego što se pacijent pojavi u tabeli.\n      // Bolje je osvježiti listu pacijenata nakon kratke pauze ili uzeti u obzir da je event uspješan.\n      // Za sada, samo osvježavamo odmah.\n      fetchPatients(); // Ponovo dohvati pacijente nakon dodavanja\n      setShowPatientModal(false);\n      showNotification('Novi pacijent uspješno registrovan!', 'success');\n      console.log(\"handleAddPatient: Proces dodavanja pacijenta uspješno završen (registracija i event obrada).\");\n    } catch (error) {\n      var _error$response0, _error$response1, _error$response1$data;\n      console.error(\"Greška prilikom dodavanja pacijenta:\", ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error.message);\n      // Prikazati poruku o grešci\n      showNotification(((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || 'Greška prilikom dodavanja pacijenta. Molimo provjerite konzolu za više detalja.', 'danger');\n    }\n  };\n\n  // Funkcija za ažuriranje postojećeg pacijenta\n  const handleUpdatePatient = async updatedPatient => {\n    try {\n      console.log(\"handleUpdatePatient: Počinjem proces ažuriranja pacijenta.\");\n      const patientUpdatePayload = {\n        ime: updatedPatient.ime,\n        prezime: updatedPatient.prezime,\n        email: updatedPatient.email,\n        telefon: updatedPatient.telefon\n      };\n      console.log(\"handleUpdatePatient: Slanje patientUpdatePayload-a korisnici-doktori servisu:\", patientUpdatePayload);\n\n      // Ažuriranje detalja pacijenta u korisnici-doktori servisu\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\n      console.log(\"handleUpdatePatient: Pacijent detalji ažurirani.\");\n\n      // Ažuriranje korisničkog naloga u Auth servisu\n      const userUpdatePayload = {\n        email: updatedPatient.email,\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\n        telefon: updatedPatient.telefon\n      };\n      console.log(\"handleUpdatePatient: Slanje userUpdatePayload-a Auth servisu:\", userUpdatePayload);\n      if (updatedPatient.userId) {\n        await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\n        console.log(\"handleUpdatePatient: Korisnički nalog ažuriran u Auth servisu.\");\n      } else {\n        console.warn(\"handleUpdatePatient: Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\n      }\n      fetchPatients();\n      setShowPatientModal(false);\n      setEditingPatient(null);\n      showNotification('Pacijent uspješno ažuriran!', 'success');\n      console.log(\"handleUpdatePatient: Proces ažuriranja pacijenta uspješno završen.\");\n    } catch (error) {\n      var _error$response10, _error$response11, _error$response11$dat;\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message);\n      showNotification(((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : (_error$response11$dat = _error$response11.data) === null || _error$response11$dat === void 0 ? void 0 : _error$response11$dat.message) || 'Greška prilikom ažuriranja pacijenta. Molimo provjerite konzolu za više detalja.', 'danger');\n    }\n  };\n\n  // Funkcija za brisanje pacijenta\n  const handleDeletePatient = async id => {\n    showCustomConfirm('Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.', async () => {\n      try {\n        console.log(\"handleDeletePatient: Počinjem proces brisanja pacijenta.\");\n        const patientToDelete = patients.find(pat => pat.id === id);\n        if (!patientToDelete || !patientToDelete.userId) {\n          showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\n          console.error(\"handleDeletePatient: Nije pronađen userId za brisanje pacijenta:\", patientToDelete);\n          return;\n        }\n        console.log(\"handleDeletePatient: Brišem pacijenta sa ID:\", id, \"i userId:\", patientToDelete.userId);\n        await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`, authHeaders);\n        console.log(\"handleDeletePatient: Pacijent obrisan iz korisnici-doktori servisa.\");\n        await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\n        console.log(\"handleDeletePatient: Korisnički nalog obrisan iz Auth servisa.\");\n        fetchPatients();\n        showNotification('Pacijent uspješno obrisan!', 'success'); // Status uspjeha\n        console.log(\"handleDeletePatient: Proces brisanja pacijenta uspješno završen.\");\n      } catch (error) {\n        var _error$response12, _error$response13, _error$response13$dat;\n        console.error(\"Greška prilikom brisanja pacijenta:\", ((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : _error$response12.data) || error.message);\n        showNotification(((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : (_error$response13$dat = _error$response13.data) === null || _error$response13$dat === void 0 ? void 0 : _error$response13$dat.message) || 'Greška prilikom brisanja pacijenta. Molimo provjerite konzolu za više detalja.', 'danger');\n      }\n    }, \"Potvrdi brisanje pacijenta\");\n  };\n\n  // Otvaranje modala za pacijenta\n  const openPatientModal = (patient = null) => {\n    setEditingPatient(patient);\n    setShowPatientModal(true);\n  };\n\n  // Filtriranje i paginacija pacijenata\n  const filteredPatients = patients.filter(patient => patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) || patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()));\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\n\n  // Funkcija za ažuriranje statusa termina\n  const handleUpdateAppointmentStatus = async (id, newStatus) => {\n    try {\n      console.log(\"handleUpdateAppointmentStatus: Ažuriram status termina za ID:\", id, \"na status:\", newStatus);\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}/status`, {\n        status: newStatus\n      }, authHeaders);\n      console.log(\"handleUpdateAppointmentStatus: Status termina ažuriran.\");\n      fetchAppointments();\n      showNotification(`Status termina ažuriran na ${newStatus}!`, 'info');\n    } catch (error) {\n      var _error$response14, _error$response15, _error$response15$dat;\n      console.error(\"Greška prilikom ažuriranja statusa termina:\", ((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : _error$response14.data) || error.message);\n      showNotification(((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : (_error$response15$dat = _error$response15.data) === null || _error$response15$dat === void 0 ? void 0 : _error$response15$dat.message) || 'Greška prilikom ažuriranja statusa termina. Molimo provjerite konzolu za više detalja.', 'danger');\n    }\n  };\n\n  // Paginacija termina\n  const indexOfLastAppointment = appointmentsCurrentPage * itemsPerPage;\n  const indexOfFirstAppointment = indexOfLastAppointment - itemsPerPage;\n  const currentAppointments = appointments.slice(indexOfFirstAppointment, indexOfLastAppointment);\n  const totalAppointmentPages = Math.ceil(appointments.length / itemsPerPage);\n\n  // Komponenta za modal za unos/uređivanje podataka (Doktor/Pacijent)\n  const DataModal = ({\n    show,\n    onClose,\n    data,\n    onSave,\n    fields,\n    title,\n    idPrefix\n  }) => {\n    _s();\n    // Interno stanje forme, inicijalizirano sa proslijeđenim podacima ili praznim objektom\n    const [formData, setFormData] = useState(data || {});\n\n    // Ažuriraj formu kada se promijene podaci (npr. kada se otvori modal za uređivanje drugog doktora)\n    useEffect(() => {\n      console.log(`DataModal useEffect for ${idPrefix}: data changed. New data:`, data);\n      if (data) {\n        const updatedData = {\n          ...data\n        };\n        // Normalizacija podataka za prikaz u formi: 'N/A' pretvaramo u null/prazno za input polja\n        if (updatedData.radnoVrijeme === 'N/A') {\n          updatedData.radnoVrijeme = ''; // Prazan string za input\n        }\n        // Ako je iskustvo/ocjena \"N/A\" ili null/undefined, postavi na prazan string za input\n        if (updatedData.iskustvo !== undefined && updatedData.iskustvo !== null && typeof updatedData.iskustvo === 'string' && updatedData.iskustvo.toLowerCase() === 'n/a') {\n          updatedData.iskustvo = '';\n        } else if (updatedData.iskustvo === 0 && (data.iskustvo === null || data.iskustvo === undefined)) {\n          updatedData.iskustvo = ''; // Prikaz 0 kao prazno ako je originalno N/A ili null\n        }\n        if (updatedData.ocjena !== undefined && updatedData.ocjena !== null && typeof updatedData.ocjena === 'string' && updatedData.ocjena.toLowerCase() === 'n/a') {\n          updatedData.ocjena = '';\n        } else if (updatedData.ocjena === 0.0 && (data.ocjena === null || data.ocjena === undefined)) {\n          updatedData.ocjena = '';\n        }\n        if (updatedData.email === 'N/A' || updatedData.email === null) {\n          updatedData.email = '';\n        }\n        // Osiguraj da su specijalizacije uvijek niz, čak i ako je prazan\n        if (!Array.isArray(updatedData.specijalizacije) || updatedData.specijalizacije.length === 0) {\n          updatedData.specijalizacije = [];\n        }\n        console.log(`DataModal useEffect for ${idPrefix}: Setting formData to (updatedData):`, updatedData);\n        setFormData(updatedData);\n      } else {\n        // Inicijalizacija forme za novi unos (svi podaci prazni ili defaultni)\n        const initialData = {};\n        fields.forEach(field => {\n          if (field.name === 'specijalizacije') {\n            initialData[field.name] = [];\n          } else if (field.type === 'number') {\n            initialData[field.name] = null; // Koristi null za brojeve ako nema vrijednosti\n          } else {\n            initialData[field.name] = '';\n          }\n        });\n        console.log(`DataModal useEffect for ${idPrefix}: Setting formData to (initialData):`, initialData);\n        setFormData(initialData);\n      }\n    }, [data, fields]); // Zavisnosti za useEffect\n\n    // Rukovanje promjenama u input poljima forme\n    const handleChange = e => {\n      const {\n        name,\n        value,\n        type\n      } = e.target;\n      console.log(`handleChange for ${idPrefix}: name=${name}, value=${value}, type=${type}`);\n      setFormData(prev => {\n        let newValue = value;\n\n        // Posebna obrada za 'specijalizacije' (kao select sa jednim izborom)\n        if (name === 'specijalizacije') {\n          newValue = [value]; // Spremi kao niz stringova\n        } else if (type === 'number') {\n          // Konvertuj u broj, ako je prazan string ili nevalidan broj, postavi na null\n          newValue = value === '' ? null : Number(value);\n          if (isNaN(newValue)) {\n            newValue = null;\n          }\n        } else if (type === 'email' && value === '') {\n          newValue = value; // Omogući prazan email ako je dozvoljeno\n        }\n        console.log(`handleChange for ${idPrefix}: Updated prev[${name}]=${newValue}`);\n        return {\n          ...prev,\n          [name]: newValue\n        };\n      });\n    };\n\n    // Rukovanje slanjem forme\n    const handleSubmit = e => {\n      e.preventDefault();\n      const finalFormData = {\n        ...formData\n      };\n      // Još jedna provjera da su specijalizacije pravilno formatirane kao niz\n      if (typeof finalFormData.specijalizacije === 'string') {\n        finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\n      }\n      console.log(`DataModal handleSubmit for ${idPrefix}: Final form data being sent to onSave:`, finalFormData);\n      onSave(finalFormData); // Pozovi funkciju za spašavanje\n    };\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: onClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: fields.map(field => /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: `${idPrefix}-${field.name}`,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 17\n            }, this), field.type === 'select' ? /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: field.name,\n              value: Array.isArray(formData[field.name]) && formData[field.name].length > 0 ? formData[field.name][0] // Uzmi prvi element niza za prikaz u selectu\n              : formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: [\"Select \", field.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 21\n              }, this), field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 19\n            }, this) : field.type === 'textarea' ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: field.name,\n              value: formData[field.name] || '',\n              onChange: handleChange,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: field.type || 'text',\n              name: field.name\n              // Logika za prikaz 'null', '0' ili 'N/A' brojeva/emaila kao prazan string u inputu\n              ,\n              value: formData[field.name] === null || formData[field.name] === 'N/A' || field.type === 'number' && (formData[field.name] === 0 || formData[field.name] === 'N/A') && (data === null || data[field.name] === null || data[field.name] === undefined) ? '' // Prikazuje prazan string za unos\n              : formData[field.name],\n              onChange: handleChange,\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 19\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Komponenta za paginaciju\n  _s(DataModal, \"JPolC2XS0g7tYnXkmRHL767uIww=\");\n  const Pagination = ({\n    itemsPerPage,\n    totalItems,\n    currentPage,\n    paginate\n  }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center mt-4\",\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === number ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            className: \"page-link\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 15\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Funkcija za renderovanje sadržaja na osnovu aktivnog taba\n  const renderContent = () => {\n    // Definisanje polja za forme (doktori i pacijenti)\n    // Ovi objekti se proslijeđuju DataModal komponenti\n    const addDoctorFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'password',\n      label: 'Password',\n      type: 'password',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }, {\n      name: 'grad',\n      label: 'City',\n      type: 'select',\n      required: true,\n      options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n    }, {\n      name: 'specijalizacije',\n      label: 'Specialty',\n      type: 'select',\n      required: true,\n      options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n    }, {\n      name: 'radnoVrijeme',\n      label: 'Work Hours',\n      type: 'text',\n      required: false\n    }, {\n      name: 'iskustvo',\n      label: 'Experience (years)',\n      type: 'number',\n      required: false\n    }, {\n      name: 'ocjena',\n      label: 'Rating (0.0-5.0)',\n      type: 'number',\n      required: false\n    }];\n    const editDoctorFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }, {\n      name: 'grad',\n      label: 'City',\n      type: 'select',\n      required: true,\n      options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n    }, {\n      name: 'specijalizacije',\n      label: 'Specialty',\n      type: 'select',\n      required: true,\n      options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n    }, {\n      name: 'radnoVrijeme',\n      label: 'Work Hours',\n      type: 'text',\n      required: false\n    }, {\n      name: 'iskustvo',\n      label: 'Experience (years)',\n      type: 'number',\n      required: false\n    }, {\n      name: 'ocjena',\n      label: 'Rating (0.0-5.0)',\n      type: 'number',\n      required: false\n    }];\n\n    // Definisanje polja za dodavanje/uređivanje pacijenata\n    const addPatientFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'password',\n      label: 'Password',\n      type: 'password',\n      required: true\n    },\n    // Polje za password\n    {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }];\n    const editPatientFields = [{\n      name: 'ime',\n      label: 'First Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'prezime',\n      label: 'Last Name',\n      type: 'text',\n      required: true\n    }, {\n      name: 'email',\n      label: 'Email',\n      type: 'email',\n      required: true\n    }, {\n      name: 'telefon',\n      label: 'Phone',\n      type: 'text',\n      required: false\n    }];\n    switch (activeTab) {\n      case 'overview':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Dashboard Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-primary mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Doctors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: doctors.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 744,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-success mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Total Patients\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 750,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: patients.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 752,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card text-white bg-warning mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Pending Appointments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title display-4\",\n                    children: appointments.filter(app => app.status === 'Pending').length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 760,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Quick Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => openDoctorModal(),\n                children: \"Add New Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-success\",\n                onClick: () => openPatientModal(),\n                children: \"Add New Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-info\",\n                onClick: () => setActiveTab('appointments'),\n                children: \"View Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this);\n      case 'doctors':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Doctors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openDoctorModal(),\n              children: \"Add New Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search doctors...\",\n              value: doctorSearchTerm,\n              onChange: e => setDoctorSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 793,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 794,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Specialty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 795,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"City\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 796,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 797,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 798,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Work Hours\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 799,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 800,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 801,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 792,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentDoctors.length > 0 ? currentDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 808,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 809,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.specialty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.city\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 811,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 812,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.telefon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 813,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.radnoVrijeme\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: doctor.ocjena\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openDoctorModal(doctor),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 817,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeleteDoctor(doctor.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 818,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 816,\n                    columnNumber: 25\n                  }, this)]\n                }, doctor.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 807,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"9\",\n                    className: \"text-center\",\n                    children: \"No doctors found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 824,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredDoctors.length,\n            currentPage: doctorsCurrentPage,\n            paginate: setDoctorsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this);\n      case 'patients':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => openPatientModal(),\n              children: \"Add New Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 843,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control w-25\",\n              placeholder: \"Search patients...\",\n              value: patientSearchTerm,\n              onChange: e => setPatientSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 856,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 857,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 858,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 859,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 860,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 855,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentPatients.length > 0 ? currentPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 867,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 868,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 869,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 870,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-info btn-sm me-2\",\n                      onClick: () => openPatientModal(patient),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 872,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => handleDeletePatient(patient.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 873,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 871,\n                    columnNumber: 25\n                  }, this)]\n                }, patient.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 866,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    className: \"text-center\",\n                    children: \"No patients found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 879,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 878,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: filteredPatients.length,\n            currentPage: patientsCurrentPage,\n            paginate: setPatientsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 11\n        }, this);\n      case 'appointments':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Manage Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 901,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Patient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 902,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 903,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 904,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 905,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 906,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 907,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 900,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: currentAppointments.length > 0 ? currentAppointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 914,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.patientName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 915,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.doctorName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 916,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 917,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: appointment.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 918,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select\",\n                      value: appointment.status,\n                      onChange: e => handleUpdateAppointmentStatus(appointment.id, e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Pending\",\n                        children: \"Pending\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 925,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Confirmed\",\n                        children: \"Confirmed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 926,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Completed\",\n                        children: \"Completed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 927,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Cancelled\",\n                        children: \"Cancelled\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 928,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 920,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 919,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-danger btn-sm\",\n                      onClick: () => showNotification('Brisanje termina nije implementirano.', 'warning'),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 932,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 931,\n                    columnNumber: 25\n                  }, this)]\n                }, appointment.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 913,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"7\",\n                    className: \"text-center\",\n                    children: \"No appointments found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 938,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 937,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsPerPage: itemsPerPage,\n            totalItems: appointments.length,\n            currentPage: appointmentsCurrentPage,\n            paginate: setAppointmentsCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a tab to view content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Definisanje polja za dodavanje/uređivanje doktora\n  const addDoctorFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Password',\n    type: 'password',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }, {\n    name: 'grad',\n    label: 'City',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specialty',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Work Hours',\n    type: 'text',\n    required: false\n  }, {\n    name: 'iskustvo',\n    label: 'Experience (years)',\n    type: 'number',\n    required: false\n  }, {\n    name: 'ocjena',\n    label: 'Rating (0.0-5.0)',\n    type: 'number',\n    required: false\n  }];\n  const editDoctorFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }, {\n    name: 'grad',\n    label: 'City',\n    type: 'select',\n    required: true,\n    options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać']\n  }, {\n    name: 'specijalizacije',\n    label: 'Specialty',\n    type: 'select',\n    required: true,\n    options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar']\n  }, {\n    name: 'radnoVrijeme',\n    label: 'Work Hours',\n    type: 'text',\n    required: false\n  }, {\n    name: 'iskustvo',\n    label: 'Experience (years)',\n    type: 'number',\n    required: false\n  }, {\n    name: 'ocjena',\n    label: 'Rating (0.0-5.0)',\n    type: 'number',\n    required: false\n  }];\n\n  // Definisanje polja za dodavanje/uređivanje pacijenata\n  const addPatientFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Password',\n    type: 'password',\n    required: true\n  },\n  // Polje za password\n  {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }];\n  const editPatientFields = [{\n    name: 'ime',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'prezime',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'telefon',\n    label: 'Phone',\n    type: 'text',\n    required: false\n  }];\n\n  // Prikazuje spinner za učitavanje ako je `loadingInitial` true\n  if (loadingInitial) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"U\\u010Ditavanje administratorskog panela...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1002,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Ako je `loadingInitial` false, a `token` je null (što znači da AuthContext kaže da nismo ulogovani)\n  // i provjera autentifikacije je završena, prikaži poruku o odbijenom pristupu.\n  if (!loadingInitial && !token && isAuthChecked) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-danger\",\n          children: \"Pristup odbijen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead\",\n          children: \"Niste autorizovani za pristup ovoj stranici. Molimo prijavite se kao administrator.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alertType,\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      className: \"position-fixed top-0 start-50 translate-middle-x mt-3\",\n      style: {\n        zIndex: 1050\n      },\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showConfirmModal,\n      onHide: () => setShowConfirmModal(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: confirmTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: confirmMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowConfirmModal(false),\n          children: \"Poni\\u0161ti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleConfirmAction,\n          children: \"Potvrdi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\",\n        style: {\n          minHeight: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky pt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'overview' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('overview'),\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'doctors' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('doctors'),\n                children: \"Doctors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1063,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1062,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'patients' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('patients'),\n                children: \"Patients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1068,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `nav-link ${activeTab === 'appointments' ? 'active' : ''}`,\n                href: \"#\",\n                onClick: () => setActiveTab('appointments'),\n                children: \"Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1073,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1072,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showDoctorModal,\n      onClose: () => setShowDoctorModal(false),\n      data: editingDoctor,\n      onSave: editingDoctor ? handleUpdateDoctor : handleAddDoctor,\n      title: editingDoctor ? 'Edit Doctor' : 'Add New Doctor',\n      idPrefix: \"doctor\",\n      fields: editingDoctor ? editDoctorFields : addDoctorFields\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1088,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {\n      show: showPatientModal,\n      onClose: () => setShowPatientModal(false),\n      data: editingPatient,\n      onSave: editingPatient ? handleUpdatePatient : handleAddPatient,\n      title: editingPatient ? 'Edit Patient' : 'Add New Patient',\n      idPrefix: \"patient\",\n      fields: editingPatient ? editPatientFields : addPatientFields\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1099,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1026,\n    columnNumber: 5\n  }, this);\n}\n_s2(AdminDashboard, \"mO0GypFgjK+4lPI7s5EwyGoi7RM=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","Modal","Button","Form","Alert","jsxDEV","_jsxDEV","GATEWAY_BASE_URL","KORISNICI_DOKTORI_API_PREFIX","TERMINI_PREGLEDI_API_PREFIX","AUTH_API_PREFIX","AdminDashboard","_s2","_s","$RefreshSig$","token","loadingInitial","setLoadingInitial","isAuthChecked","setIsAuthChecked","authHeaders","headers","activeTab","setActiveTab","savedTab","localStorage","getItem","doctors","setDoctors","patients","setPatients","appointments","setAppointments","showDoctorModal","setShowDoctorModal","editingDoctor","setEditingDoctor","showPatientModal","setShowPatientModal","editingPatient","setEditingPatient","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","doctorSearchTerm","setDoctorSearchTerm","patientSearchTerm","setPatientSearchTerm","doctorsCurrentPage","setDoctorsCurrentPage","patientsCurrentPage","setPatientsCurrentPage","appointmentsCurrentPage","setAppointmentsCurrentPage","itemsPerPage","showNotification","message","type","setTimeout","fetchDoctors","response","get","transformedDoctors","data","map","doc","id","doktorID","userId","name","ime","prezime","specialty","Array","isArray","specijalizacije","length","join","city","grad","email","telefon","radnoVrijeme","iskustvo","undefined","ocjena","error","_error$response","console","fetchPatients","transformedPatients","pat","pacijentID","phone","_error$response2","fetchAppointments","transformedAppointments","app","pregledID","patientName","pacijentIme","doctorName","doktorIme","date","datumPregleda","time","vrijemePregleda","status","_error$response3","log","initializeDashboard","Promise","all","warn","setItem","handleAddDoctor","newDoctorData","registerPayload","password","fullName","roles","authResponse","post","doctorDetailsPayload","put","_error$response4","_error$response5","_error$response5$data","handleUpdateDoctor","updatedDoctor","doctorUpdatePayload","userUpdatePayload","_error$response6","_error$response7","_error$response7$data","showConfirmModal","setShowConfirmModal","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","confirmTitle","setConfirmTitle","showCustomConfirm","action","title","handleConfirmAction","handleDeleteDoctor","doctorToDelete","find","delete","_error$response8","_error$response9","_error$response9$data","openDoctorModal","doctor","filteredDoctors","filter","toLowerCase","includes","indexOfLastDoctor","indexOfFirstDoctor","currentDoctors","slice","totalDoctorPages","Math","ceil","handleAddPatient","newPatient","_error$response0","_error$response1","_error$response1$data","handleUpdatePatient","updatedPatient","patientUpdatePayload","_error$response10","_error$response11","_error$response11$dat","handleDeletePatient","patientToDelete","_error$response12","_error$response13","_error$response13$dat","openPatientModal","patient","filteredPatients","indexOfLastPatient","indexOfFirstPatient","currentPatients","totalPatientPages","handleUpdateAppointmentStatus","newStatus","_error$response14","_error$response15","_error$response15$dat","indexOfLastAppointment","indexOfFirstAppointment","currentAppointments","totalAppointmentPages","DataModal","show","onClose","onSave","fields","idPrefix","formData","setFormData","updatedData","initialData","forEach","field","handleChange","e","value","target","prev","newValue","Number","isNaN","handleSubmit","preventDefault","finalFormData","onHide","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Body","Group","className","controlId","Label","label","Select","onChange","required","options","option","Control","as","rows","Footer","variant","onClick","Pagination","totalItems","currentPage","paginate","pageNumbers","i","push","number","renderContent","addDoctorFields","editDoctorFields","addPatientFields","editPatientFields","placeholder","colSpan","appointment","style","minHeight","role","dismissible","zIndex","href","_c","$RefreshReg$"],"sources":["C:/Users/Adna/Desktop/frontend - Copy/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\n\r\nconst GATEWAY_BASE_URL = 'http://localhost:8081';\r\n\r\n// Ovi prefiksi sada sadrže gateway URL i context-path servisa.\r\n// Pretpostavljamo da backend servisi interno imaju /api/ prefiks za svoje kontrolere.\r\nconst KORISNICI_DOKTORI_API_PREFIX = `${GATEWAY_BASE_URL}/api/korisnici-doktori`;\r\nconst TERMINI_PREGLEDI_API_PREFIX = `${GATEWAY_BASE_URL}/api/termini-pregledi`;\r\nconst AUTH_API_PREFIX = `${GATEWAY_BASE_URL}/auth`;\r\n\r\nfunction AdminDashboard() {\r\n  const { token } = useAuth();\r\n\r\n  // Stanje za praćenje početnog učitavanja panela i autentifikacije\r\n  const [loadingInitial, setLoadingInitial] = useState(true);\r\n  const [isAuthChecked, setIsAuthChecked] = useState(false);\r\n\r\n  // Headeri za autentifikaciju, koristeći token iz AuthContext-a\r\n  const authHeaders = {\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  };\r\n\r\n  // Aktivni tab, sa čuvanjem u lokalnom skladištu\r\n  const [activeTab, setActiveTab] = useState(() => {\r\n    const savedTab = localStorage.getItem('adminActiveTab');\r\n    return savedTab || 'overview';\r\n  });\r\n\r\n  // Stanja za podatke iz API-ja\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  // Stanja za modale i forme\r\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\r\n  const [editingDoctor, setEditingDoctor] = useState(null); // Čuva podatke doktora za uređivanje\r\n  const [showPatientModal, setShowPatientModal] = useState(false);\r\n  const [editingPatient, setEditingPatient] = useState(null);\r\n\r\n  // Stanja za notifikacije (Alert)\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [alertType, setAlertType] = useState('success');\r\n\r\n  // Stanja za pretragu\r\n  const [doctorSearchTerm, setDoctorSearchTerm] = useState('');\r\n  const [patientSearchTerm, setPatientSearchTerm] = useState('');\r\n\r\n  // Stanja za paginaciju\r\n  const [doctorsCurrentPage, setDoctorsCurrentPage] = useState(1);\r\n  const [patientsCurrentPage, setPatientsCurrentPage] = useState(1);\r\n  const [appointmentsCurrentPage, setAppointmentsCurrentPage] = useState(1);\r\n  const itemsPerPage = 5; // Broj stavki po stranici\r\n\r\n  // Funkcija za prikaz notifikacija\r\n  const showNotification = (message, type = 'success') => {\r\n    setAlertMessage(message);\r\n    setAlertType(type);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n      setAlertMessage('');\r\n    }, 3000); // Notifikacija nestaje nakon 3 sekunde\r\n  };\r\n\r\n  // Funkcije za dohvat podataka sa backend-a\r\n // Funkcije za dohvat podataka sa backend-a\r\n   const fetchDoctors = async () => {\r\n     try {\r\n       // Pravi URL poziv: http://localhost:8081/api/korisnici-doktori/api/doktori\r\n       const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori`, authHeaders);\r\n       const transformedDoctors = response.data.map(doc => ({\r\n         id: doc.doktorID,\r\n         userId: doc.userId, // Važno za povezivanje sa Auth servisom\r\n         name: `${doc.ime} ${doc.prezime}`,\r\n         ime: doc.ime,\r\n         prezime: doc.prezime,\r\n         specialty: Array.isArray(doc.specijalizacije) && doc.specijalizacije.length > 0\r\n                    ? doc.specijalizacije.join(', ')\r\n                    : 'N/A',\r\n         specijalizacije: doc.specijalizacije, // Ovo mora biti niz stringova\r\n         city: doc.grad || 'N/A',\r\n         grad: doc.grad,\r\n         email: doc.email || 'N/A',\r\n         telefon: doc.telefon || 'N/A',\r\n         radnoVrijeme: doc.radnoVrijeme || 'N/A',\r\n         iskustvo: doc.iskustvo !== null && doc.iskustvo !== undefined ? doc.iskustvo : 'N/A',\r\n         ocjena: doc.ocjena !== null && doc.ocjena !== undefined ? doc.ocjena : 'N/A',\r\n       }));\r\n       setDoctors(transformedDoctors);\r\n     } catch (error) {\r\n       console.error(\"Greška prilikom dohvaćanja doktora:\", error.response?.data || error.message);\r\n       showNotification(\"Greška prilikom dohvaćanja doktora sa servera.\", \"danger\");\r\n     }\r\n   };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      // Pravi URL poziv: http://localhost:8081/api/korisnici-doktori/api/pacijenti\r\n      const response = await axios.get(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti`, authHeaders);\r\n      const transformedPatients = response.data.map(pat => ({\r\n        id: pat.pacijentID,\r\n        userId: pat.userId, // Važno za povezivanje sa Auth servisom\r\n        name: `${pat.ime} ${pat.prezime}`,\r\n        ime: pat.ime,\r\n        prezime: pat.prezime,\r\n        email: pat.email || 'N/A',\r\n        phone: pat.telefon || 'N/A',\r\n        telefon: pat.telefon,\r\n      }));\r\n      setPatients(transformedPatients);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja pacijenata:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja pacijenata sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  const fetchAppointments = async () => {\r\n    try {\r\n      // Pravi URL poziv: http://localhost:8081/api/termini-pregledi/api/pregledi\r\n      const response = await axios.get(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi`, authHeaders);\r\n      const transformedAppointments = response.data.map(app => ({\r\n        id: app.pregledID, // Koristimo pregledID umjesto terminID ako je to stvarni ID\r\n        patientName: app.pacijentIme || 'N/A',\r\n        doctorName: app.doktorIme || 'N/A',\r\n        date: app.datumPregleda, // Prilagodite prema stvarnom nazivu polja u backend-u\r\n        time: app.vrijemePregleda, // Prilagodite prema stvarnom nazivu polja u backend-u\r\n        status: app.status,\r\n      }));\r\n      setAppointments(transformedAppointments);\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dohvaćanja termina:\", error.response?.data || error.message);\r\n      showNotification(\"Greška prilikom dohvaćanja termina sa servera.\", \"danger\");\r\n    }\r\n  };\r\n\r\n  // Glavni useEffect hook za provjeru autentifikacije i dohvat podataka\r\n  useEffect(() => {\r\n    console.log(\"AdminDashboard useEffect - Trenutni token:\", token);\r\n    console.log(\"AdminDashboard useEffect - isAuthChecked:\", isAuthChecked);\r\n    console.log(\"AdminDashboard useEffect - loadingInitial (prije logike):\", loadingInitial);\r\n\r\n    if (token !== undefined && !isAuthChecked) {\r\n      setIsAuthChecked(true);\r\n      console.log(\"AdminDashboard useEffect - Provjera autentifikacije završena, postavljen isAuthChecked na true.\");\r\n    }\r\n\r\n    const initializeDashboard = async () => {\r\n      if (isAuthChecked) {\r\n        if (token) {\r\n          try {\r\n            await Promise.all([\r\n              fetchDoctors(),\r\n              fetchPatients(),\r\n              fetchAppointments()\r\n            ]);\r\n            console.log(\"AdminDashboard useEffect - Podaci uspješno dohvaćeni.\");\r\n          } catch (error) {\r\n            console.error(\"Greška prilikom inicijalnog dohvaćanja podataka:\", error);\r\n            showNotification(\"Greška prilikom učitavanja početnih podataka.\", \"danger\");\r\n          } finally {\r\n            setLoadingInitial(false);\r\n            console.log(\"AdminDashboard useEffect - Postavljen loadingInitial na false nakon dohvaćanja podataka/greške.\");\r\n          }\r\n        } else {\r\n          setLoadingInitial(false);\r\n          console.warn(\"Provjera autentifikacije završena, ali token nije dostupan. Korisnik nije ulogovan/autorizovan.\");\r\n        }\r\n      } else {\r\n        console.log(\"AdminDashboard useEffect - Provjera autentifikacije još nije završena, loadingInitial ostaje true.\");\r\n      }\r\n    };\r\n\r\n    initializeDashboard();\r\n  }, [token, isAuthChecked]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('adminActiveTab', activeTab);\r\n  }, [activeTab]);\r\n\r\n  // Funkcija za dodavanje novog doktora\r\n  const handleAddDoctor = async (newDoctorData) => {\r\n    try {\r\n      console.log(\"handleAddDoctor: Počinjem proces dodavanja doktora.\");\r\n      // 1. Registracija korisnika u Auth servisu sa osnovnim podacima\r\n      const registerPayload = {\r\n        email: newDoctorData.email,\r\n        password: newDoctorData.password,\r\n        fullName: `${newDoctorData.ime} ${newDoctorData.prezime}`,\r\n        telefon: newDoctorData.telefon,\r\n        roles: [\"ROLE_DOKTOR\"],\r\n        grad: newDoctorData.grad,\r\n        specijalizacije: newDoctorData.specijalizacije,\r\n      };\r\n      console.log(\"handleAddDoctor: Slanje registerPayload-a Auth servisu:\", registerPayload);\r\n\r\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n      const userId = authResponse.data.id; // Dohvat ID-a korisnika iz Auth servisa\r\n      console.log(\"handleAddDoctor: Korisnik registrovan, userId:\", userId, \"Auth response:\", authResponse.data);\r\n\r\n      // 2. Slanje kompletnih detalja doktora servisu korisnici-doktori na NOVI ENDPOINT\r\n      const doctorDetailsPayload = {\r\n        userId: userId, // Povezivanje sa korisničkim nalogom\r\n        ime: newDoctorData.ime,\r\n        prezime: newDoctorData.prezime,\r\n        email: newDoctorData.email,\r\n        telefon: newDoctorData.telefon,\r\n        grad: newDoctorData.grad,\r\n        specijalizacije: newDoctorData.specijalizacije, // Može biti niz stringova\r\n        radnoVrijeme: newDoctorData.radnoVrijeme,\r\n        iskustvo: newDoctorData.iskustvo,\r\n        ocjena: newDoctorData.ocjena,\r\n      };\r\n      console.log(\"handleAddDoctor: Slanje doctorDetailsPayload-a korisnici-doktori servisu (koristim PUT na /user-details):\", doctorDetailsPayload);\r\n\r\n      // Poziv na korisnici-doktori servis za spašavanje detalja na NOVI ENDPOINT\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/user-details/${userId}`, doctorDetailsPayload, authHeaders);\r\n      console.log(\"handleAddDoctor: Doktor detalji sačuvani.\");\r\n\r\n\r\n      fetchDoctors(); // Ponovo dohvati doktore da bi se prikazale promjene\r\n      setShowDoctorModal(false);\r\n      showNotification('Novi doktor uspješno registrovan i detalji sačuvani!', 'success');\r\n      console.log(\"handleAddDoctor: Proces dodavanja doktora uspješno završen.\");\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja doktora:\", error.response?.data || error.message);\r\n      // Prikazati poruku o grešci samo ako je stvarna greška\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja doktora. Detalji u konzoli.', 'danger');\r\n    }\r\n  };\r\n\r\n  // Funkcija za ažuriranje postojećeg doktora\r\n  const handleUpdateDoctor = async (updatedDoctor) => {\r\n    try {\r\n      console.log(\"handleUpdateDoctor: Počinjem proces ažuriranja doktora.\");\r\n      // Podaci za ažuriranje doktora u korisnici-doktori servisu\r\n      const doctorUpdatePayload = {\r\n        ime: updatedDoctor.ime,\r\n        prezime: updatedDoctor.prezime,\r\n        email: updatedDoctor.email,\r\n        telefon: updatedDoctor.telefon,\r\n        grad: updatedDoctor.grad,\r\n        specijalizacije: updatedDoctor.specijalizacije,\r\n        radnoVrijeme: updatedDoctor.radnoVrijeme,\r\n        iskustvo: updatedDoctor.iskustvo,\r\n        ocjena: updatedDoctor.ocjena,\r\n      };\r\n      console.log(\"handleUpdateDoctor: Slanje doctorUpdatePayload-a korisnici-doktori servisu:\", doctorUpdatePayload);\r\n\r\n      // Ažuriranje detalja doktora u korisnici-doktori servisu (koristimo doktorID)\r\n      // Ovdje se koristi doktor.id (doktorID iz DTO-a)\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${updatedDoctor.id}`, doctorUpdatePayload, authHeaders);\r\n      console.log(\"handleUpdateDoctor: Doktor detalji ažurirani.\");\r\n\r\n      // Podaci za ažuriranje korisničkog naloga u Auth servisu\r\n      const userUpdatePayload = {\r\n        email: updatedDoctor.email,\r\n        fullName: `${updatedDoctor.ime} ${updatedDoctor.prezime}`,\r\n        telefon: updatedDoctor.telefon,\r\n      };\r\n      console.log(\"handleUpdateDoctor: Slanje userUpdatePayload-a Auth servisu:\", userUpdatePayload);\r\n\r\n      // Ažuriraj korisnički nalog u Auth servisu ako postoji userId\r\n      if (updatedDoctor.userId) {\r\n          await axios.put(`${AUTH_API_PREFIX}/users/${updatedDoctor.userId}`, userUpdatePayload, authHeaders);\r\n          console.log(\"handleUpdateDoctor: Korisnički nalog ažuriran u Auth servisu.\");\r\n      } else {\r\n          console.warn(\"handleUpdateDoctor: Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n      }\r\n\r\n      fetchDoctors(); // Ponovo dohvati doktore nakon ažuriranja\r\n      setShowDoctorModal(false);\r\n      setEditingDoctor(null);\r\n      showNotification('Doktor uspješno ažuriran!', 'success');\r\n      console.log(\"handleUpdateDoctor: Proces ažuriranja doktora uspješno završen.\");\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja doktora:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja doktora.', 'danger');\r\n    }\r\n  };\r\n\r\n  // CUSTOM CONFIRMATION MODAL STATE AND FUNCTIONS\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [confirmAction, setConfirmAction] = useState(() => () => {}); // Pohranjuje funkciju koja se poziva pri potvrdi\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [confirmTitle, setConfirmTitle] = useState(\"Potvrda\");\r\n\r\n  // Funkcija za prikaz prilagođenog modala za potvrdu\r\n  const showCustomConfirm = (message, action, title = \"Potvrda\") => {\r\n    setConfirmMessage(message);\r\n    setConfirmAction(() => action); // Koristi funkcionalno ažuriranje za pohranu akcije\r\n    setConfirmTitle(title);\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  // Funkcija koja se poziva kada korisnik potvrdi akciju u modalu\r\n  const handleConfirmAction = () => {\r\n    confirmAction(); // Izvrši pohranjenu akciju\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  // Funkcija za brisanje doktora (koristi custom confirm)\r\n  const handleDeleteDoctor = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovog doktora? Ovom akcijom će se obrisati i korisnički nalog.',\r\n      async () => {\r\n        try {\r\n          console.log(\"handleDeleteDoctor: Počinjem proces brisanja doktora.\");\r\n          const doctorToDelete = doctors.find(doc => doc.id === id);\r\n          if (!doctorToDelete || !doctorToDelete.userId) {\r\n            showNotification('Nije pronađen korisnički ID za brisanje doktora.', 'danger');\r\n            console.error(\"handleDeleteDoctor: Nije pronađen userId za brisanje doktora:\", doctorToDelete);\r\n            return;\r\n          }\r\n          console.log(\"handleDeleteDoctor: Brišem doktora sa ID:\", id, \"i userId:\", doctorToDelete.userId);\r\n\r\n          // Brisanje doktora iz korisnici-doktori servisa\r\n          await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/doktori/${id}`, authHeaders);\r\n          console.log(\"handleDeleteDoctor: Doktor obrisan iz korisnici-doktori servisa.\");\r\n          // Brisanje korisnika iz Auth servisa\r\n          await axios.delete(`${AUTH_API_PREFIX}/users/${doctorToDelete.userId}`, authHeaders);\r\n          console.log(\"handleDeleteDoctor: Korisnički nalog obrisan iz Auth servisa.\");\r\n\r\n          fetchDoctors(); // Ponovo dohvati doktore nakon brisanja\r\n          showNotification('Doktor uspješno obrisan!', 'success'); // Može biti 'success' ako je brisanje ok\r\n          console.log(\"handleDeleteDoctor: Proces brisanja doktora uspješno završen.\");\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja doktora:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja doktora.', 'danger');\r\n        }\r\n      },\r\n      \"Potvrdi brisanje doktora\"\r\n    );\r\n  };\r\n\r\n  // Otvaranje modala za doktora (dodavanje/uređivanje)\r\n  const openDoctorModal = (doctor = null) => {\r\n    setEditingDoctor(doctor);\r\n    setShowDoctorModal(true);\r\n  };\r\n\r\n  // Filtriranje i paginacija doktora\r\n  const filteredDoctors = doctors.filter(doctor =>\r\n    doctor.name.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n    doctor.specialty.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n    doctor.city.toLowerCase().includes(doctorSearchTerm.toLowerCase()) ||\r\n    (doctor.email && doctor.email.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n    (doctor.telefon && doctor.telefon.toLowerCase().includes(doctorSearchTerm.toLowerCase())) ||\r\n    (doctor.radnoVrijeme && doctor.radnoVrijeme.toLowerCase().includes(doctorSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastDoctor = doctorsCurrentPage * itemsPerPage;\r\n  const indexOfFirstDoctor = indexOfLastDoctor - itemsPerPage;\r\n  const currentDoctors = filteredDoctors.slice(indexOfFirstDoctor, indexOfLastDoctor);\r\n  const totalDoctorPages = Math.ceil(filteredDoctors.length / itemsPerPage);\r\n\r\n  // Funkcija za dodavanje novog pacijenta\r\n  const handleAddPatient = async (newPatient) => {\r\n    try {\r\n      console.log(\"handleAddPatient: Počinjem proces dodavanja pacijenta.\");\r\n      // 1. Registracija korisnika u Auth servisu\r\n      const registerPayload = {\r\n        email: newPatient.email,\r\n        password: newPatient.password, // Password se šalje ovdje\r\n        fullName: `${newPatient.ime} ${newPatient.prezime}`,\r\n        telefon: newPatient.telefon,\r\n        roles: [\"ROLE_PATIENT\"],\r\n        grad: null, // Pacijentima grad nije obavezan\r\n        specijalizacije: null, // Pacijenti nemaju specijalizacije\r\n      };\r\n      console.log(\"handleAddPatient: Slanje registerPayload-a Auth servisu:\", registerPayload);\r\n      const authResponse = await axios.post(`${AUTH_API_PREFIX}/register`, registerPayload);\r\n      const userId = authResponse.data.id; // Dohvat ID-a korisnika\r\n      console.log(\"handleAddPatient: Korisnik registrovan, userId:\", userId, \"Auth response:\", authResponse.data);\r\n\r\n      // KLJUČNA PROMJENA: Uklonjen redundantni axios.post poziv na korisnici-doktori servis.\r\n      // Očekujemo da UserRegisteredEvent, poslan od Auth servisa, kreira Pacijent entitet.\r\n      console.log(\"handleAddPatient: Preskačem slanje pacijent detalja na korisnici-doktori servis. Očekujem da UserRegisteredEvent to obradi.\");\r\n\r\n      // Zbog asinhronosti eventa, možda će biti minimalnog kašnjenja prije nego što se pacijent pojavi u tabeli.\r\n      // Bolje je osvježiti listu pacijenata nakon kratke pauze ili uzeti u obzir da je event uspješan.\r\n      // Za sada, samo osvježavamo odmah.\r\n      fetchPatients(); // Ponovo dohvati pacijente nakon dodavanja\r\n      setShowPatientModal(false);\r\n      showNotification('Novi pacijent uspješno registrovan!', 'success');\r\n      console.log(\"handleAddPatient: Proces dodavanja pacijenta uspješno završen (registracija i event obrada).\");\r\n\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom dodavanja pacijenta:\", error.response?.data || error.message);\r\n      // Prikazati poruku o grešci\r\n      showNotification(error.response?.data?.message || 'Greška prilikom dodavanja pacijenta. Molimo provjerite konzolu za više detalja.', 'danger');\r\n    }\r\n  };\r\n\r\n  // Funkcija za ažuriranje postojećeg pacijenta\r\n  const handleUpdatePatient = async (updatedPatient) => {\r\n    try {\r\n      console.log(\"handleUpdatePatient: Počinjem proces ažuriranja pacijenta.\");\r\n      const patientUpdatePayload = {\r\n        ime: updatedPatient.ime,\r\n        prezime: updatedPatient.prezime,\r\n        email: updatedPatient.email,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      console.log(\"handleUpdatePatient: Slanje patientUpdatePayload-a korisnici-doktori servisu:\", patientUpdatePayload);\r\n\r\n      // Ažuriranje detalja pacijenta u korisnici-doktori servisu\r\n      await axios.put(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${updatedPatient.id}`, patientUpdatePayload, authHeaders);\r\n      console.log(\"handleUpdatePatient: Pacijent detalji ažurirani.\");\r\n\r\n      // Ažuriranje korisničkog naloga u Auth servisu\r\n      const userUpdatePayload = {\r\n        email: updatedPatient.email,\r\n        fullName: `${updatedPatient.ime} ${updatedPatient.prezime}`,\r\n        telefon: updatedPatient.telefon,\r\n      };\r\n      console.log(\"handleUpdatePatient: Slanje userUpdatePayload-a Auth servisu:\", userUpdatePayload);\r\n      if (updatedPatient.userId) {\r\n          await axios.put(`${AUTH_API_PREFIX}/users/${updatedPatient.userId}`, userUpdatePayload, authHeaders);\r\n          console.log(\"handleUpdatePatient: Korisnički nalog ažuriran u Auth servisu.\");\r\n      } else {\r\n          console.warn(\"handleUpdatePatient: Nije pronađen userId za ažuriranje korisnika u Auth servisu.\");\r\n      }\r\n\r\n      fetchPatients();\r\n      setShowPatientModal(false);\r\n      setEditingPatient(null);\r\n      showNotification('Pacijent uspješno ažuriran!', 'success');\r\n      console.log(\"handleUpdatePatient: Proces ažuriranja pacijenta uspješno završen.\");\r\n    } catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja pacijenta:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja pacijenta. Molimo provjerite konzolu za više detalja.', 'danger');\r\n    }\r\n  };\r\n\r\n  // Funkcija za brisanje pacijenta\r\n  const handleDeletePatient = async (id) => {\r\n    showCustomConfirm(\r\n      'Jeste li sigurni da želite obrisati ovog pacijenta? Ovom akcijom će se obrisati i korisnički nalog.',\r\n      async () => {\r\n        try {\r\n          console.log(\"handleDeletePatient: Počinjem proces brisanja pacijenta.\");\r\n          const patientToDelete = patients.find(pat => pat.id === id);\r\n          if (!patientToDelete || !patientToDelete.userId) {\r\n            showNotification('Nije pronađen korisnički ID za brisanje pacijenta.', 'danger');\r\n            console.error(\"handleDeletePatient: Nije pronađen userId za brisanje pacijenta:\", patientToDelete);\r\n            return;\r\n          }\r\n          console.log(\"handleDeletePatient: Brišem pacijenta sa ID:\", id, \"i userId:\", patientToDelete.userId);\r\n\r\n          await axios.delete(`${KORISNICI_DOKTORI_API_PREFIX}/api/pacijenti/${id}`, authHeaders);\r\n          console.log(\"handleDeletePatient: Pacijent obrisan iz korisnici-doktori servisa.\");\r\n          await axios.delete(`${AUTH_API_PREFIX}/users/${patientToDelete.userId}`, authHeaders);\r\n          console.log(\"handleDeletePatient: Korisnički nalog obrisan iz Auth servisa.\");\r\n\r\n          fetchPatients();\r\n          showNotification('Pacijent uspješno obrisan!', 'success'); // Status uspjeha\r\n          console.log(\"handleDeletePatient: Proces brisanja pacijenta uspješno završen.\");\r\n        } catch (error) {\r\n          console.error(\"Greška prilikom brisanja pacijenta:\", error.response?.data || error.message);\r\n          showNotification(error.response?.data?.message || 'Greška prilikom brisanja pacijenta. Molimo provjerite konzolu za više detalja.', 'danger');\r\n        }\r\n      },\r\n      \"Potvrdi brisanje pacijenta\"\r\n    );\r\n  };\r\n\r\n  // Otvaranje modala za pacijenta\r\n  const openPatientModal = (patient = null) => {\r\n    setEditingPatient(patient);\r\n    setShowPatientModal(true);\r\n  };\r\n\r\n  // Filtriranje i paginacija pacijenata\r\n  const filteredPatients = patients.filter(patient =>\r\n    patient.name.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    patient.email.toLowerCase().includes(patientSearchTerm.toLowerCase()) ||\r\n    (patient.phone && patient.phone.toLowerCase().includes(patientSearchTerm.toLowerCase()))\r\n  );\r\n  const indexOfLastPatient = patientsCurrentPage * itemsPerPage;\r\n  const indexOfFirstPatient = indexOfLastPatient - itemsPerPage;\r\n  const currentPatients = filteredPatients.slice(indexOfFirstPatient, indexOfLastPatient);\r\n  const totalPatientPages = Math.ceil(filteredPatients.length / itemsPerPage);\r\n\r\n  // Funkcija za ažuriranje statusa termina\r\n  const handleUpdateAppointmentStatus = async (id, newStatus) => {\r\n    try {\r\n      console.log(\"handleUpdateAppointmentStatus: Ažuriram status termina za ID:\", id, \"na status:\", newStatus);\r\n      await axios.put(`${TERMINI_PREGLEDI_API_PREFIX}/api/pregledi/${id}/status`, { status: newStatus }, authHeaders);\r\n      console.log(\"handleUpdateAppointmentStatus: Status termina ažuriran.\");\r\n      fetchAppointments();\r\n      showNotification(`Status termina ažuriran na ${newStatus}!`, 'info');\r\n    }\r\n    catch (error) {\r\n      console.error(\"Greška prilikom ažuriranja statusa termina:\", error.response?.data || error.message);\r\n      showNotification(error.response?.data?.message || 'Greška prilikom ažuriranja statusa termina. Molimo provjerite konzolu za više detalja.', 'danger');\r\n    }\r\n  };\r\n\r\n  // Paginacija termina\r\n  const indexOfLastAppointment = appointmentsCurrentPage * itemsPerPage;\r\n  const indexOfFirstAppointment = indexOfLastAppointment - itemsPerPage;\r\n  const currentAppointments = appointments.slice(indexOfFirstAppointment, indexOfLastAppointment);\r\n  const totalAppointmentPages = Math.ceil(appointments.length / itemsPerPage);\r\n\r\n  // Komponenta za modal za unos/uređivanje podataka (Doktor/Pacijent)\r\n  const DataModal = ({ show, onClose, data, onSave, fields, title, idPrefix }) => {\r\n    // Interno stanje forme, inicijalizirano sa proslijeđenim podacima ili praznim objektom\r\n    const [formData, setFormData] = useState(data || {});\r\n\r\n    // Ažuriraj formu kada se promijene podaci (npr. kada se otvori modal za uređivanje drugog doktora)\r\n    useEffect(() => {\r\n      console.log(`DataModal useEffect for ${idPrefix}: data changed. New data:`, data);\r\n      if (data) {\r\n        const updatedData = { ...data };\r\n        // Normalizacija podataka za prikaz u formi: 'N/A' pretvaramo u null/prazno za input polja\r\n        if (updatedData.radnoVrijeme === 'N/A') {\r\n          updatedData.radnoVrijeme = ''; // Prazan string za input\r\n        }\r\n        // Ako je iskustvo/ocjena \"N/A\" ili null/undefined, postavi na prazan string za input\r\n        if (updatedData.iskustvo !== undefined && updatedData.iskustvo !== null && typeof updatedData.iskustvo === 'string' && updatedData.iskustvo.toLowerCase() === 'n/a') {\r\n             updatedData.iskustvo = '';\r\n        } else if (updatedData.iskustvo === 0 && (data.iskustvo === null || data.iskustvo === undefined)) {\r\n            updatedData.iskustvo = ''; // Prikaz 0 kao prazno ako je originalno N/A ili null\r\n        }\r\n\r\n        if (updatedData.ocjena !== undefined && updatedData.ocjena !== null && typeof updatedData.ocjena === 'string' && updatedData.ocjena.toLowerCase() === 'n/a') {\r\n            updatedData.ocjena = '';\r\n        } else if (updatedData.ocjena === 0.0 && (data.ocjena === null || data.ocjena === undefined)) {\r\n            updatedData.ocjena = '';\r\n        }\r\n\r\n        if (updatedData.email === 'N/A' || updatedData.email === null) {\r\n            updatedData.email = '';\r\n        }\r\n        // Osiguraj da su specijalizacije uvijek niz, čak i ako je prazan\r\n        if (!Array.isArray(updatedData.specijalizacije) || updatedData.specijalizacije.length === 0) {\r\n          updatedData.specijalizacije = [];\r\n        }\r\n        console.log(`DataModal useEffect for ${idPrefix}: Setting formData to (updatedData):`, updatedData);\r\n        setFormData(updatedData);\r\n      } else {\r\n        // Inicijalizacija forme za novi unos (svi podaci prazni ili defaultni)\r\n        const initialData = {};\r\n        fields.forEach(field => {\r\n          if (field.name === 'specijalizacije') {\r\n            initialData[field.name] = [];\r\n          } else if (field.type === 'number') {\r\n            initialData[field.name] = null; // Koristi null za brojeve ako nema vrijednosti\r\n          } else {\r\n            initialData[field.name] = '';\r\n          }\r\n        });\r\n        console.log(`DataModal useEffect for ${idPrefix}: Setting formData to (initialData):`, initialData);\r\n        setFormData(initialData);\r\n      }\r\n    }, [data, fields]); // Zavisnosti za useEffect\r\n\r\n    // Rukovanje promjenama u input poljima forme\r\n    const handleChange = (e) => {\r\n      const { name, value, type } = e.target;\r\n      console.log(`handleChange for ${idPrefix}: name=${name}, value=${value}, type=${type}`);\r\n\r\n      setFormData(prev => {\r\n        let newValue = value;\r\n\r\n        // Posebna obrada za 'specijalizacije' (kao select sa jednim izborom)\r\n        if (name === 'specijalizacije') {\r\n          newValue = [value]; // Spremi kao niz stringova\r\n        } else if (type === 'number') {\r\n          // Konvertuj u broj, ako je prazan string ili nevalidan broj, postavi na null\r\n          newValue = value === '' ? null : Number(value);\r\n          if (isNaN(newValue)) {\r\n              newValue = null;\r\n          }\r\n        } else if (type === 'email' && value === '') {\r\n            newValue = value; // Omogući prazan email ako je dozvoljeno\r\n        }\r\n\r\n        console.log(`handleChange for ${idPrefix}: Updated prev[${name}]=${newValue}`);\r\n        return { ...prev, [name]: newValue };\r\n      });\r\n    };\r\n\r\n    // Rukovanje slanjem forme\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const finalFormData = { ...formData };\r\n      // Još jedna provjera da su specijalizacije pravilno formatirane kao niz\r\n      if (typeof finalFormData.specijalizacije === 'string') {\r\n          finalFormData.specijalizacije = finalFormData.specijalizacije ? [finalFormData.specijalizacije] : [];\r\n      }\r\n      console.log(`DataModal handleSubmit for ${idPrefix}: Final form data being sent to onSave:`, finalFormData);\r\n      onSave(finalFormData); // Pozovi funkciju za spašavanje\r\n    };\r\n\r\n    return (\r\n      <Modal show={show} onHide={onClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body>\r\n            {fields.map(field => (\r\n              <Form.Group className=\"mb-3\" controlId={`${idPrefix}-${field.name}`} key={field.name}>\r\n                <Form.Label>{field.label}</Form.Label>\r\n                {/* Uslovno renderovanje tipa inputa na osnovu field.type */}\r\n                {field.type === 'select' ? (\r\n                  <Form.Select\r\n                    name={field.name}\r\n                    value={Array.isArray(formData[field.name]) && formData[field.name].length > 0\r\n                             ? formData[field.name][0] // Uzmi prvi element niza za prikaz u selectu\r\n                             : formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  >\r\n                    <option value=\"\">Select {field.label}</option>\r\n                    {field.options.map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                ) : field.type === 'textarea' ? (\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    name={field.name}\r\n                    value={formData[field.name] || ''}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  />\r\n                ) : (\r\n                  <Form.Control\r\n                    type={field.type || 'text'}\r\n                    name={field.name}\r\n                    // Logika za prikaz 'null', '0' ili 'N/A' brojeva/emaila kao prazan string u inputu\r\n                    value={\r\n                      (formData[field.name] === null || formData[field.name] === 'N/A') ||\r\n                      (field.type === 'number' && (formData[field.name] === 0 || formData[field.name] === 'N/A') && (data === null || data[field.name] === null || data[field.name] === undefined))\r\n                      ? '' // Prikazuje prazan string za unos\r\n                      : formData[field.name]\r\n                    }\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  />\r\n                )}\r\n              </Form.Group>\r\n            ))}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  // Komponenta za paginaciju\r\n  const Pagination = ({ itemsPerPage, totalItems, currentPage, paginate }) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination justify-content-center mt-4\">\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n              <button onClick={() => paginate(number)} className=\"page-link\">\r\n                {number}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  // Funkcija za renderovanje sadržaja na osnovu aktivnog taba\r\n  const renderContent = () => {\r\n    // Definisanje polja za forme (doktori i pacijenti)\r\n    // Ovi objekti se proslijeđuju DataModal komponenti\r\n    const addDoctorFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n      { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n    const editDoctorFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n      { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n      { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n      { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n      { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n      { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n    ];\r\n\r\n    // Definisanje polja za dodavanje/uređivanje pacijenata\r\n    const addPatientFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'password', label: 'Password', type: 'password', required: true }, // Polje za password\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n    const editPatientFields = [\r\n      { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n      { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n      { name: 'email', label: 'Email', type: 'email', required: true },\r\n      { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    ];\r\n\r\n    switch (activeTab) {\r\n      case 'overview':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Dashboard Overview</h4>\r\n            <div className=\"row g-4\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-primary mb-3\">\r\n                  <div className=\"card-header\">Total Doctors</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{doctors.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-success mb-3\">\r\n                  <div className=\"card-header\">Total Patients</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{patients.length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-white bg-warning mb-3\">\r\n                  <div className=\"card-header\">Pending Appointments</div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title display-4\">{appointments.filter(app => app.status === 'Pending').length}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h5>Quick Actions</h5>\r\n              <div className=\"d-flex gap-2\">\r\n                <button className=\"btn btn-outline-primary\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n                <button className=\"btn btn-outline-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n                <button className=\"btn btn-outline-info\" onClick={() => setActiveTab('appointments')}>View Appointments</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'doctors':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Doctors</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openDoctorModal()}>Add New Doctor</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search doctors...\"\r\n                value={doctorSearchTerm}\r\n                onChange={(e) => setDoctorSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Specialty</th>\r\n                    <th>City</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Work Hours</th>\r\n                    <th>Rating</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentDoctors.length > 0 ? (\r\n                    currentDoctors.map(doctor => (\r\n                      <tr key={doctor.id}>\r\n                        <td>{doctor.id}</td>\r\n                        <td>{doctor.name}</td>\r\n                        <td>{doctor.specialty}</td>\r\n                        <td>{doctor.city}</td>\r\n                        <td>{doctor.email}</td>\r\n                        <td>{doctor.telefon}</td>\r\n                        <td>{doctor.radnoVrijeme}</td>\r\n                        <td>{doctor.ocjena}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openDoctorModal(doctor)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteDoctor(doctor.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"9\" className=\"text-center\">No doctors found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredDoctors.length}\r\n              currentPage={doctorsCurrentPage}\r\n              paginate={setDoctorsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'patients':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Patients</h4>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n              <button className=\"btn btn-success\" onClick={() => openPatientModal()}>Add New Patient</button>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control w-25\"\r\n                placeholder=\"Search patients...\"\r\n                value={patientSearchTerm}\r\n                onChange={(e) => setPatientSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentPatients.length > 0 ? (\r\n                    currentPatients.map(patient => (\r\n                      <tr key={patient.id}>\r\n                        <td>{patient.id}</td>\r\n                        <td>{patient.name}</td>\r\n                        <td>{patient.email}</td>\r\n                        <td>{patient.phone}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-info btn-sm me-2\" onClick={() => openPatientModal(patient)}>Edit</button>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeletePatient(patient.id)}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"text-center\">No patients found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={filteredPatients.length}\r\n              currentPage={patientsCurrentPage}\r\n              paginate={setPatientsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      case 'appointments':\r\n        return (\r\n          <div>\r\n            <h4 className=\"mb-4\">Manage Appointments</h4>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Patient</th>\r\n                    <th>Doctor</th>\r\n                    <th>Date</th>\r\n                    <th>Time</th>\r\n                    <th>Status</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentAppointments.length > 0 ? (\r\n                    currentAppointments.map(appointment => (\r\n                      <tr key={appointment.id}>\r\n                        <td>{appointment.id}</td>\r\n                        <td>{appointment.patientName}</td>\r\n                        <td>{appointment.doctorName}</td>\r\n                        <td>{appointment.date}</td>\r\n                        <td>{appointment.time}</td>\r\n                        <td>\r\n                          <select\r\n                            className=\"form-select\"\r\n                            value={appointment.status}\r\n                            onChange={(e) => handleUpdateAppointmentStatus(appointment.id, e.target.value)}\r\n                          >\r\n                            <option value=\"Pending\">Pending</option>\r\n                            <option value=\"Confirmed\">Confirmed</option>\r\n                            <option value=\"Completed\">Completed</option>\r\n                            <option value=\"Cancelled\">Cancelled</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <button className=\"btn btn-danger btn-sm\" onClick={() => showNotification('Brisanje termina nije implementirano.', 'warning')}>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"7\" className=\"text-center\">No appointments found.</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <Pagination\r\n              itemsPerPage={itemsPerPage}\r\n              totalItems={appointments.length}\r\n              currentPage={appointmentsCurrentPage}\r\n              paginate={setAppointmentsCurrentPage}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return <p>Select a tab to view content.</p>;\r\n    }\r\n  };\r\n\r\n  // Definisanje polja za dodavanje/uređivanje doktora\r\n  const addDoctorFields = [\r\n    { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n    { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n    { name: 'email', label: 'Email', type: 'email', required: true },\r\n    { name: 'password', label: 'Password', type: 'password', required: true },\r\n    { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n    { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n    { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n    { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n    { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n  ];\r\n\r\n  const editDoctorFields = [\r\n    { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n    { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n    { name: 'email', label: 'Email', type: 'email', required: true },\r\n    { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n    { name: 'grad', label: 'City', type: 'select', required: true, options: ['Sarajevo', 'Mostar', 'Zenica', 'Banja Luka', 'Tuzla', 'Bihać'] },\r\n    { name: 'specijalizacije', label: 'Specialty', type: 'select', required: true, options: ['Kardiolog', 'Neurolog', 'Ortoped', 'Pedijatar', 'Hirurg', 'Dermatolog', 'Oftamolog', 'Psihijatar'] },\r\n    { name: 'radnoVrijeme', label: 'Work Hours', type: 'text', required: false },\r\n    { name: 'iskustvo', label: 'Experience (years)', type: 'number', required: false },\r\n    { name: 'ocjena', label: 'Rating (0.0-5.0)', type: 'number', required: false },\r\n  ];\r\n\r\n  // Definisanje polja za dodavanje/uređivanje pacijenata\r\n  const addPatientFields = [\r\n    { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n    { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n    { name: 'email', label: 'Email', type: 'email', required: true },\r\n    { name: 'password', label: 'Password', type: 'password', required: true }, // Polje za password\r\n    { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n  ];\r\n\r\n  const editPatientFields = [\r\n    { name: 'ime', label: 'First Name', type: 'text', required: true },\r\n    { name: 'prezime', label: 'Last Name', type: 'text', required: true },\r\n    { name: 'email', label: 'Email', type: 'email', required: true },\r\n    { name: 'telefon', label: 'Phone', type: 'text', required: false },\r\n  ];\r\n\r\n  // Prikazuje spinner za učitavanje ako je `loadingInitial` true\r\n  if (loadingInitial) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Učitavanje administratorskog panela...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Ako je `loadingInitial` false, a `token` je null (što znači da AuthContext kaže da nismo ulogovani)\r\n  // i provjera autentifikacije je završena, prikaži poruku o odbijenom pristupu.\r\n  if (!loadingInitial && !token && isAuthChecked) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-danger\">Pristup odbijen</h2>\r\n          <p className=\"lead\">Niste autorizovani za pristup ovoj stranici. Molimo prijavite se kao administrator.</p>\r\n          {/* Opcionalno, možete dodati Link ka stranici za prijavu, npr: */}\r\n          {/* <Link to=\"/login\" className=\"btn btn-primary mt-3\">Prijavi se</Link> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {/* Alert notifikacija */}\r\n      {showAlert && (\r\n        <Alert variant={alertType} onClose={() => setShowAlert(false)} dismissible className=\"position-fixed top-0 start-50 translate-middle-x mt-3\" style={{ zIndex: 1050 }}>\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Prilagođeni Modal za potvrdu (zamjena za window.confirm) */}\r\n      <Modal show={showConfirmModal} onHide={() => setShowConfirmModal(false)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{confirmTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {confirmMessage}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowConfirmModal(false)}>\r\n            Poništi\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleConfirmAction}>\r\n            Potvrdi\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <div className=\"row\">\r\n        {/* Sidebar navigacija */}\r\n        <nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" style={{ minHeight: '100vh' }}>\r\n          <div className=\"position-sticky pt-3\">\r\n            <ul className=\"nav flex-column\">\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'overview' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('overview')}>\r\n                  Overview\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'doctors' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('doctors')}>\r\n                  Doctors\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'patients' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('patients')}>\r\n                  Patients\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${activeTab === 'appointments' ? 'active' : ''}`} href=\"#\" onClick={() => setActiveTab('appointments')}>\r\n                  Appointments\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        {/* Glavni sadržaj panela */}\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4\">\r\n          {renderContent()}\r\n        </main>\r\n      </div>\r\n\r\n      {/* Modal za dodavanje/uređivanje doktora */}\r\n      <DataModal\r\n        show={showDoctorModal}\r\n        onClose={() => setShowDoctorModal(false)}\r\n        data={editingDoctor}\r\n        onSave={editingDoctor ? handleUpdateDoctor : handleAddDoctor}\r\n        title={editingDoctor ? 'Edit Doctor' : 'Add New Doctor'}\r\n        idPrefix=\"doctor\"\r\n        fields={editingDoctor ? editDoctorFields : addDoctorFields}\r\n      />\r\n\r\n      {/* Modal za dodavanje/uređivanje pacijenata */}\r\n      <DataModal\r\n        show={showPatientModal}\r\n        onClose={() => setShowPatientModal(false)}\r\n        data={editingPatient}\r\n        onSave={editingPatient ? handleUpdatePatient : handleAddPatient}\r\n        title={editingPatient ? 'Edit Patient' : 'Add New Patient'}\r\n        idPrefix=\"patient\"\r\n        fields={editingPatient ? editPatientFields : addPatientFields}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}